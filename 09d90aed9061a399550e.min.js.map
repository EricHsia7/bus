{"version":3,"file":"09d90aed9061a399550e.min.js","mappings":"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","sources":["webpack://bus/./src/data/apis/index.ts","webpack://bus/./src/data/apis/loader.ts"],"sourcesContent":["import { BusEvent } from './getBusEvent/index';\nimport { BusData } from './getBusData/index';\nimport { SimplifiedRoute } from './getRoute/index';\nimport { formatTime } from '../../tools/time';\n\ninterface EstimateTimeStatus {\n  code: 0 | 0.5 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\n  text: string;\n}\n\nexport function parseEstimateTime(EstimateTime: string, mode: number): EstimateTimeStatus {\n  if (typeof EstimateTime === 'string') {\n    const time = parseInt(EstimateTime);\n    if (time === -3) {\n      return { code: 6, text: '末班駛離' };\n    }\n    if (time === -4) {\n      return { code: 5, text: '今日停駛' };\n    }\n    if (time === -2) {\n      return { code: 4, text: '交通管制' };\n    }\n    if (time === -1) {\n      return { code: 3, text: '未發車' };\n    }\n    if (0 <= time && time <= 10) {\n      return { code: 2, text: '進站中' };\n    }\n    if (10 < time && time <= 180) {\n      return { code: 1, text: formatTime(time, mode) };\n    }\n    if (180 < time && time <= 250) {\n      return { code: 0.5, text: formatTime(time, mode) };\n    }\n    if (250 < time) {\n      return { code: 0, text: formatTime(time, mode) };\n    }\n  }\n  return { code: 7, text: '發生錯誤' };\n}\n\ninterface Moment {\n  type: 'moment';\n  hours: number;\n  minutes: number;\n}\n\ninterface Range {\n  type: 'range';\n  min: number;\n  max: number;\n}\n\nexport function parseTimeCode(code: string, mode: number): Moment | Range {\n  if (mode === 0) {\n    var hours = 0;\n    var minutes = 0;\n    if (code.length === 4) {\n      hours = parseInt(code.substring(0, 2));\n      minutes = parseInt(code.substring(2, 4));\n    }\n    if (code.length === 2) {\n      minutes = parseInt(code);\n    }\n    return {\n      type: 'moment',\n      hours: hours,\n      minutes: minutes\n    };\n  } else {\n    if (mode === 1) {\n      var min = 0;\n      var max = 0;\n      if (code.length === 4) {\n        var number1 = parseInt(code.substring(0, 2));\n        var number2 = parseInt(code.substring(2, 4));\n        min = Math.min(number1, number2);\n        max = Math.max(number1, number2);\n      }\n      if (code.length === 2) {\n        var number = parseInt(code);\n        min = number;\n        max = number;\n      }\n      return {\n        type: 'range',\n        min: min,\n        max: max\n      };\n    }\n  }\n}\n\nexport interface ProcessedBusPosition {\n  longitude: number;\n  latitude: number;\n}\n\nexport interface ProcessedBus {\n  BusID: string;\n  onThisRoute: boolean;\n  position: ProcessedBusPosition;\n  index: number;\n}\n\nexport function processBuses(BusEvent: BusEvent, BusData: BusData, Route: SimplifiedRoute, RouteID: number, PathAttributeId: Array<number>): { [key: string]: Array<ProcessedBus> } {\n  var result = {};\n  var BusDataObj = {};\n  for (const BusDataItem of BusData) {\n    var thisBusID = BusDataItem.BusID;\n    BusDataObj[thisBusID] = BusDataItem;\n  }\n\n  for (let BusEventItem of BusEvent) {\n    let processedItem = {};\n\n    // collect data from 'BusEvent'\n    processedItem.CarType = BusEventItem.CarType;\n    processedItem.BusStatus = BusEventItem.BusStatus;\n    processedItem.BusID = BusEventItem.BusID;\n    processedItem.CarOnStop = BusEventItem.CarOnStop;\n\n    // check whether this bus is on the route\n    const thisRouteID = parseInt(BusEventItem.RouteID);\n    const thisBusID = BusEventItem.BusID;\n    let isOnThisRoute: boolean = false;\n    let index: number = 0;\n    if (thisRouteID === RouteID || PathAttributeId.indexOf(thisRouteID) > -1 || thisRouteID === RouteID * 10) {\n      isOnThisRoute = true;\n      index = String(BusEventItem.BusID).charCodeAt(0) * Math.pow(10, -5);\n    } else {\n      isOnThisRoute = false;\n      index = String(BusEventItem.BusID).charCodeAt(0);\n    }\n    processedItem.onThisRoute = isOnThisRoute;\n    processedItem.index = index;\n\n    // collect data from 'BusData'\n    let thisBusData = {};\n    if (BusDataObj.hasOwnProperty(thisBusID)) {\n      thisBusData = BusDataObj[thisBusID];\n    } else {\n      continue;\n    }\n    processedItem.position = {\n      latitude: parseFloat(thisBusData.Latitude),\n      longitude: parseFloat(thisBusData.Longitude)\n    };\n\n    // search data from 'Route'\n    let searchedRoute = {};\n    let isRouteSearched = false;\n    for (const key in Route) {\n      const thisRouteItem = Route[key];\n      const pid = thisRouteItem.pid;\n      if (pid.indexOf(thisRouteID) > -1) {\n        searchedRoute = thisRouteItem;\n        isRouteSearched = true;\n        break;\n      }\n    }\n    processedItem.RouteName = isRouteSearched ? searchedRoute.n : '未知路線';\n    processedItem.RouteID = isRouteSearched ? searchedRoute.id : null;\n\n    const StopKey = `s_${BusEventItem.StopID}`;\n    if (!result.hasOwnProperty(StopKey)) {\n      result[StopKey] = [];\n    }\n    result[StopKey].push(processedItem);\n  }\n  /*\n  for (var key in result) {\n    result[key] = result[key].sort(function (a, b) {\n      return a.index - b.index;\n    });\n  }\n  */\n  return result;\n}\n\ninterface FormattedBusStatus {\n  onStop: boolean;\n  situation: string;\n  text: string;\n}\n\ninterface FormattedBusPosition {\n  longitude: number;\n  latitude: number;\n}\n\ninterface FormattedBus {\n  type: '一般' | '低底盤' | '大復康巴士' | '狗狗友善專車' | '未知類型';\n  carNumber: string;\n  status: FormattedBusStatus;\n  RouteName: string;\n  onThisRoute: boolean;\n  index: number;\n  position: FormattedBusPosition;\n}\n\nexport function formatBus(object: ProcessedBus): FormattedBus {\n  let result: FormattedBus = {};\n\n  const CarType = parseInt(object.CarType);\n  let type = '';\n  switch (CarType) {\n    case 0:\n      type = '一般';\n      break;\n    case 1:\n      type = '低底盤';\n      break;\n    case 2:\n      type = '大復康巴士';\n      break;\n    case 3:\n      type = '狗狗友善專車';\n      break;\n    default:\n      type = '未知類型';\n  }\n\n  result.type = type;\n\n  const CarOnStop = parseInt(object.CarOnStop);\n  let onStop = '';\n  switch (CarOnStop) {\n    case 0:\n      onStop = '離站';\n      break;\n    case 1:\n      onStop = '進站';\n      break;\n    default:\n      onStop = '未知狀態'; // Handle unexpected values if necessary\n  }\n\n  const BusStatus = parseInt(object.BusStatus);\n  let situation = '';\n  switch (BusStatus) {\n    case 0:\n      situation = '正常';\n      break;\n    case 1:\n      situation = '車禍';\n      break;\n    case 2:\n      situation = '故障';\n      break;\n    case 3:\n      situation = '塞車';\n      break;\n    case 4:\n      situation = '緊急求援';\n      break;\n    case 5:\n      situation = '加油';\n      break;\n    case 99:\n      situation = '非營運狀態';\n      break;\n    default:\n      situation = '未知狀態'; // Handle unexpected values if necessary\n  }\n\n  result.carNumber = object.BusID;\n  result.status = {\n    onStop: onStop,\n    situation: situation,\n    text: `${onStop} | ${situation}`\n  };\n  result.RouteName = object.RouteName;\n  result.onThisRoute = object.onThisRoute;\n  result.index = object.index;\n  result.position = object.position;\n  return result;\n}\n\nexport function formatBusEvent(buses: Array<ProcessedBus>): Array<FormattedBus> {\n  let result = [];\n  for (const bus of buses) {\n    result.push(formatBus(bus));\n  }\n  return result;\n}\n","import { generateIdentifier } from '../../tools/index';\nimport { timeStampToNumber } from '../../tools/time';\nimport { recordRequest } from '../analytics/data-usage';\n\nlet dataReceivingProgress = {};\nexport let dataUpdateTime = {};\n\nconst pakoInflateSharedWorker = new SharedWorker(new URL('./loader-pako-inflate-worker.ts', import.meta.url)); // Reusable shared worker\nconst port = pakoInflateSharedWorker.port; // Access the port for communication\nport.start(); // Start the port (required by some browsers)\n\n// Function to communicate with the shared worker\nasync function pakoInflate(buffer: ArrayBuffer): Promise<string> {\n  const taskID = generateIdentifier('t');\n  \n  // Wrap worker communication in a promise\n  const result = await new Promise((resolve, reject) => {\n    // Listen for messages from the worker\n    port.onmessage = function (e) {\n      if (e.data[1] === taskID) {\n        resolve(e.data[0]); // Resolve the promise with the worker's result\n      }\n    };\n\n    // Listen for errors\n    port.onerror = function (e) {\n      reject(e.message); // Reject the promise on error\n    };\n\n    // Send the data to the worker via the port\n    port.postMessage([buffer, taskID]);\n  });\n\n  return result;\n}\n\nexport async function fetchData(url: string, requestID: string, tag: string, fileType: 'json' | 'xml', connectionTimeoutDuration: number = 15 * 1000, loadingTimeoutDuration: number = 60 * 1000): Promise<object> {\n  const startTimeStamp = new Date().getTime();\n\n  // Create a connection timeout promise\n  const connectionTimeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Connection timed out')), connectionTimeoutDuration));\n\n  // Race between fetch and connection timeout\n  const response = await Promise.race([fetch(url), connectionTimeoutPromise]).catch((error) => {\n    // Handle connection timeout error\n    setDataReceivingProgress(requestID, tag, 0, true);\n    throw error;\n  });\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  const contentLength = parseInt(String(response.headers.get('content-length')));\n  let receivedLength = 0;\n  const reader = response.body.getReader();\n  const chunks = [];\n\n  // A utility function to read chunks with loading timeout\n  const readChunk = () => {\n    return new Promise(async (resolve, reject) => {\n      const loadingTimeout = setTimeout(() => {\n        reject(new Error('Loading timed out'));\n      }, loadingTimeoutDuration);\n\n      const { done, value } = await reader.read();\n      clearTimeout(loadingTimeout);\n\n      if (done) {\n        resolve({ done });\n      } else {\n        resolve({ done, value });\n      }\n    });\n  };\n\n  // Loop to read chunks with loading timeout for each chunk\n  while (true) {\n    const { done, value } = await readChunk().catch((error) => {\n      // Handle loading timeout error\n      setDataReceivingProgress(requestID, tag, receivedLength / contentLength, true);\n      throw error;\n    });\n\n    if (done) {\n      break;\n    }\n\n    chunks.push(value);\n    receivedLength += value.length;\n    setDataReceivingProgress(requestID, tag, receivedLength / contentLength, false);\n  }\n\n  // Concatenate all the chunks into a single Uint8Array\n  const uint8Array = new Uint8Array(receivedLength);\n  let position = 0;\n  for (const chunk of chunks) {\n    uint8Array.set(chunk, position);\n    position += chunk.length;\n  }\n\n  const endTimeStamp = new Date().getTime();\n  await recordRequest(requestID, { end_time: endTimeStamp, start_time: startTimeStamp, content_length: contentLength }, receivedLength < contentLength);\n\n  // Create a blob from the concatenated Uint8Array\n  const blob = new Blob([uint8Array]);\n  const gzip_blob = new Blob([blob.slice(0, blob.size)], { type: 'application/gzip' });\n  const buffer = await gzip_blob.arrayBuffer();\n  const inflatedData = await pakoInflate(buffer);\n\n  if (fileType === 'json') {\n    if (/^\\<\\!doctype html\\>/.test(inflatedData)) {\n      const alternativeData = await fetchData(url.replace('https://tcgbusfs.blob.core.windows.net/', 'https://erichsia7.github.io/bus-alternative-static-apis/'), requestID, tag, fileType, connectionTimeoutDuration, loadingTimeoutDuration);\n      return alternativeData;\n    } else {\n      return JSON.parse(inflatedData);\n    }\n  }\n\n  if (fileType === 'xml') {\n    return inflatedData;\n  }\n}\n\nexport function getDataReceivingProgress(requestID: string): number {\n  if (dataReceivingProgress.hasOwnProperty(requestID)) {\n    if (typeof dataReceivingProgress[requestID] === 'object') {\n      var total = 0;\n      var received = 0;\n      for (var key in dataReceivingProgress[requestID]) {\n        if (!dataReceivingProgress[requestID][key].expel) {\n          total += dataReceivingProgress[requestID][key].total;\n          received += dataReceivingProgress[requestID][key].progress;\n        }\n      }\n      var progress = Math.min(Math.max(received / total, 0), 1);\n      return progress === Infinity || isNaN(progress) ? 1 : progress;\n    }\n  }\n  return 1;\n}\n\nexport function setDataReceivingProgress(requestID: string, tag: string, progress: number, expel: boolean): void {\n  if (!dataReceivingProgress.hasOwnProperty(requestID)) {\n    dataReceivingProgress[requestID] = {};\n  }\n  var key = `u_${tag}`;\n  if (dataReceivingProgress[requestID].hasOwnProperty(key)) {\n    if (expel) {\n      dataReceivingProgress[requestID][key].expel = true;\n    } else {\n      dataReceivingProgress[requestID][key].expel = false;\n      dataReceivingProgress[requestID][key].progress = progress;\n    }\n  } else {\n    dataReceivingProgress[requestID][key] = { expel: false, progress: progress, total: 1 };\n  }\n}\n\nexport function deleteDataReceivingProgress(requestID: string): void {\n  if (dataReceivingProgress.hasOwnProperty(requestID)) {\n    delete dataReceivingProgress[requestID];\n  }\n}\n\nexport function setDataUpdateTime(requestID: string, timeStamp: string | number): void {\n  if (!dataUpdateTime.hasOwnProperty(requestID)) {\n    dataUpdateTime[requestID] = 0;\n  }\n  var timeNumber = 0;\n  if (typeof timeStamp === 'string') {\n    timeNumber = timeStampToNumber(timeStamp);\n  }\n  if (timeNumber > dataUpdateTime[requestID]) {\n    dataUpdateTime[requestID] = timeNumber;\n  }\n}\n\nexport function deleteDataUpdateTime(requestID: string): void {\n  if (dataUpdateTime.hasOwnProperty(requestID)) {\n    delete dataUpdateTime[requestID];\n  }\n}\n"],"names":["parseEstimateTime","EstimateTime","mode","time","parseInt","code","text","formatTime","parseTimeCode","hours","minutes","length","substring","type","min","max","number1","number2","Math","number","processBuses","BusEvent","BusData","Route","RouteID","PathAttributeId","_step","result","BusDataObj","_iterator","_createForOfIteratorHelper","s","n","done","BusDataItem","value","BusID","err","e","f","_step2","_iterator2","BusEventItem","processedItem","CarType","BusStatus","CarOnStop","thisRouteID","thisBusID","isOnThisRoute","index","indexOf","String","charCodeAt","pow","onThisRoute","thisBusData","hasOwnProperty","position","latitude","parseFloat","Latitude","longitude","Longitude","searchedRoute","isRouteSearched","key","thisRouteItem","pid","RouteName","id","StopKey","concat","StopID","push","formatBus","object","onStop","situation","carNumber","status","formatBusEvent","buses","_step3","_iterator3","bus","_regeneratorRuntime","t","r","Object","prototype","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","dataReceivingProgress","dataUpdateTime","port","SharedWorker","URL","pakoInflate","_x","_pakoInflate","_callee","buffer","taskID","_context","generateIdentifier","reject","onmessage","data","onerror","message","postMessage","fetchData","_x2","_x3","_x4","_x5","_fetchData","_callee3","url","requestID","tag","fileType","connectionTimeoutDuration","loadingTimeoutDuration","startTimeStamp","connectionTimeoutPromise","response","contentLength","receivedLength","reader","chunks","readChunk","_yield$readChunk$catc","uint8Array","_i","_chunks","chunk","endTimeStamp","blob","gzip_blob","inflatedData","alternativeData","_args3","_context3","undefined","Date","getTime","_","setTimeout","race","fetch","error","setDataReceivingProgress","ok","headers","get","body","getReader","_ref","_callee2","loadingTimeout","_yield$reader$read","_context2","read","clearTimeout","_x6","_x7","Uint8Array","set","recordRequest","end_time","start_time","content_length","Blob","size","arrayBuffer","test","replace","JSON","parse","getDataReceivingProgress","total","received","expel","progress","Infinity","deleteDataReceivingProgress","setDataUpdateTime","timeStamp","timeNumber","timeStampToNumber","deleteDataUpdateTime","start"],"sourceRoot":""}