{"version":3,"file":"f90925263fd81873a4ab.js","mappings":"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","sources":["webpack://bus/./node_modules/qrcode/lib/core/mask-pattern.js","webpack://bus/./node_modules/convert-string/convert-string.js","webpack://bus/./node_modules/qrcode/lib/core/alphanumeric-data.js","webpack://bus/./node_modules/charenc/charenc.js","webpack://bus/./node_modules/convert-hex/convert-hex.js","webpack://bus/./node_modules/qrcode/lib/core/galois-field.js","webpack://bus/./node_modules/md5/md5.js","webpack://bus/./node_modules/crypt/crypt.js","webpack://bus/./node_modules/qrcode/lib/core/format-info.js","webpack://bus/./node_modules/qrcode/lib/core/kanji-data.js","webpack://bus/./node_modules/qrcode/lib/core/byte-data.js","webpack://bus/./node_modules/dijkstrajs/dijkstra.js","webpack://bus/./node_modules/qrcode/lib/core/alignment-pattern.js","webpack://bus/./node_modules/is-buffer/index.js","webpack://bus/./node_modules/qrcode/lib/core/error-correction-code.js","webpack://bus/./node_modules/qrcode/lib/core/finder-pattern.js","webpack://bus/./node_modules/qrcode/lib/core/bit-matrix.js","webpack://bus/./node_modules/qrcode/lib/core/bit-buffer.js","webpack://bus/./node_modules/qrcode/lib/core/error-correction-level.js"],"sourcesContent":["/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nconst PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  const size = data.size\n  let points = 0\n  let sameCountCol = 0\n  let sameCountRow = 0\n  let lastCol = null\n  let lastRow = null\n\n  for (let row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (let col = 0; col < size; col++) {\n      let module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  const size = data.size\n  let points = 0\n\n  for (let row = 0; row < size - 1; row++) {\n    for (let col = 0; col < size - 1; col++) {\n      const last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  const size = data.size\n  let points = 0\n  let bitsCol = 0\n  let bitsRow = 0\n\n  for (let row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (let col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  let darkCount = 0\n  const modulesCount = data.data.length\n\n  for (let i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  const k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  const size = data.size\n\n  for (let col = 0; col < size; col++) {\n    for (let row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  const numPatterns = Object.keys(exports.Patterns).length\n  let bestPattern = 0\n  let lowerPenalty = Infinity\n\n  for (let p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    const penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n","!function(globals) {\n'use strict'\n\nvar convertString = {\n  bytesToString: function(bytes) {\n    return bytes.map(function(x){ return String.fromCharCode(x) }).join('')\n  },\n  stringToBytes: function(str) {\n    return str.split('').map(function(x) { return x.charCodeAt(0) })\n  }\n}\n\n//http://hossa.in/2012/07/20/utf-8-in-javascript.html\nconvertString.UTF8 = {\n   bytesToString: function(bytes) {\n    return decodeURIComponent(escape(convertString.bytesToString(bytes)))\n  },\n  stringToBytes: function(str) {\n   return convertString.stringToBytes(unescape(encodeURIComponent(str)))\n  }\n}\n\nif (typeof module !== 'undefined' && module.exports) { //CommonJS\n  module.exports = convertString\n} else {\n  globals.convertString = convertString\n}\n\n}(this);","const Mode = require('./mode')\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nconst ALPHA_NUM_CHARS = [\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n]\n\nfunction AlphanumericData (data) {\n  this.mode = Mode.ALPHANUMERIC\n  this.data = data\n}\n\nAlphanumericData.getBitsLength = function getBitsLength (length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n}\n\nAlphanumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength () {\n  return AlphanumericData.getBitsLength(this.data.length)\n}\n\nAlphanumericData.prototype.write = function write (bitBuffer) {\n  let i\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    let value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11)\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n  }\n}\n\nmodule.exports = AlphanumericData\n","var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n","!function(globals) {\n'use strict'\n\nvar convertHex = {\n  bytesToHex: function(bytes) {\n    /*if (typeof bytes.byteLength != 'undefined') {\n      var newBytes = []\n\n      if (typeof bytes.buffer != 'undefined')\n        bytes = new DataView(bytes.buffer)\n      else\n        bytes = new DataView(bytes)\n\n      for (var i = 0; i < bytes.byteLength; ++i) {\n        newBytes.push(bytes.getUint8(i))\n      }\n      bytes = newBytes\n    }*/\n    return arrBytesToHex(bytes)\n  },\n  hexToBytes: function(hex) {\n    if (hex.length % 2 === 1) throw new Error(\"hexToBytes can't have a string with an odd number of characters.\")\n    if (hex.indexOf('0x') === 0) hex = hex.slice(2)\n    return hex.match(/../g).map(function(x) { return parseInt(x,16) })\n  }\n}\n\n\n// PRIVATE\n\nfunction arrBytesToHex(bytes) {\n  return bytes.map(function(x) { return padLeft(x.toString(16),2) }).join('')\n}\n\nfunction padLeft(orig, len) {\n  if (orig.length > len) return orig\n  return Array(len - orig.length + 1).join('0') + orig\n}\n\n\nif (typeof module !== 'undefined' && module.exports) { //CommonJS\n  module.exports = convertHex\n} else {\n  globals.convertHex = convertHex\n}\n\n}(this);","const EXP_TABLE = new Uint8Array(512)\nconst LOG_TABLE = new Uint8Array(256)\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */\n;(function initTables () {\n  let x = 1\n  for (let i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x\n    LOG_TABLE[x] = i\n\n    x <<= 1 // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (let i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255]\n  }\n}())\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log (n) {\n  if (n < 1) throw new Error('log(' + n + ')')\n  return LOG_TABLE[n]\n}\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp (n) {\n  return EXP_TABLE[n]\n}\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul (x, y) {\n  if (x === 0 || y === 0) return 0\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n}\n","(function(){\r\n  var crypt = require('crypt'),\r\n      utf8 = require('charenc').utf8,\r\n      isBuffer = require('is-buffer'),\r\n      bin = require('charenc').bin,\r\n\r\n  // The core\r\n  md5 = function (message, options) {\r\n    // Convert to byte array\r\n    if (message.constructor == String)\r\n      if (options && options.encoding === 'binary')\r\n        message = bin.stringToBytes(message);\r\n      else\r\n        message = utf8.stringToBytes(message);\r\n    else if (isBuffer(message))\r\n      message = Array.prototype.slice.call(message, 0);\r\n    else if (!Array.isArray(message) && message.constructor !== Uint8Array)\r\n      message = message.toString();\r\n    // else, assume byte array already\r\n\r\n    var m = crypt.bytesToWords(message),\r\n        l = message.length * 8,\r\n        a =  1732584193,\r\n        b = -271733879,\r\n        c = -1732584194,\r\n        d =  271733878;\r\n\r\n    // Swap endian\r\n    for (var i = 0; i < m.length; i++) {\r\n      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |\r\n             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;\r\n    }\r\n\r\n    // Padding\r\n    m[l >>> 5] |= 0x80 << (l % 32);\r\n    m[(((l + 64) >>> 9) << 4) + 14] = l;\r\n\r\n    // Method shortcuts\r\n    var FF = md5._ff,\r\n        GG = md5._gg,\r\n        HH = md5._hh,\r\n        II = md5._ii;\r\n\r\n    for (var i = 0; i < m.length; i += 16) {\r\n\r\n      var aa = a,\r\n          bb = b,\r\n          cc = c,\r\n          dd = d;\r\n\r\n      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);\r\n      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);\r\n      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);\r\n      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);\r\n      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);\r\n      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);\r\n      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);\r\n      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);\r\n      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);\r\n      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);\r\n      c = FF(c, d, a, b, m[i+10], 17, -42063);\r\n      b = FF(b, c, d, a, m[i+11], 22, -1990404162);\r\n      a = FF(a, b, c, d, m[i+12],  7,  1804603682);\r\n      d = FF(d, a, b, c, m[i+13], 12, -40341101);\r\n      c = FF(c, d, a, b, m[i+14], 17, -1502002290);\r\n      b = FF(b, c, d, a, m[i+15], 22,  1236535329);\r\n\r\n      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);\r\n      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);\r\n      c = GG(c, d, a, b, m[i+11], 14,  643717713);\r\n      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);\r\n      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);\r\n      d = GG(d, a, b, c, m[i+10],  9,  38016083);\r\n      c = GG(c, d, a, b, m[i+15], 14, -660478335);\r\n      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);\r\n      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);\r\n      d = GG(d, a, b, c, m[i+14],  9, -1019803690);\r\n      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);\r\n      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);\r\n      a = GG(a, b, c, d, m[i+13],  5, -1444681467);\r\n      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);\r\n      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);\r\n      b = GG(b, c, d, a, m[i+12], 20, -1926607734);\r\n\r\n      a = HH(a, b, c, d, m[i+ 5],  4, -378558);\r\n      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);\r\n      c = HH(c, d, a, b, m[i+11], 16,  1839030562);\r\n      b = HH(b, c, d, a, m[i+14], 23, -35309556);\r\n      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);\r\n      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);\r\n      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);\r\n      b = HH(b, c, d, a, m[i+10], 23, -1094730640);\r\n      a = HH(a, b, c, d, m[i+13],  4,  681279174);\r\n      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);\r\n      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);\r\n      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);\r\n      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);\r\n      d = HH(d, a, b, c, m[i+12], 11, -421815835);\r\n      c = HH(c, d, a, b, m[i+15], 16,  530742520);\r\n      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);\r\n\r\n      a = II(a, b, c, d, m[i+ 0],  6, -198630844);\r\n      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);\r\n      c = II(c, d, a, b, m[i+14], 15, -1416354905);\r\n      b = II(b, c, d, a, m[i+ 5], 21, -57434055);\r\n      a = II(a, b, c, d, m[i+12],  6,  1700485571);\r\n      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);\r\n      c = II(c, d, a, b, m[i+10], 15, -1051523);\r\n      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);\r\n      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);\r\n      d = II(d, a, b, c, m[i+15], 10, -30611744);\r\n      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);\r\n      b = II(b, c, d, a, m[i+13], 21,  1309151649);\r\n      a = II(a, b, c, d, m[i+ 4],  6, -145523070);\r\n      d = II(d, a, b, c, m[i+11], 10, -1120210379);\r\n      c = II(c, d, a, b, m[i+ 2], 15,  718787259);\r\n      b = II(b, c, d, a, m[i+ 9], 21, -343485551);\r\n\r\n      a = (a + aa) >>> 0;\r\n      b = (b + bb) >>> 0;\r\n      c = (c + cc) >>> 0;\r\n      d = (d + dd) >>> 0;\r\n    }\r\n\r\n    return crypt.endian([a, b, c, d]);\r\n  };\r\n\r\n  // Auxiliary functions\r\n  md5._ff  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & c | ~b & d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._gg  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & d | c & ~d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._hh  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b ^ c ^ d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._ii  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n\r\n  // Package private blocksize\r\n  md5._blocksize = 16;\r\n  md5._digestsize = 16;\r\n\r\n  module.exports = function (message, options) {\r\n    if (message === undefined || message === null)\r\n      throw new Error('Illegal argument ' + message);\r\n\r\n    var digestbytes = crypt.wordsToBytes(md5(message, options));\r\n    return options && options.asBytes ? digestbytes :\r\n        options && options.asString ? bin.bytesToString(digestbytes) :\r\n        crypt.bytesToHex(digestbytes);\r\n  };\r\n\r\n})();\r\n","(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n","const Utils = require('./utils')\n\nconst G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\nconst G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\nconst G15_BCH = Utils.getBCHDigit(G15)\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n  const data = ((errorCorrectionLevel.bit << 3) | mask)\n  let d = data << 10\n\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return ((data << 10) | d) ^ G15_MASK\n}\n","const Mode = require('./mode')\nconst Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  let i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    let value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n","const Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  if (typeof (data) === 'string') {\n    this.data = new TextEncoder().encode(data)\n  } else {\n    this.data = new Uint8Array(data)\n  }\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (let i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n","'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n","/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nconst getSymbolSize = require('./utils').getSymbolSize\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords (version) {\n  if (version === 1) return []\n\n  const posCount = Math.floor(version / 7) + 2\n  const size = getSymbolSize(version)\n  const intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n  const positions = [size - 7] // Last coord is always (size - 7)\n\n  for (let i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals\n  }\n\n  positions.push(6) // First coord is always 6\n\n  return positions.reverse()\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * let pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const coords = []\n  const pos = exports.getRowColCoords(version)\n  const posLength = pos.length\n\n  for (let i = 0; i < posLength; i++) {\n    for (let j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) || // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push([pos[i], pos[j]])\n    }\n  }\n\n  return coords\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","const ECLevel = require('./error-correction-level')\r\n\r\nconst EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nconst EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n","const getSymbolSize = require('./utils').getSymbolSize\nconst FINDER_PATTERN_SIZE = 7\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const size = getSymbolSize(version)\n\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [size - FINDER_PATTERN_SIZE, 0],\n    // bottom-left\n    [0, size - FINDER_PATTERN_SIZE]\n  ]\n}\n","/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = new Uint8Array(size * size)\n  this.reservedBit = new Uint8Array(size * size)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  const index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n","function BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    const bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    const bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n","exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n"],"names":["exports","Patterns","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PenaltyScores","getMaskAt","maskPattern","i","j","Math","floor","Error","isValid","mask","isNaN","from","value","parseInt","undefined","getPenaltyN1","data","size","points","sameCountCol","sameCountRow","lastCol","lastRow","row","col","module","get","getPenaltyN2","last","getPenaltyN3","bitsCol","bitsRow","getPenaltyN4","darkCount","modulesCount","length","abs","ceil","applyMask","pattern","isReserved","xor","getBestMask","setupFormatFunc","numPatterns","Object","keys","bestPattern","lowerPenalty","Infinity","p","penalty","globals","convertString","bytesToString","bytes","map","x","String","fromCharCode","join","stringToBytes","str","split","charCodeAt","UTF8","decodeURIComponent","escape","unescape","encodeURIComponent","this","Mode","ALPHA_NUM_CHARS","AlphanumericData","mode","ALPHANUMERIC","getBitsLength","prototype","getLength","write","bitBuffer","indexOf","put","charenc","utf8","bin","push","convertHex","bytesToHex","orig","toString","len","Array","arrBytesToHex","hexToBytes","hex","slice","match","EXP_TABLE","Uint8Array","LOG_TABLE","log","n","exp","mul","y","crypt","isBuffer","md5","message","options","constructor","encoding","call","isArray","m","bytesToWords","l","a","b","c","d","FF","_ff","GG","_gg","HH","_hh","II","_ii","aa","bb","cc","dd","endian","s","t","_blocksize","_digestsize","digestbytes","wordsToBytes","asBytes","asString","base64map","rotl","rotr","Number","randomBytes","random","words","substr","bytesToBase64","base64","triplet","charAt","base64ToBytes","replace","imod4","pow","Utils","G15_BCH","getBCHDigit","getEncodedBits","errorCorrectionLevel","bit","KanjiData","KANJI","toSJIS","ByteData","BYTE","TextEncoder","encode","dijkstra","single_source_shortest_paths","graph","predecessors","costs","closest","u","v","cost_of_s_to_u","adjacent_nodes","cost_of_s_to_u_plus_cost_of_e","cost_of_s_to_v","open","PriorityQueue","make","empty","pop","cost","hasOwnProperty","msg","extract_shortest_path_from_predecessor_list","nodes","reverse","find_path","opts","key","T","queue","sorter","default_sorter","item","sort","shift","getSymbolSize","getRowColCoords","version","posCount","intervals","positions","getPositions","coords","pos","posLength","obj","readFloatLE","isSlowBuffer","_isBuffer","ECLevel","EC_BLOCKS_TABLE","EC_CODEWORDS_TABLE","getBlocksCount","L","M","Q","H","getTotalCodewordsCount","BitMatrix","reservedBit","set","reserved","index","BitBuffer","buffer","bufIndex","num","putBit","getLengthInBits","level","defaultValue","string","toLowerCase","fromString","e"],"sourceRoot":""}