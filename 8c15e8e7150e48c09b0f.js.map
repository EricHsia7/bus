{"version":3,"file":"8c15e8e7150e48c09b0f.js","mappings":"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","sources":["webpack://bus/./src/data/search/searchMaterialSymbols.ts","webpack://bus/./src/data/user-orientation/index.ts","webpack://bus/./src/data/user-position/index.ts","webpack://bus/./src/data/settings/version.ts","webpack://bus/./src/data/settings/index.ts","webpack://bus/./src/data/storage/index.ts","webpack://bus/./src/data/search/index.ts"],"sourcesContent":["import { MaterialSymbols } from '../../interface/icons/material-symbols-type';\nimport { getIntersection } from '../../tools/array';\nimport { generateIdentifier } from '../../tools/index';\nimport { levenshtein } from '../../tools/levenshtein';\nimport { getMaterialSymbolsSearchIndex } from '../apis/getMaterialSymbolsSearchIndex/index';\nimport { deleteDataReceivingProgress } from '../apis/loader';\n\nlet searchStructure = {};\nlet readyToSearch = false;\n\nexport async function prepareForMaterialSymbolsSearch() {\n  if (readyToSearch) return;\n\n  const requestID = generateIdentifier();\n  const materialSymbolsSearchIndex = await getMaterialSymbolsSearchIndex(requestID);\n  deleteDataReceivingProgress(requestID);\n\n  const dictionary = materialSymbolsSearchIndex.dictionary.split(',');\n  const symbols = materialSymbolsSearchIndex.symbols;\n  const names = [];\n  const wordToSymbols: { [wordIndexKey: string]: Array<number> } = {};\n\n  let nameIndex = 0;\n  for (const symbol in symbols) {\n    // Create list of symbol names\n    names.push(symbol);\n    // Build wordIndex → nameIndex mapping\n    for (const wordIndex of symbols[symbol]) {\n      const wordIndexKey = `w${wordIndex}`;\n      if (!wordToSymbols.hasOwnProperty(wordIndexKey)) {\n        wordToSymbols[wordIndexKey] = [];\n      }\n      wordToSymbols[wordIndexKey].push(nameIndex);\n    }\n    nameIndex++;\n  }\n\n  searchStructure = { dictionary, names, wordToSymbols };\n  readyToSearch = true;\n}\n\nexport function searchForMaterialSymbols(query: string, searchFrom: number = 0, skipBroadTerms: boolean = true, broadThreshold: number = 0.3): Array<{ item: MaterialSymbols; score: number }> {\n  if (!readyToSearch) return [];\n\n  const { dictionary, names, wordToSymbols } = searchStructure;\n  const broadLength = Math.round(names.length * broadThreshold);\n\n  // Split query\n  const queryWords = Array.from(\n    new Set(\n      query\n        .trim()\n        .toLowerCase()\n        .split(/[\\s_-]+/)\n    )\n  );\n  const queryWordsLength = queryWords.length;\n\n  // Fuzzy match words to dictionary indices\n  const minDistances = new Uint8Array(queryWordsLength);\n  const matchedWordIndexes = new Int16Array(queryWordsLength).fill(-1);\n\n  for (let j = searchFrom; j < queryWordsLength; j++) {\n    minDistances[j] = queryWords[j].length;\n    for (let i = 0, l = dictionary.length; i < l; i++) {\n      const distance = levenshtein(queryWords[j], dictionary[i]);\n      if (distance <= minDistances[j]) {\n        minDistances[j] = distance;\n        matchedWordIndexes[j] = i;\n      }\n    }\n  }\n\n  // Pair words with symbols\n  let indexArrays = [];\n  for (let i = queryWordsLength - 1; i >= 0; i--) {\n    if (matchedWordIndexes[i] < 0) continue;\n    const arr = wordToSymbols[`w${matchedWordIndexes[i]}`] || [];\n    if (skipBroadTerms && arr.length > broadLength) continue;\n    indexArrays.push(arr);\n  }\n\n  const indexArraysLength = indexArrays.length;\n\n  if (indexArraysLength === 0) return [];\n\n  // Sort by length (shortest → longest)\n  indexArrays.sort((a, b) => a.length - b.length);\n\n  // Intersect\n  let candidates = indexArrays[0];\n  for (let i = 1; i < indexArraysLength; i++) {\n    candidates = getIntersection(candidates, indexArrays[i]);\n  }\n\n  // Rank candidates\n  const scored = [];\n  for (let i = 0, l = candidates.length; i < l; i++) {\n    let score = 0;\n    for (let j = queryWordsLength - 1; j >= 0; j--) {\n      if (matchedWordIndexes[j] < 0) continue;\n      const symbolWordIndexes = wordToSymbols[`w${matchedWordIndexes[j]}`] || [];\n      if (symbolWordIndexes.indexOf(candidates[i]) > -1) {\n        score -= j; // earlier query words = higher weight\n      }\n    }\n    scored.push({\n      item: names[candidates[i]],\n      score: score\n    });\n  }\n\n  scored.sort((a, b) => b.score - a.score);\n  return scored;\n}\n","import { CardinalDirection, getCardinalDirectionFromVector, UnknownCardinalDirection } from '../../tools/cardinal-direction';\nimport { getSettingOptionValue } from '../settings/index';\n\ninterface Orientation {\n  degree: number;\n  cardinalDirection: CardinalDirection;\n}\n\nconst userOrientation = {\n  current: -1,\n  permission: {\n    gained: false,\n    asked: false\n  },\n  id: 0\n};\n\nexport function askForCalibratingPermission(): void {\n  if (userOrientation.permission.asked === false && getSettingOptionValue('display_user_orientation') === true) {\n    userOrientation.permission.asked = true;\n    if (typeof DeviceOrientationEvent !== 'undefined' && typeof DeviceOrientationEvent.requestPermission === 'function') {\n      DeviceOrientationEvent.requestPermission()\n        .then((permissionState) => {\n          if (permissionState === 'granted') {\n            // Permission granted, start listening to the event\n            window.addEventListener(\n              'deviceorientation',\n              function (event: DeviceOrientationEvent) {\n                if (event.absolute) {\n                  userOrientation.current = event?.alpha || -1;\n                } else {\n                  if (event.webkitCompassHeading) {\n                    userOrientation.current = event.webkitCompassHeading || -1;\n                  } else {\n                    userOrientation.current = event?.alpha || -1;\n                  }\n                }\n              },\n              true\n            );\n          } else {\n            console.error('Permission not granted for DeviceOrientation');\n          }\n        })\n        .catch((err) => {\n          console.error('Error requesting DeviceOrientation permission:', err);\n        });\n    } else {\n      console.log(`DeviceOrientation isn't supported.`);\n    }\n  }\n}\n\nexport function getUserOrientation(): Orientation {\n  const alpha = userOrientation.current;\n  if (alpha === -1) {\n    return {\n      degree: -1,\n      cardinalDirection: UnknownCardinalDirection\n    };\n  } else {\n    let angle: number = alpha + 90;\n    if (angle > 360) {\n      angle -= 360;\n    }\n    angle *= Math.PI / 180;\n    const vector = [Math.cos(angle), Math.sin(angle)];\n    const cardinalDirection = getCardinalDirectionFromVector(vector);\n    return {\n      degree: alpha,\n      cardinalDirection: cardinalDirection\n    };\n  }\n}\n","import { convertPositionsToDistance } from '../../tools/convert';\nimport { getSettingOptionValue } from '../settings/index';\n\ninterface position {\n  latitude: number;\n  longitude: number;\n}\n\nconst userPosition = {\n  current: {\n    latitude: 0,\n    longitude: 0\n  },\n  permission: {\n    gained: false,\n    asked: false\n  },\n  id: 0\n};\n\nexport function askForPositioningPermission(): void {\n  function successHandler(position: any): void {\n    userPosition.permission.gained = true;\n    userPosition.current.latitude = position.coords.latitude;\n    userPosition.current.longitude = position.coords.longitude;\n  }\n  function errorHandler(error: any): void {\n    var message = '';\n    // Check for known errors\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        message = 'This website does not have permission to use the Geolocation API';\n        break;\n      case error.POSITION_UNAVAILABLE:\n        message = 'The current position could not be determined.';\n        break;\n      case error.PERMISSION_DENIED_TIMEOUT:\n        message = 'The current position could not be determined ' + 'within the specified timeout period.';\n        break;\n    }\n    if (message == '') {\n      var strErrorCode = error.code.toString();\n      message = 'The position could not be determined due to ' + 'an unknown error (Code: ' + strErrorCode + ').';\n    }\n    console.log(message);\n  }\n  if (userPosition.permission.asked === false && getSettingOptionValue('display_user_location')) {\n    userPosition.permission.asked = true;\n    userPosition.id = navigator.geolocation.watchPosition(successHandler, errorHandler, {\n      enableHighAccuracy: true,\n      timeout: 30000,\n      maximumAge: 0\n    });\n  }\n}\n\nexport function getUserPosition(): position {\n  if (userPosition.permission.asked && userPosition.permission.gained) {\n    return userPosition.current;\n  }\n  if (!userPosition.permission.asked && !userPosition.permission.gained) {\n    askForPositioningPermission();\n    return userPosition.current;\n  }\n  if (userPosition.permission.asked && !userPosition.permission.gained) {\n    return userPosition.current;\n  }\n}\n\nexport function isNearUserPosition(latitude: number, longitude: number, radius: number = 450): boolean {\n  const currentUserPosition = getUserPosition();\n  const distance = convertPositionsToDistance(latitude, longitude, currentUserPosition.latitude, currentUserPosition.longitude);\n  if (distance <= radius) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function getNearestPosition(positions: Array<position>, radius: number = 450): position | null {\n  const currentUserPosition = getUserPosition();\n  let shortestDistance = Infinity;\n  let nearestIndex = -1;\n  for (let i = positions.length - 1; i > 0; i--) {\n    const position = positions[i];\n    const distance = convertPositionsToDistance(currentUserPosition.latitude, currentUserPosition.longitude, position.latitude, position.longitude);\n    if (distance <= radius) {\n      if (distance < shortestDistance) {\n        nearestIndex = i;\n        shortestDistance = distance;\n      }\n    }\n  }\n\n  if (nearestIndex > 0) {\n    return positions[nearestIndex];\n  } else {\n    return null;\n  }\n}\n","import { documentQuerySelector } from '../../tools/query-selector';\n\nfunction refreshPageWithTimeStamp(id: string, enforce: boolean = false): void {\n  // Get the URLSearchParams object from the current URL\n  const searchParams = new URLSearchParams(window.location.search);\n  // Set the 'timestamp' query parameter to the current timestamp\n  searchParams.set('v', id);\n  // Construct the new URL with updated query parameters\n  const newUrl = window.location.pathname + '?' + searchParams.toString();\n  if (enforce) {\n    // Redirect to the new URL\n    window.location.replace(newUrl);\n  } else {\n    history.replaceState(null, '', newUrl);\n  }\n}\n\ninterface AppVersion {\n  build: number;\n  hash: string;\n  full_hash: string;\n  branch_name: string; // branch name of the code base\n  timestamp: string; // timestamp in ISO fromat\n}\n\nasync function getAppVersion(): Promise<AppVersion | false> {\n  try {\n    const response = await fetch(`./version.json?_=${new Date().getTime()}`, {\n      cache: 'no-store'\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  } catch (error) {\n    console.error('There was a problem with the fetch operation:', error);\n    return false;\n  }\n}\n\nexport function getHTMLVersionHash(): string {\n  return documentQuerySelector('head meta[name=\"version-hash\"]').getAttribute('content');\n}\n\nexport function getHTMLVersionFullHash(): string {\n  return documentQuerySelector('head meta[name=\"version-full-hash\"]').getAttribute('content');\n}\n\nexport function getHTMLVersionBranchName(): string {\n  return documentQuerySelector('head meta[name=\"version-branch-name\"]').getAttribute('content');\n}\n\nexport function getCommitURLOfCurrentVersion(): string {\n  const currentFullHash = getHTMLVersionFullHash();\n  return `https://github.com/EricHsia7/bus/commit/${currentFullHash}`;\n}\n\nexport function getHTMLVersionTimeStamp(): string {\n  return documentQuerySelector('head meta[name=\"version-time-stamp\"]').getAttribute('content');\n}\n\ntype AppVersionStatus = 'fetchError' | 'unknownError' | 'refreshing' | 'ok';\n\nexport async function checkAppVersion(): Promise<AppVersionStatus> {\n  const appVersion = await getAppVersion();\n  if (typeof appVersion === 'boolean') {\n    if (appVersion === false) {\n      return 'fetchError';\n    } else {\n      return 'unknownError';\n    }\n  } else {\n    if (getHTMLVersionHash() !== appVersion.hash) {\n      refreshPageWithTimeStamp(appVersion.hash, true);\n      return 'refreshing';\n    } else {\n      refreshPageWithTimeStamp(appVersion.hash, false);\n      return 'ok';\n    }\n  }\n}\n","import { openDataUsage } from '../../interface/data-usage/index';\nimport { openFolderManager } from '../../interface/folder-manager/index';\nimport { MaterialSymbols } from '../../interface/icons/material-symbols-type';\nimport { openNotificationScheduleManager } from '../../interface/notification-schedule-manager/index';\nimport { openPersonalScheduleManager } from '../../interface/personal-schedule-manager/index';\nimport { downloadExportFile, openFileToImportData, showPromptToAskForPersistentStorage, viewCommitOfCurrentVersion, viewGitHubRepository } from '../../interface/settings/index';\nimport { openSettingsOptions } from '../../interface/settings/options';\nimport { openStorage } from '../../interface/storage/index';\nimport { dateToRelativeTime, formatTime } from '../../tools/time';\nimport { getNotificationClientStatus } from '../notification/index';\nimport { isStoragePersistent, lfGetItem, lfListItemKeys, lfSetItem } from '../storage/index';\nimport { getHTMLVersionBranchName, getHTMLVersionHash, getHTMLVersionTimeStamp } from './version';\n\ntype SettingType = 'select' | 'page' | 'info' | 'action';\n\nexport interface SettingSelectOptionStringValue {\n  type: 0;\n  string: string;\n}\n\nexport interface SettingSelectOptionNumberValue {\n  type: 1;\n  number: number;\n}\n\nexport interface SettingSelectOptionBooleanValue {\n  type: 2;\n  boolean: boolean;\n}\n\nexport interface SettingSelectOptionRefreshIntervalValue {\n  type: 3;\n  baseInterval: number;\n  dynamic: boolean;\n}\n\nexport type SettingSelectOptionValue = SettingSelectOptionStringValue | SettingSelectOptionNumberValue | SettingSelectOptionBooleanValue | SettingSelectOptionRefreshIntervalValue;\n\nexport interface SettingSelectOption {\n  name: string;\n  value: SettingSelectOptionValue;\n  resourceIntensive: boolean;\n  powerSavingAlternative: -1 | number; // index of an option\n}\n\nexport type SettingSelectOptions = Array<SettingSelectOption>;\n\nexport interface SettingSelect {\n  key: string;\n  name: string;\n  icon: MaterialSymbols;\n  status: string;\n  action: Function;\n  type: 'select';\n  default_option: number;\n  option: number;\n  options: SettingSelectOptions;\n  description: string;\n}\n\nexport interface SettingPage {\n  key: string;\n  name: string;\n  icon: MaterialSymbols;\n  status: string;\n  type: 'page';\n  action: Function;\n  description: string;\n}\n\nexport interface SettingInfo {\n  key: string;\n  name: string;\n  icon: MaterialSymbols;\n  status: string;\n  type: 'info';\n  action: Function;\n  description: string;\n}\n\nexport interface SettingAction {\n  key: string;\n  name: string;\n  icon: MaterialSymbols;\n  status: string;\n  type: 'action';\n  action: Function;\n  description: string;\n}\n\nexport type Setting = SettingSelect | SettingPage | SettingInfo | SettingAction;\n\nexport type SettingsObject = { [key: string]: Setting };\n\nexport type SettingsArray = Array<Setting>;\n\nexport interface SettingWithOption {\n  key: string;\n  option: number;\n}\n\nexport type SettingsWithOptionsArray = Array<SettingWithOption>;\n\nconst SettingKeys: Array<string> = ['time_formatting_mode', 'refresh_interval', 'display_user_location', 'display_user_orientation', 'location_labels', 'proxy', 'folder', 'personal_schedule', 'notification', 'playing_animation', 'power_saving', 'data_usage', 'storage', 'persistent_storage', 'export', 'import', 'version', 'branch', 'last_update_date', 'github'];\n\nlet Settings: SettingsObject = {\n  time_formatting_mode: {\n    key: 'time_formatting_mode',\n    name: '預估時間格式',\n    icon: 'glyphs',\n    status: '',\n    action: function () {\n      openSettingsOptions('time_formatting_mode');\n    },\n    type: 'select',\n    default_option: 0,\n    option: 0,\n    options: [\n      {\n        name: `${formatTime(11, 3)}/${formatTime(61, 3)}/${formatTime(60 * 61 + 1, 3)}`,\n        value: {\n          type: 1,\n          number: 3\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: `${formatTime(11, 2)}/${formatTime(61, 2)}/${formatTime(60 * 61 + 1, 2)}`,\n        value: {\n          type: 1,\n          number: 2\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: `${formatTime(11, 1)}/${formatTime(61, 1)}/${formatTime(60 * 61 + 1, 1)}`,\n        value: {\n          type: 1,\n          number: 1\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: `${formatTime(11, 0)}/${formatTime(61, 0)}/${formatTime(60 * 61 + 1, 0)}`,\n        value: {\n          type: 1,\n          number: 0\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ],\n    description: '在首頁、路線頁面、地點頁面上的預估公車到站時間的顯示格式。'\n  },\n  refresh_interval: {\n    key: 'refresh_interval',\n    name: '預估時間更新頻率',\n    icon: 'pace',\n    status: '',\n    action: function () {\n      openSettingsOptions('refresh_interval');\n    },\n    type: 'select',\n    default_option: 0,\n    option: 0,\n    options: [\n      {\n        name: '自動',\n        value: {\n          baseInterval: 15 * 1000,\n          dynamic: true,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 2\n      },\n      {\n        name: '10秒',\n        value: {\n          baseInterval: 10 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 2\n      },\n      {\n        name: '20秒',\n        value: {\n          baseInterval: 20 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 3\n      },\n      {\n        name: '30秒',\n        value: {\n          baseInterval: 30 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 4\n      },\n      {\n        name: '40秒',\n        value: {\n          baseInterval: 40 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 5\n      },\n      {\n        name: '50秒',\n        value: {\n          baseInterval: 50 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 6\n      },\n      {\n        name: '60秒',\n        value: {\n          baseInterval: 60 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 6\n      }\n    ],\n    description: '在首頁、路線頁面、地點頁面上的預估公車到站時間、公車等即時資料更新的頻率。'\n  },\n  display_user_location: {\n    key: 'display_user_location',\n    name: '顯示所在位置',\n    icon: 'near_me',\n    status: '',\n    action: function () {\n      openSettingsOptions('display_user_location');\n    },\n    type: 'select',\n    default_option: 1,\n    option: 1,\n    options: [\n      {\n        name: '開啟',\n        value: {\n          type: 2,\n          boolean: true\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 1\n      },\n      {\n        name: '關閉',\n        value: {\n          type: 2,\n          boolean: false\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ],\n    description: '是否在路線頁面上標註目前所在位置。若設為開啟，本應用程式將要求位置存取權限。'\n  },\n  display_user_orientation: {\n    key: 'display_user_orientation',\n    name: '顯示裝置指向',\n    icon: 'explore',\n    status: '',\n    action: function () {\n      openSettingsOptions('display_user_orientation');\n    },\n    type: 'select',\n    default_option: 1,\n    option: 1,\n    options: [\n      {\n        name: '開啟',\n        value: {\n          type: 2,\n          boolean: true\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 1\n      },\n      {\n        name: '關閉',\n        value: {\n          type: 2,\n          boolean: false\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ],\n    description: '是否在地點頁面上顯示裝置所指方向。若設為開啟，本應用程式將要求動作與方向存取權限。'\n  },\n  location_labels: {\n    key: 'location_labels',\n    name: '站牌位置標籤',\n    icon: 'tag',\n    status: '',\n    action: function () {\n      openSettingsOptions('location_labels');\n    },\n    type: 'select',\n    default_option: 0,\n    option: 0,\n    options: [\n      {\n        name: '行徑方向',\n        value: {\n          type: 0,\n          string: 'directions'\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: '地址特徵',\n        value: {\n          type: 0,\n          string: 'address'\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: '英文字母',\n        value: {\n          type: 0,\n          string: 'letters'\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ],\n    description: '用於區分位於同個地點的不同站牌。行徑方向表示可搭乘路線從本站到下一站的方向（與車流同向）；地址特徵表示不同站牌的地址差異處；英文字母表示按照順序以字母編號。'\n  },\n  proxy: {\n    key: 'proxy',\n    name: '網路代理',\n    icon: 'router',\n    status: '',\n    action: function () {\n      openSettingsOptions('proxy');\n    },\n    type: 'select',\n    default_option: 1,\n    option: 1,\n    options: [\n      {\n        name: '開啟',\n        value: {\n          type: 2,\n          boolean: true\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: '關閉',\n        value: {\n          type: 2,\n          boolean: false\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ],\n    description: '使用網路代理來擷取資料。'\n  },\n  folder: {\n    key: 'folder',\n    name: '資料夾',\n    icon: 'folder',\n    status: '',\n    type: 'page',\n    action: openFolderManager,\n    description: ''\n  },\n  personal_schedule: {\n    key: 'personal_schedule',\n    name: '個人化行程',\n    icon: 'calendar_view_day',\n    status: '',\n    action: openPersonalScheduleManager,\n    type: 'page',\n    description: ''\n  },\n  notification: {\n    key: 'notification',\n    name: '通知',\n    icon: 'notifications',\n    status: '',\n    action: openNotificationScheduleManager,\n    type: 'page',\n    description: ''\n  },\n  playing_animation: {\n    key: 'playing_animation',\n    name: '動畫',\n    icon: 'animation',\n    description: '是否在介面中播放動畫。',\n    status: '',\n    type: 'select',\n    action: function () {\n      openSettingsOptions('playing_animation');\n    },\n    default_option: 0,\n    option: 0,\n    options: [\n      {\n        name: '開啟',\n        value: {\n          type: 2,\n          boolean: true\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 1\n      },\n      {\n        name: '關閉',\n        value: {\n          type: 2,\n          boolean: false\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ]\n  },\n  power_saving: {\n    key: 'power_saving',\n    name: '省電模式',\n    icon: 'battery_low',\n    description: '暫停使用耗電功能來節省電力。',\n    status: '',\n    type: 'select',\n    action: function () {\n      openSettingsOptions('power_saving');\n    },\n    default_option: 1,\n    option: 1,\n    options: [\n      {\n        name: '開啟',\n        value: {\n          type: 2,\n          boolean: true\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: '關閉',\n        value: {\n          type: 2,\n          boolean: false\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ]\n  },\n  data_usage: {\n    key: 'data_usage',\n    name: '網路使用量',\n    icon: 'bigtop_updates',\n    status: '',\n    type: 'page',\n    action: openDataUsage,\n    description: ''\n  },\n  storage: {\n    key: 'storage',\n    name: '儲存空間',\n    icon: 'database',\n    status: '',\n    type: 'page',\n    action: openStorage,\n    description: ''\n  },\n  persistent_storage: {\n    key: 'persistent_storage',\n    name: '永久儲存',\n    icon: 'storage',\n    status: '',\n    action: showPromptToAskForPersistentStorage,\n    type: 'action',\n    description: '開啟此選項以避免瀏覽器自動刪除重要資料。'\n  },\n  export: {\n    key: 'export',\n    name: '匯出資料',\n    icon: 'upload',\n    status: '',\n    type: 'action',\n    action: downloadExportFile,\n    description: ''\n  },\n  import: {\n    key: 'import',\n    name: '匯入資料',\n    icon: 'download',\n    status: '',\n    type: 'action',\n    action: openFileToImportData,\n    description: ''\n  },\n  version: {\n    key: 'version',\n    name: '版本',\n    icon: 'commit',\n    status: '',\n    type: 'info',\n    action: viewCommitOfCurrentVersion,\n    description: ''\n  },\n  branch: {\n    key: 'branch',\n    name: '分支',\n    icon: 'rebase',\n    status: '',\n    type: 'info',\n    action: function () {},\n    description: ''\n  },\n  last_update_date: {\n    key: 'last_update_date',\n    name: '更新時間',\n    icon: 'update',\n    status: '',\n    type: 'info',\n    action: function () {},\n    description: ''\n  },\n  github: {\n    key: 'github',\n    name: 'GitHub',\n    icon: 'book_2',\n    status: '@EricHsia7/bus',\n    type: 'info',\n    action: viewGitHubRepository,\n    description: ''\n  }\n};\n\nexport async function initializeSettings(): Promise<boolean> {\n  const userSettings = await lfListItemKeys(1);\n  for (const key of userSettings) {\n    if (SettingKeys.indexOf(key) > -1) {\n      const userSetting = await lfGetItem(1, key);\n      if (userSetting !== null) {\n        if (Settings[key].type === 'select') {\n          const userSettingOption = parseInt(userSetting);\n          Settings[key].option = userSettingOption;\n        }\n      } else {\n        if (Settings[key].type === 'select') {\n          Settings[key].option = Settings[key].default_option;\n        }\n      }\n    }\n  }\n  return true;\n}\n\nexport async function listSettings(): Promise<SettingsArray> {\n  const result: SettingsArray = [];\n  for (const key in Settings) {\n    let item = Settings[key];\n    switch (item.type) {\n      case 'select':\n        item.status = item.options[item.option].name;\n        break;\n      case 'page':\n        switch (key) {\n          case 'notification':\n            item.status = getNotificationClientStatus() ? '已註冊' : '未註冊';\n            break;\n          default:\n            item.status = '';\n            break;\n        }\n        break;\n      case 'action':\n        item.status = '';\n        if (key === 'persistent_storage') {\n          item.status = (await isStoragePersistent()) ? '開啟' : '關閉';\n        }\n        break;\n      case 'info':\n        if (key === 'version') {\n          item.status = getHTMLVersionHash();\n        }\n        if (key === 'branch') {\n          item.status = getHTMLVersionBranchName();\n        }\n        if (key === 'last_update_date') {\n          const date = new Date(getHTMLVersionTimeStamp());\n          item.status = dateToRelativeTime(date);\n        }\n        break;\n      default:\n        break;\n    }\n    result.push(item);\n  }\n  return result;\n}\n\nexport function listSettingsWithOptions(): SettingsWithOptionsArray {\n  let result: SettingsWithOptionsArray = [];\n  for (const key in Settings) {\n    if (SettingKeys.indexOf(key) > -1) {\n      if (Settings.hasOwnProperty(key)) {\n        if (Settings[key].type === 'select') {\n          const item: SettingWithOption = {\n            key: key,\n            option: Settings[key].option\n          };\n          result.push(item);\n        }\n      }\n    }\n  }\n  return result;\n}\n\nexport async function changeSettingOption(key: string, option: number): Promise<boolean> {\n  if (SettingKeys.indexOf(key) > -1) {\n    if (Settings.hasOwnProperty(key)) {\n      if (Settings[key].type === 'select') {\n        if (Settings[key].options[option] !== undefined && Settings[key].options[option] !== null) {\n          await lfSetItem(1, key, option);\n          Settings[key].option = option;\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\nexport function getSetting(key: string): Setting | undefined {\n  if (SettingKeys.indexOf(key) > -1) {\n    if (Settings.hasOwnProperty(key)) {\n      return Settings[key];\n    }\n  }\n}\n\nexport function getSettingOptionValue(key: string): SettingSelectOptionStringValue['string'] | SettingSelectOptionNumberValue['number'] | SettingSelectOptionBooleanValue['boolean'] | SettingSelectOptionRefreshIntervalValue {\n  if (SettingKeys.indexOf(key) > -1) {\n    if (Settings.hasOwnProperty(key)) {\n      const powerSavingSetting = Settings['power_saving'] as SettingSelect;\n      const powerSavingSettingValue = powerSavingSetting.options[powerSavingSetting.option].value as SettingSelectOptionBooleanValue;\n      const powerSavingSettingValueBoolean = powerSavingSettingValue.boolean;\n      const thisSetting = Settings[key] as SettingSelect;\n      let thisSettingOption = thisSetting.options[thisSetting.option];\n      if (powerSavingSettingValueBoolean) {\n        if (thisSettingOption.resourceIntensive) {\n          thisSettingOption = thisSetting.options[thisSettingOption.powerSavingAlternative];\n        }\n      }\n      const thisSettingValue = thisSettingOption.value;\n      switch (thisSettingValue.type) {\n        case 0:\n          return thisSettingValue.string as string;\n          break;\n        case 1:\n          return thisSettingValue.number as number;\n          break;\n        case 2:\n          return thisSettingValue.boolean as boolean;\n          break;\n        case 3:\n          return thisSettingValue as SettingSelectOptionRefreshIntervalValue;\n          break;\n        default:\n          return '' as string;\n          break;\n      }\n    }\n  }\n  return '';\n}\n","const localforage = require('localforage');\n\nlet storage = {\n  cacheStore: false, // 0\n  settingsStore: false, // 1\n  dataUsageStatsStore: false, // 2\n  updateRateDataStore: false, // 3\n  updateRateDataWriteAheadLogStore: false, // 4\n  busArrivalTimeDataWriteAheadLogStore: false, // 5\n  busArrivalTimeDataStore: false, // 6\n  personalScheduleStore: false, // 7\n  recentViewsStore: false, // 8\n  notificationStore: false, // 9\n  notificationScheduleStore: false, // 10\n  folderListStore: false, // 11\n  folderContentIndexStore: false, // 12\n  folderContentStore: false // 13\n};\n\nconst stores = ['cacheStore', 'settingsStore', 'dataUsageStatsStore', 'updateRateDataStore', 'updateRateDataWriteAheadLogStore', 'busArrivalTimeDataWriteAheadLogStore', 'busArrivalTimeDataStore', 'personalScheduleStore', 'recentViewsStore', 'notificationStore', 'notificationScheduleStore', 'folderListStore', 'folderContentIndexStore', 'folderContentStore'];\n\nasync function dropInstance(store: number): Promise<any> {\n  const storeKey = stores[store];\n  if (storage[storeKey] === false) {\n    storage[storeKey] = await localforage.createInstance({\n      name: storeKey\n    });\n  }\n  const operation = await storage[storeKey].dropInstance();\n  return operation;\n}\n\nexport async function lfSetItem(store: number, key: string, value: any): Promise<any> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const operation = await storage[storeKey].setItem(key, value);\n    return operation;\n  } catch (err) {\n    console.error(err);\n    // await dropInstance(store);\n    return null;\n  }\n}\n\nexport async function lfGetItem(store: number, key: string): Promise<any> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const operation = await storage[storeKey].getItem(key);\n    return operation;\n  } catch (err) {\n    console.error(err);\n    // await dropInstance(store);\n    return null;\n  }\n}\n\nexport async function lfRemoveItem(store: number, key: string): Promise<any> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const operation = await storage[storeKey].removeItem(key);\n    return operation;\n  } catch (err) {\n    console.error(err);\n    // await dropInstance(store);\n    return null;\n  }\n}\n\nexport async function lfListItemKeys(store: number): Promise<Array<string>> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const keys = await storage[storeKey].keys();\n    return keys;\n  } catch (err) {\n    console.error(err);\n    return [];\n  }\n}\n\nexport function getStoreKey(store: number): string {\n  return stores[store];\n}\n\nexport function getStoresLength(): number {\n  return stores.length;\n}\n\n/*\nexport async function registerStore(id: string): Promise<number> {\n  const storeKey = `F${id}Store`;\n  if (!storage.hasOwnProperty(storeKey) && stores.indexOf(storeKey) < 0) {\n    storage[storeKey] = await localforage.createInstance({\n      name: storeKey\n    });\n    stores.push(storeKey);\n    return stores.length - 1;\n  } else {\n    return stores.indexOf(storeKey);\n  }\n}\n*/\n\nexport async function isStoragePersistent(): Promise<boolean> {\n  // Check if site's storage has been marked as persistent\n  if (navigator.storage) {\n    if (navigator.storage.persist) {\n      const isPersisted = await navigator.storage.persisted();\n      return isPersisted;\n    }\n  }\n  return false;\n}\n\nexport async function askForPersistentStorage(): Promise<'granted' | 'denied' | 'unsupported'> {\n  // Request persistent storage for site\n  if (navigator.storage) {\n    if (navigator.storage.persist) {\n      const isPersisted = await navigator.storage.persist();\n      return isPersisted ? 'granted' : 'denied';\n    }\n  }\n  return 'unsupported';\n}\n","import { getIntersection } from '../../tools/array';\nimport { generateIdentifier } from '../../tools/index';\nimport { getUnicodes } from '../../tools/text';\nimport { getCarInfo, SimplifiedCarInfo } from '../apis/getCarInfo/index';\nimport { getLocation, MergedLocation } from '../apis/getLocation/index';\nimport { getRoute, SimplifiedRoute, SimplifiedRouteItem } from '../apis/getRoute/index';\nimport { deleteDataReceivingProgress, deleteDataUpdateTime } from '../apis/loader';\n\nexport async function searchRouteByName(query: string): Promise<Array<SimplifiedRouteItem>> {\n  const requestID = generateIdentifier();\n  const Route = (await getRoute(requestID, true)) as SimplifiedRoute;\n  let result: Array<SimplifiedRouteItem> = [];\n  for (const key in Route) {\n    const thisRoute = Route[key];\n    if (String(thisRoute.n).indexOf(query) > -1) {\n      result.push(thisRoute);\n    }\n  }\n  deleteDataReceivingProgress(requestID);\n  deleteDataUpdateTime(requestID);\n  return result;\n}\n\nexport async function searchRouteByRouteID(RouteID: number): Promise<SimplifiedRouteItem | false> {\n  const requestID = generateIdentifier();\n  const Route = (await getRoute(requestID, true)) as SimplifiedRoute;\n  let found: boolean = false;\n  let result = {} as SimplifiedRouteItem;\n  const routeKey = `r_${RouteID}`;\n  if (Route.hasOwnProperty(routeKey)) {\n    result = Route[routeKey];\n    found = true;\n  }\n  deleteDataReceivingProgress(requestID);\n  deleteDataUpdateTime(requestID);\n  return found ? result : false;\n}\n\nexport async function searchRouteByPathAttributeId(PathAttributeId: number): Promise<Array<SimplifiedRouteItem>> {\n  const requestID = generateIdentifier();\n  const Route = (await getRoute(requestID, true)) as SimplifiedRoute;\n  let result: Array<SimplifiedRouteItem> = [];\n  for (const key in Route) {\n    const thisRoute = Route[key];\n    if (String(thisRoute.pid).indexOf(PathAttributeId) > -1) {\n      result.push(thisRoute);\n    }\n  }\n  deleteDataReceivingProgress(requestID);\n  deleteDataUpdateTime(requestID);\n  return result;\n}\n\nexport interface SearchItem {\n  id: string | number | Array<number>;\n  pid: Array<number>;\n  dep: string;\n  des: string;\n  n: string;\n  hash: string;\n  lo: Array<number>;\n  la: Array<number>;\n  r: Array<Array<number>>;\n  s: Array<Array<number>>;\n  type: 0 | 1 | 2; // 0: route, 1: location, 2: car info\n}\n\nexport interface SearchResult {\n  item: SearchItem;\n  score: number;\n}\n\nexport type SearchIndex = { [unicodeKey: string]: Array<number> };\n\nlet searchIndex: SearchIndex = {};\nlet searchList: Array<SearchItem> = [];\nlet readyToSearch: boolean = false;\n\nexport async function prepareForSearch() {\n  if (readyToSearch) {\n    return;\n  }\n\n  const requestID = generateIdentifier();\n  const Route = (await getRoute(requestID, true)) as SimplifiedRoute;\n  const mergedLocation = (await getLocation(requestID, 1)) as MergedLocation;\n  const CarInfo = (await getCarInfo(requestID, true)) as SimplifiedCarInfo;\n  deleteDataReceivingProgress(requestID);\n  deleteDataUpdateTime(requestID);\n\n  let index: SearchIndex = {};\n  let list: Array<SearchItem> = [];\n  let i: number = 0;\n  for (const key in Route) {\n    const thisRoute = Route[key];\n    const thisItem = {\n      id: thisRoute.id,\n      pid: thisRoute.pid,\n      dep: thisRoute.dep,\n      des: thisRoute.des,\n      n: thisRoute.n,\n      hash: '',\n      lo: '',\n      la: '',\n      r: '',\n      s: '',\n      type: 0\n    };\n    list.push(thisItem);\n    const unicodes = getUnicodes(`${thisItem.n.toLowerCase()}${thisItem.dep.toLowerCase()}${thisItem.des.toLowerCase()}`, true);\n    for (const unicode of unicodes) {\n      const key = `u_${unicode}`;\n      if (!index.hasOwnProperty(key)) {\n        index[key] = [];\n      }\n      index[key].push(i);\n    }\n    i += 1;\n  }\n  for (const key in mergedLocation) {\n    const thisLocation = mergedLocation[key];\n    const thisItem = {\n      id: thisLocation.id,\n      n: thisLocation.n,\n      lo: thisLocation.lo,\n      la: thisLocation.la,\n      r: thisLocation.r,\n      s: thisLocation.s,\n      hash: thisLocation.hash,\n      dep: '',\n      des: '',\n      pid: [],\n      type: 1\n    };\n    list.push(thisItem);\n    const unicodes = getUnicodes(thisItem.n.toLowerCase(), true);\n    for (const unicode of unicodes) {\n      const key = `u_${unicode}`;\n      if (!index.hasOwnProperty(key)) {\n        index[key] = [];\n      }\n      index[key].push(i);\n    }\n    i += 1;\n  }\n  for (const key in CarInfo) {\n    const thisCarInfo = CarInfo[key];\n    const thisItem = {\n      id: thisCarInfo.BusId,\n      pid: [],\n      dep: '',\n      des: '',\n      n: thisCarInfo.CarNum,\n      hash: '',\n      lo: '',\n      la: '',\n      r: '',\n      s: '',\n      type: 2\n    };\n    list.push(thisItem);\n    const unicodes = getUnicodes(thisItem.n.toLowerCase(), true);\n    for (const unicode of unicodes) {\n      const key = `u_${unicode}`;\n      if (!index.hasOwnProperty(key)) {\n        index[key] = [];\n      }\n      index[key].push(i);\n    }\n    i += 1;\n  }\n  searchIndex = index;\n  searchList = list;\n  readyToSearch = true;\n}\n\nfunction calculateSearchResultScore(queryUnicodes: Array<number>, resultUnicodes: Array<number>): number {\n  // 1. Index data by characters for entries well-differentiated in characters\n  // 2. The results are ranked by positional difference for relevance\n  // 3. Some entries are prioritized for exact matches\n  let score = 0;\n  let i = 0;\n  for (const unicode of resultUnicodes) {\n    const indexOfUnicode = queryUnicodes.indexOf(unicode, i);\n    score += indexOfUnicode - i;\n    i += 1;\n  }\n  if (queryUnicodes === resultUnicodes) {\n    score = Math.abs(score) * 10;\n  }\n  return score;\n}\n\nexport function searchFor(query: string, type: SearchItem['type'] | -1, limit: number): Array<SearchResult> {\n  if (!readyToSearch) {\n    return [];\n  }\n\n  const lowerCaseQuery = query.toLowerCase();\n  const queryUnicodes = getUnicodes(lowerCaseQuery, true);\n  const asIsQueryUnicodes = getUnicodes(lowerCaseQuery, false);\n  let unicodeGroups = [];\n\n  for (const unicode of queryUnicodes) {\n    const key = `u_${unicode}`;\n    if (searchIndex.hasOwnProperty(key)) {\n      unicodeGroups.push(searchIndex[key]);\n    }\n  }\n\n  unicodeGroups.sort(function (a, b) {\n    return a.length - b.length;\n  });\n\n  const unicodeGroupsLength1 = unicodeGroups.length - 1;\n  let intersection = [];\n\n  if (unicodeGroupsLength1 === 0) {\n    intersection = unicodeGroups[0];\n  }\n\n  if (unicodeGroupsLength1 > 0) {\n    for (let i = 0; i < unicodeGroupsLength1; i++) {\n      const currentGroup = unicodeGroups[i];\n      const nextGroup = unicodeGroups[i + 1];\n      if (i === 0) {\n        intersection = getIntersection(currentGroup, nextGroup);\n      } else {\n        intersection = getIntersection(intersection, nextGroup);\n      }\n    }\n  }\n\n  let result: Array<SearchResult> = [];\n  let quantity: number = 0;\n\n  const exactMatchIds = new Set(); // Track exact matches to avoid duplicates\n  if (type === -1 || type === 2) {\n    // Prioritize exact matches for buses\n    const exactMatches = searchList.filter((item) => item.n === lowerCaseQuery && item.type === 2);\n    for (const item of exactMatches) {\n      result.push({\n        item: item,\n        score: Infinity // Highest possible score for exact matches\n      });\n      exactMatchIds.add(item.id);\n      quantity += 1;\n      if (quantity >= limit) {\n        break;\n      }\n    }\n  }\n\n  if (quantity < limit) {\n    for (const j of intersection) {\n      let thisItem = searchList[j];\n\n      // Check if the item is of the type\n      if (type !== -1 && type !== thisItem.type) {\n        continue;\n      }\n\n      // Check if the item is not already an exact match\n      if (exactMatchIds.has(thisItem.id)) {\n        continue;\n      }\n\n      const score = calculateSearchResultScore(asIsQueryUnicodes, getUnicodes(thisItem.n, false));\n      if (quantity < limit) {\n        result.push({\n          item: thisItem,\n          score: score\n        });\n      } else {\n        break;\n      }\n      quantity += 1;\n    }\n  }\n\n  result.sort(function (a, b) {\n    return b.score - a.score;\n  });\n\n  return result;\n}\n"],"names":["searchStructure","readyToSearch","prepareForMaterialSymbolsSearch","_prepareForMaterialSymbolsSearch","apply","arguments","requestID","generateIdentifier","materialSymbolsSearchIndex","getMaterialSymbolsSearchIndex","deleteDataReceivingProgress","dictionary","split","symbols","names","wordToSymbols","nameIndex","symbol","push","_step","_iterator","_createForOfIteratorHelper","s","n","done","wordIndexKey","value","hasOwnProperty","err","e","f","searchForMaterialSymbols","query","searchFrom","length","undefined","skipBroadTerms","broadThreshold","_searchStructure","broadLength","Math","round","queryWords","Array","from","Set","trim","toLowerCase","queryWordsLength","minDistances","Uint8Array","matchedWordIndexes","Int16Array","fill","j","i","l","distance","levenshtein","indexArrays","arr","indexArraysLength","sort","a","b","candidates","getIntersection","scored","score","indexOf","item","userOrientation","current","permission","gained","asked","id","askForCalibratingPermission","getSettingOptionValue","DeviceOrientationEvent","requestPermission","then","permissionState","window","addEventListener","event","absolute","alpha","webkitCompassHeading","console","log","getUserOrientation","degree","cardinalDirection","UnknownCardinalDirection","angle","PI","vector","cos","sin","getCardinalDirectionFromVector","userPosition","latitude","longitude","askForPositioningPermission","navigator","geolocation","watchPosition","position","coords","error","message","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","PERMISSION_DENIED_TIMEOUT","toString","enableHighAccuracy","timeout","maximumAge","getUserPosition","getNearestPosition","positions","radius","currentUserPosition","shortestDistance","Infinity","nearestIndex","convertPositionsToDistance","refreshPageWithTimeStamp","enforce","searchParams","URLSearchParams","location","search","set","newUrl","pathname","replace","history","replaceState","_getAppVersion","_asyncToGenerator","response","fetch","Date","getTime","cache","ok","Error","json","getHTMLVersionHash","documentQuerySelector","getAttribute","getHTMLVersionBranchName","getCommitURLOfCurrentVersion","getHTMLVersionTimeStamp","checkAppVersion","_checkAppVersion","appVersion","getAppVersion","hash","SettingKeys","Settings","time_formatting_mode","key","name","icon","status","action","openSettingsOptions","type","default_option","option","options","formatTime","number","resourceIntensive","powerSavingAlternative","description","refresh_interval","baseInterval","dynamic","display_user_location","boolean","display_user_orientation","location_labels","string","proxy","folder","openFolderManager","personal_schedule","openPersonalScheduleManager","notification","openNotificationScheduleManager","playing_animation","power_saving","data_usage","openDataUsage","storage","openStorage","persistent_storage","showPromptToAskForPersistentStorage","export","downloadExportFile","import","openFileToImportData","version","viewCommitOfCurrentVersion","branch","last_update_date","github","viewGitHubRepository","initializeSettings","_initializeSettings","lfListItemKeys","userSetting","lfGetItem","userSettingOption","parseInt","listSettings","_listSettings","result","getNotificationClientStatus","isStoragePersistent","date","dateToRelativeTime","listSettingsWithOptions","changeSettingOption","_x","_x2","_changeSettingOption","lfSetItem","getSetting","powerSavingSetting","powerSavingSettingValueBoolean","thisSetting","thisSettingOption","thisSettingValue","localforage","require","cacheStore","settingsStore","dataUsageStatsStore","updateRateDataStore","updateRateDataWriteAheadLogStore","busArrivalTimeDataWriteAheadLogStore","busArrivalTimeDataStore","personalScheduleStore","recentViewsStore","notificationStore","notificationScheduleStore","folderListStore","folderContentIndexStore","folderContentStore","stores","_x3","_x4","_lfSetItem","store","storeKey","createInstance","setItem","_x5","_x6","_lfGetItem","getItem","lfRemoveItem","_x7","_x8","_lfRemoveItem","removeItem","_x9","_lfListItemKeys","keys","getStoreKey","getStoresLength","_isStoragePersistent","persist","persisted","askForPersistentStorage","_askForPersistentStorage","searchRouteByName","_searchRouteByName","Route","getRoute","thisRoute","String","deleteDataUpdateTime","searchRouteByRouteID","_searchRouteByRouteID","RouteID","found","routeKey","searchRouteByPathAttributeId","_searchRouteByPathAttributeId","PathAttributeId","pid","searchIndex","searchList","prepareForSearch","_prepareForSearch","mergedLocation","getLocation","CarInfo","getCarInfo","index","list","thisItem","dep","des","lo","la","r","_step5","_iterator5","getUnicodes","thisLocation","_step6","_iterator6","thisCarInfo","BusId","CarNum","_step7","_iterator7","calculateSearchResultScore","queryUnicodes","resultUnicodes","unicode","abs","searchFor","limit","_step2","lowerCaseQuery","asIsQueryUnicodes","unicodeGroups","_iterator2","unicodeGroupsLength1","intersection","currentGroup","nextGroup","quantity","exactMatchIds","_step3","exactMatches","filter","_iterator3","add","_step4","_iterator4","has"],"sourceRoot":""}