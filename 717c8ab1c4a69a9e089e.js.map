{"version":3,"file":"717c8ab1c4a69a9e089e.js","mappings":"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","sources":["webpack://bus/./src/data/route/index.ts","webpack://bus/./src/data/route/details.ts"],"sourcesContent":["import { BusArrivalTime, getBusArrivalTimes } from '../analytics/bus-arrival-time/index';\nimport { getBusData } from '../apis/getBusData/index';\nimport { getBusEvent } from '../apis/getBusEvent/index';\nimport { getEstimateTime } from '../apis/getEstimateTime/index';\nimport { getLocation, SimplifiedLocation, SimplifiedLocationItem } from '../apis/getLocation/index';\nimport { getRoute, SimplifiedRoute, SimplifiedRouteItem } from '../apis/getRoute/index';\nimport { getSegmentBuffers, SimplifiedSegmentBufferItem } from '../apis/getSegmentBuffers/index';\nimport { getStop, SimplifiedStopItem } from '../apis/getStop/index';\nimport { EstimateTimeStatus, formatBus, FormattedBus, parseEstimateTime, batchFindBusesForRoute } from '../apis/index';\nimport { deleteDataReceivingProgress, deleteDataUpdateTime, getDataUpdateTime, setDataReceivingProgress } from '../apis/loader';\nimport { getSettingOptionValue } from '../settings/index';\nimport { getNearestPosition } from '../user-position/index';\n\ninterface formattedOverlappingRoute {\n  name: string;\n  RouteEndPoints: {\n    RouteDeparture: string;\n    RouteDestination: string;\n    text: string;\n    html: string;\n  };\n  RouteID: number;\n  PathAttributeId: Array<number>;\n}\n\nexport interface integratedStopItemPosition {\n  longitude: number;\n  latitude: number;\n}\n\nexport interface integratedStopItemSegmentBuffer {\n  isSegmentBuffer: boolean;\n  isStartingPoint: boolean;\n  isEndingPoint: boolean;\n}\n\nexport interface integratedStopItem {\n  name: string;\n  goBack: '0' | '1' | '2';\n  status: EstimateTimeStatus;\n  buses: Array<FormattedBus>;\n  overlappingRoutes: Array<formattedOverlappingRoute>;\n  busArrivalTimes: Array<BusArrivalTime>;\n  sequence: number;\n  position: integratedStopItemPosition;\n  nearest: boolean;\n  segmentBuffer: integratedStopItemSegmentBuffer;\n  progress: number;\n  id: number;\n}\n\nexport interface IntegratedRoute {\n  groupedItems: { [key: string]: Array<integratedStopItem> };\n  groupQuantity: number;\n  itemQuantity: { [key: string]: number };\n  RouteName: string;\n  RouteEndPoints: {\n    RouteDeparture: string;\n    RouteDestination: string;\n  };\n  dataUpdateTime: number;\n  RouteID: number;\n  PathAttributeId: Array<number>;\n}\n\nexport async function integrateRoute(RouteID: number, PathAttributeId: Array<number>, requestID: string): Promise<IntegratedRoute> {\n  setDataReceivingProgress(requestID, 'getRoute_0', 0, false);\n  setDataReceivingProgress(requestID, 'getRoute_1', 0, false);\n  setDataReceivingProgress(requestID, 'getStop_0', 0, false);\n  setDataReceivingProgress(requestID, 'getStop_1', 0, false);\n  setDataReceivingProgress(requestID, 'getLocation_0', 0, false);\n  setDataReceivingProgress(requestID, 'getLocation_1', 0, false);\n  setDataReceivingProgress(requestID, 'getSegmentBuffers_0', 0, false);\n  setDataReceivingProgress(requestID, 'getSegmentBuffers_1', 0, false);\n  setDataReceivingProgress(requestID, 'getEstimateTime_0', 0, false);\n  setDataReceivingProgress(requestID, 'getEstimateTime_1', 0, false);\n  setDataReceivingProgress(requestID, 'getBusEvent_0', 0, false);\n  setDataReceivingProgress(requestID, 'getBusEvent_1', 0, false);\n  setDataReceivingProgress(requestID, 'getBusData_0', 0, false);\n  setDataReceivingProgress(requestID, 'getBusData_1', 0, false);\n  const Route = (await getRoute(requestID, true)) as SimplifiedRoute;\n  const Stop = await getStop(requestID);\n  const Location = (await getLocation(requestID, false)) as SimplifiedLocation;\n  const SegmentBuffers = await getSegmentBuffers(requestID);\n  const EstimateTime = await getEstimateTime(requestID);\n  const BusEvent = await getBusEvent(requestID);\n  const BusData = await getBusData(requestID);\n  const BusArrivalTimes = await getBusArrivalTimes(300, 150);\n\n  const batchFoundBuses = batchFindBusesForRoute(BusEvent, BusData, Route, RouteID, PathAttributeId);\n\n  let hasSegmentBuffers: boolean = false;\n  let thisSegmentBuffers: SimplifiedSegmentBufferItem = {};\n  if (SegmentBuffers.hasOwnProperty(`r_${RouteID}`)) {\n    hasSegmentBuffers = true;\n    thisSegmentBuffers = SegmentBuffers[`r_${RouteID}`];\n  }\n\n  const time_formatting_mode = getSettingOptionValue('time_formatting_mode') as number;\n\n  let result = [];\n  let positions = [];\n\n  for (const item of EstimateTime) {\n    let integratedStopItem = {} as integratedStopItem;\n\n    const thisRouteID = item.RouteID;\n\n    // check whether this stop is on this route or not\n    if ([RouteID, RouteID * 10].includes(thisRouteID) || PathAttributeId.includes(thisRouteID)) {\n      // format status\n      integratedStopItem.status = parseEstimateTime(item?.EstimateTime, time_formatting_mode);\n\n      // collect data from 'Stop'\n      const thisStopKey = `s_${item.StopID}`;\n      let thisStop = {} as SimplifiedStopItem;\n      if (Stop.hasOwnProperty(thisStopKey)) {\n        thisStop = Stop[thisStopKey];\n      } else {\n        continue;\n      }\n      integratedStopItem.id = item.StopID;\n      integratedStopItem.sequence = thisStop.seqNo;\n      integratedStopItem.goBack = thisStop.goBack;\n\n      // collect data from 'Location'\n      const thisLocationKey = `l_${thisStop.stopLocationId}`;\n      let thisLocation = {} as SimplifiedLocationItem;\n      if (Location.hasOwnProperty(thisLocationKey)) {\n        thisLocation = Location[thisLocationKey];\n      } else {\n        continue;\n      }\n      integratedStopItem.name = thisLocation.n;\n      integratedStopItem.overlappingRoutes = thisLocation.r\n        .filter((id: number) => id !== RouteID)\n        .map((id: number) => {\n          const overlappingRouteKey = `r_${id}`;\n          if (Route.hasOwnProperty(overlappingRouteKey)) {\n            const overlappingRoute = Route[overlappingRouteKey] as SimplifiedRouteItem;\n            const formattedOverlappingRoute = {\n              name: overlappingRoute.n,\n              RouteEndPoints: {\n                RouteDeparture: overlappingRoute.dep,\n                RouteDestination: overlappingRoute.des,\n                text: `${overlappingRoute.dep} \\u2194 ${overlappingRoute.des}`, //u2194 -> '↔'\n                html: `<span>${overlappingRoute.dep}</span><span>\\u2194</span><span>${overlappingRoute.des}</span>`\n              },\n              RouteID: overlappingRoute.id,\n              PathAttributeId: overlappingRoute.pid\n            };\n            return formattedOverlappingRoute;\n          } else {\n            return null;\n          }\n        })\n        .filter((e) => {\n          return !(e === null);\n        });\n      integratedStopItem.position = {\n        longitude: thisLocation.lo,\n        latitude: thisLocation.la\n      };\n      positions.push({\n        latitude: thisLocation.la,\n        longitude: thisLocation.lo,\n        id: item.StopID\n      });\n\n      // collect data from 'batchFoundBuses'\n      let buses = []; // as  Array<FormattedBus>\n      for (var overlappingStopID of thisLocation.s) {\n        const overlappingStopKey = `s_${overlappingStopID}`;\n        if (batchFoundBuses.hasOwnProperty(overlappingStopKey)) {\n          buses.push(batchFoundBuses[overlappingStopKey].map((e) => formatBus(e)));\n        }\n      }\n      integratedStopItem.buses = buses.flat().sort(function (a, b) {\n        return a.index - b.index;\n      });\n\n      // collect data from 'BusArrivalTimes'\n      let thisBusArrivalTimes = [];\n      if (BusArrivalTimes.hasOwnProperty(thisStopKey)) {\n        thisBusArrivalTimes = BusArrivalTimes[thisStopKey];\n      }\n      integratedStopItem.busArrivalTimes = thisBusArrivalTimes;\n\n      // check whether this stop is segment buffer\n      let isSegmentBuffer: boolean = false;\n      let isStartingPoint: boolean = false;\n      let isEndingPoint: boolean = false;\n      let useReversed: boolean = false;\n      if (hasSegmentBuffers) {\n        const groupKey = `g_${integratedStopItem.goBack}`;\n        let segmentBufferGroup = [];\n\n        if (thisSegmentBuffers.hasOwnProperty(groupKey)) {\n          segmentBufferGroup = thisSegmentBuffers[groupKey];\n        } else {\n          if (integratedStopItem.goBack === '1') {\n            useReversed = true;\n            segmentBufferGroup = thisSegmentBuffers['g_0'];\n          }\n        }\n\n        for (const thisBufferZone of segmentBufferGroup) {\n          if (thisBufferZone.OriginStopID === item.StopID || thisBufferZone.DestinationStopID === item.StopID) {\n            isSegmentBuffer = true;\n          }\n          if (useReversed) {\n            if (thisBufferZone.OriginStopID === item.StopID) {\n              isEndingPoint = true;\n            }\n            if (thisBufferZone.DestinationStopID === item.StopID) {\n              isStartingPoint = true;\n            }\n          } else {\n            if (thisBufferZone.OriginStopID === item.StopID) {\n              isStartingPoint = true;\n            }\n            if (thisBufferZone.DestinationStopID === item.StopID) {\n              isEndingPoint = true;\n            }\n          }\n        }\n      }\n      integratedStopItem.segmentBuffer = {\n        isSegmentBuffer,\n        isStartingPoint,\n        isEndingPoint\n      };\n\n      result.push(integratedStopItem);\n    }\n  }\n\n  result.sort(function (a, b) {\n    return a.sequence - b.sequence;\n  });\n\n  const nearestPosition = getNearestPosition(positions, 450);\n\n  let isBufferZoneOpened: boolean = false;\n  let isBufferZoneClosed: boolean = false;\n\n  let groupedItems: { [key: string]: Array<integratedStopItem> } = {};\n  let groupQuantity: number = 0;\n  let itemQuantity: { [key: string]: number } = {};\n\n  const resultLength = result.length;\n\n  for (let index = 0; index < resultLength; index++) {\n    let item = result[index];\n    const nextItem = result[index + 1] || item;\n    let progress = 0;\n\n    if (item.buses.length > 0) {\n      if (item.buses[0].onThisRoute) {\n        const [x, y] = [item.buses[0].position.longitude, item.buses[0].position.latitude];\n        const [x1, y1] = [item.position.longitude, item.position.latitude];\n        const [x2, y2] = [nextItem.position.longitude, nextItem.position.latitude];\n        const dotProduct = (x - x1) * (x2 - x) + (y - y1) * (y2 - y);\n        if (dotProduct >= 0) {\n          // ensure that (x, y) is between (x1, y1) and (x2, y2)\n          const distance1 = Math.hypot(x - x1, y - y1);\n          const distance2 = Math.hypot(x - x2, y - y2);\n          progress = Math.max(0, Math.min(distance1 / (distance1 + distance2), 1));\n        }\n      }\n    }\n    item.progress = progress;\n\n    if (item.segmentBuffer.isStartingPoint) {\n      isBufferZoneOpened = true;\n    }\n\n    if (item.segmentBuffer.isEndingPoint) {\n      if (isBufferZoneOpened) {\n        isBufferZoneClosed = true;\n      }\n    }\n\n    if (isBufferZoneOpened && !isBufferZoneClosed) {\n      item.segmentBuffer.isSegmentBuffer = true;\n    }\n\n    if (isBufferZoneOpened && isBufferZoneClosed) {\n      isBufferZoneOpened = false;\n      isBufferZoneClosed = false;\n    }\n\n    let isNearest = false;\n    if (!(nearestPosition === null)) {\n      if (nearestPosition.id === item.id) {\n        isNearest = true;\n      }\n    }\n    item.nearest = isNearest;\n\n    const groupKey = `g_${item.goBack}` || 'g_0';\n\n    if (!groupedItems.hasOwnProperty(groupKey)) {\n      groupedItems[groupKey] = [];\n      itemQuantity[groupKey] = 0;\n      groupQuantity += 1;\n    }\n\n    groupedItems[groupKey].push(item);\n    itemQuantity[groupKey] += 1;\n  }\n\n  const thisRoute = Route[`r_${RouteID}`];\n  const thisRouteName = thisRoute.n;\n  const thisRouteDeparture = thisRoute.dep;\n  const thisRouteDestination = thisRoute.des;\n\n  const result2: IntegratedRoute = {\n    groupedItems: groupedItems,\n    groupQuantity: groupQuantity,\n    itemQuantity: itemQuantity,\n    RouteName: thisRouteName,\n    RouteEndPoints: {\n      RouteDeparture: thisRouteDeparture,\n      RouteDestination: thisRouteDestination\n    },\n    dataUpdateTime: getDataUpdateTime(requestID),\n    RouteID,\n    PathAttributeId\n  };\n\n  deleteDataReceivingProgress(requestID);\n  deleteDataUpdateTime(requestID);\n  //await recordEstimateTimeForUpdateRate(EstimateTime);\n  return result2;\n}\n","import { TimeMoment, parseTimeCode, TimeRange } from '../apis/index';\nimport { getProvider, Provider, ProviderItem } from '../apis/getProvider/index';\nimport { getRoute, Route, RouteItem } from '../apis/getRoute/index';\nimport { getSemiTimeTable } from '../apis/getSemiTimeTable/index';\nimport { getTimeTable } from '../apis/getTimeTable/index';\nimport { dateToString, dateValueToDayOfWeek, getThisWeekOrigin, offsetDate } from '../../tools/time';\nimport { MaterialSymbols } from '../../interface/icons/material-symbols-type';\nimport { deleteDataReceivingProgress, deleteDataUpdateTime } from '../apis/loader';\n\nfunction findRoute(Route: Route, RouteID: number): RouteItem {\n  let thisRoute = {} as RouteItem;\n  for (const item of Route) {\n    if (item.Id === RouteID) {\n      thisRoute = item;\n      break;\n    }\n  }\n  return thisRoute;\n}\n\nfunction findProvider(Provider: Provider, providerId: number): ProviderItem {\n  let thisProvider = {} as ProviderItem;\n  for (const item of Provider) {\n    if (item.id === providerId) {\n      thisProvider = item;\n    }\n  }\n  return thisProvider;\n}\n\nexport interface CalendarEvent {\n  date: Date;\n  dateString: string;\n  duration: number;\n  deviation: number;\n}\n\nexport type CalendarEventGroup = Array<CalendarEvent>;\n\nexport interface CalendarDay {\n  name: string;\n  day: number;\n  code: string;\n}\n\nexport interface Calendar {\n  calendarDays: {\n    [key: string]: CalendarDay;\n  };\n  calendarDayQuantity: 7;\n  calendarEventGroups: {\n    [key: string]: CalendarEventGroup;\n  };\n  calendarEventQuantity: {\n    [key: string]: number;\n  };\n}\n\nfunction generateCalendarFromTimeTables(RouteID: number, PathAttributeId: Array<number>, timeTableRules: object, SemiTimeTable: [], TimeTable: []): Calendar {\n  let calendar: Calendar = {\n    calendarDays: {\n      d_0: {\n        name: '日',\n        day: 0,\n        code: 'd_0'\n      },\n      d_1: {\n        name: '一',\n        day: 1,\n        code: 'd_1'\n      },\n      d_2: {\n        name: '二',\n        day: 2,\n        code: 'd_2'\n      },\n      d_3: {\n        name: '三',\n        day: 3,\n        code: 'd_3'\n      },\n      d_4: {\n        name: '四',\n        day: 4,\n        code: 'd_4'\n      },\n      d_5: {\n        name: '五',\n        day: 5,\n        code: 'd_5'\n      },\n      d_6: {\n        name: '六',\n        day: 6,\n        code: 'd_6'\n      }\n    },\n    calendarDayQuantity: 7,\n    calendarEventGroups: {\n      d_0: [],\n      d_1: [],\n      d_2: [],\n      d_3: [],\n      d_4: [],\n      d_5: [],\n      d_6: []\n    },\n    calendarEventQuantity: {\n      d_0: 0,\n      d_1: 0,\n      d_2: 0,\n      d_3: 0,\n      d_4: 0,\n      d_5: 0,\n      d_6: 0\n    }\n  };\n  const thisWeekOrigin = getThisWeekOrigin();\n  for (const item of SemiTimeTable) {\n    if (PathAttributeId.indexOf(item.PathAttributeId) > -1) {\n      if (item.DateType === '0') {\n        const dayOfWeek = dateValueToDayOfWeek(item.DateValue);\n        const thisDayOrigin = offsetDate(thisWeekOrigin, dayOfWeek.day, 0, 0);\n        const thisPeriodStartTime = parseTimeCode(item.StartTime, 0);\n        const thisPeriodStartTimeDateObject = offsetDate(thisDayOrigin, 0, thisPeriodStartTime.hours, thisPeriodStartTime.minutes);\n        const thisPeriodEndTime = parseTimeCode(item.EndTime, 0);\n        const thisPeriodEndTimeDateObject = offsetDate(thisDayOrigin, 0, thisPeriodEndTime.hours, thisPeriodEndTime.minutes);\n        const thisPeriodDurationInMinutes = Math.abs(thisPeriodEndTime.hours * 60 + thisPeriodEndTime.minutes - (thisPeriodStartTime.hours * 60 + thisPeriodStartTime.minutes));\n\n        const minWindow = parseInt(item.LongHeadway);\n        const maxWindow = parseInt(item.LowHeadway);\n        const averageWindow = (maxWindow + minWindow) / 2;\n        const headwayQuantity = thisPeriodDurationInMinutes / averageWindow;\n\n        for (let i = 0; i < headwayQuantity; i++) {\n          let violateRules = false;\n          const thisHeadwayDate = offsetDate(thisDayOrigin, 0, thisPeriodStartTime.hours, thisPeriodStartTime.minutes + maxWindow * i);\n          if (thisHeadwayDate.getTime() < thisPeriodStartTimeDateObject.getTime()) {\n            violateRules = true;\n          }\n          if (thisHeadwayDate.getTime() > thisPeriodEndTimeDateObject.getTime()) {\n            violateRules = true;\n          }\n          // TODO: check timeTableRules\n          if (violateRules === false) {\n            calendar.calendarEventGroups[dayOfWeek.code].push({\n              date: thisHeadwayDate,\n              dateString: dateToString(thisHeadwayDate, 'hh:mm'),\n              duration: maxWindow,\n              deviation: Math.abs(averageWindow - maxWindow)\n            });\n            calendar.calendarEventQuantity[dayOfWeek.code] += 1;\n          }\n        }\n      }\n    }\n  }\n  for (const item of TimeTable) {\n    if (PathAttributeId.indexOf(item.PathAttributeId) > -1) {\n      if (item.DateType === '0') {\n        let violateRules = false;\n        const dayOfWeek = dateValueToDayOfWeek(item.DateValue);\n        const thisDayOrigin = offsetDate(thisWeekOrigin, dayOfWeek.day, 0, 0);\n        const thisDepartureTime = parseTimeCode(item.DepartureTime, 0);\n        const thisHeadwayDate = offsetDate(thisDayOrigin, 0, thisDepartureTime.hours, thisDepartureTime.minutes);\n        // TODO: check timeTableRules\n        if (violateRules === false) {\n          calendar.calendarEventGroups[dayOfWeek.code].push({\n            date: thisHeadwayDate,\n            dateString: dateToString(thisHeadwayDate, 'hh:mm'),\n            duration: 15,\n            deviation: 0\n          });\n          calendar.calendarEventQuantity[dayOfWeek.code] += 1;\n        }\n      }\n    }\n  }\n  for (const code in calendar.calendarEventGroups) {\n    /* calendar.calendarEvents[code] = */ calendar.calendarEventGroups[code].sort(function (a, b) {\n      return a.date.getTime() - b.date.getTime();\n    });\n  }\n  return calendar;\n}\n\nexport interface TimeTableRules {\n  go: {\n    weekday: {\n      first: TimeMoment;\n      last: TimeMoment;\n      rushHourWindow: TimeRange;\n      offRushHourWindow: TimeRange;\n    };\n    holiday: {\n      first: TimeMoment;\n      last: TimeMoment;\n      rushHourWindow: TimeRange;\n      offRushHourWindow: TimeRange;\n    };\n  };\n  back: {\n    weekday: {\n      first: TimeMoment;\n      last: TimeMoment;\n      rushHourWindow: TimeRange;\n      offRushHourWindow: TimeRange;\n    };\n    holiday: {\n      first: TimeMoment;\n      last: TimeMoment;\n      rushHourWindow: TimeRange;\n      offRushHourWindow: TimeRange;\n    };\n  };\n  realSequence: any;\n}\n\nfunction getTimeTableRules(thisRoute: RouteItem): TimeTableRules {\n  const thisRouteGoFirstBusTime = parseTimeCode(thisRoute.goFirstBusTime, 0);\n  const thisRouteGoLastBusTime = parseTimeCode(thisRoute.goLastBusTime, 0);\n\n  const thisRouteBackFirstBusTime = parseTimeCode(thisRoute.backFirstBusTime, 0);\n  const thisRouteBackLastBusTime = parseTimeCode(thisRoute.backLastBusTime, 0);\n\n  const thisRouteGoFirstBusTimeOnHoliday = parseTimeCode(thisRoute.holidayGoFirstBusTime, 0);\n  const thisRouteGoLastBusTimeOnHoliday = parseTimeCode(thisRoute.holidayGoLastBusTime, 0);\n\n  const thisRouteBackFirstBusTimeOnHoliday = parseTimeCode(thisRoute.holidayBackFirstBusTime, 0);\n  const thisRouteBackLastBusTimeOnHoliday = parseTimeCode(thisRoute.holidayBackLastBusTime, 0);\n\n  const rushHourWindow = parseTimeCode(thisRoute.peakHeadway, 1);\n  const offRushHourWindow = parseTimeCode(thisRoute.offPeakHeadway, 1);\n\n  const rushHourWindowOnHoliday = parseTimeCode(thisRoute.holidayPeakHeadway, 1);\n  const offRushHourWindowOnHoliday = parseTimeCode(thisRoute.holidayOffPeakHeadway, 1);\n  // window → the interval/gap between arrivals of buses\n\n  var realSequence = thisRoute.realSequence;\n  return {\n    go: {\n      weekday: {\n        first: thisRouteGoFirstBusTime,\n        last: thisRouteGoLastBusTime,\n        rushHourWindow: rushHourWindow,\n        offRushHourWindow: offRushHourWindow\n      },\n      holiday: {\n        first: thisRouteGoFirstBusTimeOnHoliday,\n        last: thisRouteGoLastBusTimeOnHoliday,\n        rushHourWindow: rushHourWindowOnHoliday,\n        offRushHourWindow: offRushHourWindowOnHoliday\n      }\n    },\n    back: {\n      weekday: {\n        first: thisRouteBackFirstBusTime,\n        last: thisRouteBackLastBusTime,\n        rushHourWindow: rushHourWindow,\n        offRushHourWindow: offRushHourWindow\n      },\n      holiday: {\n        first: thisRouteBackFirstBusTimeOnHoliday,\n        last: thisRouteBackLastBusTimeOnHoliday,\n        rushHourWindow: rushHourWindowOnHoliday,\n        offRushHourWindow: offRushHourWindowOnHoliday\n      }\n    },\n    realSequence: realSequence\n  };\n}\n\nexport interface integratedRouteDetailsProperty {\n  key: string;\n  icon: MaterialSymbols;\n  value: string;\n}\n\nexport type integratedRouteDetailsProperties = Array<integratedRouteDetailsProperty>;\n\nexport interface integratedRouteDetails {\n  timeTableRules: TimeTableRules;\n  calendar: Calendar;\n  properties: integratedRouteDetailsProperties;\n}\n\nexport async function integrateRouteDetails(RouteID: number, PathAttributeId: Array<number>, requestID: string): Promise<integratedRouteDetails> {\n  const Route = (await getRoute(requestID, false)) as Route;\n  const thisRoute = findRoute(Route, RouteID);\n\n  const SemiTimeTable = await getSemiTimeTable(requestID);\n  const TimeTable = await getTimeTable(requestID);\n  const Provider = await getProvider(requestID);\n  const timeTableRules = getTimeTableRules(thisRoute);\n  const calendar = generateCalendarFromTimeTables(RouteID, PathAttributeId, timeTableRules, SemiTimeTable, TimeTable);\n  const thisProviderId = thisRoute.providerId;\n  const thisProvider = findProvider(Provider, thisProviderId);\n\n  const result: integratedRouteDetails = {\n    timeTableRules: timeTableRules,\n    calendar: calendar,\n    properties: [\n      {\n        key: 'route_name',\n        icon: 'route',\n        value: thisRoute.nameZh\n      },\n      {\n        key: 'pricing',\n        icon: 'attach_money',\n        value: thisRoute.ticketPriceDescriptionZh\n      },\n      {\n        key: 'provider_name',\n        icon: 'corporate_fare',\n        value: thisProvider.nameZn\n      },\n      {\n        key: 'provider_phone',\n        icon: 'call',\n        value: thisProvider.phoneInfo\n      },\n      {\n        key: 'provider_email',\n        icon: 'alternate_email',\n        value: thisProvider.email\n      }\n    ]\n  };\n  deleteDataReceivingProgress(requestID);\n  deleteDataUpdateTime(requestID);\n  return result;\n}\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_createForOfIteratorHelper","Array","isArray","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_n","F","asyncGeneratorStep","integrateRoute","_x","_x2","_x3","_integrateRoute","apply","arguments","_callee","RouteID","PathAttributeId","requestID","Route","Stop","Location","SegmentBuffers","EstimateTime","BusEvent","BusData","BusArrivalTimes","batchFoundBuses","hasSegmentBuffers","thisSegmentBuffers","time_formatting_mode","result","positions","_iterator","_step","_item","_integratedStopItem","thisRouteID","thisStopKey","thisStop","thisLocationKey","thisLocation","buses","_iterator2","_step2","overlappingStopID","overlappingStopKey","thisBusArrivalTimes","isSegmentBuffer","isStartingPoint","isEndingPoint","useReversed","_groupKey","segmentBufferGroup","_iterator3","_step3","thisBufferZone","nearestPosition","isBufferZoneOpened","isBufferZoneClosed","groupedItems","groupQuantity","itemQuantity","resultLength","index","item","nextItem","progress","_ref","x","_ref2","x1","y1","_ref3","x2","y2","distance1","distance2","isNearest","groupKey","thisRoute","thisRouteName","thisRouteDeparture","thisRouteDestination","result2","_context","setDataReceivingProgress","getRoute","getStop","getLocation","getSegmentBuffers","getEstimateTime","getBusEvent","getBusData","getBusArrivalTimes","batchFindBusesForRoute","concat","getSettingOptionValue","integratedStopItem","includes","status","parseEstimateTime","StopID","id","sequence","seqNo","goBack","stopLocationId","overlappingRoutes","filter","map","overlappingRouteKey","overlappingRoute","RouteEndPoints","RouteDeparture","dep","RouteDestination","des","text","html","pid","position","longitude","lo","latitude","la","formatBus","err","flat","sort","b","busArrivalTimes","OriginStopID","DestinationStopID","segmentBuffer","t0","getNearestPosition","onThisRoute","Math","hypot","max","min","nearest","RouteName","dataUpdateTime","getDataUpdateTime","deleteDataReceivingProgress","deleteDataUpdateTime","_next","_throw","findRoute","Id","findProvider","Provider","providerId","thisProvider","generateCalendarFromTimeTables","timeTableRules","SemiTimeTable","TimeTable","calendar","calendarDays","d_0","day","code","d_1","d_2","d_3","d_4","d_5","d_6","calendarDayQuantity","calendarEventGroups","calendarEventQuantity","thisWeekOrigin","getThisWeekOrigin","indexOf","DateType","dayOfWeek","dateValueToDayOfWeek","DateValue","thisDayOrigin","offsetDate","thisPeriodStartTime","parseTimeCode","StartTime","thisPeriodStartTimeDateObject","hours","minutes","thisPeriodEndTime","EndTime","thisPeriodEndTimeDateObject","thisPeriodDurationInMinutes","abs","minWindow","parseInt","LongHeadway","maxWindow","LowHeadway","averageWindow","headwayQuantity","violateRules","thisHeadwayDate","getTime","date","dateString","dateToString","duration","deviation","_step4","_iterator4","thisDepartureTime","DepartureTime","getTimeTableRules","thisRouteGoFirstBusTime","goFirstBusTime","thisRouteGoLastBusTime","goLastBusTime","thisRouteBackFirstBusTime","backFirstBusTime","thisRouteBackLastBusTime","backLastBusTime","thisRouteGoFirstBusTimeOnHoliday","holidayGoFirstBusTime","thisRouteGoLastBusTimeOnHoliday","holidayGoLastBusTime","thisRouteBackFirstBusTimeOnHoliday","holidayBackFirstBusTime","thisRouteBackLastBusTimeOnHoliday","holidayBackLastBusTime","rushHourWindow","peakHeadway","offRushHourWindow","offPeakHeadway","rushHourWindowOnHoliday","holidayPeakHeadway","offRushHourWindowOnHoliday","holidayOffPeakHeadway","go","weekday","first","last","holiday","back","realSequence","integrateRouteDetails","_integrateRouteDetails","thisProviderId","getSemiTimeTable","getTimeTable","getProvider","properties","key","icon","nameZh","ticketPriceDescriptionZh","nameZn","phoneInfo","email"],"sourceRoot":""}