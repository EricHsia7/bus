{"version":3,"file":"0973c752424ab307115c.js","mappings":"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","sources":["webpack://bus/./src/interface/route/index.ts"],"sourcesContent":["import { getUpdateRate } from '../../data/analytics/update-rate/index';\nimport { DataReceivingProgressEvent } from '../../data/apis/loader';\nimport { isFolderContentSaved } from '../../data/folder/index';\nimport { stopHasNotifcationSchedules } from '../../data/notification/index';\nimport { logRecentView } from '../../data/recent-views/index';\nimport { IntegratedRoute, integratedStopItem, integrateRoute } from '../../data/route/index';\nimport { getSettingOptionValue, SettingSelectOptionRefreshIntervalValue } from '../../data/settings/index';\nimport { getTextWidth } from '../../tools/graphic';\nimport { booleanToString, compareThings, generateIdentifier } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll, getElementsBelow } from '../../tools/query-selector';\nimport { indexToDay, timeObjectToString } from '../../tools/time';\nimport { getIconHTML } from '../icons/index';\nimport { closePreviousPage, GeneratedElement, GroupStyles, openPreviousPage, pushPageHistory, querySize } from '../index';\nimport { promptMessage } from '../prompt/index';\nimport { openSaveToFolder } from '../save-to-folder/index';\nimport { openScheduleNotification } from '../schedule-notification/index';\nimport { openRouteDetails } from './details/index';\n\nconst RouteField = documentQuerySelector('.css_route_field');\nconst RouteHeadElement = elementQuerySelector(RouteField, '.css_route_head');\nconst RouteNameElement = elementQuerySelector(RouteHeadElement, '.css_route_name');\nconst RouteButtonRightElement = elementQuerySelector(RouteHeadElement, '.css_route_button_right');\nconst RouteUpdateTimerElement = elementQuerySelector(RouteHeadElement, '.css_route_update_timer_box .css_route_update_timer');\nconst RouteGroupTabsElement = elementQuerySelector(RouteHeadElement, '.css_route_group_tabs');\nconst RouteGroupTabsTrayElement = elementQuerySelector(RouteGroupTabsElement, '.css_route_group_tabs_tray');\nconst RouteGroupTabLineTrackElement = elementQuerySelector(RouteHeadElement, '.css_route_group_tab_line_track');\nconst RouteGroupTabLineElement = elementQuerySelector(RouteGroupTabLineTrackElement, '.css_route_group_tab_line');\nconst RouteGroupsElement = elementQuerySelector(RouteField, '.css_route_groups');\n\nlet previousIntegration = {} as IntegratedRoute;\nlet previousAnimation: boolean = true;\nlet previousSkeletonScreen: boolean = false;\n\nlet routeSliding_initialIndex: number = 0;\nlet routeSliding_targetIndex: number = 0;\nlet routeSliding_groupQuantity: number = 0;\nlet routeSliding_groupStyles: GroupStyles = {};\nlet routeSliding_fieldWidth: number = 0;\nlet routeSliding_fieldHeight: number = 0;\nlet routeSliding_sliding: boolean = false;\n\nlet routeRefreshTimer_retryInterval: number = 10 * 1000;\nlet routeRefreshTimer_baseInterval: number = 15 * 1000;\nlet routeRefreshTimer_minInterval: number = 5 * 1000;\nlet routeRefreshTimer_dynamicInterval: number = 15 * 1000;\nlet routeRefreshTimer_dynamic: boolean = true;\nlet routeRefreshTimer_lastUpdate: number = 0;\nlet routeRefreshTimer_nextUpdate: number = 0;\nlet routeRefreshTimer_currentRequestID: string = '';\nlet routeRefreshTimer_refreshing: boolean = false;\nlet routeRefreshTimer_streaming: boolean = false;\nlet routeRefreshTimer_streamStarted: boolean = false;\n\nlet currentRouteIDSet_RouteID: number = 0;\nlet currentRouteIDSet_PathAttributeId: Array<number> = [];\n\nlet tabPadding: number = 20;\n\nexport function initializeRouteSliding(): void {\n  RouteGroupsElement.addEventListener(\n    'touchstart',\n    function () {\n      routeSliding_initialIndex = Math.round(RouteGroupsElement.scrollLeft / routeSliding_fieldWidth);\n    },\n    { passive: true }\n  );\n\n  RouteGroupsElement.addEventListener(\n    'scroll',\n    function (event: Event) {\n      routeSliding_sliding = true;\n      const target = event.target as HTMLElement;\n      const currentIndex = target.scrollLeft / routeSliding_fieldWidth;\n      if (currentIndex > routeSliding_initialIndex) {\n        routeSliding_targetIndex = routeSliding_initialIndex + 1;\n      } else {\n        routeSliding_targetIndex = routeSliding_initialIndex - 1;\n      }\n      const initialSize = routeSliding_groupStyles[`g_${routeSliding_initialIndex}`] || { width: 0, offset: 0 };\n      const targetSize = routeSliding_groupStyles[`g_${routeSliding_targetIndex}`] || { width: 0, offset: 0 };\n      const tabWidth = initialSize.width + (targetSize.width - initialSize.width) * Math.abs(currentIndex - routeSliding_initialIndex);\n      const offset = (initialSize.offset + (targetSize.offset - initialSize.offset) * Math.abs(currentIndex - routeSliding_initialIndex)) * -1 + routeSliding_fieldWidth * 0.5 - tabWidth * 0.5;\n\n      updateRouteCSS(routeSliding_groupQuantity, offset, tabWidth - tabPadding, currentIndex);\n\n      if (currentIndex === routeSliding_targetIndex) {\n        routeSliding_initialIndex = Math.round(RouteGroupsElement.scrollLeft / routeSliding_fieldWidth);\n        routeSliding_sliding = false;\n      }\n    },\n    { passive: true }\n  );\n}\n\nexport function updateRouteCSS(groupQuantity: number, offset: number, tabLineWidth: number, percentage: number): void {\n  RouteGroupsElement.style.setProperty('--b-cssvar-route-group-quantity', groupQuantity.toString());\n  RouteGroupTabLineElement.style.setProperty('--b-cssvar-route-tab-line-width-scale', tabLineWidth.toString());\n  RouteGroupTabsTrayElement.style.setProperty('--b-cssvar-route-tabs-tray-offset', `${offset.toFixed(5)}px`);\n  RouteGroupTabsTrayElement.style.setProperty('--b-cssvar-route-percentage', percentage.toFixed(5));\n}\n\nfunction animateUpdateTimer(): void {\n  RouteUpdateTimerElement.style.setProperty('--b-cssvar-route-update-timer-interval', `${routeRefreshTimer_dynamicInterval}ms`);\n  RouteUpdateTimerElement.classList.add('css_route_update_timer_slide_rtl');\n}\n\nfunction handleDataReceivingProgressUpdates(event: Event): void {\n  const CustomEvent = event as DataReceivingProgressEvent;\n  if (routeRefreshTimer_refreshing) {\n    const offsetRatio = CustomEvent.detail.progress - 1;\n    RouteUpdateTimerElement.style.setProperty('--b-cssvar-route-update-timer-offset-ratio', offsetRatio.toString());\n  }\n  if (CustomEvent.detail.stage === 'end') {\n    document.removeEventListener(CustomEvent.detail.target, handleDataReceivingProgressUpdates);\n  }\n}\n\nfunction generateElementOfThreadBox(): GeneratedElement {\n  const identifier = generateIdentifier();\n  const element = document.createElement('div');\n  element.classList.add('css_route_group_thread_box');\n  element.id = identifier;\n  element.setAttribute('stretched', 'false');\n  element.setAttribute('stretching', 'false');\n  element.setAttribute('push-direction', '0'); // 0: normal state, 1: downward, 2: upward\n  element.setAttribute('push-state', '0'); // 0: normal state, 1: compensation , 2: transition\n  element.innerHTML = /*html*/ `<div class=\"css_route_group_thread\"><div class=\"css_route_group_thread_progress\" displayed=\"false\"></div></div><div class=\"css_route_group_thread_status\"><div class=\"css_next_slide\" code=\"0\" displayed=\"false\"></div><div class=\"css_current_slide\" code=\"0\" displayed=\"true\"></div></div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction generateElementOfItem(threadBoxIdentifier: string): GeneratedElement {\n  const identifier = generateIdentifier();\n\n  // Main item element\n  const itemElement = document.createElement('div');\n  itemElement.classList.add('css_route_group_item');\n  itemElement.id = identifier;\n  itemElement.setAttribute('stretched', 'false');\n  itemElement.setAttribute('stretching', 'false');\n  itemElement.setAttribute('push-direction', '0');\n  itemElement.setAttribute('push-state', '0');\n\n  // Head\n  const headElement = document.createElement('div');\n  headElement.classList.add('css_route_group_item_head');\n\n  // Name\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_route_group_item_name');\n  headElement.appendChild(nameElement);\n\n  // Capsule\n  const capsuleElement = document.createElement('div');\n  capsuleElement.classList.add('css_route_group_item_capsule');\n\n  // Status\n  const statusElement = document.createElement('div');\n  statusElement.classList.add('css_route_group_item_status');\n\n  const nextSlideElement = document.createElement('div');\n  nextSlideElement.classList.add('css_next_slide');\n  nextSlideElement.setAttribute('code', '0');\n  nextSlideElement.setAttribute('displayed', 'false');\n  statusElement.appendChild(nextSlideElement);\n\n  const currentSlideElement = document.createElement('div');\n  currentSlideElement.classList.add('css_current_slide');\n  currentSlideElement.setAttribute('code', '0');\n  currentSlideElement.setAttribute('displayed', 'true');\n  statusElement.appendChild(currentSlideElement);\n\n  capsuleElement.appendChild(statusElement);\n\n  // Stretch button\n  const stretchElement = document.createElement('div');\n  stretchElement.classList.add('css_route_group_item_stretch');\n  stretchElement.innerHTML = getIconHTML('keyboard_arrow_down');\n  stretchElement.onclick = () => {\n    stretchRouteItem(identifier, threadBoxIdentifier);\n  };\n  capsuleElement.appendChild(stretchElement);\n\n  // Capsule separator\n  const capsuleSeparatorElement = document.createElement('div');\n  capsuleSeparatorElement.classList.add('css_route_group_item_capsule_separator');\n  capsuleElement.appendChild(capsuleSeparatorElement);\n\n  headElement.appendChild(capsuleElement);\n\n  // Body\n  const bodyElement = document.createElement('div');\n  bodyElement.classList.add('css_route_group_item_body');\n  bodyElement.setAttribute('displayed', 'false');\n\n  // Buttons\n  const buttonsElement = document.createElement('div');\n  buttonsElement.classList.add('css_route_group_item_buttons');\n\n  // Tab: 公車\n  const tabBusElement = document.createElement('div');\n  tabBusElement.classList.add('css_route_group_item_button');\n  tabBusElement.setAttribute('highlighted', 'true');\n  tabBusElement.setAttribute('type', 'tab');\n  tabBusElement.setAttribute('code', '0');\n  tabBusElement.onclick = () => {\n    switchRouteBodyTab(identifier, 0);\n  };\n\n  const tabBusIconElement = document.createElement('div');\n  tabBusIconElement.classList.add('css_route_group_item_button_icon');\n  tabBusIconElement.innerHTML = getIconHTML('directions_bus');\n  tabBusElement.appendChild(tabBusIconElement);\n  tabBusElement.appendChild(document.createTextNode('公車'));\n  buttonsElement.appendChild(tabBusElement);\n\n  // Tab: 抵達時間\n  const tabArrivalElement = document.createElement('div');\n  tabArrivalElement.classList.add('css_route_group_item_button');\n  tabArrivalElement.setAttribute('highlighted', 'false');\n  tabArrivalElement.setAttribute('type', 'tab');\n  tabArrivalElement.setAttribute('code', '1');\n  tabArrivalElement.onclick = () => {\n    switchRouteBodyTab(identifier, 1);\n  };\n\n  const tabArrivalIconElement = document.createElement('div');\n  tabArrivalIconElement.classList.add('css_route_group_item_button_icon');\n  tabArrivalIconElement.innerHTML = getIconHTML('departure_board');\n  tabArrivalElement.appendChild(tabArrivalIconElement);\n  tabArrivalElement.appendChild(document.createTextNode('抵達時間'));\n  buttonsElement.appendChild(tabArrivalElement);\n\n  // Tab: 路線\n  const tabRouteElement = document.createElement('div');\n  tabRouteElement.classList.add('css_route_group_item_button');\n  tabRouteElement.setAttribute('highlighted', 'false');\n  tabRouteElement.setAttribute('type', 'tab');\n  tabRouteElement.setAttribute('code', '2');\n  tabRouteElement.onclick = () => {\n    switchRouteBodyTab(identifier, 2);\n  };\n\n  const tabRouteIconElement = document.createElement('div');\n  tabRouteIconElement.classList.add('css_route_group_item_button_icon');\n  tabRouteIconElement.innerHTML = getIconHTML('route');\n  tabRouteElement.appendChild(tabRouteIconElement);\n  tabRouteElement.appendChild(document.createTextNode('路線'));\n  buttonsElement.appendChild(tabRouteElement);\n\n  // Tab: 地點\n  const tabLocationElement = document.createElement('div');\n  tabLocationElement.classList.add('css_route_group_item_button');\n  tabLocationElement.setAttribute('highlighted', 'false');\n  tabLocationElement.setAttribute('type', 'tab');\n  tabLocationElement.setAttribute('code', '3');\n  tabLocationElement.onclick = () => {\n    switchRouteBodyTab(identifier, 3);\n  };\n\n  const tabLocationIconElement = document.createElement('div');\n  tabLocationIconElement.classList.add('css_route_group_item_button_icon');\n  tabLocationIconElement.innerHTML = getIconHTML('location_on');\n  tabLocationElement.appendChild(tabLocationIconElement);\n  tabLocationElement.appendChild(document.createTextNode('地點'));\n  buttonsElement.appendChild(tabLocationElement);\n\n  // Save to folder\n  const saveToFolderElement = document.createElement('div');\n  saveToFolderElement.classList.add('css_route_group_item_button');\n  saveToFolderElement.setAttribute('highlighted', 'false');\n  saveToFolderElement.setAttribute('type', 'save-to-folder');\n  /*\n  saveToFolderElement.onclick = () => {\n    openSaveToFolder('stop-on-route', [identifier, null, null]);\n  };\n  */\n\n  const saveToFolderIconElement = document.createElement('div');\n  saveToFolderIconElement.classList.add('css_route_group_item_button_icon');\n  saveToFolderIconElement.innerHTML = getIconHTML('folder');\n  saveToFolderElement.appendChild(saveToFolderIconElement);\n  saveToFolderElement.appendChild(document.createTextNode('儲存'));\n  buttonsElement.appendChild(saveToFolderElement);\n\n  // Schedule notification\n  const scheduleNotificationElement = document.createElement('div');\n  scheduleNotificationElement.classList.add('css_route_group_item_button');\n  scheduleNotificationElement.setAttribute('highlighted', 'false');\n  scheduleNotificationElement.setAttribute('type', 'schedule-notification');\n  scheduleNotificationElement.setAttribute('enabled', 'true');\n  /*\n  scheduleNotificationElement.onclick = () => {\n    openScheduleNotification('stop-on-route', [identifier, null, null, null]);\n  };\n  */\n\n  const scheduleNotificationIconElement = document.createElement('div');\n  scheduleNotificationIconElement.classList.add('css_route_group_item_button_icon');\n  scheduleNotificationIconElement.innerHTML = getIconHTML('notifications');\n  scheduleNotificationElement.appendChild(scheduleNotificationIconElement);\n  scheduleNotificationElement.appendChild(document.createTextNode('到站通知'));\n  buttonsElement.appendChild(scheduleNotificationElement);\n\n  bodyElement.appendChild(buttonsElement);\n\n  // Buses\n  const busesElement = document.createElement('div');\n  busesElement.classList.add('css_route_group_item_buses');\n  busesElement.setAttribute('displayed', 'true');\n  bodyElement.appendChild(busesElement);\n\n  // Overlapping routes\n  const overlappingRoutesElement = document.createElement('div');\n  overlappingRoutesElement.classList.add('css_route_group_item_overlapping_routes');\n  overlappingRoutesElement.setAttribute('displayed', 'false');\n  bodyElement.appendChild(overlappingRoutesElement);\n\n  // Bus arrival times\n  const busArrivalTimesElement = document.createElement('div');\n  busArrivalTimesElement.classList.add('css_route_group_item_bus_arrival_times');\n  busArrivalTimesElement.setAttribute('displayed', 'false');\n  bodyElement.appendChild(busArrivalTimesElement);\n\n  // Nearby locations\n  const nearbyLocationsElement = document.createElement('div');\n  nearbyLocationsElement.classList.add('css_route_group_item_nearby_locations');\n  nearbyLocationsElement.setAttribute('displayed', 'false');\n  bodyElement.appendChild(nearbyLocationsElement);\n\n  // Assemble\n  itemElement.appendChild(headElement);\n  itemElement.appendChild(bodyElement);\n\n  return {\n    element: itemElement,\n    id: identifier\n  };\n}\n\nfunction generateElementOfGroup(): GeneratedElement {\n  const element = document.createElement('div');\n  element.classList.add('css_route_group');\n\n  const tracksElement = document.createElement('div');\n  tracksElement.classList.add('css_route_group_tracks');\n\n  const threadTrackElement = document.createElement('div');\n  threadTrackElement.classList.add('css_route_group_threads_track');\n\n  const threadBoxSpace = document.createElement('div');\n  threadBoxSpace.classList.add('css_route_group_thread_box_space_top');\n\n  const itemsTrackElement = document.createElement('div');\n  itemsTrackElement.classList.add('css_route_group_items_track');\n\n  const itemSpaceElement = document.createElement('div');\n  itemSpaceElement.classList.add('css_route_group_item_space_top');\n\n  itemsTrackElement.appendChild(itemSpaceElement);\n  threadTrackElement.appendChild(threadBoxSpace);\n  tracksElement.appendChild(threadTrackElement);\n  tracksElement.appendChild(itemsTrackElement);\n  element.appendChild(tracksElement);\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nfunction generateElementOfTab(): GeneratedElement {\n  const element = document.createElement('div');\n  element.classList.add('css_route_group_tab');\n\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nfunction setUpRouteFieldSkeletonScreen(): void {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const WindowSize = querySize('window');\n  const FieldWidth = WindowSize.width;\n  const FieldHeight = WindowSize.height;\n  const defaultItemQuantity: number = Math.floor(FieldHeight / 50) + 5;\n  const defaultGroupQuantity = 2;\n  let groupedItems: IntegratedRoute['groupedItems'] = {};\n  for (let i = 0; i < defaultGroupQuantity; i++) {\n    const groupKey: string = `g_${i}`;\n    groupedItems[groupKey] = [];\n    for (let j = 0; j < defaultItemQuantity; j++) {\n      groupedItems[groupKey].push({\n        name: '',\n        goBack: '0',\n        status: { code: 8, text: '', time: -6 },\n        buses: [],\n        overlappingRoutes: [],\n        busArrivalTimes: [],\n        nearbyLocations: [],\n        sequence: j,\n        position: {\n          longitude: 0,\n          latitude: 0\n        },\n        nearest: false,\n        progress: 0,\n        segmentBuffer: {\n          isSegmentBuffer: false,\n          isStartingPoint: false,\n          isEndingPoint: false\n        },\n        id: 0\n      });\n    }\n  }\n  updateRouteField(\n    {\n      groupedItems: groupedItems,\n      groupQuantity: defaultGroupQuantity,\n      itemQuantity: {\n        g_0: defaultItemQuantity,\n        g_1: defaultItemQuantity\n      },\n      RouteName: '載入中',\n      RouteEndPoints: {\n        RouteDeparture: '載入中',\n        RouteDestination: '載入中'\n      },\n      RouteID: 0,\n      PathAttributeId: [],\n      dataUpdateTime: 0\n    },\n    true,\n    playing_animation\n  );\n}\n\nfunction updateRouteField(integration: IntegratedRoute, skeletonScreen: boolean, animation: boolean): void {\n  function updateItem(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem, previousItem: integratedStopItem | null, skeletonScreen: boolean, animation: boolean): void {\n    function updateStatus(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem, skeletonScreen: boolean, animation: boolean): void {\n      const thisThreadStatusElement = elementQuerySelector(thisThreadBoxElement, '.css_route_group_thread_status');\n      const currentThreadSlideElement = elementQuerySelector(thisThreadStatusElement, '.css_current_slide');\n      const nextThreadSlideElement = elementQuerySelector(thisThreadStatusElement, '.css_next_slide');\n\n      const thisItemStatusElement = elementQuerySelector(thisItemElement, '.css_route_group_item_status');\n      const currentItemSlideElement = elementQuerySelector(thisItemStatusElement, '.css_current_slide');\n      const nextItemSlideElememt = elementQuerySelector(thisItemStatusElement, '.css_next_slide');\n\n      nextThreadSlideElement.setAttribute('code', thisItem.status.code.toString());\n\n      nextItemSlideElememt.setAttribute('code', thisItem.status.code.toString());\n      nextItemSlideElememt.innerText = thisItem.status.text;\n\n      if (!skeletonScreen) {\n        if (animation) {\n          const thisItemElementRect = thisItemElement.getBoundingClientRect();\n          const top = thisItemElementRect.top;\n          const left = thisItemElementRect.left;\n          const bottom = thisItemElementRect.bottom;\n          const right = thisItemElementRect.right;\n          const windowWidth = window.innerWidth;\n          const windowHeight = window.innerHeight;\n          if (bottom > 0 && top < windowHeight && right > 0 && left < windowWidth) {\n            currentThreadSlideElement.addEventListener(\n              'animationend',\n              function () {\n                currentThreadSlideElement.setAttribute('code', thisItem.status.code.toString());\n                currentThreadSlideElement.classList.remove('css_slide_fade_out');\n                nextThreadSlideElement.setAttribute('displayed', 'false');\n              },\n              { once: true }\n            );\n            currentItemSlideElement.addEventListener(\n              'animationend',\n              function () {\n                currentItemSlideElement.setAttribute('code', thisItem.status.code.toString());\n                currentItemSlideElement.innerText = thisItem.status.text;\n                currentItemSlideElement.classList.remove('css_slide_fade_out');\n                nextItemSlideElememt.setAttribute('displayed', 'false');\n              },\n              { once: true }\n            );\n            nextItemSlideElememt.setAttribute('displayed', 'true');\n            nextThreadSlideElement.setAttribute('displayed', 'true');\n            currentThreadSlideElement.classList.add('css_slide_fade_out');\n            currentItemSlideElement.classList.add('css_slide_fade_out');\n            return;\n          }\n        }\n      }\n\n      currentThreadSlideElement.setAttribute('code', thisItem.status.code.toString());\n      currentItemSlideElement.setAttribute('code', thisItem.status.code.toString());\n      currentItemSlideElement.innerText = thisItem.status.text;\n    }\n\n    function updateSegmentBuffer(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem): void {\n      thisItemElement.setAttribute('segment-buffer', booleanToString(thisItem.segmentBuffer.isSegmentBuffer));\n      thisThreadBoxElement.setAttribute('segment-buffer', booleanToString(thisItem.segmentBuffer.isSegmentBuffer));\n    }\n\n    function updateName(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_name').innerText = thisItem.name;\n    }\n\n    function updateBuses(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_buses').innerHTML = thisItem.buses.length === 0 ? '<div class=\"css_route_group_item_buses_message\">目前沒有公車可顯示</div>' : thisItem.buses.map((bus) => `<div class=\"css_route_group_item_bus\" on-this-route=\"${bus.onThisRoute}\"><div class=\"css_route_group_item_bus_title\"><div class=\"css_route_group_item_bus_icon\">${getIconHTML('directions_bus')}</div><div class=\"css_route_group_item_bus_car_number\">${bus.carNumber}</div></div><div class=\"css_route_group_item_bus_attributes\"><div class=\"css_route_group_item_bus_route\">路線：${bus.RouteName}</div><div class=\"css_route_group_item_bus_car_status\">狀態：${bus.status.text}</div><div class=\"css_route_group_item_bus_car_type\">類型：${bus.type}</div></div></div>`).join('');\n    }\n\n    function updateOverlappingRoutes(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_overlapping_routes').innerHTML = thisItem.overlappingRoutes.length === 0 ? '<div class=\"css_route_group_item_overlapping_route_message\">目前沒有路線可顯示</div>' : thisItem.overlappingRoutes.map((route) => `<div class=\"css_route_group_item_overlapping_route\"><div class=\"css_route_group_item_overlapping_route_title\"><div class=\"css_route_group_item_overlapping_route_icon\">${getIconHTML('route')}</div><div class=\"css_route_group_item_overlapping_route_name\">${route.name}</div></div><div class=\"css_route_group_item_overlapping_route_endpoints\">${route.RouteEndPoints.html}</div><div class=\"css_route_group_item_overlapping_route_actions\"><div class=\"css_route_group_item_overlapping_route_action_button\" onclick=\"bus.route.switchRoute(${route.RouteID}, [${route.PathAttributeId.join(',')}])\">查看路線</div><div class=\"css_route_group_item_overlapping_route_action_button\" onclick=\"bus.folder.openSaveToFolder('route-on-route', [${route.RouteID}])\">收藏路線</div></div></div>`).join('');\n    }\n\n    function updateBusArrivalTimes(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_bus_arrival_times').innerHTML = thisItem.busArrivalTimes.length === 0 ? '<div class=\"css_route_group_item_bus_arrival_message\">目前沒有抵達時間可顯示</div>' : thisItem.busArrivalTimes.map((busArrivalTime) => `<div class=\"css_route_group_item_bus_arrival_time\"><div class=\"css_route_group_item_bus_arrival_time_title\"><div class=\"css_route_group_item_bus_arrival_time_icon\">${getIconHTML('calendar_view_day')}</div><div class=\"css_route_group_item_bus_arrival_time_personal_schedule_name\">${busArrivalTime.personalSchedule.name}</div><div class=\"css_route_group_item_bus_arrival_time_personal_schedule_time\">週${indexToDay(busArrivalTime.day).name} ${timeObjectToString(busArrivalTime.personalSchedule.period.start)} - ${timeObjectToString(busArrivalTime.personalSchedule.period.end)}</div></div><div class=\"css_route_group_item_bus_arrival_time_chart\">${busArrivalTime.chart}</div></div>`).join('');\n    }\n\n    function updateNearbyLocations(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_nearby_locations').innerHTML = thisItem.nearbyLocations.length === 0 ? '<div class=\"css_route_group_item_nearby_locations_message\">目前沒有地點可顯示</div>' : thisItem.nearbyLocations.map((nearbyLocation) => `<div class=\"css_route_group_item_nearby_location\"><div class=\"css_route_group_item_nearby_location_title\"><div class=\"css_route_group_item_nearby_location_icon\">${getIconHTML('location_on')}</div><div class=\"css_route_group_item_nearby_location_name\">${nearbyLocation.name}</div></div><div class=\"css_route_group_item_nearby_location_distance\">${nearbyLocation.distance}公尺</div><div class=\"css_route_group_item_nearby_location_actions\"><div class=\"css_route_group_item_nearby_location_action_button\" onclick=\"bus.location.openLocation('${nearbyLocation.hash}')\">查看地點</div><div class=\"css_route_group_item_nearby_location_action_button\">收藏地點</div></div></div>`).join('');\n    }\n\n    function updateNearest(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem): void {\n      thisItemElement.setAttribute('nearest', booleanToString(thisItem.nearest));\n      thisThreadBoxElement.setAttribute('nearest', booleanToString(thisItem.nearest));\n    }\n\n    function updateThread(thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem, previousItem: integratedStopItem | null, skeletonScreen: boolean, animation: boolean): void {\n      const previousProgress = previousItem?.progress || 0;\n      const thisProgress = thisItem?.progress || 0;\n      const thisThreadProgressElement = elementQuerySelector(thisThreadBoxElement, '.css_route_group_thread .css_route_group_thread_progress');\n      if (!skeletonScreen) {\n        if (animation) {\n          if (previousProgress !== 0 && thisProgress === 0 && Math.abs(thisProgress - previousProgress) > 0) {\n            thisThreadProgressElement.style.setProperty('--b-cssvar-thread-progress-translate-y', '100%');\n            thisThreadProgressElement.addEventListener(\n              'transitionend',\n              function () {\n                thisThreadProgressElement.setAttribute('displayed', 'false');\n                thisThreadProgressElement.style.setProperty('--b-cssvar-thread-progress-translate-y', '-100%');\n              },\n              { once: true }\n            );\n            return;\n          }\n        }\n      }\n      if (thisProgress > 0) {\n        thisThreadProgressElement.setAttribute('displayed', 'true');\n        thisThreadProgressElement.style.setProperty('--b-cssvar-thread-progress-translate-y', `${(thisProgress - 1) * 100}%`);\n      } else {\n        thisThreadProgressElement.setAttribute('displayed', 'false');\n      }\n    }\n\n    function updateStretch(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, skeletonScreen: boolean): void {\n      if (skeletonScreen) {\n        const thisItemBodyElement = elementQuerySelector(thisItemElement, '.css_route_group_item_body');\n        thisItemBodyElement.setAttribute('displayed', 'false');\n        thisItemElement.setAttribute('stretched', 'false');\n        thisThreadBoxElement.setAttribute('stretched', 'false');\n      }\n    }\n\n    function updateAnimation(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, animation: boolean): void {\n      thisItemElement.setAttribute('animation', booleanToString(animation));\n      thisThreadBoxElement.setAttribute('animation', booleanToString(animation));\n    }\n\n    function updateSkeletonScreen(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, skeletonScreen: boolean): void {\n      thisItemElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n      thisThreadBoxElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    }\n\n    function updateSaveToFolderButton(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      const saveToFolderButtonElement = elementQuerySelector(thisItemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"save-to-folder\"]');\n      saveToFolderButtonElement.onclick = function () {\n        openSaveToFolder('stop-on-route', [thisItemElement.id, thisItem.id, integration.RouteID]);\n      };\n      isFolderContentSaved('stop', thisItem.id).then((e) => {\n        saveToFolderButtonElement.setAttribute('highlighted', booleanToString(e));\n      });\n    }\n\n    function updateScheduleNotificationButton(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      const scheduleNotificationButtonElement = elementQuerySelector(thisItemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"schedule-notification\"]');\n      scheduleNotificationButtonElement.onclick = function () {\n        openScheduleNotification('stop-on-route', [thisItemElement.id, thisItem.id, integration.RouteID, thisItem.status.time]);\n      };\n      const havingNotifcationSchedules = stopHasNotifcationSchedules(thisItem.id);\n      scheduleNotificationButtonElement.setAttribute('highlighted', booleanToString(havingNotifcationSchedules));\n    }\n\n    if (previousItem === null) {\n      updateStatus(thisItemElement, thisThreadBoxElement, thisItem, skeletonScreen, animation);\n      updateName(thisItemElement, thisItem);\n      updateBuses(thisItemElement, thisItem);\n      updateOverlappingRoutes(thisItemElement, thisItem);\n      updateBusArrivalTimes(thisItemElement, thisItem);\n      updateNearbyLocations(thisItemElement, thisItem);\n      updateSegmentBuffer(thisItemElement, thisThreadBoxElement, thisItem);\n      updateNearest(thisItemElement, thisThreadBoxElement, thisItem);\n      updateThread(thisThreadBoxElement, thisItem, previousItem, skeletonScreen, animation);\n      updateStretch(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      updateAnimation(thisItemElement, thisThreadBoxElement, animation);\n      updateSkeletonScreen(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      updateSaveToFolderButton(thisItemElement, thisItem);\n      updateScheduleNotificationButton(thisItemElement, thisItem);\n    } else {\n      if (thisItem.status.time !== previousItem.status.time) {\n        updateStatus(thisItemElement, thisThreadBoxElement, thisItem, skeletonScreen, animation);\n        updateScheduleNotificationButton(thisItemElement, thisItem);\n      }\n      if (!compareThings(previousItem.buses, thisItem.buses)) {\n        updateBuses(thisItemElement, thisItem);\n      }\n      if (!compareThings(previousItem.busArrivalTimes, thisItem.busArrivalTimes)) {\n        updateBusArrivalTimes(thisItemElement, thisItem);\n      }\n      if (!compareThings(previousItem.segmentBuffer, thisItem.segmentBuffer)) {\n        updateSegmentBuffer(thisItemElement, thisThreadBoxElement, thisItem);\n      }\n      if (previousItem.nearest !== thisItem.nearest) {\n        updateNearest(thisItemElement, thisThreadBoxElement, thisItem);\n      }\n      if (previousItem.progress !== thisItem.progress) {\n        updateThread(thisThreadBoxElement, thisItem, previousItem, skeletonScreen, animation);\n      }\n      if (previousItem.id !== thisItem.id) {\n        updateName(thisItemElement, thisItem);\n        updateOverlappingRoutes(thisItemElement, thisItem);\n        updateNearbyLocations(thisItemElement, thisItem);\n        updateSaveToFolderButton(thisItemElement, thisItem);\n        updateScheduleNotificationButton(thisItemElement, thisItem);\n      }\n      if (previousAnimation !== animation) {\n        updateAnimation(thisItemElement, thisThreadBoxElement, animation);\n      }\n      if (previousSkeletonScreen !== skeletonScreen) {\n        updateStretch(thisItemElement, thisThreadBoxElement, skeletonScreen);\n        updateSkeletonScreen(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      }\n    }\n  }\n\n  const WindowSize = querySize('window');\n  const FieldWidth = WindowSize.width;\n  const FieldHeight = WindowSize.height;\n\n  const groupQuantity = integration.groupQuantity;\n  const itemQuantity = integration.itemQuantity;\n  const groupedItems = integration.groupedItems;\n\n  routeSliding_groupQuantity = groupQuantity;\n  routeSliding_fieldWidth = FieldWidth;\n  routeSliding_fieldHeight = FieldHeight;\n\n  let cumulativeOffset = 0;\n  for (let i = 0; i < groupQuantity; i++) {\n    const width = getTextWidth([integration.RouteEndPoints.RouteDestination, integration.RouteEndPoints.RouteDeparture, ''].map((e) => `往${e}`)[i], 500, '17px', `\"Noto Sans TC\", sans-serif`) + tabPadding;\n    routeSliding_groupStyles[`g_${i}`] = {\n      width: width,\n      offset: cumulativeOffset\n    };\n    cumulativeOffset += width;\n  }\n  const offset = routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].offset * -1 + routeSliding_fieldWidth * 0.5 - routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].width * 0.5;\n  if (!routeSliding_sliding) {\n    updateRouteCSS(routeSliding_groupQuantity, offset, routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].width - tabPadding, routeSliding_initialIndex);\n  }\n\n  RouteNameElement.innerHTML = /*html*/ `<span>${integration.RouteName}</span>`;\n  RouteNameElement.setAttribute('animation', booleanToString(animation));\n  RouteNameElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n  RouteGroupTabsElement.setAttribute('animation', booleanToString(animation));\n  RouteGroupTabsElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n  RouteGroupTabLineTrackElement.setAttribute('animation', booleanToString(animation));\n  RouteGroupTabLineTrackElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n  RouteButtonRightElement.onclick = function () {\n    openRouteDetails(integration.RouteID, integration.PathAttributeId);\n  };\n  const currentGroupSeatQuantity = elementQuerySelectorAll(RouteGroupsElement, '.css_route_group').length;\n  if (groupQuantity !== currentGroupSeatQuantity) {\n    const capacity = currentGroupSeatQuantity - groupQuantity;\n    if (capacity < 0) {\n      const newGroupsFragment = new DocumentFragment();\n      const newTabsFragment = new DocumentFragment();\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const newGroupElement = generateElementOfGroup();\n        newGroupsFragment.appendChild(newGroupElement.element);\n        const newTabElement = generateElementOfTab();\n        newTabsFragment.appendChild(newTabElement.element);\n      }\n      RouteGroupsElement.append(newGroupsFragment);\n      RouteGroupTabsTrayElement.append(newTabsFragment);\n    } else {\n      const GroupElements = elementQuerySelectorAll(RouteGroupsElement, '.css_route_group');\n      const TabElements = elementQuerySelectorAll(RouteGroupTabsTrayElement, '.css_route_group_tab');\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const groupIndex = currentGroupSeatQuantity - 1 - o;\n        GroupElements[groupIndex].remove();\n        TabElements[groupIndex].remove();\n      }\n    }\n  }\n\n  const RouteGroupElements = elementQuerySelectorAll(RouteGroupsElement, '.css_route_group');\n\n  for (let i = 0; i < groupQuantity; i++) {\n    const groupKey = `g_${i}`;\n    const thisGroupElement = RouteGroupElements[i];\n    const thisGroupItemsTrackElement = elementQuerySelector(thisGroupElement, '.css_route_group_items_track');\n    const thisGroupThreadsTrackElement = elementQuerySelector(thisGroupElement, '.css_route_group_threads_track');\n    const currentItemSeatQuantity = elementQuerySelectorAll(thisGroupItemsTrackElement, '.css_route_group_item').length;\n    if (itemQuantity[groupKey] !== currentItemSeatQuantity) {\n      const capacity = currentItemSeatQuantity - itemQuantity[groupKey];\n      if (capacity < 0) {\n        const newItemsFragment = new DocumentFragment();\n        const newThreadsFragment = new DocumentFragment();\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const newThreadBoxElement = generateElementOfThreadBox();\n          const newItemElement = generateElementOfItem(newThreadBoxElement.id);\n          newItemsFragment.appendChild(newItemElement.element);\n          newThreadsFragment.appendChild(newThreadBoxElement.element);\n        }\n        thisGroupItemsTrackElement.append(newItemsFragment);\n        thisGroupThreadsTrackElement.append(newThreadsFragment);\n      } else {\n        const thisGroupItemElements = elementQuerySelectorAll(thisGroupItemsTrackElement, '.css_route_group_item');\n        const thisGroupThreadElements = elementQuerySelectorAll(thisGroupThreadsTrackElement, '.css_route_group_thread_box');\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const itemIndex = currentItemSeatQuantity - 1 - o;\n          thisGroupItemElements[itemIndex].remove();\n          thisGroupThreadElements[itemIndex].remove();\n        }\n      }\n    }\n  }\n\n  const TabElements = elementQuerySelectorAll(RouteGroupTabsTrayElement, '.css_route_group_tab');\n  for (let i = 0; i < groupQuantity; i++) {\n    const groupKey = `g_${i}`;\n\n    const thisTabElement = TabElements[i];\n    thisTabElement.innerHTML = [integration.RouteEndPoints.RouteDestination, integration.RouteEndPoints.RouteDeparture, ''].map((e) => `<span>往${e}</span>`)[i];\n    thisTabElement.style.setProperty('--b-cssvar-route-tab-width', `${routeSliding_groupStyles[groupKey].width}px`);\n    thisTabElement.style.setProperty('--b-cssvar-route-tab-index', i.toString());\n\n    const thisGroupElement = RouteGroupElements[i];\n    if (skeletonScreen) {\n      thisGroupElement.scrollTop = 0;\n    }\n\n    const thisGroupItemsTrackElement = elementQuerySelector(thisGroupElement, '.css_route_group_items_track');\n    const thisGroupThreadsTrackElement = elementQuerySelector(thisGroupElement, '.css_route_group_threads_track');\n    const thisGroupItemElements = elementQuerySelectorAll(thisGroupItemsTrackElement, '.css_route_group_item');\n    const thisGroupThreadElements = elementQuerySelectorAll(thisGroupThreadsTrackElement, '.css_route_group_thread_box');\n    for (let j = 0; j < itemQuantity[groupKey]; j++) {\n      const thisItemElement = thisGroupItemElements[j];\n      const thisThreadBoxElement = thisGroupThreadElements[j];\n      const thisItem = groupedItems[groupKey][j];\n      if (previousIntegration.hasOwnProperty('groupedItems')) {\n        if (previousIntegration.groupedItems.hasOwnProperty(groupKey)) {\n          if (previousIntegration.groupedItems[groupKey][j]) {\n            const previousItem = previousIntegration.groupedItems[groupKey][j];\n            updateItem(thisItemElement, thisThreadBoxElement, thisItem, previousItem, skeletonScreen, animation);\n          } else {\n            updateItem(thisItemElement, thisThreadBoxElement, thisItem, null, skeletonScreen, animation);\n          }\n        } else {\n          updateItem(thisItemElement, thisThreadBoxElement, thisItem, null, skeletonScreen, animation);\n        }\n      } else {\n        updateItem(thisItemElement, thisThreadBoxElement, thisItem, null, skeletonScreen, animation);\n      }\n    }\n  }\n\n  previousIntegration = integration;\n  previousAnimation = animation;\n  previousSkeletonScreen = skeletonScreen;\n}\n\nasync function refreshRoute() {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const refresh_interval_setting = getSettingOptionValue('refresh_interval') as SettingSelectOptionRefreshIntervalValue;\n  const busArrivalTimeChartSize = querySize('route-bus-arrival-time-chart');\n  routeRefreshTimer_dynamic = refresh_interval_setting.dynamic;\n  routeRefreshTimer_baseInterval = refresh_interval_setting.baseInterval;\n  routeRefreshTimer_refreshing = true;\n  routeRefreshTimer_currentRequestID = generateIdentifier();\n  RouteUpdateTimerElement.setAttribute('refreshing', 'true');\n  RouteUpdateTimerElement.classList.remove('css_route_update_timer_slide_rtl');\n  document.addEventListener(routeRefreshTimer_currentRequestID, handleDataReceivingProgressUpdates);\n  const integration = await integrateRoute(currentRouteIDSet_RouteID, currentRouteIDSet_PathAttributeId, busArrivalTimeChartSize.width, busArrivalTimeChartSize.height, routeRefreshTimer_currentRequestID);\n  updateRouteField(integration, false, playing_animation);\n  let updateRate = 0;\n  if (routeRefreshTimer_dynamic) {\n    updateRate = await getUpdateRate();\n  }\n  routeRefreshTimer_lastUpdate = new Date().getTime();\n  if (routeRefreshTimer_dynamic) {\n    routeRefreshTimer_nextUpdate = Math.max(routeRefreshTimer_lastUpdate + routeRefreshTimer_minInterval, integration.dataUpdateTime + routeRefreshTimer_baseInterval / updateRate);\n  } else {\n    routeRefreshTimer_nextUpdate = routeRefreshTimer_lastUpdate + routeRefreshTimer_baseInterval;\n  }\n  routeRefreshTimer_dynamicInterval = Math.max(routeRefreshTimer_minInterval, routeRefreshTimer_nextUpdate - routeRefreshTimer_lastUpdate);\n  routeRefreshTimer_refreshing = false;\n  RouteUpdateTimerElement.setAttribute('refreshing', 'false');\n  animateUpdateTimer();\n}\n\nexport function streamRoute(): void {\n  refreshRoute()\n    .then(function () {\n      if (routeRefreshTimer_streaming) {\n        setTimeout(function () {\n          streamRoute();\n        }, Math.max(routeRefreshTimer_minInterval, routeRefreshTimer_nextUpdate - new Date().getTime()));\n      } else {\n        routeRefreshTimer_streamStarted = false;\n      }\n    })\n    .catch((err) => {\n      console.error(err);\n      if (routeRefreshTimer_streaming) {\n        promptMessage(`路線網路連線中斷，將在${routeRefreshTimer_retryInterval / 1000}秒後重試。`, 'error');\n        setTimeout(function () {\n          streamRoute();\n        }, routeRefreshTimer_retryInterval);\n      } else {\n        routeRefreshTimer_streamStarted = false;\n      }\n    });\n}\n\nexport function openRoute(RouteID: number, PathAttributeId: Array<number>): void {\n  pushPageHistory('Route');\n  logRecentView('route', RouteID);\n  currentRouteIDSet_RouteID = RouteID;\n  currentRouteIDSet_PathAttributeId = PathAttributeId;\n  routeSliding_initialIndex = 0;\n  RouteField.setAttribute('displayed', 'true');\n  RouteGroupsElement.scrollLeft = 0;\n  setUpRouteFieldSkeletonScreen();\n  if (!routeRefreshTimer_streaming) {\n    routeRefreshTimer_streaming = true;\n    if (!routeRefreshTimer_streamStarted) {\n      routeRefreshTimer_streamStarted = true;\n      streamRoute();\n    } else {\n      refreshRoute();\n    }\n  }\n  closePreviousPage();\n}\n\nexport function closeRoute(): void {\n  // revokePageHistory('Route');\n  RouteField.setAttribute('displayed', 'false');\n  routeRefreshTimer_streaming = false;\n  openPreviousPage();\n}\n\nexport function switchRoute(RouteID: number, PathAttributeId: Array<number>): void {\n  routeRefreshTimer_streaming = false;\n  openRoute(RouteID, PathAttributeId);\n}\n\nexport function stretchRouteItem(itemElementID: string, threadBoxElementID: string): void {\n  const itemElement = elementQuerySelector(RouteGroupsElement, `.css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  const itemBodyElement = elementQuerySelector(itemElement, '.css_route_group_item_body');\n  const threadBoxElement = elementQuerySelector(RouteGroupsElement, `.css_route_group .css_route_group_tracks .css_route_group_threads_track .css_route_group_thread_box#${threadBoxElementID}`);\n\n  const itemsTrackElement = itemElement.parentElement as HTMLElement;\n  const threadTrackElement = threadBoxElement.parentElement as HTMLElement;\n\n  const elementsBelowThreadBoxElement = getElementsBelow(threadBoxElement, 'css_route_group_thread_box');\n  const elementsBelowItemElement = getElementsBelow(itemElement, 'css_route_group_item');\n\n  const elementsBelowLength = elementsBelowItemElement.length; // = elementsBelowThreadBoxElement.length\n\n  const itemsTrackElementRect = itemsTrackElement.getBoundingClientRect();\n  const itemElementRect = itemElement.getBoundingClientRect();\n  const threadTrackElementRect = threadTrackElement.getBoundingClientRect();\n  const threadBoxElementRect = threadBoxElement.getBoundingClientRect();\n\n  // const threadBoxElementX = threadBoxElementRect.left - threadTrackElementRect.left;\n  const threadBoxElementY = threadBoxElementRect.top - threadTrackElementRect.top;\n\n  // const itemElementX = itemElementRect.left - itemsTrackElementRect.left;\n  const itemElementY = itemElementRect.top - itemsTrackElementRect.top; // itemElementRect.top + scrollTop - (itemsTrackElementRect.top + scrollTop)\n\n  const stretched = itemElement.getAttribute('stretched') === 'true' ? true : false;\n  const animation = itemElement.getAttribute('animation') === 'true' ? true : false;\n\n  if (animation) {\n    const pushDirection = stretched ? '2' : '1';\n\n    // Separate the elements from the document flow while keeping its position\n    threadBoxElement.setAttribute('stretching', 'true');\n    // threadBoxElement.style.setProperty('--b-cssvar-css-route-group-thread-box-x', `${threadBoxElementX}px`);\n    threadBoxElement.style.setProperty('--b-cssvar-css-route-group-thread-box-y', `${threadBoxElementY}px`);\n\n    itemElement.setAttribute('stretching', 'true');\n    // itemElement.style.setProperty('--b-cssvar-css-route-group-item-x', `${itemElementX}px`);\n    itemElement.style.setProperty('--b-cssvar-css-route-group-item-y', `${itemElementY}px`);\n\n    // Set push direction and push state\n    for (let i = 0; i < elementsBelowLength; i++) {\n      const thisItemElement = elementsBelowItemElement[i];\n      const thisThreadBoxElement = elementsBelowThreadBoxElement[i];\n      // thisThreadBoxElement.style.setProperty('--b-cssvar-css-route-group-thread-z-index', (elementsBelowLength - i - 1).toString());\n      thisThreadBoxElement.style.setProperty('--b-cssvar-css-route-group-thread-z-index', (-1 * i - 1).toString());\n      thisThreadBoxElement.setAttribute('push-direction', pushDirection);\n      thisThreadBoxElement.setAttribute('push-state', '1');\n      thisItemElement.setAttribute('push-direction', pushDirection);\n      thisItemElement.setAttribute('push-state', '1');\n    }\n\n    itemElement.addEventListener(\n      'transitionend',\n      function () {\n        // Reset the push direction and push state\n        for (let i = 0; i < elementsBelowLength; i++) {\n          const thisItemElement = elementsBelowItemElement[i];\n          const thisThreadBoxElement = elementsBelowThreadBoxElement[i];\n          thisThreadBoxElement.setAttribute('push-direction', '0');\n          thisThreadBoxElement.setAttribute('push-state', '0');\n          thisItemElement.setAttribute('push-direction', '0');\n          thisItemElement.setAttribute('push-state', '0');\n        }\n        // Deposit the element\n        threadBoxElement.setAttribute('stretching', 'false');\n        itemElement.setAttribute('stretching', 'false');\n      },\n      { once: true }\n    );\n\n    itemElement.addEventListener(\n      'transitionstart',\n      function () {\n        // Transition the elements below\n        for (let i = 0; i < elementsBelowLength; i++) {\n          const thisItemElement = elementsBelowItemElement[i];\n          const thisThreadBoxElement = elementsBelowThreadBoxElement[i];\n          thisThreadBoxElement.setAttribute('push-state', '2');\n          thisItemElement.setAttribute('push-state', '2');\n        }\n      },\n      { once: true }\n    );\n  }\n\n  // Switch the state of the stretching element\n  if (stretched) {\n    if (animation) {\n      itemBodyElement.addEventListener(\n        'transitionend',\n        function () {\n          itemBodyElement.setAttribute('displayed', 'false');\n        },\n        { once: true }\n      );\n    } else {\n      itemBodyElement.setAttribute('displayed', 'false');\n    }\n    itemElement.setAttribute('stretched', 'false');\n    threadBoxElement.setAttribute('stretched', 'false');\n  } else {\n    itemBodyElement.setAttribute('displayed', 'true');\n    itemElement.setAttribute('stretched', 'true');\n    threadBoxElement.setAttribute('stretched', 'true');\n  }\n}\n\nexport function switchRouteBodyTab(itemID: string, tabCode: number): void {\n  const itemElement = elementQuerySelector(RouteGroupsElement, `.css_route_group_item#${itemID}`);\n  const buttons = elementQuerySelector(itemElement, '.css_route_group_item_buttons');\n  const button = elementQuerySelectorAll(buttons, '.css_route_group_item_button[highlighted=\"true\"][type=\"tab\"]');\n  for (const t of button) {\n    t.setAttribute('highlighted', 'false');\n  }\n  elementQuerySelector(buttons, `.css_route_group_item_button[code=\"${tabCode}\"]`).setAttribute('highlighted', 'true');\n  switch (tabCode) {\n    case 0:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'true');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_nearby_locations').setAttribute('displayed', 'false');\n      break;\n    case 1:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'true');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_nearby_locations').setAttribute('displayed', 'false');\n      break;\n    case 2:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'true');\n      elementQuerySelector(itemElement, '.css_route_group_item_nearby_locations').setAttribute('displayed', 'false');\n      break;\n    case 3:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_nearby_locations').setAttribute('displayed', 'true');\n      break;\n    default:\n      break;\n  }\n}\n"],"names":["RouteField","documentQuerySelector","RouteHeadElement","elementQuerySelector","RouteNameElement","RouteButtonRightElement","RouteUpdateTimerElement","RouteGroupTabsElement","RouteGroupTabsTrayElement","RouteGroupTabLineTrackElement","RouteGroupTabLineElement","RouteGroupsElement","previousIntegration","previousAnimation","previousSkeletonScreen","routeSliding_initialIndex","routeSliding_targetIndex","routeSliding_groupQuantity","routeSliding_groupStyles","routeSliding_fieldWidth","routeSliding_sliding","routeRefreshTimer_retryInterval","routeRefreshTimer_baseInterval","routeRefreshTimer_minInterval","routeRefreshTimer_dynamicInterval","routeRefreshTimer_dynamic","routeRefreshTimer_lastUpdate","routeRefreshTimer_nextUpdate","routeRefreshTimer_currentRequestID","routeRefreshTimer_refreshing","routeRefreshTimer_streaming","routeRefreshTimer_streamStarted","currentRouteIDSet_RouteID","currentRouteIDSet_PathAttributeId","tabPadding","initializeRouteSliding","addEventListener","Math","round","scrollLeft","passive","event","currentIndex","target","initialSize","width","offset","targetSize","tabWidth","abs","updateRouteCSS","groupQuantity","tabLineWidth","percentage","style","setProperty","toString","toFixed","handleDataReceivingProgressUpdates","CustomEvent","offsetRatio","detail","progress","stage","document","removeEventListener","generateElementOfThreadBox","identifier","generateIdentifier","element","createElement","classList","add","id","setAttribute","innerHTML","generateElementOfItem","threadBoxIdentifier","itemElement","headElement","nameElement","appendChild","capsuleElement","statusElement","nextSlideElement","currentSlideElement","stretchElement","getIconHTML","onclick","stretchRouteItem","capsuleSeparatorElement","bodyElement","buttonsElement","tabBusElement","switchRouteBodyTab","tabBusIconElement","createTextNode","tabArrivalElement","tabArrivalIconElement","tabRouteElement","tabRouteIconElement","tabLocationElement","tabLocationIconElement","saveToFolderElement","saveToFolderIconElement","scheduleNotificationElement","scheduleNotificationIconElement","busesElement","overlappingRoutesElement","busArrivalTimesElement","nearbyLocationsElement","generateElementOfGroup","tracksElement","threadTrackElement","threadBoxSpace","itemsTrackElement","itemSpaceElement","updateRouteField","integration","skeletonScreen","animation","updateItem","thisItemElement","thisThreadBoxElement","thisItem","previousItem","updateStatus","thisThreadStatusElement","currentThreadSlideElement","nextThreadSlideElement","thisItemStatusElement","currentItemSlideElement","nextItemSlideElememt","status","code","innerText","text","thisItemElementRect","getBoundingClientRect","top","left","bottom","right","windowWidth","window","innerWidth","windowHeight","innerHeight","remove","once","updateSegmentBuffer","booleanToString","segmentBuffer","isSegmentBuffer","updateName","name","updateBuses","buses","length","map","bus","onThisRoute","carNumber","RouteName","type","join","updateOverlappingRoutes","overlappingRoutes","route","RouteEndPoints","html","RouteID","PathAttributeId","updateBusArrivalTimes","busArrivalTimes","busArrivalTime","personalSchedule","indexToDay","day","timeObjectToString","period","start","end","chart","updateNearbyLocations","nearbyLocations","nearbyLocation","distance","hash","updateNearest","nearest","updateThread","previousProgress","thisProgress","thisThreadProgressElement","updateStretch","updateAnimation","updateSkeletonScreen","updateSaveToFolderButton","saveToFolderButtonElement","openSaveToFolder","isFolderContentSaved","then","e","updateScheduleNotificationButton","scheduleNotificationButtonElement","openScheduleNotification","time","havingNotifcationSchedules","stopHasNotifcationSchedules","compareThings","WindowSize","querySize","FieldWidth","FieldHeight","height","itemQuantity","groupedItems","cumulativeOffset","i","getTextWidth","RouteDestination","RouteDeparture","openRouteDetails","currentGroupSeatQuantity","elementQuerySelectorAll","capacity","newGroupsFragment","DocumentFragment","newTabsFragment","o","newGroupElement","newTabElement","append","GroupElements","TabElements","groupIndex","RouteGroupElements","groupKey","thisGroupElement","thisGroupItemsTrackElement","thisGroupThreadsTrackElement","currentItemSeatQuantity","newItemsFragment","newThreadsFragment","newThreadBoxElement","newItemElement","thisGroupItemElements","thisGroupThreadElements","itemIndex","thisTabElement","scrollTop","j","hasOwnProperty","refreshRoute","_refreshRoute","apply","arguments","playing_animation","getSettingOptionValue","refresh_interval_setting","busArrivalTimeChartSize","dynamic","baseInterval","integrateRoute","updateRate","getUpdateRate","Date","getTime","max","dataUpdateTime","streamRoute","setTimeout","err","promptMessage","openRoute","pushPageHistory","logRecentView","defaultItemQuantity","floor","push","goBack","sequence","position","longitude","latitude","isStartingPoint","isEndingPoint","g_0","g_1","setUpRouteFieldSkeletonScreen","closePreviousPage","closeRoute","openPreviousPage","switchRoute","itemElementID","threadBoxElementID","itemBodyElement","threadBoxElement","parentElement","elementsBelowThreadBoxElement","getElementsBelow","elementsBelowItemElement","elementsBelowLength","itemsTrackElementRect","itemElementRect","threadTrackElementRect","threadBoxElementY","itemElementY","stretched","getAttribute","pushDirection","itemID","tabCode","_step","buttons","_iterator","_createForOfIteratorHelper","s","n","done","value","f"],"sourceRoot":""}