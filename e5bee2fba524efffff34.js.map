{"version":3,"file":"e5bee2fba524efffff34.js","mappings":"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","sources":["webpack://bus/./src/interface/theme.css?c267","webpack://bus/./src/interface/storage/index.ts","webpack://bus/./src/interface/theme.css?c39d","webpack://bus/./src/tools/address.ts","webpack://bus/./src/interface/settings/index.ts","webpack://bus/./src/interface/settings/options.ts"],"sourcesContent":["\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!./theme.css?inline\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!./theme.css?inline\";\n       export default content && content.locals ? content.locals : undefined;\n","import { getStoresSizeStatistics, StoreSize } from '../../data/analytics/storage-size';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { GeneratedElement } from '../index';\n\nconst StorageField = documentQuerySelector('.css_storage_field');\nconst StorageBodyElement = elementQuerySelector(StorageField, '.css_storage_body');\nconst StatisticsElement = elementQuerySelector(StorageBodyElement, '.css_storage_statistics');\n\nfunction generateElementOfItem(item: StoreSize): GeneratedElement {\n  const element = document.createElement('div');\n  element.classList.add('css_storage_statistics_item');\n  element.innerHTML = /*html*/ `<div class=\"css_storage_statistics_item_name\">${item.category.name}</div><div class=\"css_storage_statistics_item_value\">${item.size}</div>`;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nasync function initializeStorageStatistics() {\n  const statistics = await getStoresSizeStatistics();\n  StatisticsElement.innerHTML = '';\n  for (const key in statistics.categorizedSizes) {\n    const item = statistics.categorizedSizes[key];\n    const itemElement = generateElementOfItem(item);\n    StatisticsElement.appendChild(itemElement.element);\n  }\n}\n\nexport function openStorage(): void {\n  StorageField.setAttribute('displayed', 'true');\n  initializeStorageStatistics();\n}\n\nexport function closeStorage(): void {\n  StorageField.setAttribute('displayed', 'false');\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `// extracted by mini-css-extract-plugin\nexport {};`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/interface/theme.css\"],\"names\":[],\"mappings\":\"AAAA;QACS,CAAA\",\"sourcesContent\":[\"// extracted by mini-css-extract-plugin\\nexport {};\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { areItemsDifferent } from './array';\nimport { generateLetterLabels } from './labels';\n\ninterface AddressPart {\n  suffixes?: string;\n  key: keyof ParsedAddress;\n  process: (e: Array<string> | null) => Array<string> | Array<number> | null;\n  type: number;\n}\n\nexport interface ParsedAddress {\n  city: Array<string>;\n  district: Array<string>;\n  area: Array<string>;\n  road: Array<string>;\n  road_section: Array<number>;\n  alley: Array<number>;\n  alley_branch: Array<number>;\n  doorplate: Array<number>;\n  floornumber: Array<string>;\n  exit: Array<string>;\n  direction: Array<string>;\n  [key: string]: Array<string> | Array<number> | null;\n}\n\ninterface FeatureCounts {\n  [key: string]: { count: number; chars: string; index: number };\n}\n\nexport function mergeAddressesIntoOne(addresses: Array<string>): ParsedAddress | string {\n  const parts: Array<AddressPart> = [\n    {\n      suffixes: '市',\n      key: 'city',\n      process: function (e) {\n        if (e === null) {\n          return null;\n        } else {\n          return e.map((t) => {\n            return t.trim();\n          });\n        }\n      },\n      type: 0\n    },\n    {\n      suffixes: '區',\n      key: 'district',\n      process: function (e) {\n        if (e === null) {\n          return null;\n        } else {\n          return e.map((t) => {\n            return t.trim();\n          });\n        }\n      },\n      type: 0\n    },\n    {\n      suffixes: '鄉鎮村里',\n      key: 'area',\n      process: function (e) {\n        if (e === null) {\n          return null;\n        } else {\n          return e.map((t) => {\n            return t.trim();\n          });\n        }\n      },\n      type: 0\n    },\n    {\n      suffixes: '路街道',\n      key: 'road',\n      process: function (e) {\n        if (e === null) {\n          return null;\n        } else {\n          return e.map((t) => {\n            return t.replaceAll(/[\\(\\)\\（\\）]/gim, '').trim();\n          });\n        }\n      },\n      type: 0\n    },\n    {\n      suffixes: '段',\n      key: 'road_section',\n      process: function (e) {\n        var toNumber = function (char) {\n          switch (char) {\n            case '一':\n              return 1;\n              break;\n            case '二':\n              return 2;\n              break;\n            case '三':\n              return 3;\n              break;\n            case '四':\n              return 4;\n              break;\n            case '五':\n              return 5;\n              break;\n            case '六':\n              return 6;\n              break;\n            case '七':\n              return 7;\n              break;\n            case '八':\n              return 8;\n              break;\n            case '九':\n              return 9;\n              break;\n            case '十':\n              return 10;\n              break;\n          }\n          if (!isNaN(parseInt(char))) {\n            return parseInt(char);\n          }\n          return 0;\n        };\n        var len = String(e).length;\n        var numbers = [];\n        for (let i = 0; i < len; i++) {\n          var p = toNumber(String(e).charAt(i));\n          if (p === 10) {\n            if (numbers.length > 0) {\n              numbers = [numbers.reduce((a, b) => a + b, 0) * 10];\n            }\n          } else {\n            numbers = [numbers.reduce((a, b) => a + b, 0) + p];\n          }\n        }\n        return numbers;\n      },\n      type: 0\n    },\n    {\n      suffixes: '巷',\n      key: 'alley',\n      process: function (e) {\n        if (e === null) {\n          return null;\n        } else {\n          return e.map((t) => {\n            return parseInt(t.trim().replaceAll(/[巷]/gim));\n          });\n        }\n      },\n      type: 0\n    },\n    {\n      suffixes: '弄',\n      key: 'alley_branch',\n      process: function (e) {\n        if (e === null) {\n          return null;\n        } else {\n          return e.map((t) => {\n            return parseInt(t.trim().replaceAll(/[弄]/gim));\n          });\n        }\n      },\n      type: 0\n    },\n    {\n      suffixes: '號',\n      key: 'doorplate',\n      process: function (e) {\n        var numbers = String(e).match(/[0-9]+/gim);\n        numbers =\n          numbers?.map((n) => {\n            if (n === null) {\n              return null;\n            } else {\n              return parseInt(n);\n            }\n          }) || null;\n        return numbers;\n      },\n      type: 0\n    },\n    {\n      suffixes: '樓',\n      key: 'floornumber',\n      process: function (e) {\n        if (e === null) {\n          return null;\n        } else {\n          return e.map((t) => {\n            return t.trim();\n          });\n        }\n      },\n      type: 0\n    },\n    {\n      key: 'exit',\n      process: function (e) {\n        if (e === null) {\n          return null;\n        } else {\n          return e.map((t) => {\n            return t.trim();\n          });\n        }\n      },\n      type: 2\n    },\n    {\n      key: 'direction',\n      process: function (e) {\n        if (e === null) {\n          return null;\n        } else {\n          return e.map((t) => {\n            return t.trim().replace(/[往向]/gim, '');\n          });\n        }\n      },\n      type: 1\n    }\n  ];\n\n  function parseAddress(address: string): object {\n    function regex(suffixes, type) {\n      if (type === 0) {\n        return new RegExp(`([^市區鄉鎮村里路段街道巷弄號樓與]+[${suffixes}])`, 'gmi');\n      }\n      if (type === 1) {\n        return new RegExp(`([往向]+[東南西北])`, 'gmi');\n      }\n      if (type === 2) {\n        return new RegExp(`([0-9]+[號]出口)`, 'gmi');\n      }\n    }\n    var result = {};\n    for (var part of parts) {\n      var r = regex(part?.suffixes, part.type);\n      result[part.key] = part.process(String(address).match(r));\n    }\n    return result;\n  }\n\n  function mergeAddresses(addresses: Array<string>): object {\n    var result = {};\n    for (var address of addresses) {\n      var parsedAddress = parseAddress(address);\n      for (var part of parts) {\n        if (!result.hasOwnProperty(part.key)) {\n          result[part.key] = [];\n        }\n        result[part.key] = result[part.key].concat(parsedAddress[part.key]);\n      }\n    }\n    for (var key in result) {\n      result[key] = Array.from(new Set(result[key]))\n        .filter((e) => (e ? true : false))\n        .sort(function (a, b) {\n          if (typeof a === 'number' && typeof b === 'number') {\n            return a - b;\n          } else {\n            return String(a).charCodeAt(0) - String(b).charCodeAt(0);\n          }\n        });\n    }\n    return result;\n  }\n  return mergeAddresses(addresses);\n}\n\nexport function addressToString(address: ParsedAddress): string {\n  return `${address.city.join('')}${address.district.join('')}${address.road.join('、')}${\n    address.road_section.sort(function (a, b) {\n      return a - b;\n    }).length > 0\n      ? address.road_section.join('、') + '段'\n      : ''\n  }${\n    address.alley.length > 0\n      ? address.alley\n          .sort(function (a, b) {\n            return a - b;\n          })\n          .join('、') + '巷'\n      : ''\n  }${\n    address.alley_branch.length > 0\n      ? address.alley_branch\n          .sort(function (a, b) {\n            return a - b;\n          })\n          .join('、') + '弄'\n      : ''\n  }${\n    address.doorplate.length > 0\n      ? address.doorplate\n          .sort(function (a, b) {\n            return a - b;\n          })\n          .join('、') + '號'\n      : ''\n  }${address.floornumber.length > 0 ? address.floornumber.join('、') + '樓' : ''}${address.direction.length > 0 ? '（朝' + address.direction.join('、') + '）' : ''}`;\n}\n\nexport function extractCommonFeaturesFromAddresses(addresses: Array<string>): string {\n  // Create an object to store feature occurrences\n  const featureCounts: { [key: string]: { count: number; chars: string; index: number } } = {};\n\n  // Create a set to store unique simplified addresses\n  const simplifiedSet = new Set<string>();\n\n  // Iterate through each address\n  for (const address of addresses) {\n    // Extract common features by splitting the address\n    const features = String(address)\n      .split('')\n      .filter((feature) => feature.trim() !== '');\n\n    // Join the extracted features to create a simplified address\n    const simplifiedAddress = features.join('');\n\n    // Add the simplified address to the set\n    simplifiedSet.add(simplifiedAddress);\n\n    // Count occurrences of each feature\n    let index = 0;\n    for (const feature of features) {\n      // Check if the feature is a digit\n      if (!isNaN(parseInt(feature))) {\n        // Create a key for the digit feature\n        const digitKey = `digit_${index}_${feature.charCodeAt(0)}`;\n        featureCounts[digitKey] = {\n          count: (featureCounts[digitKey]?.count || 0) + 1,\n          chars: feature,\n          index: index\n        };\n      } else {\n        // Create a key for non-digit features\n        const featureKey = `chars_${index}_${feature.charCodeAt(0)}`;\n        featureCounts[featureKey] = {\n          count: (featureCounts[featureKey]?.count || 0) + 1,\n          chars: feature,\n          index: index\n        };\n      }\n      index += 1;\n    }\n  }\n\n  // Set threshold and limit for filtering features\n  const threshold = addresses.length * 0.6;\n  const limit = addresses.length * 1;\n\n  // Convert the feature counts object to an array of [feature, count] pairs\n  const sortedFeatures = Object.entries(featureCounts)\n    .filter((pair) => threshold <= pair[1].count && pair[1].count <= limit)\n    .sort((a, b) => a[1].index - b[1].index);\n\n  // Extract the features from the sorted array\n  const commonFeatures = sortedFeatures.map((pair) => pair[1].chars);\n\n  return commonFeatures.join('');\n}\n\nexport function generateLabelFromAddresses(addresses: Array<ParsedAddress>): Array<string> {\n  let result = [];\n  let filledProperties = {};\n  for (const address of addresses) {\n    for (const key in address) {\n      if (!filledProperties.hasOwnProperty(key)) {\n        filledProperties[key] = 0;\n      }\n      if (address[key].length > 0) {\n        filledProperties[key] = filledProperties[key] + 1;\n      }\n    }\n  }\n  let commonProperties = Object.entries(filledProperties)\n    .map((property) => {\n      return { key: property[0], value: property[1] };\n    })\n    .filter((e) => {\n      return e.value === addresses.length ? true : false;\n    })\n    .sort(function (a, b) {\n      return a.value - b.value;\n    });\n  if (commonProperties.length > 0) {\n    for (const commonProperty of commonProperties) {\n      let components = [];\n      for (const address of addresses) {\n        components.push(address[commonProperty.key].join(''));\n      }\n      if (areItemsDifferent(components)) {\n        result.push({ components: components, len: Math.max(...components.map((e) => e.length)) });\n      }\n    }\n  }\n\n  if (result.length > 0) {\n    result = result.sort(function (a, b) {\n      return a.len - b.len;\n    });\n    return result[0].components;\n  } else {\n    const addressesLength = addresses.length;\n    return generateLetterLabels(addressesLength);\n  }\n}\n","import { exportData } from '../../data/export/index';\nimport { importData } from '../../data/import/index';\nimport { listSettings } from '../../data/settings/index';\nimport { getCommitURLOfCurrentVersion } from '../../data/settings/version';\nimport { askForPersistentStorage } from '../../data/storage/index';\nimport { generateIdentifier, releaseFile } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nfunction generateElementOfItem(item: object): GeneratedElement {\n  var identifier = generateIdentifier('i');\n  var element = document.createElement('div');\n  element.classList.add('css_setting');\n  element.id = identifier;\n  element.setAttribute('onclick', item.action);\n  element.setAttribute('type', item.type);\n  element.innerHTML = /*html*/ `<div class=\"css_setting_icon\">${getIconHTML(item.icon)}</div><div class=\"css_setting_name\">${item.name}</div><div class=\"css_setting_status\">${item.status}</div><div class=\"css_setting_arrow\">${getIconHTML('arrow_forward_ios')}</div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nasync function initializeSettingsField(Field: HTMLElement) {\n  const list = await listSettings();\n  elementQuerySelector(Field, '.css_settings_page_body .css_settings_page_settings').innerHTML = '';\n  for (const item of list) {\n    const thisElement = generateElementOfItem(item);\n    elementQuerySelector(Field, '.css_settings_page_body .css_settings_page_settings').appendChild(thisElement.element);\n  }\n}\n\nexport function openSettings(): void {\n  pushPageHistory('Settings');\n  var Field: HTMLElement = documentQuerySelector('.css_settings_page_field');\n  Field.setAttribute('displayed', 'true');\n  initializeSettingsField(Field);\n}\n\nexport function closeSettings(): void {\n  revokePageHistory('Settings');\n  var Field: HTMLElement = documentQuerySelector('.css_settings_page_field');\n  Field.setAttribute('displayed', 'false');\n}\n\nexport async function downloadExportFile() {\n  const exportedData = await exportData();\n  releaseFile(exportedData, 'application/json', 'bus-export.json');\n}\n\nexport function openFileToImportData(): void {\n  const identifier = generateIdentifier('i');\n  const fileInput = document.createElement('input');\n  fileInput.setAttribute('type', 'file');\n  fileInput.setAttribute('accept', 'application/json');\n  fileInput.setAttribute('name', identifier);\n  fileInput.id = identifier;\n  fileInput.classList.add('css_import_file_input');\n  fileInput.addEventListener(\n    'change',\n    function (event) {\n      // Check if a file is selected\n      if (event.target.files.length === 0) {\n        documentQuerySelector(`body #${identifier}`).remove();\n      } else {\n        // Get the first file selected by the user\n        const file = event.target.files[0];\n        const reader = new FileReader();\n\n        // When the file is successfully read\n        reader.onload = function (e) {\n          // Get the file content as text\n          const fileTextContent = e.target.result;\n\n          // Import the data\n          importData(fileTextContent).then((f) => {\n            if (f) {\n              promptMessage('已匯入資料', 'check_circle');\n            } else {\n              promptMessage('無法匯入資料', 'error');\n            }\n            documentQuerySelector(`body #${identifier}`).remove();\n          });\n        };\n\n        // Read the file as text\n        reader.readAsText(file);\n      }\n    },\n    { once: true }\n  );\n  fileInput.addEventListener(\n    'cancel',\n    function (event) {\n      documentQuerySelector(`body #${identifier}`).remove();\n    },\n    { once: true }\n  );\n\n  document.body.append(fileInput);\n  documentQuerySelector(`body #${identifier}`).click();\n}\n\nexport function viewCommitOfCurrentVersion(): void {\n  const url = getCommitURLOfCurrentVersion();\n  window.open(url);\n}\n\nexport function showPromptToAskForPersistentStorage(): void {\n  askForPersistentStorage().then((e) => {\n    switch (e) {\n      case 'granted':\n        promptMessage('已開啟永久儲存', 'check_circle');\n        break;\n      case 'denied':\n        promptMessage('永久儲存權限已被拒絕', 'cancel');\n        break;\n      case 'unsupported':\n        promptMessage('此瀏覽器不支援永久儲存', 'warning');\n        break;\n      default:\n        promptMessage('發生錯誤', 'error');\n        break;\n    }\n  });\n}\n","import { changeSettingOption, getSetting } from '../../data/settings/index';\nimport { generateIdentifier } from '../../tools/index';\nimport { documentQuerySelector, documentQuerySelectorAll, elementQuerySelector } from '../../tools/query-selector';\nimport { closePreviousPage, GeneratedElement, openPreviousPage, pushPageHistory } from '../index';\n\nfunction generateElementOfItem(setting: object, item: object, index: number): GeneratedElement {\n  var identifier = generateIdentifier('i');\n  var element = document.createElement('div');\n  element.classList.add('css_option');\n  element.id = identifier;\n  element.innerHTML = /*html*/ `<div class=\"css_option_name\">${item.name}</div><div class=\"css_option_checkbox\"><input type=\"checkbox\" onclick=\"bus.settings.settingsOptionsHandler(event, '${setting.key}', ${index})\" ${setting.option === index ? 'checked' : ''}/></div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction initializeSettingsOptionsField(Field: HTMLElement, settingKey: string): void {\n  const setting = getSetting(settingKey);\n  const bodyElement = elementQuerySelector(Field, '.css_settings_options_page_body');\n  const optionsElement = elementQuerySelector(bodyElement, '.css_settings_options_page_options');\n  const descriptionElement = elementQuerySelector(bodyElement, '.css_options_description');\n  descriptionElement.innerText = setting.description;\n  optionsElement.innerHTML = '';\n  let index = 0;\n  for (const item of setting.options) {\n    const thisElement = generateElementOfItem(setting, item, index);\n    optionsElement.appendChild(thisElement.element);\n    index += 1;\n  }\n}\n\nexport function openSettingsOptions(settingKey: string): void {\n  pushPageHistory('SettingsOptions');\n  var setting = getSetting(settingKey);\n  var Field: HTMLElement = documentQuerySelector('.css_settings_options_page_field');\n  Field.setAttribute('displayed', 'true');\n  elementQuerySelector(Field, '.css_settings_options_page_head .css_settings_options_page_title').innerText = setting.name;\n  initializeSettingsOptionsField(Field, settingKey);\n  closePreviousPage();\n}\n\nexport function closeSettingsOptions(): void {\n  // revokePageHistory('SettingsOptions');\n  var Field = documentQuerySelector('.css_settings_options_page_field');\n  Field.setAttribute('displayed', 'false');\n  openPreviousPage();\n}\n\nexport function settingsOptionsHandler(event: Event, settingKey: string, index: number): void {\n  var checkboxes = documentQuerySelectorAll('.css_settings_options_page_field .css_settings_options_page_body .css_settings_options_page_options .css_option .css_option_checkbox input[type=\"checkbox\"]');\n  for (var checkbox of checkboxes) {\n    checkbox.checked = false;\n  }\n  event.target.checked = true;\n  changeSettingOption(settingKey, index).then((e) => {});\n}\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","StorageField","documentQuerySelector","StorageBodyElement","elementQuerySelector","StatisticsElement","generateElementOfItem","item","element","document","createElement","classList","add","innerHTML","category","name","size","id","_initializeStorageStatistics","statistics","getStoresSizeStatistics","key","categorizedSizes","itemElement","appendChild","apply","arguments","openStorage","setAttribute","initializeStorageStatistics","closeStorage","___CSS_LOADER_EXPORT___","push","module","addressToString","address","city","join","district","road","road_section","sort","a","b","length","alley","alley_branch","doorplate","floornumber","direction","generateLabelFromAddresses","addresses","_step4","result","filledProperties","_iterator4","_createForOfIteratorHelper","s","n","done","value","hasOwnProperty","err","e","f","commonProperties","Object","entries","map","property","filter","_step5","_iterator5","_step6","commonProperty","components","_iterator6","areItemsDifferent","len","Math","max","_toConsumableArray","addressesLength","generateLetterLabels","identifier","generateIdentifier","action","type","getIconHTML","icon","status","_initializeSettingsField","_asyncToGenerator","Field","list","listSettings","_step","_iterator","thisElement","openSettings","pushPageHistory","_x","initializeSettingsField","closeSettings","revokePageHistory","downloadExportFile","_downloadExportFile","exportedData","exportData","releaseFile","openFileToImportData","fileInput","addEventListener","event","target","files","remove","file","reader","FileReader","onload","fileTextContent","importData","then","promptMessage","readAsText","once","body","append","click","viewCommitOfCurrentVersion","url","getCommitURLOfCurrentVersion","window","open","showPromptToAskForPersistentStorage","askForPersistentStorage","setting","index","option","openSettingsOptions","settingKey","getSetting","innerText","bodyElement","optionsElement","description","initializeSettingsOptionsField","closePreviousPage","closeSettingsOptions","openPreviousPage","settingsOptionsHandler","_step2","_iterator2","documentQuerySelectorAll","checked","changeSettingOption"],"sourceRoot":""}