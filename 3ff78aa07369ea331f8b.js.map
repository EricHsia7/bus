{"version":3,"file":"3ff78aa07369ea331f8b.js","mappings":"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","sources":["webpack://bus/./src/data/search/searchMaterialSymbols.ts","webpack://bus/./src/data/user-position/index.ts","webpack://bus/./src/data/settings/version.ts","webpack://bus/./src/data/settings/index.ts","webpack://bus/./src/data/storage/index.ts","webpack://bus/./src/data/settings/compatibility.ts","webpack://bus/./src/data/search/index.ts"],"sourcesContent":["import { generateIdentifier } from '../../tools/index';\nimport { getIntersection } from '../../tools/array';\nimport { getMaterialSymbols } from '../apis/getMaterialSymbols/index';\nimport { getUnicodes } from '../../tools/text';\nimport { deleteDataReceivingProgress, deleteDataUpdateTime } from '../apis/loader';\n\nlet searchIndex = {};\nlet searchList = [];\nlet readyToSearch = false;\n\nexport async function prepareForMaterialSymbolsSearch() {\n  const requestID: string = generateIdentifier('r');\n  const materialSymbols = await getMaterialSymbols(requestID);\n\n  let index = {};\n  // let list = materialSymbols;\n\n  let i = 0;\n  for (const materialSymbol of materialSymbols) {\n    const unicodes = getUnicodes(materialSymbol, true);\n    for (const unicode of unicodes) {\n      const key = `u_${unicode}`;\n      if (!index.hasOwnProperty(key)) {\n        index[key] = [];\n      }\n      index[key].push(i);\n    }\n    i += 1;\n  }\n  searchList = materialSymbols;\n  searchIndex = index;\n  readyToSearch = true;\n  deleteDataReceivingProgress(requestID)\n  deleteDataUpdateTime(requestID)\n}\n\nfunction calculateMaterialSymbolsSearchResultScore(queryUnicodes: Array<number>, resultUnicodes: Array<number>): number {\n  // 1. The exact matches are highly prioritized here\n  // 2. The penalty mechanism is for missing matches\n  // 3. It might \"outlet\" partially relevant results\n  let score = 0;\n  let i = 0;\n  for (const unicode of resultUnicodes) {\n    const indexOfUnicode = queryUnicodes.indexOf(unicode, i);\n    if (indexOfUnicode > -1) {\n      score += indexOfUnicode;\n    } else {\n      score -= i;\n    }\n    i += 1;\n  }\n  if (queryUnicodes === resultUnicodes) {\n    score = Math.abs(score) * 10;\n  }\n  return score;\n}\n\nexport function searchForMaterialSymbols(query: string, limit: number): Array<string> {\n  if (!readyToSearch) {\n    return [];\n  }\n  const caseInsensitiveQuery = String(query).toLowerCase();\n  const queryUnicodes = getUnicodes(caseInsensitiveQuery, true);\n  const asIsQueryUnicodes = getUnicodes(caseInsensitiveQuery, false);\n  let unicodeGroups = [];\n  for (const unicode of queryUnicodes) {\n    const key = `u_${unicode}`;\n    if (searchIndex.hasOwnProperty(key)) {\n      unicodeGroups.push(searchIndex[key]);\n    }\n  }\n  unicodeGroups.sort(function (a, b) {\n    return a.length - b.length;\n  });\n  const unicodeGroupsLength1 = unicodeGroups.length - 1;\n  let intersection = [];\n  if (unicodeGroupsLength1 === 0) {\n    intersection = unicodeGroups[0];\n  }\n  if (unicodeGroupsLength1 > 0) {\n    for (let i = 0; i < unicodeGroupsLength1; i++) {\n      const currentGroup = unicodeGroups[i];\n      const nextGroup = unicodeGroups[i + 1];\n      if (i === 0) {\n        intersection = getIntersection(currentGroup, nextGroup);\n      } else {\n        intersection = getIntersection(intersection, nextGroup);\n      }\n    }\n  }\n  let result = [];\n  let quantity = 0;\n  for (const j of intersection) {\n    let thisItem = searchList[j];\n    if (quantity < limit) {\n      const score = calculateMaterialSymbolsSearchResultScore(asIsQueryUnicodes, getUnicodes(thisItem, false));\n      result.push({\n        item: thisItem,\n        score: score\n      });\n    } else {\n      break;\n    }\n  }\n  result.sort(function (a, b) {\n    return b.score - a.score;\n  });\n  return result;\n}\n","import { getSettingOptionValue } from '../settings/index';\nimport { convertPositionsToDistance } from '../../tools/convert';\n\ninterface position {\n  latitude: number;\n  longitude: number;\n}\n\nvar user_position = {\n  current: {\n    latitude: 0,\n    longitude: 0\n  },\n  permission: {\n    gained: false,\n    asked: false\n  },\n  id: 0\n};\n\nexport function askForPositioningPermission(): void {\n  function successHandler(position: any): void {\n    user_position.permission.gained = true;\n    user_position.current.latitude = position.coords.latitude;\n    user_position.current.longitude = position.coords.longitude;\n  }\n  function errorHandler(error: any): void {\n    var message = '';\n    // Check for known errors\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        message = 'This website does not have permission to use the Geolocation API';\n        break;\n      case error.POSITION_UNAVAILABLE:\n        message = 'The current position could not be determined.';\n        break;\n      case error.PERMISSION_DENIED_TIMEOUT:\n        message = 'The current position could not be determined ' + 'within the specified timeout period.';\n        break;\n    }\n    if (message == '') {\n      var strErrorCode = error.code.toString();\n      message = 'The position could not be determined due to ' + 'an unknown error (Code: ' + strErrorCode + ').';\n    }\n    console.log(message);\n  }\n  if (user_position.permission.asked === false && getSettingOptionValue('display_user_location')) {\n    user_position.permission.asked = true;\n    user_position.id = navigator.geolocation.watchPosition(successHandler, errorHandler, {\n      enableHighAccuracy: true,\n      timeout: 30000,\n      maximumAge: 0\n    });\n  }\n}\n\nexport function getUserPosition(): position {\n  if (user_position.permission.asked && user_position.permission.gained) {\n    return user_position.current;\n  }\n  if (!user_position.permission.asked && !user_position.permission.gained) {\n    askForPositioningPermission();\n    return user_position.current;\n  }\n  if (user_position.permission.asked && !user_position.permission.gained) {\n    return user_position.current;\n  }\n}\n\nexport function isNearUserPosition(latitude: number, longitude: number, radius: number = 450): boolean {\n  var currentUserPosition: position = getUserPosition();\n  var distance: number = convertPositionsToDistance(latitude, longitude, currentUserPosition.latitude, currentUserPosition.longitude);\n  if (distance <= radius) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function getNearestPosition(positions: Array<position>, radius: number = 450): position | null {\n  var currentUserPosition: position = getUserPosition();\n  var result = [];\n  for (var position of positions) {\n    var distance: number = convertPositionsToDistance(currentUserPosition.latitude, currentUserPosition.longitude, position.latitude, position.longitude);\n    if (distance <= radius) {\n      result.push({ position, distance });\n    }\n  }\n\n  if (result.length > 0) {\n    result = result.sort(function (a, b) {\n      return a.distance - b.distance;\n    });\n    return result[0].position;\n  } else {\n    return null;\n  }\n}\n","import { documentQuerySelector } from '../../tools/query-selector';\n\nfunction refreshPageWithTimeStamp(id: string, enforce: boolean = false): void {\n  // Get the URLSearchParams object from the current URL\n  const searchParams = new URLSearchParams(window.location.search);\n  // Set the 'timestamp' query parameter to the current timestamp\n  searchParams.set('v', id);\n  // Construct the new URL with updated query parameters\n  const newUrl = window.location.pathname + '?' + searchParams.toString();\n  if (enforce) {\n    // Redirect to the new URL\n    window.location.replace(newUrl);\n  } else {\n    history.replaceState(null, '', newUrl);\n  }\n}\n\ninterface AppVersion {\n  build: number;\n  hash: string;\n  full_hash: string;\n  branch_name: string; // branch name of the code base\n  timestamp: string; // timestamp in ISO fromat\n}\n\nasync function getAppVersion(): Promise<AppVersion | false> {\n  try {\n    const response = await fetch(`./version.json?_=${new Date().getTime()}`, {\n      cache: 'no-store'\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  } catch (error) {\n    console.error('There was a problem with the fetch operation:', error);\n    return false;\n  }\n}\n\nexport function getHTMLVersionHash(): string {\n  return documentQuerySelector('head meta[name=\"version-hash\"]').getAttribute('content');\n}\n\nexport function getHTMLVersionFullHash(): string {\n  return documentQuerySelector('head meta[name=\"version-full-hash\"]').getAttribute('content');\n}\n\nexport function getHTMLVersionBranchName(): string {\n  return documentQuerySelector('head meta[name=\"version-branch-name\"]').getAttribute('content');\n}\n\nexport function getCommitURLOfCurrentVersion(): string {\n  const currentFullHash = getHTMLVersionFullHash();\n  return `https://github.com/EricHsia7/bus/commit/${currentFullHash}`;\n}\n\nexport function getHTMLVersionTimeStamp(): string {\n  return documentQuerySelector('head meta[name=\"version-time-stamp\"]').getAttribute('content');\n}\n\ntype AppVersionStatus = 'fetchError' | 'unknownError' | 'refreshing' | 'ok';\n\nexport async function checkAppVersion(): Promise<AppVersionStatus> {\n  const appVersion = await getAppVersion();\n  if (typeof appVersion === 'boolean') {\n    if (appVersion === false) {\n      return 'fetchError';\n    } else {\n      return 'unknownError';\n    }\n  } else {\n    if (!(getHTMLVersionHash() === appVersion.hash)) {\n      refreshPageWithTimeStamp(appVersion.hash, true);\n      return 'refreshing';\n    } else {\n      refreshPageWithTimeStamp(appVersion.hash, false);\n      return 'ok';\n    }\n  }\n}\n","import { lfSetItem, lfGetItem, lfListItemKeys, isStoragePersistent } from '../storage/index';\nimport { dateToRelativeTime, formatTime } from '../../tools/time';\nimport { getHTMLVersionBranchName, getHTMLVersionHash, getHTMLVersionTimeStamp } from './version';\nimport { MaterialSymbols } from '../../interface/icons/material-symbols-type';\nimport { getNotificationClientStatus } from '../notification/index';\n\ntype SettingType = 'select' | 'page' | 'info' | 'action';\n\nexport interface SettingSelectOptionStringValue {\n  type: 0;\n  string: string;\n}\n\nexport interface SettingSelectOptionNumberValue {\n  type: 1;\n  number: number;\n}\n\nexport interface SettingSelectOptionBooleanValue {\n  type: 2;\n  boolean: boolean;\n}\n\nexport interface SettingSelectOptionRefreshIntervalValue {\n  type: 3;\n  baseInterval: number;\n  dynamic: boolean;\n}\n\nexport type SettingSelectOptionValue = SettingSelectOptionStringValue | SettingSelectOptionNumberValue | SettingSelectOptionBooleanValue | SettingSelectOptionRefreshIntervalValue;\n\nexport interface SettingSelectOption {\n  name: string;\n  value: SettingSelectOptionValue;\n  resourceIntensive: boolean;\n  powerSavingAlternative: -1 | number; // index of an option\n}\n\nexport type SettingSelectOptions = Array<SettingSelectOption>;\n\nexport interface SettingSelect {\n  key: string;\n  name: string;\n  icon: MaterialSymbols;\n  status: string;\n  action: string;\n  type: 'select';\n  default_option: number;\n  option: number;\n  options: SettingSelectOptions;\n  description: string;\n}\n\nexport interface SettingPage {\n  key: string;\n  name: string;\n  icon: MaterialSymbols;\n  status: string;\n  type: 'page';\n  action: string;\n  description: string;\n}\n\nexport interface SettingInfo {\n  key: string;\n  name: string;\n  icon: MaterialSymbols;\n  status: string;\n  type: 'info';\n  action: string;\n  description: string;\n}\n\nexport interface SettingAction {\n  key: string;\n  name: string;\n  icon: MaterialSymbols;\n  status: string;\n  type: 'action';\n  action: string;\n  description: string;\n}\n\nexport type Setting = SettingSelect | SettingPage | SettingInfo | SettingAction;\n\nexport type SettingsObject = { [key: string]: Setting };\n\nexport type SettingsArray = Array<Setting>;\n\nexport interface SettingWithOption {\n  key: string;\n  option: number;\n}\n\nexport type SettingsWithOptionsArray = Array<SettingWithOption>;\n\nconst SettingKeys: Array<string> = ['time_formatting_mode', 'refresh_interval', 'display_user_location', 'location_labels', 'proxy', 'folder', 'personal_schedule', 'notification', 'playing_animation', 'power_saving', 'data_usage', 'storage', 'persistent_storage', 'export', 'import', 'version', 'branch', 'last_update_date', 'github'];\n\nlet Settings: SettingsObject = {\n  time_formatting_mode: {\n    key: 'time_formatting_mode',\n    name: '預估時間格式',\n    icon: 'glyphs',\n    status: '',\n    action: `bus.settings.openSettingsOptions('time_formatting_mode')`,\n    type: 'select',\n    default_option: 0,\n    option: 0,\n    options: [\n      {\n        name: `${formatTime(11, 3)}/${formatTime(61, 3)}/${formatTime(60 * 61 + 1, 3)}`,\n        value: {\n          type: 1,\n          number: 3\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: `${formatTime(11, 2)}/${formatTime(61, 2)}/${formatTime(60 * 61 + 1, 2)}`,\n        value: {\n          type: 1,\n          number: 2\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: `${formatTime(11, 1)}/${formatTime(61, 1)}/${formatTime(60 * 61 + 1, 1)}`,\n        value: {\n          type: 1,\n          number: 1\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: `${formatTime(11, 0)}/${formatTime(61, 0)}/${formatTime(60 * 61 + 1, 0)}`,\n        value: {\n          type: 1,\n          number: 0\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ],\n    description: '在首頁、路線頁面、地點頁面上的預估公車到站時間的顯示格式。'\n  },\n  refresh_interval: {\n    key: 'refresh_interval',\n    name: '預估時間更新頻率',\n    icon: 'pace',\n    status: '',\n    action: `bus.settings.openSettingsOptions('refresh_interval')`,\n    type: 'select',\n    default_option: 0,\n    option: 0,\n    options: [\n      {\n        name: '自動',\n        value: {\n          baseInterval: 15 * 1000,\n          dynamic: true,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 2\n      },\n      {\n        name: '10秒',\n        value: {\n          baseInterval: 10 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 2\n      },\n      {\n        name: '20秒',\n        value: {\n          baseInterval: 20 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 3\n      },\n      {\n        name: '30秒',\n        value: {\n          baseInterval: 30 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 4\n      },\n      {\n        name: '40秒',\n        value: {\n          baseInterval: 40 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 5\n      },\n      {\n        name: '50秒',\n        value: {\n          baseInterval: 50 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 6\n      },\n      {\n        name: '60秒',\n        value: {\n          baseInterval: 60 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 6\n      }\n    ],\n    description: '在首頁、路線頁面、地點頁面上的預估公車到站時間、公車等即時資料更新的頻率。'\n  },\n  display_user_location: {\n    key: 'display_user_location',\n    name: '顯示所在位置',\n    icon: 'near_me',\n    status: '',\n    action: `bus.settings.openSettingsOptions('display_user_location')`,\n    type: 'select',\n    default_option: 1,\n    option: 1,\n    options: [\n      {\n        name: '開啟',\n        value: {\n          type: 2,\n          boolean: true\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 1\n      },\n      {\n        name: '關閉',\n        value: {\n          type: 2,\n          boolean: false\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ],\n    description: '是否在路線頁面上標註目前所在位置。若設為開啟，本應用程式將要求位置存取權限。'\n  },\n  location_labels: {\n    key: 'location_labels',\n    name: '站牌位置標籤',\n    icon: 'tag',\n    status: '',\n    action: `bus.settings.openSettingsOptions('location_labels')`,\n    type: 'select',\n    default_option: 0,\n    option: 0,\n    options: [\n      {\n        name: '行徑方向',\n        value: {\n          type: 0,\n          string: 'directions'\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: '地址特徵',\n        value: {\n          type: 0,\n          string: 'address'\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: '英文字母',\n        value: {\n          type: 0,\n          string: 'letters'\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ],\n    description: '用於區分位於同個地點的不同站牌。行徑方向表示可搭乘路線從本站到下一站的方向；地址特徵表示不同站牌的地址差異處；英文字母表示按照順序以字母編號。'\n  },\n  proxy: {\n    key: 'proxy',\n    name: '網路代理',\n    icon: 'router',\n    status: '',\n    action: `bus.settings.openSettingsOptions('proxy')`,\n    type: 'select',\n    default_option: 1,\n    option: 1,\n    options: [\n      {\n        name: '開啟',\n        value: {\n          type: 2,\n          boolean: true\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: '關閉',\n        value: {\n          type: 2,\n          boolean: false\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ],\n    description: '使用網路代理來擷取資料。'\n  },\n  folder: {\n    key: 'folder',\n    name: '資料夾',\n    icon: 'folder',\n    status: '',\n    type: 'page',\n    action: 'bus.folder.openFolderManager()',\n    description: ''\n  },\n  personal_schedule: {\n    key: 'personal_schedule',\n    name: '個人化行程',\n    icon: 'calendar_view_day',\n    status: '',\n    action: `bus.personalSchedule.openPersonalScheduleManager()`,\n    type: 'page',\n    description: ''\n  },\n  notification: {\n    key: 'notification',\n    name: '通知',\n    icon: 'notifications',\n    status: '',\n    action: `bus.notification.openNotificationScheduleManager()`,\n    type: 'page',\n    description: ''\n  },\n  playing_animation: {\n    key: 'playing_animation',\n    name: '動畫',\n    icon: 'animation',\n    description: '是否在介面中播放動畫。',\n    status: '',\n    type: 'select',\n    action: `bus.settings.openSettingsOptions('playing_animation')`,\n    default_option: 0,\n    option: 0,\n    options: [\n      {\n        name: '開啟',\n        value: {\n          type: 2,\n          boolean: true\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 1\n      },\n      {\n        name: '關閉',\n        value: {\n          type: 2,\n          boolean: false\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ]\n  },\n  power_saving: {\n    key: 'power_saving',\n    name: '省電模式',\n    icon: 'battery_low',\n    description: '暫停使用耗電功能來節省電力。',\n    status: '',\n    type: 'select',\n    action: `bus.settings.openSettingsOptions('power_saving')`,\n    default_option: 1,\n    option: 1,\n    options: [\n      {\n        name: '開啟',\n        value: {\n          type: 2,\n          boolean: true\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: '關閉',\n        value: {\n          type: 2,\n          boolean: false\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ]\n  },\n  data_usage: {\n    key: 'data_usage',\n    name: '網路使用量',\n    icon: 'bigtop_updates',\n    status: '',\n    type: 'page',\n    action: 'bus.dataUsage.openDataUsage()',\n    description: ''\n  },\n  storage: {\n    key: 'storage',\n    name: '儲存空間',\n    icon: 'database',\n    status: '',\n    type: 'page',\n    action: 'bus.storage.openStorage()',\n    description: ''\n  },\n  persistent_storage: {\n    key: 'persistent_storage',\n    name: '永久儲存',\n    icon: 'storage',\n    status: '',\n    action: `bus.settings.showPromptToAskForPersistentStorage()`,\n    type: 'action',\n    description: '開啟此選項以避免瀏覽器自動刪除重要資料。'\n  },\n  export: {\n    key: 'export',\n    name: '匯出資料',\n    icon: 'upload',\n    status: '',\n    type: 'action',\n    action: 'bus.settings.downloadExportFile()',\n    description: ''\n  },\n  import: {\n    key: 'import',\n    name: '匯入資料',\n    icon: 'download',\n    status: '',\n    type: 'action',\n    action: 'bus.settings.openFileToImportData()',\n    description: ''\n  },\n  version: {\n    key: 'version',\n    name: '版本',\n    icon: 'commit',\n    status: '',\n    type: 'info',\n    action: 'bus.settings.viewCommitOfCurrentVersion()',\n    description: ''\n  },\n  branch: {\n    key: 'branch',\n    name: '分支',\n    icon: 'rebase',\n    status: '',\n    type: 'info',\n    action: '',\n    description: ''\n  },\n  last_update_date: {\n    key: 'last_update_date',\n    name: '更新時間',\n    icon: 'update',\n    status: '',\n    type: 'info',\n    action: '',\n    description: ''\n  },\n  github: {\n    key: 'github',\n    name: 'GitHub',\n    icon: 'book_2',\n    status: '@EricHsia7/bus',\n    type: 'info',\n    action: '',\n    description: ''\n  }\n};\n\nexport async function initializeSettings(): Promise<boolean> {\n  const userSettings = await lfListItemKeys(1);\n  for (const key of userSettings) {\n    if (SettingKeys.indexOf(key) > -1) {\n      const userSetting = await lfGetItem(1, key);\n      if (!(userSetting === null)) {\n        if (Settings[key].type === 'select') {\n          var userSettingOption = parseInt(userSetting);\n          Settings[key].option = userSettingOption;\n        }\n      } else {\n        if (Settings[key].type === 'select') {\n          Settings[key].option = Settings[key].default_option;\n        }\n      }\n    }\n  }\n  return true;\n}\n\nexport async function listSettings(): Promise<SettingsArray> {\n  let result: SettingsArray = [];\n  for (const key in Settings) {\n    let item = Settings[key];\n    switch (item.type) {\n      case 'select':\n        item.status = item.options[item.option].name;\n        break;\n      case 'page':\n        switch (key) {\n          case 'notification':\n            item.status = getNotificationClientStatus() ? '已註冊' : '未註冊';\n            break;\n          default:\n            item.status = '';\n            break;\n        }\n        break;\n      case 'action':\n        item.status = '';\n        if (key === 'persistent_storage') {\n          item.status = (await isStoragePersistent()) ? '開啟' : '關閉';\n        }\n        break;\n      case 'info':\n        if (key === 'version') {\n          item.status = getHTMLVersionHash();\n        }\n        if (key === 'branch') {\n          item.status = getHTMLVersionBranchName();\n        }\n        if (key === 'last_update_date') {\n          const date = new Date(getHTMLVersionTimeStamp());\n          item.status = dateToRelativeTime(date);\n        }\n        break;\n      default:\n        break;\n    }\n    result.push(item);\n  }\n  return result;\n}\n\nexport function listSettingsWithOptions(): SettingsWithOptionsArray {\n  let result: SettingsWithOptionsArray = [];\n  for (const key in Settings) {\n    if (SettingKeys.indexOf(key) > -1) {\n      if (Settings.hasOwnProperty(key)) {\n        if (Settings[key].type === 'select') {\n          const item: SettingWithOption = {\n            key: key,\n            option: Settings[key].option\n          };\n          result.push(item);\n        }\n      }\n    }\n  }\n  return result;\n}\n\nexport async function changeSettingOption(key: string, option: number): Promise<boolean> {\n  if (SettingKeys.indexOf(key) > -1) {\n    if (Settings.hasOwnProperty(key)) {\n      if (Settings[key].type === 'select') {\n        if (!(Settings[key].options[option] === undefined) && !(Settings[key].options[option] === null)) {\n          await lfSetItem(1, key, option);\n          Settings[key].option = option;\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\nexport function getSetting(key: string): Setting | undefined {\n  if (SettingKeys.indexOf(key) > -1) {\n    if (Settings.hasOwnProperty(key)) {\n      return Settings[key];\n    }\n  }\n}\n\nexport function getSettingOptionValue(key: string): SettingSelectOptionStringValue['string'] | SettingSelectOptionNumberValue['number'] | SettingSelectOptionBooleanValue['boolean'] | SettingSelectOptionRefreshIntervalValue {\n  if (SettingKeys.indexOf(key) > -1) {\n    if (Settings.hasOwnProperty(key)) {\n      const powerSavingSetting = Settings['power_saving'] as SettingSelect;\n      const powerSavingSettingValue = powerSavingSetting.options[powerSavingSetting.option].value as SettingSelectOptionBooleanValue;\n      const powerSavingSettingValueBoolean = powerSavingSettingValue.boolean;\n      const thisSetting = Settings[key] as SettingSelect;\n      let thisSettingOption = thisSetting.options[thisSetting.option];\n      if (powerSavingSettingValueBoolean) {\n        if (thisSettingOption.resourceIntensive) {\n          thisSettingOption = thisSetting.options[thisSettingOption.powerSavingAlternative];\n        }\n      }\n      const thisSettingValue = thisSettingOption.value;\n      switch (thisSettingValue.type) {\n        case 0:\n          return thisSettingValue.string as string;\n          break;\n        case 1:\n          return thisSettingValue.number as number;\n          break;\n        case 2:\n          return thisSettingValue.boolean as boolean;\n          break;\n        case 3:\n          return thisSettingValue as SettingSelectOptionRefreshIntervalValue;\n          break;\n        default:\n          return '' as string;\n          break;\n      }\n    }\n  }\n  return '';\n}\n","const localforage = require('localforage');\n\nlet storage = {\n  cacheStore: false, // 0\n  settingsStore: false, // 1\n  dataUsageStatsStore: false, // 2\n  updateRateDataStore: false, // 3\n  updateRateDataWriteAheadLogStore: false, // 4\n  busArrivalTimeDataWriteAheadLogStore: false, // 5\n  busArrivalTimeDataStore: false, // 6\n  personalScheduleStore: false, // 7\n  recentViewsStore: false, // 8\n  notificationStore: false, // 9\n  notificationScheduleStore: false, // 10\n  folderListStore: false, // 11\n  folderContentIndexStore: false, // 12\n  folderContentStore: false // 13\n};\n\nconst stores = ['cacheStore', 'settingsStore', 'dataUsageStatsStore', 'updateRateDataStore', 'updateRateDataWriteAheadLogStore', 'busArrivalTimeDataWriteAheadLogStore', 'busArrivalTimeDataStore', 'personalScheduleStore', 'recentViewsStore', 'notificationStore', 'notificationScheduleStore', 'folderListStore', 'folderContentIndexStore', 'folderContentStore'];\n\nasync function dropInstance(store: number): Promise<any> {\n  const storeKey = stores[store];\n  if (storage[storeKey] === false) {\n    storage[storeKey] = await localforage.createInstance({\n      name: storeKey\n    });\n  }\n  const operation = await storage[storeKey].dropInstance();\n  return operation;\n}\n\nexport async function lfSetItem(store: number, key: string, value: any): Promise<any> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const operation = await storage[storeKey].setItem(key, value);\n    return operation;\n  } catch (err) {\n    console.error(err);\n    // await dropInstance(store);\n    return null;\n  }\n}\n\nexport async function lfGetItem(store: number, key: string): Promise<any> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const operation = await storage[storeKey].getItem(key);\n    return operation;\n  } catch (err) {\n    console.error(err);\n    // await dropInstance(store);\n    return null;\n  }\n}\n\nexport async function lfRemoveItem(store: number, key: string): Promise<any> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const operation = await storage[storeKey].removeItem(key);\n    return operation;\n  } catch (err) {\n    console.error(err);\n    // await dropInstance(store);\n    return null;\n  }\n}\n\nexport async function lfListItemKeys(store: number): Promise<Array<string>> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const keys = await storage[storeKey].keys();\n    return keys;\n  } catch (err) {\n    console.error(err);\n    return [];\n  }\n}\n\nexport function getStoreKey(store: number): string {\n  return stores[store];\n}\n\nexport function getStoresLength(): number {\n  return stores.length;\n}\n\n/*\nexport async function registerStore(id: string): Promise<number> {\n  const storeKey = `F${id}Store`;\n  if (!storage.hasOwnProperty(storeKey) && stores.indexOf(storeKey) < 0) {\n    storage[storeKey] = await localforage.createInstance({\n      name: storeKey\n    });\n    stores.push(storeKey);\n    return stores.length - 1;\n  } else {\n    return stores.indexOf(storeKey);\n  }\n}\n*/\n\nexport async function isStoragePersistent(): Promise<boolean> {\n  // Check if site's storage has been marked as persistent\n  if (navigator.storage) {\n    if (navigator.storage.persist) {\n      const isPersisted = await navigator.storage.persisted();\n      return isPersisted;\n    }\n  }\n  return false;\n}\n\nexport async function askForPersistentStorage(): Promise<'granted' | 'denied' | 'unsupported'> {\n  // Request persistent storage for site\n  if (navigator.storage) {\n    if (navigator.storage.persist) {\n      const isPersisted = await navigator.storage.persist();\n      return isPersisted ? 'granted' : 'denied';\n    }\n  }\n  return 'unsupported';\n}\n","import { lfGetItem, lfSetItem } from '../storage/index';\n\ninterface CompatibilityTag {\n  timestamp: string; // timestamp in ISO format (the date after which changes will take effect)\n  script: Function | null;\n}\n\nconst compatibilityTags: Array<CompatibilityTag> = [\n  {\n    timestamp: '2025-02-08T00:00:00.000Z',\n    script: null\n  },\n  {\n    timestamp: '2025-02-09T00:00:00.000Z',\n    script: null\n    /* async function () {\n      const savedStopFolderID = await createFolder('已收藏站牌', 'location_on');\n      const savedStopFolderKeys = await lfListItemKeys(13);\n      for (const key of savedStopFolderKeys) {\n        const contentJSON = await lfGetItem(13, key);\n        const contentObject = JSON.parse(contentJSON) as Folder;\n        contentObject.timestamp = new Date(contentObject.time).getTime();\n        delete contentObject.default;\n        delete contentObject.index;\n        delete contentObject.storeIndex;\n        delete contentObject.contentType;\n        delete contentObject.time;\n        await saveToFolder(savedStopFolderID, contentObject);\n      }\n\n      const savedRouteFolderID = await createFolder('已收藏路線', 'route');\n      const savedRouteFolderKeys = await lfListItemKeys(13);\n      for (const key of savedRouteFolderKeys) {\n        const contentJSON = await lfGetItem(13, key);\n        const contentObject = JSON.parse(contentJSON) as Folder;\n        contentObject.timestamp = new Date(contentObject.time).getTime();\n        delete contentObject.default;\n        delete contentObject.index;\n        delete contentObject.storeIndex;\n        delete contentObject.contentType;\n        delete contentObject.time;\n        await saveToFolder(savedRouteFolderID, contentObject);\n      }\n\n      const customFolderKeys = await lfListItemKeys(11);\n      for (const folderKey of customFolderKeys) {\n        const thisFolderJSON = await lfGetItem(11, folderKey);\n        const thisFolderObject = JSON.parse(thisFolderJSON) as Folder;\n        const storeIndex = await registerStore(thisFolderObject.id);\n        const contentKeys = await lfListItemKeys(storeIndex);\n        await lfSetItem(12, folderKey, JSON.stringify(contentKeys));\n        for (const contentKey of contentKeys) {\n          const contentJSON = await lfGetItem(storeIndex, contentKey);\n          const contentObject = JSON.parse(contentJSON) as FolderContentStop | FolderContentRoute | FolderContentBus;\n          contentObject.timestamp = new Date(contentObject.time).getTime();\n          delete contentObject.time;\n          delete contentObject.index;\n          await lfSetItem(13, contentKey, JSON.stringify(contentObject));\n        }\n      }\n    } */\n  }\n];\n\nconst compatibilityTagQuantity = compatibilityTags.length;\n\nexport async function checkCompatibility(): Promise<boolean> {\n  const now = new Date();\n  const nowTime = now.getTime();\n  const key = 'compatibility';\n  const timestamp_key = `${key}_timestamp`;\n  const currentCompatibilityTimestamp = await lfGetItem(1, timestamp_key);\n  if (currentCompatibilityTimestamp) {\n    const currentCompatibilityTime = new Date(currentCompatibilityTimestamp).getTime();\n    let startIndex = -1;\n    for (let i = compatibilityTagQuantity - 1; i >= 0; i--) {\n      const thisCompatibilityTag = compatibilityTags[i];\n      const thisCompatibilityTime = new Date(thisCompatibilityTag.timestamp).getTime();\n      if (currentCompatibilityTime > thisCompatibilityTime) {\n        startIndex = i + 1;\n        break;\n      }\n    }\n    if (startIndex !== -1) {\n      for (let j = startIndex; j < compatibilityTagQuantity; j++) {\n        const thisCompatibilityTag = compatibilityTags[j];\n        const thisCompatibilityTagTimestamp = thisCompatibilityTag.timestamp;\n        const thisCompatibilityTagTime = new Date(thisCompatibilityTagTimestamp).getTime();\n        const thisCompatibilityTagScript = thisCompatibilityTag.script;\n        if (thisCompatibilityTagTime > nowTime) {\n          break;\n        }\n        if (typeof thisCompatibilityTagScript === 'function') {\n          if (thisCompatibilityTagScript.constructor.name === 'AsyncFunction') {\n            await thisCompatibilityTagScript();\n          } else {\n            thisCompatibilityTagScript();\n          }\n        }\n      }\n    }\n    await lfSetItem(1, timestamp_key, now.toISOString());\n    return true;\n  } else {\n    await lfSetItem(1, timestamp_key, now.toISOString());\n    return true;\n  }\n}\n","import { getRoute, SimplifiedRoute, SimplifiedRouteItem } from '../apis/getRoute/index';\nimport { getLocation, MergedLocation } from '../apis/getLocation/index';\nimport { generateIdentifier } from '../../tools/index';\nimport { getIntersection } from '../../tools/array';\nimport { getUnicodes } from '../../tools/text';\nimport { getCarInfo, SimplifiedCarInfo } from '../apis/getCarInfo/index';\nimport { deleteDataReceivingProgress, deleteDataUpdateTime } from '../apis/loader';\n\nexport async function searchRouteByName(query: string): Promise<Array<SimplifiedRouteItem>> {\n  const requestID = generateIdentifier('r');\n  const Route = (await getRoute(requestID, true)) as SimplifiedRoute;\n  let result: Array<SimplifiedRouteItem> = [];\n  for (const key in Route) {\n    const thisRoute = Route[key];\n    if (String(thisRoute.n).indexOf(query) > -1) {\n      result.push(thisRoute);\n    }\n  }\n  deleteDataReceivingProgress(requestID);\n  deleteDataUpdateTime(requestID);\n  return result;\n}\n\nexport async function searchRouteByRouteID(RouteID: number): Promise<SimplifiedRouteItem | false> {\n  const requestID = generateIdentifier('r');\n  const Route = (await getRoute(requestID, true)) as SimplifiedRoute;\n  let found: boolean = false;\n  let result = {} as SimplifiedRouteItem;\n  const routeKey = `r_${RouteID}`;\n  if (Route.hasOwnProperty(routeKey)) {\n    result = Route[routeKey];\n    found = true;\n  }\n  deleteDataReceivingProgress(requestID);\n  deleteDataUpdateTime(requestID);\n  return found ? result : false;\n}\n\nexport async function searchRouteByPathAttributeId(PathAttributeId: number): Promise<Array<SimplifiedRouteItem>> {\n  const requestID = generateIdentifier('r');\n  const Route = (await getRoute(requestID, true)) as SimplifiedRoute;\n  let result: Array<SimplifiedRouteItem> = [];\n  for (const key in Route) {\n    const thisRoute = Route[key];\n    if (String(thisRoute.pid).indexOf(PathAttributeId) > -1) {\n      result.push(thisRoute);\n    }\n  }\n  deleteDataReceivingProgress(requestID);\n  deleteDataUpdateTime(requestID);\n  return result;\n}\n\ninterface SearchItem {\n  id: string | number | Array<number>;\n  pid: Array<number>;\n  dep: string;\n  des: string;\n  n: string;\n  hash: string;\n  lo: Array<number>;\n  la: Array<number>;\n  r: Array<Array<number>>;\n  s: Array<Array<number>>;\n  type: 0 | 1 | 2; // 0: route, 1: location, 2: car info\n}\n\nexport interface SearchResult {\n  item: SearchItem;\n  score: number;\n}\n\ntype SearchIndex = { [unicodeKey: string]: number };\n\nlet searchIndex: SearchIndex = {};\nlet searchList: Array<SearchItem> = [];\nlet readyToSearch: boolean = false;\n\nexport async function prepareForSearch() {\n  const requestID = generateIdentifier('r');\n  const Route = (await getRoute(requestID, true)) as SimplifiedRoute;\n  const mergedLocation = (await getLocation(requestID, true)) as MergedLocation;\n  const CarInfo = (await getCarInfo(requestID, true)) as SimplifiedCarInfo;\n  let index: SearchIndex = {};\n  let list: Array<SearchItem> = [];\n  let i: number = 0;\n  for (const key in Route) {\n    const thisRoute = Route[key];\n    const thisItem = {\n      id: thisRoute.id,\n      pid: thisRoute.pid,\n      dep: thisRoute.dep,\n      des: thisRoute.des,\n      n: thisRoute.n,\n      hash: '',\n      lo: '',\n      la: '',\n      r: '',\n      s: '',\n      type: 0\n    };\n    list.push(thisItem);\n    const unicodes = getUnicodes(`${thisItem.n}${thisItem.dep}${thisItem.des}`, true);\n    for (const unicode of unicodes) {\n      const key = `u_${unicode}`;\n      if (!index.hasOwnProperty(key)) {\n        index[key] = [];\n      }\n      index[key].push(i);\n    }\n    i += 1;\n  }\n  for (const key in mergedLocation) {\n    const thisLocation = mergedLocation[key];\n    const thisItem = {\n      id: thisLocation.id,\n      n: thisLocation.n,\n      lo: thisLocation.lo,\n      la: thisLocation.la,\n      r: thisLocation.r,\n      s: thisLocation.s,\n      hash: thisLocation.hash,\n      dep: '',\n      des: '',\n      pid: [],\n      type: 1\n    };\n    list.push(thisItem);\n    const unicodes = getUnicodes(thisItem.n, true);\n    for (const unicode of unicodes) {\n      const key = `u_${unicode}`;\n      if (!index.hasOwnProperty(key)) {\n        index[key] = [];\n      }\n      index[key].push(i);\n    }\n    i += 1;\n  }\n  for (const key in CarInfo) {\n    const thisCarInfo = CarInfo[key];\n    const thisItem = {\n      id: thisCarInfo.BusId,\n      pid: [],\n      dep: '',\n      des: '',\n      n: thisCarInfo.CarNum,\n      hash: '',\n      lo: '',\n      la: '',\n      r: '',\n      s: '',\n      type: 2\n    };\n    list.push(thisItem);\n    const unicodes = getUnicodes(thisItem.n, true);\n    for (const unicode of unicodes) {\n      const key = `u_${unicode}`;\n      if (!index.hasOwnProperty(key)) {\n        index[key] = [];\n      }\n      index[key].push(i);\n    }\n    i += 1;\n  }\n  searchIndex = index;\n  searchList = list;\n  readyToSearch = true;\n  deleteDataReceivingProgress(requestID);\n  deleteDataUpdateTime(requestID);\n}\n\nfunction calculateSearchResultScore(queryUnicodes: Array<number>, resultUnicodes: Array<number>): number {\n  // 1. Index data by characters for entries well-differentiated in characters\n  // 2. The results are ranked by positional difference for relevance\n  // 3. Some entries are prioritized for exact matches\n  let score = 0;\n  let i = 0;\n  for (const unicode of resultUnicodes) {\n    const indexOfUnicode = queryUnicodes.indexOf(unicode, i);\n    score += indexOfUnicode - i;\n    i += 1;\n  }\n  if (queryUnicodes === resultUnicodes) {\n    score = Math.abs(score) * 10;\n  }\n  return score;\n}\n\nexport function searchFor(query: string, limit: number): Array<SearchResult> {\n  if (!readyToSearch) {\n    return [];\n  }\n\n  const queryUnicodes = getUnicodes(query, true);\n  const asIsQueryUnicodes = getUnicodes(query, false);\n  let unicodeGroups = [];\n\n  for (const unicode of queryUnicodes) {\n    const key = `u_${unicode}`;\n    if (searchIndex.hasOwnProperty(key)) {\n      unicodeGroups.push(searchIndex[key]);\n    }\n  }\n\n  unicodeGroups.sort(function (a, b) {\n    return a.length - b.length;\n  });\n\n  const unicodeGroupsLength1 = unicodeGroups.length - 1;\n  let intersection = [];\n\n  if (unicodeGroupsLength1 === 0) {\n    intersection = unicodeGroups[0];\n  }\n\n  if (unicodeGroupsLength1 > 0) {\n    for (let i = 0; i < unicodeGroupsLength1; i++) {\n      const currentGroup = unicodeGroups[i];\n      const nextGroup = unicodeGroups[i + 1];\n      if (i === 0) {\n        intersection = getIntersection(currentGroup, nextGroup);\n      } else {\n        intersection = getIntersection(intersection, nextGroup);\n      }\n    }\n  }\n\n  let result: Array<SearchResult> = [];\n  let quantity = 0;\n\n  // Prioritize exact matches for buses\n  const exactMatches = searchList.filter((item) => item.n === query && item.type === 2);\n  const exactMatchIds = new Set(); // To track exact matches to avoid duplicates\n  for (const item of exactMatches) {\n    result.push({\n      item: item,\n      score: Infinity // Highest possible score for exact matches\n    });\n    exactMatchIds.add(item.id);\n    quantity += 1;\n    if (quantity >= limit) {\n      break;\n    }\n  }\n\n  if (quantity < limit) {\n    for (const j of intersection) {\n      let thisItem = searchList[j];\n      if (!exactMatchIds.has(thisItem.id)) {\n        // Check if the item is not already an exact match\n        const score = calculateSearchResultScore(asIsQueryUnicodes, getUnicodes(thisItem.n, false));\n        if (quantity < limit) {\n          result.push({\n            item: thisItem,\n            score: score\n          });\n        } else {\n          break;\n        }\n        quantity += 1;\n      }\n    }\n  }\n\n  result.sort(function (a, b) {\n    return b.score - a.score;\n  });\n\n  return result;\n}\n"],"names":["searchIndex","searchList","readyToSearch","prepareForMaterialSymbolsSearch","_prepareForMaterialSymbolsSearch","apply","arguments","_step4","requestID","generateIdentifier","materialSymbols","getMaterialSymbols","index","i","_iterator4","_createForOfIteratorHelper","s","n","done","_step5","materialSymbol","value","_iterator5","getUnicodes","unicode","key","concat","hasOwnProperty","push","err","e","f","deleteDataReceivingProgress","deleteDataUpdateTime","calculateMaterialSymbolsSearchResultScore","queryUnicodes","resultUnicodes","_step","score","_iterator","indexOfUnicode","indexOf","Math","abs","searchForMaterialSymbols","query","limit","_step2","caseInsensitiveQuery","String","toLowerCase","asIsQueryUnicodes","unicodeGroups","_iterator2","sort","a","b","length","unicodeGroupsLength1","intersection","currentGroup","nextGroup","getIntersection","_step3","result","_iterator3","j","thisItem","item","user_position","current","latitude","longitude","permission","gained","asked","id","askForPositioningPermission","getSettingOptionValue","navigator","geolocation","watchPosition","position","coords","error","message","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","PERMISSION_DENIED_TIMEOUT","toString","console","log","enableHighAccuracy","timeout","maximumAge","getUserPosition","getNearestPosition","positions","radius","undefined","currentUserPosition","distance","convertPositionsToDistance","refreshPageWithTimeStamp","enforce","searchParams","URLSearchParams","window","location","search","set","newUrl","pathname","replace","history","replaceState","_getAppVersion","_asyncToGenerator","response","fetch","Date","getTime","cache","ok","Error","json","getHTMLVersionHash","documentQuerySelector","getAttribute","getHTMLVersionBranchName","getCommitURLOfCurrentVersion","currentFullHash","getHTMLVersionTimeStamp","checkAppVersion","_checkAppVersion","appVersion","getAppVersion","hash","SettingKeys","Settings","time_formatting_mode","name","icon","status","action","type","default_option","option","options","formatTime","number","resourceIntensive","powerSavingAlternative","description","refresh_interval","baseInterval","dynamic","display_user_location","boolean","location_labels","string","proxy","folder","personal_schedule","notification","playing_animation","power_saving","data_usage","storage","persistent_storage","export","import","version","branch","last_update_date","github","initializeSettings","_initializeSettings","lfListItemKeys","userSetting","lfGetItem","userSettingOption","parseInt","listSettings","_listSettings","getNotificationClientStatus","isStoragePersistent","date","dateToRelativeTime","listSettingsWithOptions","changeSettingOption","_x","_x2","_changeSettingOption","lfSetItem","getSetting","powerSavingSetting","powerSavingSettingValueBoolean","thisSetting","thisSettingOption","thisSettingValue","localforage","require","cacheStore","settingsStore","dataUsageStatsStore","updateRateDataStore","updateRateDataWriteAheadLogStore","busArrivalTimeDataWriteAheadLogStore","busArrivalTimeDataStore","personalScheduleStore","recentViewsStore","notificationStore","notificationScheduleStore","folderListStore","folderContentIndexStore","folderContentStore","stores","_x3","_x4","_lfSetItem","store","storeKey","createInstance","setItem","_x5","_x6","_lfGetItem","getItem","lfRemoveItem","_x7","_x8","_lfRemoveItem","removeItem","_x9","_lfListItemKeys","keys","getStoreKey","getStoresLength","_isStoragePersistent","persist","persisted","askForPersistentStorage","_askForPersistentStorage","compatibilityTags","timestamp","script","compatibilityTagQuantity","checkCompatibility","_checkCompatibility","now","nowTime","timestamp_key","currentCompatibilityTimestamp","currentCompatibilityTime","startIndex","thisCompatibilityTag","thisCompatibilityTagTimestamp","thisCompatibilityTagTime","thisCompatibilityTagScript","constructor","toISOString","searchRouteByName","_searchRouteByName","Route","getRoute","thisRoute","searchRouteByRouteID","_searchRouteByRouteID","RouteID","found","routeKey","searchRouteByPathAttributeId","_searchRouteByPathAttributeId","PathAttributeId","pid","prepareForSearch","_prepareForSearch","mergedLocation","getLocation","CarInfo","getCarInfo","list","dep","des","lo","la","r","thisLocation","_step6","_iterator6","thisCarInfo","BusId","CarNum","_step7","_iterator7","calculateSearchResultScore","searchFor","quantity","exactMatches","filter","exactMatchIds","Set","Infinity","add","has"],"sourceRoot":""}