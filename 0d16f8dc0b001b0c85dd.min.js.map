{"version":3,"file":"0d16f8dc0b001b0c85dd.min.js","mappings":"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","sources":["webpack://bus/./src/data/analytics/bus-arrival-time.ts"],"sourcesContent":["import { generateIdentifier } from '../../tools/index';\nimport { aggregateNumbers } from '../../tools/math';\nimport { TimeObject, timeObjectToString } from '../../tools/time';\nimport { EstimateTime } from '../apis/getEstimateTime/index';\nimport { listFoldersWithContent } from '../folder/index';\nimport { isInPersonalSchedule, listPersonalSchedules } from '../personal-schedule/index';\nimport { lfGetItem, lfListItemKeys, lfSetItem } from '../storage/index';\n\nconst trackingBusArrivalTime_monitorTimes: number = 32;\nlet trackingBusArrivalTime_trackingID: string = '';\nlet trackingBusArrivalTime_tracking: boolean = false;\nlet trackingBusArrivalTime_trackedStops: Array = [];\nlet trackingBusArrivalTime_incompleteRecords = {};\nlet trackingBusArrivalTime_currentDataLength: number = 0;\n\ninterface EstimateTimeRecordForBusArrivalTime {\n  EstimateTime: number;\n  timeStamp: number;\n}\n\ninterface EstimateTimeRecordForBusArrivalTimeObject {\n  trackingID: string;\n  timeStamp: number;\n  data: { [key: string]: Array<EstimateTimeRecordForBusArrivalTime> };\n}\n\nexport async function recordEstimateTimeForBusArrivalTime(EstimateTime: EstimateTime): void {\n  const now = new Date();\n  const currentTimeStamp: number = now.getTime();\n  let needToReset = false;\n  if (!trackingBusArrivalTime_tracking) {\n    trackingBusArrivalTime_tracking = true;\n    trackingBusArrivalTime_trackingID = generateIdentifier('b');\n    trackingBusArrivalTime_trackedStops = [];\n    trackingBusArrivalTime_incompleteRecords = {\n      trackingID: trackingBusArrivalTime_trackingID,\n      timeStamp: currentTimeStamp,\n      data: {}\n    };\n    trackingBusArrivalTime_currentDataLength = 0;\n    const foldersWithContent = await listFoldersWithContent();\n    for (const folderWithContent1 of foldersWithContent) {\n      trackingBusArrivalTime_trackedStops = trackingBusArrivalTime_trackedStops.concat(\n        folderWithContent1.content\n          .filter((m) => {\n            return m.type === 'stop' ? true : false;\n          })\n          .map((e) => e.id)\n      );\n    }\n  }\n  if (isInPersonalSchedule(now)) {\n    for (const item of EstimateTime) {\n      const stopID = item.StopID;\n      const stopKey = `s_${stopID}`;\n      if (trackingBusArrivalTime_trackedStops.indexOf(stopID) > -1) {\n        if (!trackingBusArrivalTime_incompleteRecords.data.hasOwnProperty(stopKey)) {\n          trackingBusArrivalTime_incompleteRecords.data[stopKey] = [];\n        }\n        trackingBusArrivalTime_incompleteRecords.data[stopKey].push({ EstimateTime: parseInt(item.EstimateTime), timeStamp: currentTimeStamp });\n        trackingBusArrivalTime_currentDataLength += 1;\n        if (trackingBusArrivalTime_currentDataLength > trackingBusArrivalTime_monitorTimes) {\n          needToReset = true;\n        }\n      }\n    }\n    if (needToReset || trackingBusArrivalTime_currentDataLength % 8 === 0) {\n      await lfSetItem(4, trackingBusArrivalTime_trackingID, JSON.stringify(trackingBusArrivalTime_incompleteRecords));\n    }\n    if (needToReset) {\n      trackingBusArrivalTime_tracking = false;\n    }\n  }\n}\n\nexport async function discardExpiredEstimateTimeRecordsForBusArrivalTime(): void {\n  const keys = await lfListItemKeys(4);\n  for (const key of keys) {\n    const json = await lfGetItem(4, key);\n    const object: object = JSON.parse(json);\n    if (new Date().getTime() - object.timeStamp > 60 * 60 * 24 * 30 * 1000) {\n      await lfRemoveItem(4, key);\n    }\n  }\n}\n\nexport async function getBusArrivalTimes(): Promise<object> {\n  // Merge data by stops\n  let recordsGroupedByStops = {};\n  const keys = await lfListItemKeys(4);\n  for (const key of keys) {\n    const existingRecord = await lfGetItem(4, key);\n    const existingRecordObject: EstimateTimeRecordForBusArrivalTimeObject = JSON.parse(existingRecord);\n    for (const stopKey1 in existingRecordObject.data) {\n      if (!recordsGroupedByStops.hasOwnProperty(stopKey1)) {\n        recordsGroupedByStops[stopKey1] = [];\n      }\n      recordsGroupedByStops[stopKey1] = recordsGroupedByStops[stopKey1].concat(existingRecordObject.data[stopKey1]);\n    }\n  }\n\n  // Extract Arrival Times\n  let busArrivalTimesGroupedByStops = {};\n  for (const stopKey2 in recordsGroupedByStops) {\n    let recordsOfThisStop = recordsGroupedByStops[stopKey2];\n    recordsOfThisStop.sort(function (a, b) {\n      return a.timeStamp - b.timeStamp;\n    });\n    const recordsOfThisStopLength = recordsOfThisStop.length;\n    let EstimateTimeInThisPeriod = [];\n    let busArrivalTimeInThisPeriod = [];\n    for (let i = 0; i < recordsOfThisStopLength; i++) {\n      const currentRecord = recordsOfThisStop[i];\n      const nextRecord = recordsOfThisStop[i + 1] || recordsOfThisStop[i];\n\n      const currentRecordEstimateTime = currentRecord.EstimateTime;\n      const nextRecordEstimateTime = nextRecord.EstimateTime;\n\n      const delta = nextRecordEstimateTime - currentRecordEstimateTime;\n      if (delta < 0 && currentRecordEstimateTime >= 0) {\n        // decreasing estimate time value\n        EstimateTimeInThisPeriod.push(currentRecord);\n      } else {\n        EstimateTimeInThisPeriod.sort(function (a, b) {\n          return a.EstimateTime - b.EstimateTime;\n        });\n        if (EstimateTimeInThisPeriod.length > 0) {\n          const closestRecord = EstimateTimeInThisPeriod[0];\n          busArrivalTimeInThisPeriod.push(new Date(closestRecord.timeStamp + closestRecord.EstimateTime * 1000));\n        }\n        EstimateTimeInThisPeriod = [];\n      }\n    }\n    busArrivalTimesGroupedByStops[stopKey2] = busArrivalTimeInThisPeriod;\n  }\n\n  // Group bus arrival times by stops and personal schedules\n  const personalSchedules = await listPersonalSchedules();\n  let result = {};\n  for (const personalSchedule of personalSchedules) {\n    const personalScheduleID = personalSchedule.id;\n    const personalScheduleName = personalSchedule.name;\n\n    // Iterate over each stop in busArrivalTimesGroupedByStops\n    for (const stopKey3 in busArrivalTimesGroupedByStops) {\n      // Initialize the structure for each stop in the result\n      if (!result.hasOwnProperty(stopKey3)) {\n        result[stopKey3] = {};\n      }\n\n      if (!result[stopKey3].hasOwnProperty(personalScheduleID)) {\n        result[stopKey3][personalScheduleID] = {\n          name: personalScheduleName,\n          id: personalScheduleID,\n          busArrivalTimes: []\n        };\n      }\n\n      let busArrivalTimes = [];\n      for (const busArrivalTime of busArrivalTimesGroupedByStops[stopKey3]) {\n        const busArrivalTimeDay = busArrivalTime.getDay();\n        const busArrivalTimeHours = busArrivalTime.getHours();\n        const busArrivalTimeMinutes = busArrivalTime.getMinutes();\n\n        // Check if the personal schedule covers this day\n        if (personalSchedule.days.indexOf(busArrivalTimeDay) > -1) {\n          const totalMinutes = busArrivalTimeHours * 60 + busArrivalTimeMinutes;\n          const scheduleTotalStartMinutes = personalSchedule.period.start.hours * 60 + personalSchedule.period.start.minutes;\n          const scheduleTotalEndMinutes = personalSchedule.period.end.hours * 60 + personalSchedule.period.end.minutes;\n\n          // Check if the bus time falls within the personal schedule's time period\n          if (totalMinutes >= scheduleTotalStartMinutes && totalMinutes <= scheduleTotalEndMinutes) {\n            // Add the bus arrival time to the result\n            busArrivalTimes.push(totalMinutes);\n          }\n        }\n      }\n\n      // Aggregate bus arrival times\n      const aggregatedBusArrivalTimes = aggregateNumbers(aggregateNumbers(busArrivalTimes, 1.37), 1.37);\n\n      let aggregatedBusArrivalTimeObjects = [];\n      for (const aggregatedBusArrivalTime of aggregatedBusArrivalTimes) {\n        const totalMinutes = Math.floor(aggregatedBusArrivalTime);\n        const minutes = totalMinutes % 60;\n        const hours = (totalMinutes - minutes) / 60;\n        const timeObject: TimeObject = {\n          hours: hours,\n          minutes: minutes\n        };\n        aggregatedBusArrivalTimeObjects.push({\n          time: timeObjectToString(timeObject),\n          personalSchedule: personalSchedule\n        });\n      }\n\n      result[stopKey3][personalScheduleID].busArrivalTimes = aggregatedBusArrivalTimeObjects;\n    }\n  }\n\n  return result;\n}\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_createForOfIteratorHelper","Array","isArray","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_n","F","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","trackingBusArrivalTime_trackingID","trackingBusArrivalTime_tracking","trackingBusArrivalTime_trackedStops","trackingBusArrivalTime_incompleteRecords","trackingBusArrivalTime_currentDataLength","recordEstimateTimeForBusArrivalTime","_x","_recordEstimateTimeForBusArrivalTime","_callee","EstimateTime","now","currentTimeStamp","needToReset","foldersWithContent","_iterator","_step","folderWithContent1","_iterator2","_step2","item","stopID","stopKey","_context","Date","getTime","generateIdentifier","trackingID","timeStamp","data","listFoldersWithContent","concat","content","filter","m","map","id","err","isInPersonalSchedule","StopID","indexOf","parseInt","lfSetItem","JSON","stringify","discardExpiredEstimateTimeRecordsForBusArrivalTime","_discardExpiredEstimateTimeRecordsForBusArrivalTime","_callee2","_iterator3","_step3","key","json","object","_context2","lfListItemKeys","lfGetItem","parse","lfRemoveItem","t0","getBusArrivalTimes","_getBusArrivalTimes","_callee3","recordsGroupedByStops","_iterator4","_step4","existingRecord","existingRecordObject","stopKey1","busArrivalTimesGroupedByStops","stopKey2","recordsOfThisStop","recordsOfThisStopLength","EstimateTimeInThisPeriod","busArrivalTimeInThisPeriod","currentRecord","nextRecord","currentRecordEstimateTime","nextRecordEstimateTime","closestRecord","personalSchedules","result","_iterator5","_step5","personalSchedule","personalScheduleID","personalScheduleName","stopKey3","busArrivalTimes","_iterator6","_step6","busArrivalTime","busArrivalTimeDay","busArrivalTimeHours","busArrivalTimeMinutes","totalMinutes","scheduleTotalStartMinutes","scheduleTotalEndMinutes","aggregatedBusArrivalTimes","aggregatedBusArrivalTimeObjects","_iterator7","_step7","aggregatedBusArrivalTime","_totalMinutes","minutes","timeObject","_context3","sort","b","listPersonalSchedules","getDay","getHours","getMinutes","days","period","start","hours","end","aggregateNumbers","Math","floor","time","timeObjectToString"],"sourceRoot":""}