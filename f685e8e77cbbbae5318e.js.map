{"version":3,"file":"f685e8e77cbbbae5318e.js","mappings":"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","sources":["webpack://bus/./src/data/notification/apis/getNotificationAPIURL/index.ts","webpack://bus/./src/data/notification/apis/getNotificationRequestBody/index.ts","webpack://bus/./src/data/notification/apis/loader.ts","webpack://bus/./src/data/notification/apis/registerNotificationClient/index.ts"],"sourcesContent":["import { NotificationProvider, NResponse } from '../../index';\n\nexport function getNotificationAPIURL(method: NResponse['method']): string | false {\n  if (NotificationProvider === '') {\n    return false;\n  }\n  const url = new URL(NotificationProvider);\n  if (['cancel', 'register', 'schedule', 'rotate', 'reschedule'].indexOf(method) > -1) {\n    url.searchParams.set('method', method);\n    return url.toString();\n  } else {\n    return false;\n  }\n}\n","import { sha256 } from '../../../../tools/index';\nimport { generateTOTPToken } from '../../../../tools/totp';\nimport { NotificationClientID, NotificationSecret, NResponse } from '../../index';\n\nexport function getNotificationRequestBody(method: NResponse['method'], parameters: Array<any>): object | false {\n  switch (method) {\n    case 'cancel':\n      if (NotificationClientID === '' || NotificationSecret === '' || !(parameters.length === 1)) {\n        return false;\n      } else {\n        return {\n          client_id: NotificationClientID,\n          totp_token: generateTOTPToken(NotificationSecret),\n          schedule_id: parameters[0]\n        };\n      }\n      break;\n    case 'register':\n      if (!(parameters.length === 1)) {\n        return false;\n      } else {\n        const currentDate = new Date();\n        currentDate.setMilliseconds(0);\n        currentDate.setSeconds(0);\n        return {\n          hash: sha256(`${parameters[0]}${currentDate.getTime()}`)\n        };\n      }\n      break;\n    case 'schedule':\n      if (NotificationClientID === '' || NotificationSecret === '' || !(parameters.length === 9)) {\n        return false;\n      } else {\n        return {\n          client_id: NotificationClientID,\n          totp_token: generateTOTPToken(NotificationSecret),\n          stop_id: parameters[0],\n          location_name: parameters[1],\n          route_id: parameters[2],\n          route_name: parameters[3],\n          direction: parameters[4],\n          estimate_time: parameters[5],\n          time_formatting_mode: parameters[6],\n          time_offset: parameters[7],\n          scheduled_time: parameters[8]\n        };\n      }\n      break;\n    case 'rotate':\n      if (NotificationClientID === '' || NotificationSecret === '' || !(parameters.length === 0)) {\n        return false;\n      } else {\n        return {\n          client_id: NotificationClientID,\n          totp_token: generateTOTPToken(NotificationSecret)\n        };\n      }\n      break;\n    case 'reschedule':\n      if (NotificationClientID === '' || NotificationSecret === '' || !(parameters.length === 3)) {\n        return false;\n      } else {\n        return {\n          client_id: NotificationClientID,\n          totp_token: generateTOTPToken(NotificationSecret),\n          schedule_id: parameters[0],\n          estimate_time: parameters[1],\n          scheduled_time: parameters[2]\n        };\n      }\n      break;\n    default:\n      return false;\n      break;\n  }\n}\n","type NResponseCode = 200 | 400 | 401 | 404 | 500;\n\ninterface NResponseCancel {\n  result: string;\n  code: NResponseCode;\n  method: 'cancel';\n}\n\ninterface NResponseRegister {\n  result: string;\n  code: NResponseCode;\n  method: 'register';\n  client_id: string | 'null';\n  secret: string | 'null';\n}\n\ninterface NResponseSchedule {\n  result: string;\n  code: NResponseCode;\n  method: 'schedule';\n  schedule_id: string | 'null';\n}\n\ninterface NResponseRotate {\n  result: string;\n  code: NResponseCode;\n  method: 'rotate';\n  secret: string | 'null';\n}\n\ninterface NResponseReschedule {\n  result: string;\n  code: NResponseCode;\n  method: 'reschedule';\n}\n\nexport type NResponse = NResponseCancel | NResponseRegister | NResponseSchedule | NResponseRotate | NResponseReschedule;\n\nexport async function makeNotificationRequest(method: NResponse['method'], url: string | false, body: object | false): Promise<NResponse | false> {\n  try {\n    if (url === false || body === false) {\n      return false;\n    }\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    };\n\n    // Send the request\n    const response = await fetch(url, requestOptions);\n\n    if (!response.ok) {\n      // Log additional details for debugging\n      const errorText = await response.text();\n      console.error('API request failed', {\n        status: response.status,\n        statusText: response.statusText,\n        body: errorText\n      });\n      return false;\n    }\n\n    // Attempt to parse the JSON response\n    try {\n      const text = await response.text();\n      const json = JSON.parse(text);\n      switch (method) {\n        case 'cancel':\n          return json as NResponseCancel;\n          break;\n        case 'register':\n          return json as NResponseRegister;\n          break;\n        case 'schedule':\n          return json as NResponseSchedule;\n          break;\n        case 'rotate':\n          return json as NResponseRotate;\n          break;\n        case 'reschedule':\n          return json as NResponseReschedule;\n          break;\n        default:\n          return false;\n          break;\n      }\n    } catch (jsonError) {\n      console.error('Failed to parse JSON response', jsonError);\n      throw new Error('Invalid JSON response from server');\n    }\n  } catch (error) {\n    // Catch and log errors\n    console.error('Error making request:', error);\n    return false;\n  }\n}\n","import { getNotificationAPIURL } from '../getNotificationAPIURL/index';\nimport { getNotificationRequestBody } from '../getNotificationRequestBody/index';\nimport { makeNotificationRequest } from '../loader';\n\nexport async function registerNotificationClient(registrationKey: string): Promise<boolean> {\n  if (!registrationKey) {\n    return false;\n  }\n  const url = getNotificationAPIURL('register');\n  const requestBody = getNotificationRequestBody('register', [registrationKey]);\n  const response = await makeNotificationRequest('register', url, requestBody);\n  if (response === false) {\n    return false;\n  } else {\n    if (response.code === 200 && response.method === 'register') {\n      NotificationClientID = response.client_id;\n      NotificationSecret = response.secret;\n      await saveNotificationClient();\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n"],"names":["getNotificationAPIURL","method","NotificationProvider","url","URL","indexOf","searchParams","set","toString","getNotificationRequestBody","parameters","NotificationClientID","NotificationSecret","length","client_id","totp_token","generateTOTPToken","schedule_id","currentDate","Date","setMilliseconds","setSeconds","hash","sha256","concat","getTime","stop_id","location_name","route_id","route_name","direction","estimate_time","time_formatting_mode","time_offset","scheduled_time","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","makeNotificationRequest","_x","_x2","_x3","_makeNotificationRequest","apply","arguments","_callee","body","requestOptions","response","errorText","text","json","_context","headers","JSON","stringify","fetch","ok","console","error","status","statusText","parse","t0","t1","t2","_next","_throw","registerNotificationClient","_registerNotificationClient","registrationKey","requestBody","code","secret","saveNotificationClient"],"sourceRoot":""}