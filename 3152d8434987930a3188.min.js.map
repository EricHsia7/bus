{"version":3,"file":"3152d8434987930a3188.min.js","mappings":"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","sources":["webpack://bus/./src/interface/home/index.ts","webpack://bus/./src/interface/home/recent-views/index.ts","webpack://bus/./src/interface/icons/index.ts"],"sourcesContent":["import { getRoute } from '../../data/apis/getRoute/index';\nimport { getLocation } from '../../data/apis/getLocation/index';\nimport { setDataReceivingProgress, getDataReceivingProgress, deleteDataReceivingProgress } from '../../data/apis/loader';\nimport { documentQuerySelector } from '../../tools/query-selector';\nimport { getMaterialSymbols } from '../../data/apis/getMaterialSymbols/index';\nimport { getCarInfo } from '../../data/apis/getCarInfo/index';\n\nconst dataDownloadRequestID = 'downloadData';\nexport let dataDownloadCompleted = false;\nconst progressElement: HTMLElement = documentQuerySelector('.css_home_button_right svg#download-svg path[progress=\"progress\"]');\n\nfunction updateDownloadProgress() {\n  var pixels = (1 - getDataReceivingProgress(dataDownloadRequestID)) * 189;\n  progressElement.style.setProperty('--b-cssvar-stroke-dashoffset', `${pixels}px`);\n  window.requestAnimationFrame(function () {\n    if (dataDownloadCompleted === false) {\n      updateDownloadProgress();\n    }\n  });\n}\n\nfunction setCompleteStatus() {\n  if (dataDownloadCompleted) {\n    progressElement.style.setProperty('--b-cssvar-stroke-dashoffset', `${0}px`);\n    documentQuerySelector('.css_home_button_right').setAttribute('complete', true);\n    progressElement.removeEventListener('transitioncancel', setCompleteStatus);\n  }\n}\n\nexport async function downloadData(): void {\n  setDataReceivingProgress(dataDownloadRequestID, 'getRoute_0', 0, false);\n  setDataReceivingProgress(dataDownloadRequestID, 'getRoute_1', 0, false);\n  setDataReceivingProgress(dataDownloadRequestID, 'getLocation_0', 0, false);\n  setDataReceivingProgress(dataDownloadRequestID, 'getLocation_1', 0, false);\n  setDataReceivingProgress(dataDownloadRequestID, 'getCarInfo_0', 0, false);\n  setDataReceivingProgress(dataDownloadRequestID, 'getCarInfo_1', 0, false);\n  setDataReceivingProgress(dataDownloadRequestID, 'getMaterialSymbols', 0, false);\n  updateDownloadProgress();\n  progressElement.addEventListener('transitioncancel', setCompleteStatus);\n  await getRoute(dataDownloadRequestID, true);\n  await getLocation(dataDownloadRequestID, true);\n  await getCarInfo(dataDownloadRequestID, true);\n  await getMaterialSymbols(dataDownloadRequestID);\n  dataDownloadCompleted = true;\n  setCompleteStatus();\n  deleteDataReceivingProgress(dataDownloadRequestID);\n}\n","import { getUpdateRate } from '../../../data/analytics/update-rate';\nimport { integratedRecentView, integratedRecentViews, integrateRecentViews } from '../../../data/recent-views/index';\nimport { getSettingOptionValue } from '../../../data/settings/index';\nimport { booleanToString, compareThings, generateIdentifier } from '../../../tools/index';\nimport { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../../tools/query-selector';\nimport { getIconHTML } from '../../icons/index';\nimport { FieldSize, GeneratedElement } from '../../index';\n\nconst RecentViewsField = documentQuerySelector('.css_home_field .css_home_body .css_home_recent_views');\n\nlet previousIntegration = {};\n\nlet recentViewsRefreshTimer_retryInterval: number = 10 * 1000;\nlet recentViewsRefreshTimer_baseInterval: number = 15 * 1000;\nlet recentViewsRefreshTimer_minInterval: number = 5 * 1000;\nlet recentViewsRefreshTimer_dynamicInterval: number = 15 * 1000;\nlet recentViewsRefreshTimer_auto: boolean = true;\nlet recentViewsRefreshTimer_streaming: boolean = false;\nlet recentViewsRefreshTimer_lastUpdate: number = 0;\nlet recentViewsRefreshTimer_nextUpdate: number = 0;\nlet recentViewsRefreshTimer_refreshing: boolean = false;\nlet recentViewsRefreshTimer_currentRequestID: string = '';\nlet recentViewsRefreshTimer_streamStarted: boolean = false;\nlet recentViewsRefreshTimer_timer: ReturnType<typeof setTimeout>;\n\nfunction queryRecentViewsFieldSize(): FieldSize {\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight\n  };\n}\n\nfunction generateElementOfRecentViewItem(): GeneratedElement {\n  const element = document.createElement('div');\n  element.classList.add('css_home_recent_views_item');\n  element.innerHTML = `<div class=\"css_home_recent_views_item_head\"><div class=\"css_home_recent_views_item_icon\"></div><div class=\"css_home_recent_views_item_title\"></div><div class=\"css_home_recent_views_item_time\"></div></div><div class=\"css_home_recent_views_item_name\"></div>`;\n  return {\n    element: element,\n    id: null\n  };\n}\n\nfunction updateRecentViewsField(Field: HTMLElement, integration: integratedRecentViews, skeletonScreen: boolean) {\n  function updateItem(thisElement: HTMLElement, thisItem: integratedRecentView, previousItem: integratedRecentView): void {\n    function updateIcon(thisElement: HTMLElement, thisItem: integratedRecentView): void {\n      const iconElement = elementQuerySelector(thisElement, '.css_home_recent_views_item_head .css_home_recent_views_item_icon');\n      let icon = '';\n      switch (thisItem.type) {\n        case 'route':\n          icon = 'route';\n          break;\n        case 'location':\n          icon = 'location_on';\n          break;\n        case 'bus':\n          icon = 'directions_bus';\n          break;\n        case 'empty':\n          icon = 'lightbulb';\n          break;\n        default:\n          break;\n      }\n      iconElement.innerHTML = getIconHTML(icon);\n    }\n    function updateTitle(thisElement: HTMLElement, thisItem: integratedRecentView): void {\n      const titleElement = elementQuerySelector(thisElement, '.css_home_recent_views_item_head .css_home_recent_views_item_title');\n      let title = '';\n      switch (thisItem.type) {\n        case 'route':\n          title = '路線';\n          break;\n        case 'location':\n          title = '地點';\n          break;\n        case 'bus':\n          title = '公車';\n          break;\n        case 'empty':\n          title = '提示';\n          break;\n        default:\n          break;\n      }\n      titleElement.innerText = title;\n    }\n    function updateTime(thisElement: HTMLElement, thisItem: integratedRecentView): void {\n      const timeElement = elementQuerySelector(thisElement, '.css_home_recent_views_item_head .css_home_recent_views_item_time');\n      timeElement.innerText = thisItem.time.relative;\n    }\n    function updateName(thisElement: HTMLElement, thisItem: integratedRecentView): void {\n      const nameElement = elementQuerySelector(thisElement, '.css_home_recent_views_item_name');\n      nameElement.innerText = thisItem.name;\n    }\n    function updateOnclick(thisElement: HTMLElement, thisItem: integratedRecentView): void {\n      let onclickScript = '';\n      switch (thisItem.type) {\n        case 'route':\n          onclickScript = `bus.route.openRoute(${thisItem.id}, [${thisItem.pid.join(',')}])`;\n          break;\n        case 'location':\n          onclickScript = `bus.location.openLocation('${thisItem.hash}')`;\n          break;\n        case 'bus':\n          onclickScript = `bus.bus.openBus(${thisItem.id})`;\n          break;\n        default:\n          break;\n      }\n      thisElement.setAttribute('onclick', onclickScript);\n    }\n\n    if (previousItem === null) {\n      updateIcon(thisElement, thisItem);\n      updateTitle(thisElement, thisItem);\n      updateTime(thisElement, thisItem);\n      updateName(thisElement, thisItem);\n      updateOnclick(thisElement, thisItem);\n    } else {\n      if (!(thisItem.type === previousItem.type)) {\n        updateIcon(thisElement, thisItem);\n        updateTitle(thisElement, thisItem);\n        updateTime(thisElement, thisItem);\n        updateName(thisElement, thisItem);\n        updateOnclick(thisElement, thisItem);\n      } else {\n        switch (thisItem.type) {\n          case 'location':\n            if (!compareThings(previousItem.name, thisItem.name)) {\n              updateName(thisElement, thisItem);\n            }\n            if (!(previousItem.time === thisItem.time)) {\n              updateTime(thisElement, thisItem);\n            }\n            if (!compareThings(previousItem.hash, thisItem.hash)) {\n              updateOnclick(thisElement, thisItem);\n            }\n            break;\n          case 'route':\n            if (!compareThings(previousItem.name, thisItem.name)) {\n              updateName(thisElement, thisItem);\n            }\n            if (!(previousItem.time === thisItem.time)) {\n              updateTime(thisElement, thisItem);\n            }\n            if (!compareThings(previousItem.id, thisItem.id) || !compareThings(previousItem.pid, thisItem.pid)) {\n              updateOnclick(thisElement, thisItem);\n            }\n            break;\n          case 'bus':\n            if (!compareThings(previousItem.name, thisItem.name)) {\n              updateName(thisElement, thisItem);\n            }\n            if (!(previousItem.time === thisItem.time)) {\n              updateTime(thisElement, thisItem);\n            }\n            if (!compareThings(previousItem.id, thisItem.id)) {\n              updateOnclick(thisElement, thisItem);\n            }\n            break;\n          default:\n            break;\n        }\n      }\n    }\n  }\n\n  const FieldSize = queryRecentViewsFieldSize();\n  const FieldWidth = FieldSize.width;\n  const FieldHeight = FieldSize.height;\n\n  /*\n  if (!previousIntegration.hasOwnProperty('items')) {\n    previousIntegration = integration;\n  }\n*/\n  const itemQuantity = integration.itemQuantity;\n\n  Field.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n\n  const currentItemSeatQuantity = elementQuerySelectorAll(Field, `.css_home_recent_views_content .css_home_recent_views_item`).length;\n  if (!(itemQuantity === currentItemSeatQuantity)) {\n    const capacity = currentItemSeatQuantity - itemQuantity;\n    if (capacity < 0) {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const thisRecentViewItemElement = generateElementOfRecentViewItem();\n        elementQuerySelector(Field, `.css_home_recent_views_content`).appendChild(thisRecentViewItemElement.element);\n      }\n    } else {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const recentViewItemIndex = currentItemSeatQuantity - 1 - o;\n        elementQuerySelectorAll(Field, `.css_home_recent_views_content .css_home_recent_views_item`)[recentViewItemIndex].remove();\n      }\n    }\n  }\n\n  for (let i = 0; i < itemQuantity; i++) {\n    const thisElement = elementQuerySelectorAll(Field, `.css_home_recent_views_content .css_home_recent_views_item`)[i];\n    thisElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    const thisItem = integration.items[i];\n    if (previousIntegration.hasOwnProperty('items')) {\n      if (previousIntegration.items[i]) {\n        const previousItem = previousIntegration.items[i];\n        updateItem(thisElement, thisItem, previousItem);\n      } else {\n        updateItem(thisElement, thisItem, null);\n      }\n    } else {\n      updateItem(thisElement, thisItem, null);\n    }\n  }\n  previousIntegration = integration;\n}\n\nexport function setUpRecentViewsFieldSkeletonScreen(Field: HTMLElement): void {\n  const FieldSize = queryRecentViewsFieldSize();\n  const defaultItemQuantity = Math.floor(FieldSize.height / 70 / 3) + 2;\n  const items: Array<integratedRecentView> = [];\n  for (let i = 0; i < defaultItemQuantity; i++) {\n    items.push({\n      type: 'route',\n      id: 0,\n      pid: [],\n      time: {\n        absolute: 0,\n        relative: ''\n      },\n      name: ''\n    });\n  }\n  updateRecentViewsField(\n    Field,\n    {\n      items: items,\n      itemQuantity: items.length,\n      dataUpdateTime: null\n    },\n    true\n  );\n}\n\nasync function refreshRecentViews(): Promise<object> {\n  const refresh_interval_setting = getSettingOptionValue('refresh_interval');\n  recentViewsRefreshTimer_auto = refresh_interval_setting.auto;\n  recentViewsRefreshTimer_baseInterval = refresh_interval_setting.baseInterval;\n  recentViewsRefreshTimer_refreshing = true;\n  recentViewsRefreshTimer_currentRequestID = generateIdentifier('r');\n  // documentQuerySelector('.css_home_update_timer').setAttribute('refreshing', 'true');\n  const integration = await integrateRecentViews(recentViewsRefreshTimer_currentRequestID);\n  updateRecentViewsField(RecentViewsField, integration, false);\n  recentViewsRefreshTimer_lastUpdate = new Date().getTime();\n  const updateRate = await getUpdateRate();\n  if (recentViewsRefreshTimer_auto) {\n    recentViewsRefreshTimer_nextUpdate = Math.max(new Date().getTime() + foldersRefreshTimer_minInterval, integration.dataUpdateTime + recentViewsRefreshTimer_baseInterval / updateRate);\n  } else {\n    recentViewsRefreshTimer_nextUpdate = new Date().getTime() + recentViewsRefreshTimer_baseInterval;\n  }\n  recentViewsRefreshTimer_dynamicInterval = Math.max(recentViewsRefreshTimer_minInterval, recentViewsRefreshTimer_nextUpdate - new Date().getTime());\n  recentViewsRefreshTimer_refreshing = false;\n  // documentQuerySelector('.css_home_update_timer').setAttribute('refreshing', 'false');\n  return { status: 'Successfully refreshed the recent views.' };\n}\n\nasync function streamRecentViews(): void {\n  refreshRecentViews()\n    .then((result) => {\n      if (recentViewsRefreshTimer_streaming) {\n        recentViewsRefreshTimer_timer = setTimeout(function () {\n          streamRecentViews();\n        }, Math.max(recentViewsRefreshTimer_minInterval, recentViewsRefreshTimer_nextUpdate - new Date().getTime()));\n      } else {\n        recentViewsRefreshTimer_streamStarted = false;\n      }\n    })\n    .catch((err) => {\n      console.error(err);\n      if (recentViewsRefreshTimer_streaming) {\n        recentViewsRefreshTimer_timer = setTimeout(function () {\n          streamRecentViews();\n        }, recentViewsRefreshTimer_retryInterval);\n      } else {\n        recentViewsRefreshTimer_streamStarted = false;\n      }\n    });\n}\n\nexport function initializeRecentViews(): void {\n  setUpRecentViewsFieldSkeletonScreen(RecentViewsField);\n  if (!recentViewsRefreshTimer_streaming) {\n    recentViewsRefreshTimer_streaming = true;\n    if (!recentViewsRefreshTimer_streamStarted) {\n      recentViewsRefreshTimer_streamStarted = true;\n      streamRecentViews();\n    } else {\n      refreshRecentViews();\n    }\n  }\n}\n","import { MaterialSymbols } from \"./material-symbols-type\";\n\nexport function getIconHTML(iconID: MaterialSymbols): string {\n  return `<span class=\"css_material_symbols_rounded\">${iconID}</span>`;\n}\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","dataDownloadRequestID","dataDownloadCompleted","progressElement","documentQuerySelector","updateDownloadProgress","pixels","getDataReceivingProgress","style","setProperty","concat","window","requestAnimationFrame","setCompleteStatus","setAttribute","removeEventListener","downloadData","_downloadData","apply","arguments","_callee","_context","setDataReceivingProgress","addEventListener","getRoute","getLocation","getCarInfo","getMaterialSymbols","deleteDataReceivingProgress","_next","_throw","_asyncToGenerator","RecentViewsField","previousIntegration","recentViewsRefreshTimer_baseInterval","recentViewsRefreshTimer_auto","recentViewsRefreshTimer_streaming","recentViewsRefreshTimer_nextUpdate","recentViewsRefreshTimer_currentRequestID","recentViewsRefreshTimer_streamStarted","queryRecentViewsFieldSize","width","innerWidth","height","innerHeight","updateRecentViewsField","Field","integration","skeletonScreen","updateItem","thisElement","thisItem","previousItem","updateIcon","iconElement","elementQuerySelector","icon","innerHTML","getIconHTML","updateTitle","titleElement","title","innerText","updateTime","time","relative","updateName","updateOnclick","onclickScript","id","pid","join","hash","compareThings","FieldSize","itemQuantity","booleanToString","element","currentItemSeatQuantity","elementQuerySelectorAll","capacity","Math","abs","thisRecentViewItemElement","document","createElement","classList","add","appendChild","recentViewItemIndex","remove","items","setUpRecentViewsFieldSkeletonScreen","defaultItemQuantity","floor","absolute","dataUpdateTime","refreshRecentViews","_refreshRecentViews","refresh_interval_setting","updateRate","getSettingOptionValue","auto","baseInterval","generateIdentifier","integrateRecentViews","Date","getTime","getUpdateRate","max","foldersRefreshTimer_minInterval","status","streamRecentViews","_streamRecentViews","_callee2","_context2","result","setTimeout","err","console","error","initializeRecentViews","iconID"],"sourceRoot":""}