{"version":3,"file":"112042ba63e91994b90f.js","mappings":"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","sources":["webpack://bus/./src/interface/schedule-notification/index.ts","webpack://bus/./src/interface/storage/index.ts","webpack://bus/./src/interface/save-to-folder/index.ts","webpack://bus/./src/interface/search/index.ts","webpack://bus/./src/interface/settings/index.ts","webpack://bus/./src/interface/settings/options.ts"],"sourcesContent":["import { scheduleNotificationForStop, ScheduleNotificationOption, scheduleNotificationOptions } from '../../data/notification/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst ScheduleNotificationField = documentQuerySelector('.css_schedule_notification_field');\nconst ScheduleNotificationBodyElement = elementQuerySelector(ScheduleNotificationField, '.css_schedule_notification_body');\nconst ScheduleNotificationListElement = elementQuerySelector(ScheduleNotificationBodyElement, '.css_schedule_notification_list');\n\ntype ScheduleNotificationType = 'stop-on-route' | 'stop-on-location';\n\nfunction generateElementOfItem(item: ScheduleNotificationOption, type: ScheduleNotificationType, parameters: Array<any>): GeneratedElement {\n  const itemElement = document.createElement('div');\n  itemElement.classList.add('css_schedule_notification_list_item');\n\n  // Icon element\n  const iconElement = document.createElement('div');\n  iconElement.classList.add('css_schedule_notification_item_icon');\n  const iconSpanElement = document.createElement('span');\n  iconSpanElement.innerHTML = getIconHTML(item.icon);\n  iconElement.appendChild(iconSpanElement);\n\n  // Name element\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_schedule_notification_item_name');\n  nameElement.appendChild(document.createTextNode(item.name));\n\n  // Event handler\n  switch (type) {\n    case 'stop-on-route':\n      itemElement.onclick = function () {\n        scheduleNotificationForStopItemOnRoute(parameters[0], parameters[1], parameters[2], parameters[3], item.index);\n      };\n      break;\n    case 'stop-on-location':\n      itemElement.onclick = function () {\n        scheduleNotificationForStopItemOnLocation(parameters[0], parameters[1], parameters[2], parameters[3], item.index);\n      };\n      break;\n    default:\n      break;\n  }\n\n  itemElement.appendChild(iconElement);\n  itemElement.appendChild(nameElement);\n\n  return {\n    element: itemElement,\n    id: ''\n  };\n}\n\nfunction initializeScheduleNotificationField(type: ScheduleNotificationType, parameters: Array<any>): void {\n  ScheduleNotificationListElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  for (const item of scheduleNotificationOptions) {\n    const newElement = generateElementOfItem(item, type, parameters);\n    fragment.append(newElement.element);\n  }\n  ScheduleNotificationListElement.append(fragment);\n}\n\nexport function openScheduleNotification(type: ScheduleNotificationType, parameters: Array<any>): void {\n  pushPageHistory('ScheduleNotification');\n  ScheduleNotificationField.setAttribute('displayed', 'true');\n  initializeScheduleNotificationField(type, parameters);\n}\n\nexport function closeScheduleNotification(): void {\n  revokePageHistory('ScheduleNotification');\n  ScheduleNotificationField.setAttribute('displayed', 'false');\n}\n\nexport function scheduleNotificationForStopItemOnRoute(itemElementID: string, StopID: number, RouteID: number, EstimateTime: number, index: number): void {\n  const itemElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  const scheduleNotificationButtonElement = elementQuerySelector(itemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"schedule-notification\"]');\n  promptMessage('處理中', 'manufacturing');\n  scheduleNotificationButtonElement.setAttribute('enabled', 'false');\n  closeScheduleNotification();\n  scheduleNotificationForStop(StopID, RouteID, EstimateTime, index).then((result) => {\n    switch (result) {\n      case 0:\n        promptMessage('設定失敗', 'error');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      case 1:\n        promptMessage('設定成功', 'check_circle');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        scheduleNotificationButtonElement.setAttribute('highlighted', 'true');\n        break;\n      case 2:\n        promptMessage('在設定中註冊後才可設定到站通知', 'warning');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      default:\n        break;\n    }\n  });\n}\n\nexport function scheduleNotificationForStopItemOnLocation(itemElementID: string, StopID: number, RouteID: number, EstimateTime: number, index: number): void {\n  const itemElement = documentQuerySelector(`.css_location_field .css_location_groups .css_location_group .css_location_group_items .css_location_group_item#${itemElementID}`);\n  const scheduleNotificationButtonElement = elementQuerySelector(itemElement, '.css_location_group_item_body .css_location_group_item_buttons .css_location_group_item_button[type=\"schedule-notification\"]');\n  promptMessage('處理中', 'manufacturing');\n  scheduleNotificationButtonElement.setAttribute('enabled', 'false');\n  closeScheduleNotification();\n  scheduleNotificationForStop(StopID, RouteID, EstimateTime, index).then((result) => {\n    switch (result) {\n      case 0:\n        promptMessage('設定失敗', 'error');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      case 1:\n        promptMessage('設定成功', 'check_circle');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        scheduleNotificationButtonElement.setAttribute('highlighted', 'true');\n        break;\n      case 2:\n        promptMessage('在設定中註冊後才可設定到站通知', 'warning');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      default:\n        break;\n    }\n  });\n}\n","import { getStoresSizeStatistics, StoreSize, StoreSizeStatistics } from '../../data/analytics/storage-size';\nimport { getSettingOptionValue } from '../../data/settings/index';\nimport { booleanToString } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../tools/query-selector';\nimport { GeneratedElement, querySize } from '../index';\n\nlet previousCategories: Array<StoreSize> = [];\nlet previousAnimation: boolean = false;\nlet previousSkeletonScreen: boolean = false;\n\nconst StorageField = documentQuerySelector('.css_storage_field');\nconst StorageBodyElement = elementQuerySelector(StorageField, '.css_storage_body');\nconst StatisticsElement = elementQuerySelector(StorageBodyElement, '.css_storage_statistics');\n\nfunction generateElementOfItem(): GeneratedElement {\n  // Create root element\n  const statisticsItemElement = document.createElement('div');\n  statisticsItemElement.classList.add('css_storage_statistics_item');\n\n  // Create name element\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_storage_statistics_item_name');\n\n  // Create value element\n  const valueElement = document.createElement('div');\n  valueElement.classList.add('css_storage_statistics_item_value');\n\n  // Append children\n  statisticsItemElement.appendChild(nameElement);\n  statisticsItemElement.appendChild(valueElement);\n\n  return {\n    element: statisticsItemElement,\n    id: ''\n  };\n}\n\nfunction updateStorageField(statistics: StoreSizeStatistics, skeletonScreen: boolean, animation: boolean): void {\n  function updateItem(element: HTMLElement, currentItem: StoreSize, previousItem: StoreSize | null): void {\n    function updateValue(element: HTMLElement, item: StoreSize): void {\n      const typeElement = elementQuerySelector(element, '.css_storage_statistics_item_value');\n      typeElement.innerText = item.size;\n    }\n\n    function updateName(element: HTMLElement, item: StoreSize): void {\n      const nameElement = elementQuerySelector(element, '.css_storage_statistics_item_name');\n      nameElement.innerText = item.category.name;\n    }\n\n    function updateAnimation(element: HTMLElement, animation: boolean): void {\n      element.setAttribute('animation', booleanToString(animation));\n    }\n\n    function updateSkeletonScreen(element: HTMLElement, skeletonScreen: boolean): void {\n      element.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    }\n\n    // compare the current item with the previous item\n    if (previousItem) {\n      if (currentItem.category.key !== previousItem.category.key) {\n        updateName(element, currentItem);\n        updateValue(element, currentItem);\n      }\n\n      if (currentItem.size !== previousItem.size) {\n        updateValue(element, currentItem);\n      }\n\n      if (previousAnimation !== animation) {\n        updateAnimation(element, animation);\n      }\n\n      if (previousSkeletonScreen !== skeletonScreen) {\n        updateSkeletonScreen(element, skeletonScreen);\n      }\n    }\n    // if the previous item is null, it means this is a new item\n    else {\n      updateValue(element, currentItem);\n      updateName(element, currentItem);\n      updateAnimation(element, animation);\n      updateSkeletonScreen(element, skeletonScreen);\n    }\n  }\n\n  const categories = [];\n  for (const key in statistics.categorizedSizes) {\n    const item = statistics.categorizedSizes[key];\n    categories.push(item);\n  }\n\n  const categoriesQuantity = categories.length;\n  const currentItemSeatQuantity = elementQuerySelectorAll(StatisticsElement, '.css_storage_statistics_item').length;\n  if (categoriesQuantity !== currentItemSeatQuantity) {\n    const capacity = currentItemSeatQuantity - categoriesQuantity;\n    if (capacity < 0) {\n      const fragment = new DocumentFragment();\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const newElement = generateElementOfItem();\n        fragment.appendChild(newElement.element);\n      }\n      StatisticsElement.appendChild(fragment);\n    } else {\n      const statisticsItemElements2 = elementQuerySelectorAll(StatisticsElement, '.css_storage_statistics_item');\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const itemIndex = currentItemSeatQuantity - 1 - o;\n        statisticsItemElements2[itemIndex].remove();\n      }\n    }\n  }\n\n  const statisticsItemElements = elementQuerySelectorAll(StatisticsElement, '.css_storage_statistics_item');\n  for (let i = 0; i < categoriesQuantity; i++) {\n    const previousItem = previousCategories[i];\n    const currentItem = categories[i];\n    const thisItemElement = statisticsItemElements[i];\n    if (previousItem) {\n      updateItem(thisItemElement, currentItem, previousItem);\n    } else {\n      updateItem(thisItemElement, currentItem, null);\n    }\n  }\n\n  previousCategories = categories;\n  previousSkeletonScreen = skeletonScreen;\n  previousAnimation = animation;\n}\n\nfunction setUpStorageFieldSkeletonScreen(): void {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const FieldSize = querySize('window');\n  // const FieldWidth = FieldSize.width;\n  const FieldHeight = FieldSize.height;\n  const defaultCategoriesQuantity = Math.floor(FieldHeight / 50 / 3) + 2;\n  const statistics: StoreSizeStatistics = {\n    categorizedSizes: {},\n    totalSize: 0\n  };\n  for (let i = 0; i < defaultCategoriesQuantity; i++) {\n    const categoryKey = `store-${i}`;\n    statistics.categorizedSizes[categoryKey] = {\n      category: {\n        name: '',\n        key: categoryKey\n      },\n      size: `size-${i}`\n    };\n  }\n  updateStorageField(statistics, true, playing_animation);\n}\n\nasync function refreshStorageStatistics() {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  setUpStorageFieldSkeletonScreen();\n  const statistics = await getStoresSizeStatistics();\n  updateStorageField(statistics, false, playing_animation);\n}\n\nexport function openStorage(): void {\n  StorageField.setAttribute('displayed', 'true');\n  refreshStorageStatistics();\n}\n\nexport function closeStorage(): void {\n  StorageField.setAttribute('displayed', 'false');\n}\n","import { FolderWithContent, isFolderContentSaved, listFoldersWithContent, saveLocation, saveRoute, saveStop } from '../../data/folder/index';\nimport { booleanToString } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\ntype SaveToFolderType = 'stop-on-route' | 'stop-on-location' | 'route' | 'route-on-route' | 'bus' | 'location' | 'location-on-route';\n\nconst SaveToFolderField = documentQuerySelector('.css_save_to_folder_field');\nconst SaveToFolderBodyElement = elementQuerySelector(SaveToFolderField, '.css_save_to_folder_body');\nconst SaveToFolderListElement = elementQuerySelector(SaveToFolderBodyElement, '.css_save_to_folder_list');\n\nfunction generateElementOfItem(item: FolderWithContent, type: SaveToFolderType, parameters: Array<any>): GeneratedElement {\n  const itemElement = document.createElement('div');\n  itemElement.classList.add('css_save_to_folder_list_item');\n\n  // Icon element\n  const iconElement = document.createElement('div');\n  iconElement.classList.add('css_save_to_folder_item_icon');\n  const iconSpanElement = document.createElement('span');\n  iconSpanElement.innerHTML = getIconHTML(item.icon);\n  iconElement.appendChild(iconSpanElement);\n\n  // Name element\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_save_to_folder_item_name');\n  nameElement.appendChild(document.createTextNode(item.name));\n\n  // Event handler\n  switch (type) {\n    case 'stop-on-route':\n      itemElement.onclick = function () {\n        saveStopItemOnRoute(parameters[0], item.id, parameters[1], parameters[2]);\n      };\n      break;\n    case 'stop-on-location':\n      itemElement.onclick = function () {\n        saveStopItemOnLocation(parameters[0], item.id, parameters[1], parameters[2]);\n      };\n      break;\n    case 'route':\n      itemElement.onclick = function () {\n        saveRouteOnDetailsPage(item.id, parameters[0]);\n      };\n      break;\n    case 'route-on-route':\n      itemElement.onclick = function () {\n        saveRouteOnRoute(item.id, parameters[0]);\n      };\n      break;\n    case 'location':\n      itemElement.onclick = function () {\n        saveLocationOnDetailsPage(item.id, parameters[0]);\n      };\n      break;\n    case 'location-on-route':\n      itemElement.onclick = function () {\n        saveLocationOnRoute(item.id, parameters[0]);\n      };\n      break;\n    case 'bus':\n      // No action\n      break;\n    default:\n      break;\n  }\n\n  itemElement.appendChild(iconElement);\n  itemElement.appendChild(nameElement);\n\n  return {\n    element: itemElement,\n    id: ''\n  };\n}\n\nasync function initializeSaveToFolderField(type: SaveToFolderType, parameters: Array<any>) {\n  const foldersWithContent = await listFoldersWithContent();\n  SaveToFolderListElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  for (const item of foldersWithContent) {\n    const newItemElement = generateElementOfItem(item, type, parameters);\n    fragment.appendChild(newItemElement.element);\n  }\n  SaveToFolderListElement.append(fragment);\n}\n\nexport function openSaveToFolder(type: SaveToFolderType, parameters: Array<any>): void {\n  pushPageHistory('SaveToFolder');\n  SaveToFolderField.setAttribute('displayed', 'true');\n  initializeSaveToFolderField(type, parameters);\n}\n\nexport function closeSaveToFolder(): void {\n  revokePageHistory('SaveToFolder');\n  SaveToFolderField.setAttribute('displayed', 'false');\n}\n\nfunction saveStopItemOnRoute(itemElementID: string, folderID: string, StopID: number, RouteID: number): void {\n  const itemElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  const saveToFolderButtonElement = elementQuerySelector(itemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"save-to-folder\"]');\n  saveStop(folderID, StopID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('stop', StopID).then((k) => {\n        if (k) {\n          saveToFolderButtonElement.setAttribute('highlighted', booleanToString(k));\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nfunction saveStopItemOnLocation(itemElementID: string, folderID: string, StopID: number, RouteID: number): void {\n  const itemElement = documentQuerySelector(`.css_location_field .css_location_groups .css_location_group .css_location_group_items .css_location_group_item#${itemElementID}`);\n  const saveToFolderButtonElement = elementQuerySelector(itemElement, '.css_location_group_item_body .css_location_group_item_buttons .css_location_group_item_button[type=\"save-to-folder\"]');\n  saveStop(folderID, StopID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('stop', StopID).then((k) => {\n        if (k) {\n          saveToFolderButtonElement.setAttribute('highlighted', booleanToString(k));\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nfunction saveRouteOnDetailsPage(folderID: string, RouteID: number): void {\n  const actionButtonElement = documentQuerySelector('.css_route_details_field .css_route_details_body .css_route_details_groups .css_route_details_group[group=\"actions\"] .css_route_details_group_body .css_route_details_action_button[action=\"save-to-folder\"]');\n  saveRoute(folderID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('route', RouteID).then((k) => {\n        if (k) {\n          actionButtonElement.setAttribute('highlighted', 'true');\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nfunction saveRouteOnRoute(folderID: string, RouteID: number): void {\n  saveRoute(folderID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('route', RouteID).then((k) => {\n        if (k) {\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nfunction saveLocationOnDetailsPage(folderID: string, hash: string): void {\n  saveLocation(folderID, hash).then((e) => {\n    if (e) {\n      isFolderContentSaved('location', hash).then((k) => {\n        if (k) {\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nfunction saveLocationOnRoute(folderID: string, hash: string): void {\n  saveLocation(folderID, hash).then((e) => {\n    if (e) {\n      isFolderContentSaved('location', hash).then((k) => {\n        if (k) {\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n","import { prepareForSearch, searchFor, SearchItem, SearchResult } from '../../data/search/index';\nimport { drawRoundedRect } from '../../tools/graphic';\nimport { supportTouch } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../tools/query-selector';\nimport { getCSSVariableValue } from '../../tools/style';\nimport { containPhoneticSymbols } from '../../tools/text';\nimport { openBus } from '../bus/index';\nimport { dataDownloadCompleted } from '../home/index';\nimport { getIconHTML } from '../icons/index';\nimport { MaterialSymbols } from '../icons/material-symbols-type';\nimport { GeneratedElement, pushPageHistory, querySize, revokePageHistory, scrollDocumentToTop } from '../index';\nimport { openLocation } from '../location/index';\nimport { promptMessage } from '../prompt/index';\nimport { openRoute } from '../route/index';\n\nlet previousSearchResults: Array<SearchResult> = [];\n\nconst searchField = documentQuerySelector('.css_search_field');\nconst searchHeadElement = elementQuerySelector(searchField, '.css_search_head');\nconst searchBodyElement = elementQuerySelector(searchField, '.css_search_body');\nconst searchInputElement = elementQuerySelector(searchHeadElement, '.css_search_search_input #search_input') as HTMLInputElement;\nconst searchInputCanvasElement = elementQuerySelector(searchHeadElement, '.css_search_search_input canvas') as HTMLCanvasElement;\nconst searchTypeFilterButtonElement = elementQuerySelector(searchHeadElement, '.css_search_button_right');\nconst searchResultsElement = elementQuerySelector(searchBodyElement, '.css_search_results');\nconst searchKeyboardElement = elementQuerySelector(searchBodyElement, '.css_search_keyboard');\n\nconst searchInputCanvasContext = searchInputCanvasElement.getContext('2d');\nconst searchInputPlaceholder = '搜尋路線、地點、公車';\nconst searchInputCanvasScale = window.devicePixelRatio;\n\nconst padding: number = 15 * searchInputCanvasScale;\nconst cursorWidth: number = 1.8 * searchInputCanvasScale;\nconst cursorBorderRadius: number = 0.9 * searchInputCanvasScale;\nconst selectionHighlightBorderRadius: number = 4 * searchInputCanvasScale;\nconst lineHeight: number = 25 * searchInputCanvasScale;\nconst fontWeight: string = '400';\nconst fontSize: number = 20 * searchInputCanvasScale;\nconst fontFamily: string = '\"Noto Sans TC\", sans-serif';\n\nconst keyboardRows: Array<[string, string, string, string, string]> = [\n  ['紅', '藍', '1', '2', '3'],\n  ['綠', '棕', '4', '5', '6'],\n  ['橘', '小', '7', '8', '9'],\n  ['鍵盤', '幹線', '清空', '0', '刪除']\n];\n\nlet textColor: string = getCSSVariableValue('--b-cssvar-333333');\nlet placeholderTextColor: string = getCSSVariableValue('--b-cssvar-aeaeb2');\nlet cursorColor: string = getCSSVariableValue('--b-cssvar-main-color');\nlet textWidth: number = 0;\nlet textWidthToCursorStart: number = 0;\nlet selectedTextWidth: number = 0;\nlet selection: boolean = false;\nlet cursorOffset: number = 0;\nlet size = querySize('head-two-button');\nlet width = size.width * searchInputCanvasScale;\nlet height = size.height * searchInputCanvasScale;\nlet playingCursorAnimation: boolean = false;\nlet keyboardInitialized = false;\n\nexport function typeTextIntoInput(value): void {\n  const currentValue = getSearchInputValue();\n  const newValue = `${currentValue}${value}`;\n  searchInputElement.value = newValue;\n  updateSearchResult();\n  updateSearchInput(-1, -1);\n  scrollDocumentToTop();\n}\n\nexport function deleteCharFromInput(): void {\n  const currentValue = getSearchInputValue();\n  const newValue = currentValue.substring(0, currentValue.length - 1);\n  searchInputElement.value = newValue;\n  updateSearchResult();\n  updateSearchInput(-1, -1);\n  scrollDocumentToTop();\n}\n\nexport function emptyInput(): void {\n  searchInputElement.value = '';\n  updateSearchResult();\n  updateSearchInput(-1, -1);\n  scrollDocumentToTop();\n}\n\nexport function openSystemKeyboard(event: Event): void {\n  event.preventDefault();\n  searchInputElement.focus();\n  scrollDocumentToTop();\n}\n\nfunction initializeKeyboard(): void {\n  if (!keyboardInitialized) {\n    keyboardInitialized = true;\n    const fragment = new DocumentFragment();\n    for (const row of keyboardRows) {\n      for (const item of row) {\n        const newButtonElement = document.createElement('button');\n        newButtonElement.classList.add('css_search_keyboard_key');\n        const eventName = supportTouch() ? 'touchstart' : 'mousedown';\n        switch (item) {\n          case '刪除':\n            newButtonElement.addEventListener(eventName, deleteCharFromInput);\n            newButtonElement.innerHTML = getIconHTML('backspace');\n            break;\n          case '清空':\n            newButtonElement.addEventListener(eventName, emptyInput);\n            newButtonElement.appendChild(document.createTextNode(item));\n            break;\n          case '鍵盤':\n            newButtonElement.addEventListener(eventName, openSystemKeyboard);\n            newButtonElement.innerHTML = getIconHTML('keyboard');\n            break;\n          default:\n            // Use an IIFE (Immediately Invoked Function Expression) to create a new scope for each item value. This ensures that the item variable is captured by value rather than by reference.\n            newButtonElement.addEventListener(\n              eventName,\n              (function (currentItem) {\n                return function () {\n                  typeTextIntoInput(currentItem);\n                };\n              })(item)\n            );\n            newButtonElement.appendChild(document.createTextNode(item));\n            break;\n        }\n\n        fragment.appendChild(newButtonElement);\n      }\n    }\n    searchKeyboardElement.append(fragment);\n  }\n}\n\nexport function openKeyboard(): void {\n  initializeKeyboard();\n  searchKeyboardElement.setAttribute('displayed', 'true');\n  playingCursorAnimation = true;\n  animateCursor();\n  updateSearchInput(-1, -1);\n}\n\nexport function closeKeyboard(): void {\n  searchKeyboardElement.setAttribute('displayed', 'false');\n  playingCursorAnimation = false;\n}\n\nexport function getSearchTypeFilterValue(): SearchItem['type'] | -1 {\n  return parseInt(searchTypeFilterButtonElement.getAttribute('type'));\n}\n\nexport function getSearchInputValue(): string {\n  return String(searchInputElement.value);\n}\n\nexport function updateSearchInput(cursorStart: number, cursorEnd: number): void {\n  let value = getSearchInputValue();\n  let empty = false;\n  if (value.length === 0) {\n    value = searchInputPlaceholder;\n    empty = true;\n    cursorStart = 0;\n    cursorEnd = 0;\n  } else {\n    if (cursorStart === -1 && cursorEnd === -1) {\n      cursorStart = value.length;\n      cursorEnd = cursorStart * 1;\n    }\n  }\n\n  size = querySize('head-two-button');\n  width = size.width * searchInputCanvasScale;\n  height = size.height * searchInputCanvasScale;\n  textColor = getCSSVariableValue('--b-cssvar-333333');\n  placeholderTextColor = getCSSVariableValue('--b-cssvar-aeaeb2');\n  cursorColor = getCSSVariableValue('--b-cssvar-main-color');\n\n  searchInputCanvasContext.font = `${fontWeight} ${fontSize}px ${fontFamily}`;\n  searchInputCanvasContext.textAlign = 'center';\n  searchInputCanvasContext.textBaseline = 'middle';\n\n  textWidth = searchInputCanvasContext.measureText(value).width;\n  textWidthToCursorStart = searchInputCanvasContext.measureText(value.substring(0, cursorStart)).width;\n  selectedTextWidth = searchInputCanvasContext.measureText(value.substring(cursorStart, cursorEnd)).width;\n  cursorOffset = empty ? 1 : Math.max(1, textWidthToCursorStart);\n\n  searchInputCanvasContext.clearRect(0, 0, width, height);\n\n  if (cursorStart === cursorEnd) {\n    selection = true;\n    searchInputCanvasContext.globalAlpha = 1;\n    searchInputCanvasContext.fillStyle = empty ? placeholderTextColor : textColor;\n    searchInputCanvasContext.fillText(value, textWidth / 2 + (Math.min(cursorOffset, width - padding) - cursorOffset), height / 2);\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, cursorWidth, lineHeight, cursorBorderRadius, cursorColor);\n  } else {\n    selection = false;\n    searchInputCanvasContext.globalAlpha = 0.27;\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, selectedTextWidth, lineHeight, selectionHighlightBorderRadius, cursorColor);\n    searchInputCanvasContext.globalAlpha = 1;\n    searchInputCanvasContext.fillStyle = empty ? placeholderTextColor : textColor;\n    searchInputCanvasContext.fillText(value, textWidth / 2 + (Math.min(cursorOffset, width - padding) - cursorOffset), height / 2);\n    searchInputCanvasContext.globalAlpha = 0.08;\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, selectedTextWidth, lineHeight, selectionHighlightBorderRadius, cursorColor);\n  }\n}\n\nexport function resizeSearchInputCanvas(): void {\n  size = querySize('head-two-button');\n  width = size.width;\n  height = size.height;\n  searchInputCanvasElement.width = width * searchInputCanvasScale;\n  searchInputCanvasElement.height = height * searchInputCanvasScale;\n  updateSearchInput(-1, -1);\n}\n\nfunction animateCursor(): void {\n  const x = performance.now();\n  const alpha = 1 - Math.pow(Math.sin((Math.PI * x) / 960), 4);\n  if (selection) {\n    searchInputCanvasContext.globalAlpha = alpha;\n    searchInputCanvasContext.clearRect(Math.min(cursorOffset, width - padding) - 1, 0, cursorWidth + 2, height);\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, cursorWidth, lineHeight, cursorBorderRadius, cursorColor);\n  }\n  if (playingCursorAnimation) {\n    window.requestAnimationFrame(animateCursor);\n  }\n}\n\nfunction generateElementOfSearchResultItem(): GeneratedElement {\n  const searchResultItemElement = document.createElement('div');\n  searchResultItemElement.classList.add('css_search_search_result');\n\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_search_search_result_name');\n\n  const typeElement = document.createElement('div');\n  typeElement.classList.add('css_search_search_result_type');\n\n  searchResultItemElement.appendChild(typeElement);\n  searchResultItemElement.appendChild(nameElement);\n  return {\n    element: searchResultItemElement,\n    id: ''\n  };\n}\n\nexport function updateSearchResult(): void {\n  const typeToIcon: Array<MaterialSymbols> = ['route', 'location_on', 'directions_bus'];\n\n  function updateItem(element: HTMLElement, currentItem: SearchResult, previousItem: SearchResult | null): void {\n    function updateTypeIcon(item: SearchResult, element: HTMLElement): void {\n      const typeElement = elementQuerySelector(element, '.css_search_search_result_type');\n      typeElement.innerHTML = getIconHTML(typeToIcon[item.item.type]);\n    }\n\n    function updateName(item: SearchResult, element: HTMLElement): void {\n      const nameElement = elementQuerySelector(element, '.css_search_search_result_name');\n      nameElement.innerText = item.item.n;\n    }\n\n    function updateClickHandler(item: SearchResult, element: HTMLElement): void {\n      switch (item.item.type) {\n        case 0:\n          element.onclick = function () {\n            openRoute(item.item.id as number, item.item.pid);\n          };\n          break;\n        case 1:\n          element.onclick = function () {\n            openLocation(item.item.hash);\n          };\n          break;\n        case 2:\n          element.onclick = function () {\n            openBus(item.item.id as number);\n          };\n          break;\n        default:\n          break;\n      }\n    }\n    // compare the current item with the previous item\n    if (previousItem) {\n      if (currentItem.item.type !== previousItem.item.type) {\n        updateTypeIcon(currentItem, element);\n      }\n      if (currentItem.item.id !== previousItem.item.id) {\n        updateName(currentItem, element);\n        updateClickHandler(currentItem, element);\n      }\n    }\n    // if the previous item is null, it means this is a new item\n    else {\n      updateTypeIcon(currentItem, element);\n      updateName(currentItem, element);\n      updateClickHandler(currentItem, element);\n    }\n  }\n\n  const currentType = getSearchTypeFilterValue();\n  const currentValue = getSearchInputValue();\n  if (!containPhoneticSymbols(currentValue)) {\n    const searchResults = searchFor(currentValue, currentType, 30);\n    const searchResultLength = searchResults.length;\n    const currentItemSeatQuantity = elementQuerySelectorAll(searchResultsElement, '.css_search_search_result').length;\n    if (searchResultLength !== currentItemSeatQuantity) {\n      const capacity = currentItemSeatQuantity - searchResultLength;\n      if (capacity < 0) {\n        const fragment = new DocumentFragment();\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const newElement = generateElementOfSearchResultItem();\n          fragment.appendChild(newElement.element);\n        }\n        searchResultsElement.appendChild(fragment);\n      } else {\n        const searchResultElements2 = elementQuerySelectorAll(searchResultsElement, '.css_search_search_result');\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const itemIndex = currentItemSeatQuantity - 1 - o;\n          searchResultElements2[itemIndex].remove();\n        }\n      }\n    }\n\n    const searchResultElements = elementQuerySelectorAll(searchResultsElement, '.css_search_search_result');\n    for (let i = 0; i < searchResultLength; i++) {\n      const previousItem = previousSearchResults[i];\n      const currentItem = searchResults[i];\n      const thisItemElement = searchResultElements[i];\n      if (previousItem) {\n        updateItem(thisItemElement, currentItem, previousItem);\n      } else {\n        updateItem(thisItemElement, currentItem, null);\n      }\n    }\n    previousSearchResults = searchResults;\n  }\n}\n\nexport function switchSearchTypeFilter(): void {\n  const currentType = getSearchTypeFilterValue();\n  let newType: number = -1;\n  if (currentType >= -1 && currentType < 2) {\n    newType = currentType + 1;\n  } else {\n    newType = -1;\n  }\n  const icons: Array<MaterialSymbols> = ['filter_list', 'route', 'location_on', 'directions_bus'];\n  searchTypeFilterButtonElement.innerHTML = getIconHTML(icons[newType + 1]);\n  searchTypeFilterButtonElement.setAttribute('type', newType.toString());\n  updateSearchResult();\n}\n\nexport function openSearch(): void {\n  if (dataDownloadCompleted) {\n    pushPageHistory('Search');\n    searchField.setAttribute('displayed', 'true');\n    openKeyboard();\n    prepareForSearch();\n  } else {\n    promptMessage('資料還在下載中', 'download_for_offline');\n  }\n}\n\nexport function closeSearch(): void {\n  revokePageHistory('Search');\n  closeKeyboard();\n  searchField.setAttribute('displayed', 'false');\n}\n","import { exportData } from '../../data/export/index';\nimport { importData } from '../../data/import/index';\nimport { listSettings, Setting } from '../../data/settings/index';\nimport { getCommitURLOfCurrentVersion } from '../../data/settings/version';\nimport { askForPersistentStorage } from '../../data/storage/index';\nimport { generateIdentifier, releaseFile } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst SettingsField = documentQuerySelector('.css_settings_field');\nconst SettingsBodyElement = elementQuerySelector(SettingsField, '.css_settings_body');\nconst SettingsElement = elementQuerySelector(SettingsBodyElement, '.css_settings');\n\nfunction generateElementOfItem(item: Setting): GeneratedElement {\n  const settingElement = document.createElement('div');\n  settingElement.classList.add('css_setting');\n  settingElement.setAttribute('type', item.type);\n\n  // Icon\n  const iconElement = document.createElement('div');\n  iconElement.classList.add('css_setting_icon');\n  const iconSpanElement = document.createElement('span');\n  iconSpanElement.innerHTML = getIconHTML(item.icon);\n  iconElement.appendChild(iconSpanElement);\n\n  // Name\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_setting_name');\n  nameElement.appendChild(document.createTextNode(item.name));\n\n  // Status\n  const statusElement = document.createElement('div');\n  statusElement.classList.add('css_setting_status');\n  statusElement.appendChild(document.createTextNode(item.status));\n\n  // Arrow\n  const arrowElement = document.createElement('div');\n  arrowElement.classList.add('css_setting_arrow');\n  const arrowSpanElement = document.createElement('span');\n  arrowSpanElement.innerHTML = getIconHTML('arrow_forward_ios');\n  arrowElement.appendChild(arrowSpanElement);\n\n  // Event handler (lambda)\n  if (typeof item.action === 'function') {\n    settingElement.onclick = function () {\n      item.action();\n    };\n  } else if (typeof item.action === 'string') {\n    settingElement.setAttribute('onclick', item.action);\n  }\n\n  // Assemble\n  settingElement.appendChild(iconElement);\n  settingElement.appendChild(nameElement);\n  settingElement.appendChild(statusElement);\n  settingElement.appendChild(arrowElement);\n\n  return {\n    element: settingElement,\n    id: ''\n  };\n}\n\nasync function initializeSettingsField() {\n  const list = await listSettings();\n  SettingsElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  for (const item of list) {\n    const thisElement = generateElementOfItem(item);\n    fragment.appendChild(thisElement.element);\n  }\n  SettingsElement.append(fragment);\n}\n\nexport function openSettings(): void {\n  pushPageHistory('Settings');\n  SettingsField.setAttribute('displayed', 'true');\n  initializeSettingsField();\n}\n\nexport function closeSettings(): void {\n  revokePageHistory('Settings');\n  SettingsField.setAttribute('displayed', 'false');\n}\n\nexport async function downloadExportFile() {\n  const exportedData = await exportData();\n  releaseFile(exportedData, 'application/json', 'bus-export.json');\n}\n\nexport function openFileToImportData(): void {\n  const identifier = generateIdentifier();\n  const fileInput = document.createElement('input');\n  fileInput.setAttribute('type', 'file');\n  fileInput.setAttribute('accept', 'application/json');\n  fileInput.setAttribute('name', identifier);\n  fileInput.id = identifier;\n  fileInput.classList.add('css_import_file_input');\n  fileInput.addEventListener(\n    'change',\n    function (event) {\n      // Check if a file is selected\n      if (event.target.files.length === 0) {\n        documentQuerySelector(`body #${identifier}`).remove();\n      } else {\n        // Get the first file selected by the user\n        const file = event.target.files[0];\n        const reader = new FileReader();\n\n        // When the file is successfully read\n        reader.onload = function (e) {\n          // Get the file content as text\n          const fileTextContent = e.target.result;\n\n          // Import the data\n          importData(fileTextContent).then((f) => {\n            if (f) {\n              promptMessage('已匯入資料', 'check_circle');\n            } else {\n              promptMessage('無法匯入資料', 'error');\n            }\n            documentQuerySelector(`body #${identifier}`).remove();\n          });\n        };\n\n        // Read the file as text\n        reader.readAsText(file);\n      }\n    },\n    { once: true }\n  );\n  fileInput.addEventListener(\n    'cancel',\n    function () {\n      documentQuerySelector(`body #${identifier}`).remove();\n    },\n    { once: true }\n  );\n\n  document.body.append(fileInput);\n  documentQuerySelector(`body #${identifier}`).click();\n}\n\nexport function viewCommitOfCurrentVersion(): void {\n  const url = getCommitURLOfCurrentVersion();\n  window.open(url);\n}\n\nexport function viewGitHubRepository(): void {\n  const url = 'https://github.com/EricHsia7/bus';\n  window.open(url);\n}\n\nexport function showPromptToAskForPersistentStorage(): void {\n  askForPersistentStorage().then((e) => {\n    switch (e) {\n      case 'granted':\n        promptMessage('已開啟永久儲存', 'check_circle');\n        break;\n      case 'denied':\n        promptMessage('永久儲存權限已被拒絕', 'cancel');\n        break;\n      case 'unsupported':\n        promptMessage('此瀏覽器不支援永久儲存', 'warning');\n        break;\n      default:\n        promptMessage('發生錯誤', 'error');\n        break;\n    }\n  });\n}\n","import { changeSettingOption, getSetting, SettingSelect, SettingSelectOption } from '../../data/settings/index';\nimport { documentQuerySelector, documentQuerySelectorAll, elementQuerySelector } from '../../tools/query-selector';\nimport { closePreviousPage, GeneratedElement, openPreviousPage, pushPageHistory } from '../index';\n\nconst SettingsOptionsField = documentQuerySelector('.css_settings_options_field');\nconst SettingsOptionsBodyElement = elementQuerySelector(SettingsOptionsField, '.css_settings_options_body');\nconst SettingsOptionsOptionsElement = elementQuerySelector(SettingsOptionsBodyElement, '.css_settings_options');\nconst SettingsOptionsDescriptionElement = elementQuerySelector(SettingsOptionsBodyElement, '.css_options_description');\nconst SettingsOptionsHeadElement = elementQuerySelector(SettingsOptionsField, '.css_settings_options_head');\nconst SettingsOptionsTitleElement = elementQuerySelector(SettingsOptionsHeadElement, '.css_settings_options_title');\n\nfunction generateElementOfItem(setting: SettingSelect, item: SettingSelectOption, index: number): GeneratedElement {\n  const optionElement = document.createElement('div');\n  optionElement.classList.add('css_option');\n\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_option_name');\n  nameElement.appendChild(document.createTextNode(item.name));\n\n  const checkboxContainerElement = document.createElement('div');\n  checkboxContainerElement.classList.add('css_option_checkbox');\n\n  const checkboxElement = document.createElement('input');\n  checkboxElement.type = 'checkbox';\n  checkboxElement.checked = setting.option === index;\n  checkboxElement.onclick = (event) => {\n    settingsOptionsHandler(event, setting.key, index);\n  };\n\n  checkboxContainerElement.appendChild(checkboxElement);\n  optionElement.appendChild(nameElement);\n  optionElement.appendChild(checkboxContainerElement);\n\n  return {\n    element: optionElement,\n    id: ''\n  };\n}\n\nfunction initializeSettingsOptionsField(settingKey: string): void {\n  const setting = getSetting(settingKey) as SettingSelect;\n  SettingsOptionsTitleElement.innerText = setting.name;\n  SettingsOptionsDescriptionElement.innerText = setting.description;\n  SettingsOptionsOptionsElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  let index: number = 0;\n  for (const item of setting.options) {\n    const thisElement = generateElementOfItem(setting, item, index);\n    fragment.appendChild(thisElement.element);\n    index += 1;\n  }\n  SettingsOptionsOptionsElement.append(fragment);\n}\n\nexport function openSettingsOptions(settingKey: string): void {\n  pushPageHistory('SettingsOptions');\n  SettingsOptionsField.setAttribute('displayed', 'true');\n  initializeSettingsOptionsField(settingKey);\n  closePreviousPage();\n}\n\nexport function closeSettingsOptions(): void {\n  // revokePageHistory('SettingsOptions');\n  SettingsOptionsField.setAttribute('displayed', 'false');\n  openPreviousPage();\n}\n\nexport function settingsOptionsHandler(event: Event, settingKey: string, index: number): void {\n  const checkboxes = documentQuerySelectorAll('.css_settings_options_field .css_settings_options_body .css_settings_options .css_option .css_option_checkbox input[type=\"checkbox\"]') as NodeListOf<HTMLInputElement>;\n  for (const checkbox of checkboxes) {\n    checkbox.checked = false;\n  }\n  const target = event.target as HTMLInputElement;\n  target.checked = true;\n  changeSettingOption(settingKey, index);\n}\n"],"names":["ScheduleNotificationField","documentQuerySelector","ScheduleNotificationBodyElement","elementQuerySelector","ScheduleNotificationListElement","generateElementOfItem","item","type","parameters","itemElement","document","createElement","classList","add","iconElement","iconSpanElement","innerHTML","getIconHTML","icon","appendChild","nameElement","createTextNode","name","onclick","scheduleNotificationForStopItemOnRoute","index","scheduleNotificationForStopItemOnLocation","element","id","openScheduleNotification","pushPageHistory","setAttribute","_step","fragment","DocumentFragment","_iterator","_createForOfIteratorHelper","scheduleNotificationOptions","s","n","done","newElement","value","append","err","e","f","initializeScheduleNotificationField","closeScheduleNotification","revokePageHistory","itemElementID","StopID","RouteID","EstimateTime","scheduleNotificationButtonElement","promptMessage","scheduleNotificationForStop","then","result","previousCategories","previousAnimation","previousSkeletonScreen","StorageField","StorageBodyElement","StatisticsElement","statisticsItemElement","valueElement","updateStorageField","statistics","skeletonScreen","animation","updateItem","currentItem","previousItem","updateValue","innerText","size","updateName","category","updateAnimation","booleanToString","updateSkeletonScreen","key","categories","categorizedSizes","push","categoriesQuantity","length","currentItemSeatQuantity","elementQuerySelectorAll","capacity","o","Math","abs","statisticsItemElements2","remove","statisticsItemElements","i","thisItemElement","_refreshStorageStatistics","playing_animation","getSettingOptionValue","FieldHeight","querySize","height","defaultCategoriesQuantity","floor","totalSize","categoryKey","setUpStorageFieldSkeletonScreen","getStoresSizeStatistics","apply","arguments","openStorage","refreshStorageStatistics","closeStorage","SaveToFolderField","SaveToFolderBodyElement","SaveToFolderListElement","folderID","saveToFolderButtonElement","saveStop","isFolderContentSaved","k","closeSaveToFolder","saveStopItemOnRoute","saveStopItemOnLocation","actionButtonElement","saveRoute","hash","saveLocation","_initializeSaveToFolderField","foldersWithContent","listFoldersWithContent","newItemElement","openSaveToFolder","_x","_x2","initializeSaveToFolderField","previousSearchResults","searchField","searchHeadElement","searchBodyElement","searchInputElement","searchInputCanvasElement","searchTypeFilterButtonElement","searchResultsElement","searchKeyboardElement","searchInputCanvasContext","getContext","searchInputPlaceholder","searchInputCanvasScale","window","devicePixelRatio","padding","cursorWidth","cursorBorderRadius","selectionHighlightBorderRadius","lineHeight","fontWeight","fontSize","fontFamily","keyboardRows","textColor","getCSSVariableValue","placeholderTextColor","cursorColor","textWidth","textWidthToCursorStart","selectedTextWidth","selection","cursorOffset","width","playingCursorAnimation","keyboardInitialized","deleteCharFromInput","currentValue","getSearchInputValue","newValue","substring","updateSearchResult","updateSearchInput","scrollDocumentToTop","emptyInput","openSystemKeyboard","event","preventDefault","focus","openKeyboard","_step2","_iterator2","newButtonElement","eventName","supportTouch","addEventListener","initializeKeyboard","animateCursor","getSearchTypeFilterValue","parseInt","getAttribute","String","cursorStart","cursorEnd","empty","font","textAlign","textBaseline","measureText","max","clearRect","globalAlpha","fillStyle","fillText","min","drawRoundedRect","resizeSearchInputCanvas","x","performance","now","alpha","pow","sin","PI","requestAnimationFrame","generateElementOfSearchResultItem","searchResultItemElement","typeElement","typeToIcon","updateTypeIcon","updateClickHandler","openRoute","pid","openLocation","openBus","currentType","containPhoneticSymbols","searchResults","searchFor","searchResultLength","searchResultElements2","searchResultElements","switchSearchTypeFilter","newType","toString","openSearch","dataDownloadCompleted","prepareForSearch","closeSearch","SettingsField","SettingsBodyElement","SettingsElement","settingElement","statusElement","status","arrowElement","arrowSpanElement","action","_initializeSettingsField","_asyncToGenerator","list","listSettings","thisElement","openSettings","initializeSettingsField","closeSettings","downloadExportFile","_downloadExportFile","exportedData","exportData","releaseFile","openFileToImportData","identifier","generateIdentifier","fileInput","target","files","file","reader","FileReader","onload","fileTextContent","importData","readAsText","once","body","click","viewCommitOfCurrentVersion","url","getCommitURLOfCurrentVersion","open","viewGitHubRepository","showPromptToAskForPersistentStorage","askForPersistentStorage","SettingsOptionsField","SettingsOptionsBodyElement","SettingsOptionsOptionsElement","SettingsOptionsDescriptionElement","SettingsOptionsHeadElement","SettingsOptionsTitleElement","setting","optionElement","checkboxContainerElement","checkboxElement","checked","option","settingsOptionsHandler","openSettingsOptions","settingKey","getSetting","description","options","initializeSettingsOptionsField","closePreviousPage","closeSettingsOptions","openPreviousPage","documentQuerySelectorAll","changeSettingOption"],"sourceRoot":""}