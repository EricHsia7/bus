{"version":3,"file":"666636ae03e01eecf8bb.js","mappings":"wyCAMA,IAAMA,GAA4BC,EAAAA,EAAAA,IAAsB,OAClDC,GAAkCC,EAAAA,EAAAA,IAAqBH,EAA2B,OAClFI,GAAkCD,EAAAA,EAAAA,IAAqBD,EAAiC,OAI9F,SAASG,EAAsBC,EAAkCC,EAAgCC,GAE/F,IAAMC,EAAUC,SAASC,cAAc,OAGvC,OAFAF,EAAQG,UAAUC,IAAI,MAEdN,GACN,IAAK,gBACHE,EAAQK,aAAa,UAAW,4DAA4DN,EAAW,QAAQA,EAAW,OAAOA,EAAW,OAAOA,EAAW,OAAOF,EAAKS,UAC1K,MACF,IAAK,mBACHN,EAAQK,aAAa,UAAW,+DAA+DN,EAAW,QAAQA,EAAW,OAAOA,EAAW,OAAOA,EAAW,OAAOF,EAAKS,UAMjL,OADAN,EAAQO,UAAqB,oBAAoDC,EAAAA,EAAAA,GAAYX,EAAKY,8BAA+DZ,EAAKa,aAC/J,CACLV,QAASA,EACTW,GAAI,GAER,CAEkD,SAAAC,I,MAQjD,O,EARD,UAAmDd,EAAgCC,GACjFJ,EAAgCY,UAAY,GAC5C,IAC8CM,EADxCC,EAAW,IAAIC,iBAAmBC,EAAAC,EACrBC,EAAAA,IAA2B,IAA9C,IAAAF,EAAAG,MAAAN,EAAAG,EAAAI,KAAAC,MAAgD,KACxCC,EAAa1B,EADNiB,EAAAU,MACkCzB,EAAMC,GACrDe,EAASU,OAAOF,EAAWtB,QAC7B,CAAC,OAAAyB,GAAAT,EAAAU,EAAAD,EAAA,SAAAT,EAAAW,GAAA,CACDhC,EAAgC6B,OAAOV,EACzC,EARkDF,E,8KAQjDA,EAAAgB,MAAA,KAAAC,UAAA,CAEM,SAASC,EAAyBhC,EAAgCC,IACvEgC,EAAAA,EAAAA,IAAgB,wBAChBxC,EAA0Bc,aAAa,YAAa,QAdrD,SAEiD2B,EAAAC,GAAArB,EAAAgB,MAAC,KAADC,UAAA,CAahDK,CAAoCpC,EAAMC,EAC5C,CAEO,SAASoC,KACdC,EAAAA,EAAAA,IAAkB,wBAClB7C,EAA0Bc,aAAa,YAAa,QACtD,CAEO,SAASgC,EAAuCC,EAAuBC,EAAgBC,EAAiBC,EAAsBnC,GACnI,IAAMoC,GAAclD,EAAAA,EAAAA,IAAsB,2BAAkI8C,KACtKK,GAAoCjD,EAAAA,EAAAA,IAAqBgD,EAAa,8CAC5EE,EAAAA,EAAAA,GAAc,MAAO,iBACrBD,EAAkCtC,aAAa,UAAW,SAC1D8B,KACAU,EAAAA,EAAAA,IAA4BN,EAAQC,EAASC,EAAcnC,GAAOwC,MAAK,SAACC,GACtE,OAAQA,GACN,KAAK,GACHH,EAAAA,EAAAA,GAAc,OAAQ,SACtBD,EAAkCtC,aAAa,UAAW,QAC1D,MACF,KAAK,GACHuC,EAAAA,EAAAA,GAAc,OAAQ,gBACtBD,EAAkCtC,aAAa,UAAW,QAC1DsC,EAAkCtC,aAAa,cAAe,QAC9D,MACF,KAAK,GACHuC,EAAAA,EAAAA,GAAc,kBAAmB,WACjCD,EAAkCtC,aAAa,UAAW,QAKhE,GACF,CAEO,SAAS2C,EAA0CV,EAAuBC,EAAgBC,EAAiBC,EAAsBnC,GACtI,IAAMoC,GAAclD,EAAAA,EAAAA,IAAsB,uBAAmH8C,KACvJK,GAAoCjD,EAAAA,EAAAA,IAAqBgD,EAAa,8CAC5EE,EAAAA,EAAAA,GAAc,MAAO,iBACrBD,EAAkCtC,aAAa,UAAW,SAC1D8B,KACAU,EAAAA,EAAAA,IAA4BN,EAAQC,EAASC,EAAcnC,GAAOwC,MAAK,SAACC,GACtE,OAAQA,GACN,KAAK,GACHH,EAAAA,EAAAA,GAAc,OAAQ,SACtBD,EAAkCtC,aAAa,UAAW,QAC1D,MACF,KAAK,GACHuC,EAAAA,EAAAA,GAAc,OAAQ,gBACtBD,EAAkCtC,aAAa,UAAW,QAC1DsC,EAAkCtC,aAAa,cAAe,QAC9D,MACF,KAAK,GACHuC,EAAAA,EAAAA,GAAc,kBAAmB,WACjCD,EAAkCtC,aAAa,UAAW,QAKhE,GACF,C,6vCClGA,IAAM4C,GAAoBzD,EAAAA,EAAAA,IAAsB,OAC1C0D,GAA0BxD,EAAAA,EAAAA,IAAqBuD,EAAmB,OAClEE,GAA0BzD,EAAAA,EAAAA,IAAqBwD,EAAyB,OAE9E,SAAStD,EAAsBC,EAAyBC,EAAwBC,GAE9E,IAAMC,EAAUC,SAASC,cAAc,OAGvC,OAFAF,EAAQG,UAAUC,IAAI,MAEdN,GACN,IAAK,gBACHE,EAAQK,aAAa,UAAW,mCAAmCN,EAAW,SAASF,EAAKc,QAAQZ,EAAW,OAAOA,EAAW,OACjI,MACF,IAAK,mBACHC,EAAQK,aAAa,UAAW,sCAAsCN,EAAW,SAASF,EAAKc,QAAQZ,EAAW,OAAOA,EAAW,OACpI,MACF,IAAK,QACHC,EAAQK,aAAa,UAAW,sCAAsCR,EAAKc,QAAQZ,EAAW,OAC9F,MACF,IAAK,iBACHC,EAAQK,aAAa,UAAW,gCAAgCR,EAAKc,QAAQZ,EAAW,OAQ5F,OADAC,EAAQO,UAAqB,oBAA6CC,EAAAA,EAAAA,GAAYX,EAAKY,8BAAwDZ,EAAKa,aACjJ,CACLV,QAASA,EACTW,GAAI,GAER,CAE0C,SAAAyC,I,MAOzC,O,EAPD,UAA2CtD,EAAwBC,GACjEoD,EAAwB5C,UAAY,GACpC,IACqCM,EADqBG,EAAAC,QAAzBoC,EAAAA,EAAAA,OACI,IAArC,IAAArC,EAAAG,MAAAN,EAAAG,EAAAI,KAAAC,MAAuC,KAC/BiC,EAAiB1D,EADViB,EAAAU,MACsCzB,EAAMC,GACzDoD,EAAwBI,YAAYD,EAAetD,QACrD,CAAC,OAAAyB,GAAAT,EAAAU,EAAAD,EAAA,SAAAT,EAAAW,GAAA,CACH,EAP0CyB,E,8KAOzCA,EAAAxB,MAAA,KAAAC,UAAA,CAEM,SAAS2B,EAAiB1D,EAAwBC,IACvDgC,EAAAA,EAAAA,IAAgB,gBAChBkB,EAAkB5C,aAAa,YAAa,QAb7C,SAEyC2B,EAAAC,GAAAmB,EAAAxB,MAAC,KAADC,UAAA,CAYxC4B,CAA4B3D,EAAMC,EACpC,CAEO,SAAS2D,KACdtB,EAAAA,EAAAA,IAAkB,gBAClBa,EAAkB5C,aAAa,YAAa,QAC9C,CAEO,SAASsD,EAAoBrB,EAAuBsB,EAAkBrB,EAAgBC,GAC3F,IAAME,GAAclD,EAAAA,EAAAA,IAAsB,2BAAkI8C,KACtKuB,GAA4BnE,EAAAA,EAAAA,IAAqBgD,EAAa,uCACpEoB,EAAAA,EAAAA,IAASF,EAAUrB,EAAQC,GAASM,MAAK,SAACpB,GACpCA,GACFqC,EAAAA,EAAAA,IAAqB,OAAQxB,GAAQO,MAAK,SAACkB,GACrCA,IACFH,EAA0BxD,aAAa,eAAe4D,EAAAA,EAAAA,IAAgBD,KACtEpB,EAAAA,EAAAA,GAAc,UAAW,UACzBc,IAEJ,KAEAd,EAAAA,EAAAA,GAAc,OAAQ,UAE1B,GACF,CAEO,SAASsB,EAAuB5B,EAAuBsB,EAAkBrB,EAAgBC,GAC9F,IAAME,GAAclD,EAAAA,EAAAA,IAAsB,uBAAmH8C,KACvJuB,GAA4BnE,EAAAA,EAAAA,IAAqBgD,EAAa,uCACpEoB,EAAAA,EAAAA,IAASF,EAAUrB,EAAQC,GAASM,MAAK,SAACpB,GACpCA,GACFqC,EAAAA,EAAAA,IAAqB,OAAQxB,GAAQO,MAAK,SAACkB,GACrCA,IACFH,EAA0BxD,aAAa,eAAe4D,EAAAA,EAAAA,IAAgBD,KACtEpB,EAAAA,EAAAA,GAAc,UAAW,UACzBc,IAEJ,KAEAd,EAAAA,EAAAA,GAAc,OAAQ,UAE1B,GACF,CAEO,SAASuB,EAAuBP,EAAkBpB,GACvD,IAAM4B,GAAsB5E,EAAAA,EAAAA,IAAsB,sEAClD6E,EAAAA,EAAAA,IAAUT,EAAUpB,GAASM,MAAK,SAACpB,GAC7BA,GACFqC,EAAAA,EAAAA,IAAqB,QAASvB,GAASM,MAAK,SAACkB,GACvCA,IACFI,EAAoB/D,aAAa,cAAe,SAChDuC,EAAAA,EAAAA,GAAc,UAAW,UACzBc,IAEJ,KAEAd,EAAAA,EAAAA,GAAc,OAAQ,UAE1B,GACF,CAEO,SAAS0B,EAAiBV,EAAkBpB,IACjD6B,EAAAA,EAAAA,IAAUT,EAAUpB,GAASM,MAAK,SAACpB,GAC7BA,GACFqC,EAAAA,EAAAA,IAAqB,QAASvB,GAASM,MAAK,SAACkB,GACvCA,KACFpB,EAAAA,EAAAA,GAAc,UAAW,UACzBc,IAEJ,KAEAd,EAAAA,EAAAA,GAAc,OAAQ,UAE1B,GACF,C,mtCCrHA,IAAM2B,GAAc/E,EAAAA,EAAAA,IAAsB,OACpCgF,GAAoB9E,EAAAA,EAAAA,IAAqB6E,EAAa,OACtDE,GAAoB/E,EAAAA,EAAAA,IAAqB6E,EAAa,OACtDG,GAAqBhF,EAAAA,EAAAA,IAAqB8E,EAAmB,qBAC7DG,GAA2BjF,EAAAA,EAAAA,IAAqB8E,EAAmB,cACnEI,GAAgClF,EAAAA,EAAAA,IAAqB8E,EAAmB,OACxEK,GAAuBnF,EAAAA,EAAAA,IAAqB+E,EAAmB,OAC/DK,GAAwBpF,EAAAA,EAAAA,IAAqB+E,EAAmB,OAEhEM,EAA2BJ,EAAyBK,WAAW,MAC/DC,EAAyB,aACzBC,EAAyBC,OAAOC,iBAEhCC,EAAkB,GAAKH,EACvBI,EAAsB,IAAMJ,EAC5BK,EAA6B,GAAML,EACnCM,EAAyC,EAAIN,EAC7CO,EAAqB,GAAKP,EAC1BQ,EAAmB,GAAKR,EACxBS,EAAqB,6BAEvBC,GAAoBC,EAAAA,EAAAA,GAAoB,OACxCC,GAA+BD,EAAAA,EAAAA,GAAoB,QACnDE,GAAsBF,EAAAA,EAAAA,GAAoB,OAC1CG,EAAoB,EACpBC,EAAiC,EACjCC,EAA4B,EAC5BC,GAAqB,EACrBC,EAAuB,EACvBC,GAAOC,EAAAA,EAAAA,IAAU,mBACjBC,EAAQF,EAAKE,MAAQrB,EACrBsB,EAASH,EAAKG,OAAStB,EACvBuB,GAAkC,EAE/B,SAASC,IACd,OAAOC,OAAOjC,EAAmBnD,MACnC,CAEO,SAASqF,IACd,OAAOC,SAASjC,EAA8BkC,aAAa,QAC7D,CAEO,SAASC,IACVC,EAAAA,IACFjF,EAAAA,EAAAA,IAAgB,UAChBwC,EAAYlE,aAAa,YAAa,QAuB1C,WAQE,IAPA,IAMM0C,EAAwB,GAC9BkE,EAAA,EAAAC,EAPsE,CACpE,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,IAAK,IAAK,IAAK,IAAK,KACrB,CAAC,KAAM,KAAM,KAAM,IAAK,OAGID,EAAAC,EAAAC,OAAAF,IAAE,CAA3B,IACqBpG,EADZG,EAAAC,EAAAiG,EAAAD,IACY,IAAxB,IAAAjG,EAAAG,MAAAN,EAAAG,EAAAI,KAAAC,MAA0B,KAAf+F,EAAMvG,EAAAU,MACX8F,EAAc,GACdC,EAAY,cACZC,EAAO,GACX,OAAQH,GACN,IAAK,KACHC,EAAc,mCACdE,GAAO/G,EAAAA,EAAAA,GAAY,aACnB,MACF,IAAK,KACH6G,EAAc,0BACdE,EAAOH,EACP,MACF,IAAK,KACHC,EAAc,uCACdE,GAAO/G,EAAAA,EAAAA,GAAY,YACnB,MACF,QACE6G,EAAc,iCAAiCD,MAC/CG,EAAOH,GAIPI,EAAAA,EAAAA,QACFF,EAAY,gBAEdvE,EAAO0E,KAAK,sBAA2CH,MAAcD,MAAgBE,aACvF,CAAC,OAAA9F,GAAAT,EAAAU,EAAAD,EAAA,SAAAT,EAAAW,GAAA,CACH,CACAmD,EAAsBvE,UAAYwC,EAAO2E,KAAK,GAChD,CAGEC,GACA7C,EAAsBzE,aAAa,YAAa,QAEhDoG,GAAyB,EACzBmB,KAEAC,IAAmB,GAAI,IArErBC,EAAAA,EAAAA,QAEAlF,EAAAA,EAAAA,GAAc,UAAW,uBAE7B,CAEO,SAASmF,KACd3F,EAAAA,EAAAA,IAAkB,UAkElB0C,EAAsBzE,aAAa,YAAa,SAChDoG,GAAyB,EAjEzBlC,EAAYlE,aAAa,YAAa,QACxC,CAEO,SAAS2H,IACd3B,GAAOC,EAAAA,EAAAA,IAAU,mBACjBC,EAAQF,EAAKE,MACbC,EAASH,EAAKG,OACd7B,EAAyB4B,MAAQA,EAAQrB,EACzCP,EAAyB6B,OAASA,EAAStB,EAC3C2C,IAAmB,GAAI,EACzB,CA0DO,SAASI,EAAkB1G,GAChC,IACM2G,EAAW,GADIxB,MACcnF,IACnCmD,EAAmBnD,MAAQ2G,EAC3BC,KACAN,IAAmB,GAAI,EACzB,CAEO,SAASO,IACd,IAAMC,EAAe3B,IACfwB,EAAWG,EAAaC,UAAU,EAAGD,EAAalB,OAAS,GACjEzC,EAAmBnD,MAAQ2G,EAC3BC,KACAN,IAAmB,GAAI,EACzB,CAEO,SAASU,IACd7D,EAAmBnD,MAAQ,GAC3B4G,KACAN,IAAmB,GAAI,EACzB,CAEO,SAASW,EAAmBC,GACjCA,EAAMC,iBACNhE,EAAmBiE,OACrB,CAEO,SAASd,GAAkBe,EAAqBC,GACrD,IAAItH,EAAQmF,IACRoC,GAAQ,EACS,IAAjBvH,EAAM4F,QACR5F,EAAQ0D,EACR6D,GAAQ,EACRF,EAAc,EACdC,EAAY,IAES,IAAjBD,IAAqC,IAAfC,IAExBA,EAA0B,GAD1BD,EAAcrH,EAAM4F,SAKxBd,GAAOC,EAAAA,EAAAA,IAAU,mBACjBC,EAAQF,EAAKE,MAAQrB,EACrBsB,EAASH,EAAKG,OAAStB,EACvBU,GAAYC,EAAAA,EAAAA,GAAoB,OAChCC,GAAuBD,EAAAA,EAAAA,GAAoB,QAC3CE,GAAcF,EAAAA,EAAAA,GAAoB,OAElCd,EAAyBgE,KAAO,OAAOrD,OAAcC,IACrDZ,EAAyBiE,UAAY,SACrCjE,EAAyBkE,aAAe,SAExCjD,EAAYjB,EAAyBmE,YAAY3H,GAAOgF,MACxDN,EAAyBlB,EAAyBmE,YAAY3H,EAAM+G,UAAU,EAAGM,IAAcrC,MAC/FL,EAAoBnB,EAAyBmE,YAAY3H,EAAM+G,UAAUM,EAAaC,IAAYtC,MAClGH,EAAe0C,EAAQ,EAAIK,KAAKC,IAAI,EAAGnD,GAEvClB,EAAyBsE,UAAU,EAAG,EAAG9C,EAAOC,GAE5CoC,IAAgBC,GAClB1C,GAAY,EACZpB,EAAyBuE,YAAc,EACvCvE,EAAyBwE,UAAYT,EAAQhD,EAAuBF,EACpEb,EAAyByE,SAASjI,EAAOyE,EAAY,GAAKmD,KAAKM,IAAIrD,EAAcG,EAAQlB,GAAWe,GAAeI,EAAS,IAC5HkD,EAAAA,EAAAA,IAAgB3E,EAA0BoE,KAAKM,IAAIrD,EAAcG,EAAQlB,IAAWmB,EAASf,GAAc,EAAGH,EAAaG,EAAYF,EAAoBQ,KAE3JI,GAAY,EACZpB,EAAyBuE,YAAc,KACvCI,EAAAA,EAAAA,IAAgB3E,EAA0BoE,KAAKM,IAAIrD,EAAcG,EAAQlB,IAAWmB,EAASf,GAAc,EAAGS,EAAmBT,EAAYD,EAAgCO,GAC7KhB,EAAyBuE,YAAc,EACvCvE,EAAyBwE,UAAYT,EAAQhD,EAAuBF,EACpEb,EAAyByE,SAASjI,EAAOyE,EAAY,GAAKmD,KAAKM,IAAIrD,EAAcG,EAAQlB,GAAWe,GAAeI,EAAS,GAC5HzB,EAAyBuE,YAAc,KACvCI,EAAAA,EAAAA,IAAgB3E,EAA0BoE,KAAKM,IAAIrD,EAAcG,EAAQlB,IAAWmB,EAASf,GAAc,EAAGS,EAAmBT,EAAYD,EAAgCO,GAEjL,CAEO,SAASoC,KACd,IAAMwB,EAAc/C,IACdyB,EAAe3B,IACrB,KAAKkD,EAAAA,EAAAA,IAAuBvB,GAAe,CACzC,IAGkCwB,EAH5BC,EAAqC,CAAC,QAAS,cAAe,kBAC9DvC,EAAsB,GACmCwC,EAAA9I,GAAzC+I,EAAAA,EAAAA,IAAU3B,EAAcsB,EAAa,KACzB,IAAlC,IAAAI,EAAA5I,MAAA0I,EAAAE,EAAA3I,KAAAC,MAAoC,KAAzB0B,EAAM8G,EAAAtI,MACTb,EAAOqC,EAAOlD,KAAKuB,EACnB6I,GAAWzJ,EAAAA,EAAAA,GAAYsJ,EAAW/G,EAAOlD,KAAKC,OAChDoK,EAAgB,GACpB,OAAQnH,EAAOlD,KAAKC,MAClB,KAAK,EACHoK,EAAgB,uBAAuBnH,EAAOlD,KAAKc,QAAQoC,EAAOlD,KAAKsK,IAAIzC,KAAK,SAChF,MACF,KAAK,EACHwC,EAAgB,8BAA8BnH,EAAOlD,KAAKuK,SAC1D,MACF,KAAK,EACHF,EAAgB,mBAAmBnH,EAAOlD,KAAKc,MAKnD4G,EAAKE,KAAK,4BAAkDyC,sBAA6DD,0BAAkEvJ,gBAC7L,CAAC,OAAAe,GAAAsI,EAAArI,EAAAD,EAAA,SAAAsI,EAAApI,GAAA,CACDkD,EAAqBtE,UAAYgH,EAAKG,KAAK,GAC7C,CACF,CAEO,SAAS2C,KACd,IAAMV,EAAc/C,IAChB0D,GAAmB,EAErBA,EADEX,IAAgB,GAAKA,EAAc,EAC3BA,EAAc,GAEb,EAGb/E,EAA8BrE,WAAYC,EAAAA,EAAAA,GADJ,CAAC,cAAe,QAAS,cAAe,kBAClB8J,EAAU,IACtE1F,EAA8BvE,aAAa,OAAQiK,EAAQC,YAC3DpC,IACF,CAEA,SAASP,KACP,IAAM4C,GAAI,IAAIC,MAAOC,UAAY,IAC3BC,EAAQxB,KAAKyB,IAAIzB,KAAK0B,IAAIL,IAC5BrE,IACFpB,EAAyBuE,YAAcqB,EACvC5F,EAAyBsE,UAAUF,KAAKM,IAAIrD,EAAcG,EAAQlB,GAAW,EAAG,EAAGC,EAAc,EAAGkB,IACpGkD,EAAAA,EAAAA,IAAgB3E,EAA0BoE,KAAKM,IAAIrD,EAAcG,EAAQlB,IAAWmB,EAASf,GAAc,EAAGH,EAAaG,EAAYF,EAAoBQ,IAEzJU,GACFtB,OAAO2F,sBAAsBlD,GAEjC,C","sources":["webpack://bus/./src/interface/schedule-notification/index.ts","webpack://bus/./src/interface/save-to-folder/index.ts","webpack://bus/./src/interface/search/index.ts"],"sourcesContent":["import { scheduleNotificationForStop, ScheduleNotificationOption, scheduleNotificationOptions } from '../../data/notification/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst ScheduleNotificationField = documentQuerySelector('.css_schedule_notification_field');\nconst ScheduleNotificationBodyElement = elementQuerySelector(ScheduleNotificationField, '.css_schedule_notification_body');\nconst ScheduleNotificationListElement = elementQuerySelector(ScheduleNotificationBodyElement, '.css_schedule_notification_list');\n\ntype ScheduleNotificationType = 'stop-on-route' | 'stop-on-location';\n\nfunction generateElementOfItem(item: ScheduleNotificationOption, type: ScheduleNotificationType, parameters: Array): GeneratedElement {\n  // const identifier = generateIdentifier('i');\n  const element = document.createElement('div');\n  element.classList.add('css_schedule_notification_list_item');\n  // element.id = identifier;\n  switch (type) {\n    case 'stop-on-route':\n      element.setAttribute('onclick', `bus.notification.scheduleNotificationForStopItemOnRoute('${parameters[0]}', ${parameters[1]}, ${parameters[2]}, ${parameters[3]}, ${item.index})`);\n      break;\n    case 'stop-on-location':\n      element.setAttribute('onclick', `bus.notification.scheduleNotificationForStopItemOnLocation('${parameters[0]}', ${parameters[1]}, ${parameters[2]}, ${parameters[3]}, ${item.index})`);\n      break;\n    default:\n      break;\n  }\n  element.innerHTML = /*html*/ `<div class=\"css_schedule_notification_item_icon\">${getIconHTML(item.icon)}</div><div class=\"css_schedule_notification_item_name\">${item.name}</div>`;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nasync function initializeScheduleNotificationField(type: ScheduleNotificationType, parameters: Array<any>) {\n  ScheduleNotificationListElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  for (const item of scheduleNotificationOptions) {\n    const newElement = generateElementOfItem(item, type, parameters);\n    fragment.append(newElement.element);\n  }\n  ScheduleNotificationListElement.append(fragment);\n}\n\nexport function openScheduleNotification(type: ScheduleNotificationType, parameters: Array<any>): void {\n  pushPageHistory('ScheduleNotification');\n  ScheduleNotificationField.setAttribute('displayed', 'true');\n  initializeScheduleNotificationField(type, parameters);\n}\n\nexport function closeScheduleNotification(): void {\n  revokePageHistory('ScheduleNotification');\n  ScheduleNotificationField.setAttribute('displayed', 'false');\n}\n\nexport function scheduleNotificationForStopItemOnRoute(itemElementID: string, StopID: number, RouteID: number, EstimateTime: number, index: number): void {\n  const itemElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  const scheduleNotificationButtonElement = elementQuerySelector(itemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"schedule-notification\"]');\n  promptMessage('處理中', 'manufacturing');\n  scheduleNotificationButtonElement.setAttribute('enabled', 'false');\n  closeScheduleNotification();\n  scheduleNotificationForStop(StopID, RouteID, EstimateTime, index).then((result) => {\n    switch (result) {\n      case 0:\n        promptMessage('設定失敗', 'error');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      case 1:\n        promptMessage('設定成功', 'check_circle');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        scheduleNotificationButtonElement.setAttribute('highlighted', 'true');\n        break;\n      case 2:\n        promptMessage('在設定中註冊後才可設定到站通知', 'warning');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      default:\n        break;\n    }\n  });\n}\n\nexport function scheduleNotificationForStopItemOnLocation(itemElementID: string, StopID: number, RouteID: number, EstimateTime: number, index: number): void {\n  const itemElement = documentQuerySelector(`.css_location_field .css_location_groups .css_location_group .css_location_group_items .css_location_group_item#${itemElementID}`);\n  const scheduleNotificationButtonElement = elementQuerySelector(itemElement, '.css_location_group_item_body .css_location_group_item_buttons .css_location_group_item_button[type=\"schedule-notification\"]');\n  promptMessage('處理中', 'manufacturing');\n  scheduleNotificationButtonElement.setAttribute('enabled', 'false');\n  closeScheduleNotification();\n  scheduleNotificationForStop(StopID, RouteID, EstimateTime, index).then((result) => {\n    switch (result) {\n      case 0:\n        promptMessage('設定失敗', 'error');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      case 1:\n        promptMessage('設定成功', 'check_circle');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        scheduleNotificationButtonElement.setAttribute('highlighted', 'true');\n        break;\n      case 2:\n        promptMessage('在設定中註冊後才可設定到站通知', 'warning');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      default:\n        break;\n    }\n  });\n}\n","import { FolderWithContent, isFolderContentSaved, listFoldersWithContent, saveRoute, saveStop } from '../../data/folder/index';\nimport { booleanToString } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\ntype SaveToFolderType = 'stop-on-route' | 'stop-on-location' | 'route' | 'bus';\n\nconst SaveToFolderField = documentQuerySelector('.css_save_to_folder_field');\nconst SaveToFolderBodyElement = elementQuerySelector(SaveToFolderField, '.css_save_to_folder_body');\nconst SaveToFolderListElement = elementQuerySelector(SaveToFolderBodyElement, '.css_save_to_folder_list');\n\nfunction generateElementOfItem(item: FolderWithContent, type: SaveToFolderType, parameters: Array<any>): GeneratedElement {\n  // const identifier = generateIdentifier('i');\n  const element = document.createElement('div');\n  element.classList.add('css_save_to_folder_list_item');\n  // element.id = identifier;\n  switch (type) {\n    case 'stop-on-route':\n      element.setAttribute('onclick', `bus.folder.saveStopItemOnRoute('${parameters[0]}', '${item.id}', ${parameters[1]}, ${parameters[2]})`);\n      break;\n    case 'stop-on-location':\n      element.setAttribute('onclick', `bus.folder.saveStopItemOnLocation('${parameters[0]}', '${item.id}', ${parameters[1]}, ${parameters[2]})`);\n      break;\n    case 'route':\n      element.setAttribute('onclick', `bus.folder.saveRouteOnDetailsPage('${item.id}', ${parameters[0]})`);\n      break;\n    case 'route-on-route':\n      element.setAttribute('onclick', `bus.folder.saveRouteOnRoute('${item.id}', ${parameters[0]})`);\n      break;\n    case 'bus':\n      break;\n    default:\n      break;\n  }\n  element.innerHTML = /*html*/ `<div class=\"css_save_to_folder_item_icon\">${getIconHTML(item.icon)}</div><div class=\"css_save_to_folder_item_name\">${item.name}</div>`;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nasync function initializeSaveToFolderField(type: SaveToFolderType, parameters: Array<any>) {\n  SaveToFolderListElement.innerHTML = '';\n  const foldersWithContent = await listFoldersWithContent();\n  for (const item of foldersWithContent) {\n    const newItemElement = generateElementOfItem(item, type, parameters);\n    SaveToFolderListElement.appendChild(newItemElement.element);\n  }\n}\n\nexport function openSaveToFolder(type: SaveToFolderType, parameters: Array<any>): void {\n  pushPageHistory('SaveToFolder');\n  SaveToFolderField.setAttribute('displayed', 'true');\n  initializeSaveToFolderField(type, parameters);\n}\n\nexport function closeSaveToFolder(): void {\n  revokePageHistory('SaveToFolder');\n  SaveToFolderField.setAttribute('displayed', 'false');\n}\n\nexport function saveStopItemOnRoute(itemElementID: string, folderID: string, StopID: number, RouteID: number): void {\n  const itemElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  const saveToFolderButtonElement = elementQuerySelector(itemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"save-to-folder\"]');\n  saveStop(folderID, StopID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('stop', StopID).then((k) => {\n        if (k) {\n          saveToFolderButtonElement.setAttribute('highlighted', booleanToString(k));\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nexport function saveStopItemOnLocation(itemElementID: string, folderID: string, StopID: number, RouteID: number): void {\n  const itemElement = documentQuerySelector(`.css_location_field .css_location_groups .css_location_group .css_location_group_items .css_location_group_item#${itemElementID}`);\n  const saveToFolderButtonElement = elementQuerySelector(itemElement, '.css_location_group_item_body .css_location_group_item_buttons .css_location_group_item_button[type=\"save-to-folder\"]');\n  saveStop(folderID, StopID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('stop', StopID).then((k) => {\n        if (k) {\n          saveToFolderButtonElement.setAttribute('highlighted', booleanToString(k));\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nexport function saveRouteOnDetailsPage(folderID: string, RouteID: number): void {\n  const actionButtonElement = documentQuerySelector('.css_route_details_field .css_route_details_body .css_route_details_groups .css_route_details_group[group=\"actions\"] .css_route_details_group_body .css_route_details_action_button[action=\"save-to-folder\"]');\n  saveRoute(folderID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('route', RouteID).then((k) => {\n        if (k) {\n          actionButtonElement.setAttribute('highlighted', 'true');\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nexport function saveRouteOnRoute(folderID: string, RouteID: number): void {\n  saveRoute(folderID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('route', RouteID).then((k) => {\n        if (k) {\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n","import { prepareForSearch, searchFor, SearchItem } from '../../data/search/index';\nimport { drawRoundedRect } from '../../tools/graphic';\nimport { supportTouch } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { getCSSVariableValue } from '../../tools/style';\nimport { containPhoneticSymbols } from '../../tools/text';\nimport { dataDownloadCompleted } from '../home/index';\nimport { getIconHTML } from '../icons/index';\nimport { MaterialSymbols } from '../icons/material-symbols-type';\nimport { pushPageHistory, querySize, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst searchField = documentQuerySelector('.css_search_field');\nconst searchHeadElement = elementQuerySelector(searchField, '.css_search_head');\nconst searchBodyElement = elementQuerySelector(searchField, '.css_search_body');\nconst searchInputElement = elementQuerySelector(searchHeadElement, '.css_search_search_input #search_input') as HTMLInputElement;\nconst searchInputCanvasElement = elementQuerySelector(searchHeadElement, '.css_search_search_input canvas');\nconst searchTypeFilterButtonElement = elementQuerySelector(searchHeadElement, '.css_search_button_right');\nconst searchResultsElement = elementQuerySelector(searchBodyElement, '.css_search_results');\nconst searchKeyboardElement = elementQuerySelector(searchBodyElement, '.css_search_keyboard');\n\nconst searchInputCanvasContext = searchInputCanvasElement.getContext('2d');\nconst searchInputPlaceholder = '搜尋路線、地點、公車';\nconst searchInputCanvasScale = window.devicePixelRatio;\n\nconst padding: number = 15 * searchInputCanvasScale;\nconst cursorWidth: number = 1.8 * searchInputCanvasScale;\nconst cursorBorderRadius: number = 0.9 * searchInputCanvasScale;\nconst selectionHighlightBorderRadius: number = 4 * searchInputCanvasScale;\nconst lineHeight: number = 25 * searchInputCanvasScale;\nconst fontSize: number = 20 * searchInputCanvasScale;\nconst fontFamily: string = '\"Noto Sans TC\", sans-serif';\n\nlet textColor: string = getCSSVariableValue('--b-cssvar-333333');\nlet placeholderTextColor: string = getCSSVariableValue('--b-cssvar-aeaeb2');\nlet cursorColor: string = getCSSVariableValue('--b-cssvar-main-color');\nlet textWidth: number = 0;\nlet textWidthToCursorStart: number = 0;\nlet selectedTextWidth: number = 0;\nlet selection: boolean = false;\nlet cursorOffset: number = 0;\nlet size = querySize('head-two-button');\nlet width = size.width * searchInputCanvasScale;\nlet height = size.height * searchInputCanvasScale;\nlet playingCursorAnimation: boolean = false;\n\nexport function getSearchInputValue(): string {\n  return String(searchInputElement.value);\n}\n\nexport function getSearchTypeFilterValue(): SearchItem['type'] | -1 {\n  return parseInt(searchTypeFilterButtonElement.getAttribute('type'));\n}\n\nexport function openSearch(): void {\n  if (dataDownloadCompleted) {\n    pushPageHistory('Search');\n    searchField.setAttribute('displayed', 'true');\n    openKeyboard();\n    prepareForSearch();\n  } else {\n    promptMessage('資料還在下載中', 'download_for_offline');\n  }\n}\n\nexport function closeSearch(): void {\n  revokePageHistory('Search');\n  closeKeyboard();\n  searchField.setAttribute('displayed', 'false');\n}\n\nexport function resizeSearchInputCanvas(): void {\n  size = querySize('head-two-button');\n  width = size.width;\n  height = size.height;\n  searchInputCanvasElement.width = width * searchInputCanvasScale;\n  searchInputCanvasElement.height = height * searchInputCanvasScale;\n  updateSearchInput(-1, -1);\n}\n\nfunction initializeKeyboard(): void {\n  const keyboardKeys: Array<[string, string, string, string, string]> = [\n    ['紅', '藍', '1', '2', '3'],\n    ['綠', '棕', '4', '5', '6'],\n    ['橘', '小', '7', '8', '9'],\n    ['鍵盤', '幹線', '清空', '0', '刪除']\n  ];\n  const result: Array<string> = [];\n  for (const row of keyboardKeys) {\n    for (const column of row) {\n      let eventScript = '';\n      let eventType = 'onmousedown';\n      let html = '';\n      switch (column) {\n        case '刪除':\n          eventScript = 'bus.search.deleteCharFromInout()';\n          html = getIconHTML('backspace');\n          break;\n        case '清空':\n          eventScript = 'bus.search.emptyInput()';\n          html = column;\n          break;\n        case '鍵盤':\n          eventScript = 'bus.search.openSystemKeyboard(event)';\n          html = getIconHTML('keyboard');\n          break;\n        default:\n          eventScript = `bus.search.typeTextIntoInput('${column}')`;\n          html = column;\n          break;\n      }\n\n      if (supportTouch()) {\n        eventType = 'ontouchstart';\n      }\n      result.push(`<button class=\"css_search_keyboard_key\" ${eventType}=\"${eventScript}\">${html}</button>`);\n    }\n  }\n  searchKeyboardElement.innerHTML = result.join('');\n}\n\nexport function openKeyboard(): void {\n  initializeKeyboard();\n  searchKeyboardElement.setAttribute('displayed', 'true');\n\n  playingCursorAnimation = true;\n  animateCursor();\n\n  updateSearchInput(-1, -1);\n}\n\nexport function closeKeyboard(): void {\n  searchKeyboardElement.setAttribute('displayed', 'false');\n  playingCursorAnimation = false;\n}\n\nexport function typeTextIntoInput(value): void {\n  const currentValue = getSearchInputValue();\n  const newValue = `${currentValue}${value}`;\n  searchInputElement.value = newValue;\n  updateSearchResult();\n  updateSearchInput(-1, -1);\n}\n\nexport function deleteCharFromInout(): void {\n  const currentValue = getSearchInputValue();\n  const newValue = currentValue.substring(0, currentValue.length - 1);\n  searchInputElement.value = newValue;\n  updateSearchResult();\n  updateSearchInput(-1, -1);\n}\n\nexport function emptyInput(): void {\n  searchInputElement.value = '';\n  updateSearchResult();\n  updateSearchInput(-1, -1);\n}\n\nexport function openSystemKeyboard(event: Event): void {\n  event.preventDefault();\n  searchInputElement.focus();\n}\n\nexport function updateSearchInput(cursorStart: number, cursorEnd: number): void {\n  let value = getSearchInputValue();\n  let empty = false;\n  if (value.length === 0) {\n    value = searchInputPlaceholder;\n    empty = true;\n    cursorStart = 0;\n    cursorEnd = 0;\n  } else {\n    if (cursorStart === -1 && cursorEnd === -1) {\n      cursorStart = value.length;\n      cursorEnd = cursorStart * 1;\n    }\n  }\n\n  size = querySize('head-two-button');\n  width = size.width * searchInputCanvasScale;\n  height = size.height * searchInputCanvasScale;\n  textColor = getCSSVariableValue('--b-cssvar-333333');\n  placeholderTextColor = getCSSVariableValue('--b-cssvar-aeaeb2');\n  cursorColor = getCSSVariableValue('--b-cssvar-main-color');\n\n  searchInputCanvasContext.font = `500 ${fontSize}px ${fontFamily}`;\n  searchInputCanvasContext.textAlign = 'center';\n  searchInputCanvasContext.textBaseline = 'middle';\n\n  textWidth = searchInputCanvasContext.measureText(value).width;\n  textWidthToCursorStart = searchInputCanvasContext.measureText(value.substring(0, cursorStart)).width;\n  selectedTextWidth = searchInputCanvasContext.measureText(value.substring(cursorStart, cursorEnd)).width;\n  cursorOffset = empty ? 1 : Math.max(1, textWidthToCursorStart);\n\n  searchInputCanvasContext.clearRect(0, 0, width, height);\n\n  if (cursorStart === cursorEnd) {\n    selection = true;\n    searchInputCanvasContext.globalAlpha = 1;\n    searchInputCanvasContext.fillStyle = empty ? placeholderTextColor : textColor;\n    searchInputCanvasContext.fillText(value, textWidth / 2 + (Math.min(cursorOffset, width - padding) - cursorOffset), height / 2);\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, cursorWidth, lineHeight, cursorBorderRadius, cursorColor);\n  } else {\n    selection = false;\n    searchInputCanvasContext.globalAlpha = 0.27;\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, selectedTextWidth, lineHeight, selectionHighlightBorderRadius, cursorColor);\n    searchInputCanvasContext.globalAlpha = 1;\n    searchInputCanvasContext.fillStyle = empty ? placeholderTextColor : textColor;\n    searchInputCanvasContext.fillText(value, textWidth / 2 + (Math.min(cursorOffset, width - padding) - cursorOffset), height / 2);\n    searchInputCanvasContext.globalAlpha = 0.08;\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, selectedTextWidth, lineHeight, selectionHighlightBorderRadius, cursorColor);\n  }\n}\n\nexport function updateSearchResult(): void {\n  const currentType = getSearchTypeFilterValue();\n  const currentValue = getSearchInputValue();\n  if (!containPhoneticSymbols(currentValue)) {\n    const typeToIcon: Array<MaterialSymbols> = ['route', 'location_on', 'directions_bus'];\n    const html: Array<string> = [];\n    const searchResults = searchFor(currentValue, currentType, 30);\n    for (const result of searchResults) {\n      const name = result.item.n;\n      const typeIcon = getIconHTML(typeToIcon[result.item.type]);\n      let onclickScript = '';\n      switch (result.item.type) {\n        case 0:\n          onclickScript = `bus.route.openRoute(${result.item.id}, [${result.item.pid.join(',')}])`;\n          break;\n        case 1:\n          onclickScript = `bus.location.openLocation('${result.item.hash}')`;\n          break;\n        case 2:\n          onclickScript = `bus.bus.openBus(${result.item.id})`;\n          break;\n        default:\n          break;\n      }\n      html.push(`<div class=\"css_search_search_result\" onclick=\"${onclickScript}\"><div class=\"css_search_search_result_type\">${typeIcon}</div><div class=\"css_search_search_result_route_name\">${name}</div></div>`);\n    }\n    searchResultsElement.innerHTML = html.join('');\n  }\n}\n\nexport function switchSearchTypeFilter(): void {\n  const currentType = getSearchTypeFilterValue();\n  let newType: number = -1;\n  if (currentType >= -1 && currentType < 2) {\n    newType = currentType + 1;\n  } else {\n    newType = -1;\n  }\n  const icons: Array<MaterialSymbols> = ['filter_list', 'route', 'location_on', 'directions_bus'];\n  searchTypeFilterButtonElement.innerHTML = getIconHTML(icons[newType + 1]);\n  searchTypeFilterButtonElement.setAttribute('type', newType.toString());\n  updateSearchResult();\n}\n\nfunction animateCursor(): void {\n  const x = new Date().getTime() / 400;\n  const alpha = Math.abs(Math.sin(x));\n  if (selection) {\n    searchInputCanvasContext.globalAlpha = alpha;\n    searchInputCanvasContext.clearRect(Math.min(cursorOffset, width - padding) - 1, 0, cursorWidth + 2, height);\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, cursorWidth, lineHeight, cursorBorderRadius, cursorColor);\n  }\n  if (playingCursorAnimation) {\n    window.requestAnimationFrame(animateCursor);\n  }\n}\n"],"names":["ScheduleNotificationField","documentQuerySelector","ScheduleNotificationBodyElement","elementQuerySelector","ScheduleNotificationListElement","generateElementOfItem","item","type","parameters","element","document","createElement","classList","add","setAttribute","index","innerHTML","getIconHTML","icon","name","id","_initializeScheduleNotificationField","_step","fragment","DocumentFragment","_iterator","_createForOfIteratorHelper","scheduleNotificationOptions","s","n","done","newElement","value","append","err","e","f","apply","arguments","openScheduleNotification","pushPageHistory","_x","_x2","initializeScheduleNotificationField","closeScheduleNotification","revokePageHistory","scheduleNotificationForStopItemOnRoute","itemElementID","StopID","RouteID","EstimateTime","itemElement","scheduleNotificationButtonElement","promptMessage","scheduleNotificationForStop","then","result","scheduleNotificationForStopItemOnLocation","SaveToFolderField","SaveToFolderBodyElement","SaveToFolderListElement","_initializeSaveToFolderField","listFoldersWithContent","newItemElement","appendChild","openSaveToFolder","initializeSaveToFolderField","closeSaveToFolder","saveStopItemOnRoute","folderID","saveToFolderButtonElement","saveStop","isFolderContentSaved","k","booleanToString","saveStopItemOnLocation","saveRouteOnDetailsPage","actionButtonElement","saveRoute","saveRouteOnRoute","searchField","searchHeadElement","searchBodyElement","searchInputElement","searchInputCanvasElement","searchTypeFilterButtonElement","searchResultsElement","searchKeyboardElement","searchInputCanvasContext","getContext","searchInputPlaceholder","searchInputCanvasScale","window","devicePixelRatio","padding","cursorWidth","cursorBorderRadius","selectionHighlightBorderRadius","lineHeight","fontSize","fontFamily","textColor","getCSSVariableValue","placeholderTextColor","cursorColor","textWidth","textWidthToCursorStart","selectedTextWidth","selection","cursorOffset","size","querySize","width","height","playingCursorAnimation","getSearchInputValue","String","getSearchTypeFilterValue","parseInt","getAttribute","openSearch","dataDownloadCompleted","_i","_keyboardKeys","length","column","eventScript","eventType","html","supportTouch","push","join","initializeKeyboard","animateCursor","updateSearchInput","prepareForSearch","closeSearch","resizeSearchInputCanvas","typeTextIntoInput","newValue","updateSearchResult","deleteCharFromInout","currentValue","substring","emptyInput","openSystemKeyboard","event","preventDefault","focus","cursorStart","cursorEnd","empty","font","textAlign","textBaseline","measureText","Math","max","clearRect","globalAlpha","fillStyle","fillText","min","drawRoundedRect","currentType","containPhoneticSymbols","_step2","typeToIcon","_iterator2","searchFor","typeIcon","onclickScript","pid","hash","switchSearchTypeFilter","newType","toString","x","Date","getTime","alpha","abs","sin","requestAnimationFrame"],"sourceRoot":""}