{"version":3,"file":"4a50bce0e2619df39c14.js","mappings":"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","sources":["webpack://bus/./src/interface/schedule-notification/index.ts","webpack://bus/./src/interface/storage/index.ts","webpack://bus/./src/interface/save-to-folder/index.ts","webpack://bus/./src/interface/search/index.ts","webpack://bus/./src/interface/settings/index.ts","webpack://bus/./src/interface/settings/options.ts"],"sourcesContent":["import { scheduleNotificationForStop, ScheduleNotificationOption, scheduleNotificationOptions } from '../../data/notification/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst ScheduleNotificationField = documentQuerySelector('.css_schedule_notification_field');\nconst ScheduleNotificationBodyElement = elementQuerySelector(ScheduleNotificationField, '.css_schedule_notification_body');\nconst ScheduleNotificationListElement = elementQuerySelector(ScheduleNotificationBodyElement, '.css_schedule_notification_list');\n\ntype ScheduleNotificationType = 'stop-on-route' | 'stop-on-location';\n\nfunction generateElementOfItem(item: ScheduleNotificationOption, type: ScheduleNotificationType, parameters: Array<any>): GeneratedElement {\n  const itemElement = document.createElement('div');\n  itemElement.classList.add('css_schedule_notification_list_item');\n\n  // Icon element\n  const iconElement = document.createElement('div');\n  iconElement.classList.add('css_schedule_notification_item_icon');\n  const iconSpanElement = document.createElement('span');\n  iconSpanElement.innerHTML = getIconHTML(item.icon);\n  iconElement.appendChild(iconSpanElement);\n\n  // Name element\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_schedule_notification_item_name');\n  nameElement.appendChild(document.createTextNode(item.name));\n\n  // Event handler\n  switch (type) {\n    case 'stop-on-route':\n      itemElement.onclick = function () {\n        scheduleNotificationForStopItemOnRoute(parameters[0], parameters[1], parameters[2], parameters[3], item.index);\n      };\n      break;\n    case 'stop-on-location':\n      itemElement.onclick = function () {\n        scheduleNotificationForStopItemOnLocation(parameters[0], parameters[1], parameters[2], parameters[3], item.index);\n      };\n      break;\n    default:\n      break;\n  }\n\n  itemElement.appendChild(iconElement);\n  itemElement.appendChild(nameElement);\n\n  return {\n    element: itemElement,\n    id: ''\n  };\n}\n\nfunction initializeScheduleNotificationField(type: ScheduleNotificationType, parameters: Array<any>): void {\n  ScheduleNotificationListElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  for (const item of scheduleNotificationOptions) {\n    const newElement = generateElementOfItem(item, type, parameters);\n    fragment.append(newElement.element);\n  }\n  ScheduleNotificationListElement.append(fragment);\n}\n\nexport function openScheduleNotification(type: ScheduleNotificationType, parameters: Array<any>): void {\n  pushPageHistory('ScheduleNotification');\n  ScheduleNotificationField.setAttribute('displayed', 'true');\n  initializeScheduleNotificationField(type, parameters);\n}\n\nexport function closeScheduleNotification(): void {\n  revokePageHistory('ScheduleNotification');\n  ScheduleNotificationField.setAttribute('displayed', 'false');\n}\n\nexport function scheduleNotificationForStopItemOnRoute(itemElementID: string, StopID: number, RouteID: number, EstimateTime: number, index: number): void {\n  const itemElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  const scheduleNotificationButtonElement = elementQuerySelector(itemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"schedule-notification\"]');\n  promptMessage('處理中', 'manufacturing');\n  scheduleNotificationButtonElement.setAttribute('enabled', 'false');\n  closeScheduleNotification();\n  scheduleNotificationForStop(StopID, RouteID, EstimateTime, index).then((result) => {\n    switch (result) {\n      case 0:\n        promptMessage('設定失敗', 'error');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      case 1:\n        promptMessage('設定成功', 'check_circle');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        scheduleNotificationButtonElement.setAttribute('highlighted', 'true');\n        break;\n      case 2:\n        promptMessage('在設定中註冊後才可設定到站通知', 'warning');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      default:\n        break;\n    }\n  });\n}\n\nexport function scheduleNotificationForStopItemOnLocation(itemElementID: string, StopID: number, RouteID: number, EstimateTime: number, index: number): void {\n  const itemElement = documentQuerySelector(`.css_location_field .css_location_groups .css_location_group .css_location_group_items .css_location_group_item#${itemElementID}`);\n  const scheduleNotificationButtonElement = elementQuerySelector(itemElement, '.css_location_group_item_body .css_location_group_item_buttons .css_location_group_item_button[type=\"schedule-notification\"]');\n  promptMessage('處理中', 'manufacturing');\n  scheduleNotificationButtonElement.setAttribute('enabled', 'false');\n  closeScheduleNotification();\n  scheduleNotificationForStop(StopID, RouteID, EstimateTime, index).then((result) => {\n    switch (result) {\n      case 0:\n        promptMessage('設定失敗', 'error');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      case 1:\n        promptMessage('設定成功', 'check_circle');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        scheduleNotificationButtonElement.setAttribute('highlighted', 'true');\n        break;\n      case 2:\n        promptMessage('在設定中註冊後才可設定到站通知', 'warning');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      default:\n        break;\n    }\n  });\n}\n","import { getStoresSizeStatistics, StoreSize } from '../../data/analytics/storage-size';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { GeneratedElement } from '../index';\n\nconst StorageField = documentQuerySelector('.css_storage_field');\nconst StorageBodyElement = elementQuerySelector(StorageField, '.css_storage_body');\nconst StatisticsElement = elementQuerySelector(StorageBodyElement, '.css_storage_statistics');\n\nfunction generateElementOfItem(item: StoreSize): GeneratedElement {\n  const element = document.createElement('div');\n  element.classList.add('css_storage_statistics_item');\n  element.innerHTML = /*html*/ `<div class=\"css_storage_statistics_item_name\">${item.category.name}</div><div class=\"css_storage_statistics_item_value\">${item.size}</div>`;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nasync function initializeStorageStatistics() {\n  const statistics = await getStoresSizeStatistics();\n  StatisticsElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  for (const key in statistics.categorizedSizes) {\n    const item = statistics.categorizedSizes[key];\n    const newItemElement = generateElementOfItem(item);\n    fragment.appendChild(newItemElement.element);\n  }\n  StatisticsElement.append(fragment);\n}\n\nexport function openStorage(): void {\n  StorageField.setAttribute('displayed', 'true');\n  initializeStorageStatistics();\n}\n\nexport function closeStorage(): void {\n  StorageField.setAttribute('displayed', 'false');\n}\n","import { FolderWithContent, isFolderContentSaved, listFoldersWithContent, saveRoute, saveStop } from '../../data/folder/index';\nimport { booleanToString } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\ntype SaveToFolderType = 'stop-on-route' | 'stop-on-location' | 'route' | 'route-on-route' | 'bus';\n\nconst SaveToFolderField = documentQuerySelector('.css_save_to_folder_field');\nconst SaveToFolderBodyElement = elementQuerySelector(SaveToFolderField, '.css_save_to_folder_body');\nconst SaveToFolderListElement = elementQuerySelector(SaveToFolderBodyElement, '.css_save_to_folder_list');\n\nfunction generateElementOfItem(item: FolderWithContent, type: SaveToFolderType, parameters: Array<any>): GeneratedElement {\n  const itemElement = document.createElement('div');\n  itemElement.classList.add('css_save_to_folder_list_item');\n\n  // Icon element\n  const iconElement = document.createElement('div');\n  iconElement.classList.add('css_save_to_folder_item_icon');\n  const iconSpanElement = document.createElement('span');\n  iconSpanElement.innerHTML = getIconHTML(item.icon);\n  iconElement.appendChild(iconSpanElement);\n\n  // Name element\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_save_to_folder_item_name');\n  nameElement.appendChild(document.createTextNode(item.name));\n\n  // Event handler\n  switch (type) {\n    case 'stop-on-route':\n      itemElement.onclick = function () {\n        saveStopItemOnRoute(parameters[0], item.id, parameters[1], parameters[2]);\n      };\n      break;\n    case 'stop-on-location':\n      itemElement.onclick = function () {\n        saveStopItemOnLocation(parameters[0], item.id, parameters[1], parameters[2]);\n      };\n      break;\n    case 'route':\n      itemElement.onclick = function () {\n        saveRouteOnDetailsPage(item.id, parameters[0]);\n      };\n      break;\n    case 'route-on-route':\n      itemElement.onclick = function () {\n        saveRouteOnRoute(item.id, parameters[0]);\n      };\n      break;\n    case 'bus':\n      // No action\n      break;\n    default:\n      break;\n  }\n\n  itemElement.appendChild(iconElement);\n  itemElement.appendChild(nameElement);\n\n  return {\n    element: itemElement,\n    id: ''\n  };\n}\n\nasync function initializeSaveToFolderField(type: SaveToFolderType, parameters: Array<any>) {\n  const foldersWithContent = await listFoldersWithContent();\n  SaveToFolderListElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  for (const item of foldersWithContent) {\n    const newItemElement = generateElementOfItem(item, type, parameters);\n    fragment.appendChild(newItemElement.element);\n  }\n  SaveToFolderListElement.append(fragment);\n}\n\nexport function openSaveToFolder(type: SaveToFolderType, parameters: Array<any>): void {\n  pushPageHistory('SaveToFolder');\n  SaveToFolderField.setAttribute('displayed', 'true');\n  initializeSaveToFolderField(type, parameters);\n}\n\nexport function closeSaveToFolder(): void {\n  revokePageHistory('SaveToFolder');\n  SaveToFolderField.setAttribute('displayed', 'false');\n}\n\nexport function saveStopItemOnRoute(itemElementID: string, folderID: string, StopID: number, RouteID: number): void {\n  const itemElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  const saveToFolderButtonElement = elementQuerySelector(itemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"save-to-folder\"]');\n  saveStop(folderID, StopID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('stop', StopID).then((k) => {\n        if (k) {\n          saveToFolderButtonElement.setAttribute('highlighted', booleanToString(k));\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nexport function saveStopItemOnLocation(itemElementID: string, folderID: string, StopID: number, RouteID: number): void {\n  const itemElement = documentQuerySelector(`.css_location_field .css_location_groups .css_location_group .css_location_group_items .css_location_group_item#${itemElementID}`);\n  const saveToFolderButtonElement = elementQuerySelector(itemElement, '.css_location_group_item_body .css_location_group_item_buttons .css_location_group_item_button[type=\"save-to-folder\"]');\n  saveStop(folderID, StopID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('stop', StopID).then((k) => {\n        if (k) {\n          saveToFolderButtonElement.setAttribute('highlighted', booleanToString(k));\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nexport function saveRouteOnDetailsPage(folderID: string, RouteID: number): void {\n  const actionButtonElement = documentQuerySelector('.css_route_details_field .css_route_details_body .css_route_details_groups .css_route_details_group[group=\"actions\"] .css_route_details_group_body .css_route_details_action_button[action=\"save-to-folder\"]');\n  saveRoute(folderID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('route', RouteID).then((k) => {\n        if (k) {\n          actionButtonElement.setAttribute('highlighted', 'true');\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nexport function saveRouteOnRoute(folderID: string, RouteID: number): void {\n  saveRoute(folderID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('route', RouteID).then((k) => {\n        if (k) {\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n","import { prepareForSearch, searchFor, SearchItem } from '../../data/search/index';\nimport { drawRoundedRect } from '../../tools/graphic';\nimport { supportTouch } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { getCSSVariableValue } from '../../tools/style';\nimport { containPhoneticSymbols } from '../../tools/text';\nimport { dataDownloadCompleted } from '../home/index';\nimport { getIconHTML } from '../icons/index';\nimport { MaterialSymbols } from '../icons/material-symbols-type';\nimport { pushPageHistory, querySize, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst searchField = documentQuerySelector('.css_search_field');\nconst searchHeadElement = elementQuerySelector(searchField, '.css_search_head');\nconst searchBodyElement = elementQuerySelector(searchField, '.css_search_body');\nconst searchInputElement = elementQuerySelector(searchHeadElement, '.css_search_search_input #search_input') as HTMLInputElement;\nconst searchInputCanvasElement = elementQuerySelector(searchHeadElement, '.css_search_search_input canvas');\nconst searchTypeFilterButtonElement = elementQuerySelector(searchHeadElement, '.css_search_button_right');\nconst searchResultsElement = elementQuerySelector(searchBodyElement, '.css_search_results');\nconst searchKeyboardElement = elementQuerySelector(searchBodyElement, '.css_search_keyboard');\n\nconst searchInputCanvasContext = searchInputCanvasElement.getContext('2d');\nconst searchInputPlaceholder = '搜尋路線、地點、公車';\nconst searchInputCanvasScale = window.devicePixelRatio;\n\nconst padding: number = 15 * searchInputCanvasScale;\nconst cursorWidth: number = 1.8 * searchInputCanvasScale;\nconst cursorBorderRadius: number = 0.9 * searchInputCanvasScale;\nconst selectionHighlightBorderRadius: number = 4 * searchInputCanvasScale;\nconst lineHeight: number = 25 * searchInputCanvasScale;\nconst fontSize: number = 20 * searchInputCanvasScale;\nconst fontFamily: string = '\"Noto Sans TC\", sans-serif';\n\nlet textColor: string = getCSSVariableValue('--b-cssvar-333333');\nlet placeholderTextColor: string = getCSSVariableValue('--b-cssvar-aeaeb2');\nlet cursorColor: string = getCSSVariableValue('--b-cssvar-main-color');\nlet textWidth: number = 0;\nlet textWidthToCursorStart: number = 0;\nlet selectedTextWidth: number = 0;\nlet selection: boolean = false;\nlet cursorOffset: number = 0;\nlet size = querySize('head-two-button');\nlet width = size.width * searchInputCanvasScale;\nlet height = size.height * searchInputCanvasScale;\nlet playingCursorAnimation: boolean = false;\n\nexport function getSearchInputValue(): string {\n  return String(searchInputElement.value);\n}\n\nexport function getSearchTypeFilterValue(): SearchItem['type'] | -1 {\n  return parseInt(searchTypeFilterButtonElement.getAttribute('type'));\n}\n\nexport function openSearch(): void {\n  if (dataDownloadCompleted) {\n    pushPageHistory('Search');\n    searchField.setAttribute('displayed', 'true');\n    openKeyboard();\n    prepareForSearch();\n  } else {\n    promptMessage('資料還在下載中', 'download_for_offline');\n  }\n}\n\nexport function closeSearch(): void {\n  revokePageHistory('Search');\n  closeKeyboard();\n  searchField.setAttribute('displayed', 'false');\n}\n\nexport function resizeSearchInputCanvas(): void {\n  size = querySize('head-two-button');\n  width = size.width;\n  height = size.height;\n  searchInputCanvasElement.width = width * searchInputCanvasScale;\n  searchInputCanvasElement.height = height * searchInputCanvasScale;\n  updateSearchInput(-1, -1);\n}\n\nfunction initializeKeyboard(): void {\n  const keyboardKeys: Array<[string, string, string, string, string]> = [\n    ['紅', '藍', '1', '2', '3'],\n    ['綠', '棕', '4', '5', '6'],\n    ['橘', '小', '7', '8', '9'],\n    ['鍵盤', '幹線', '清空', '0', '刪除']\n  ];\n  const result: Array<string> = [];\n  for (const row of keyboardKeys) {\n    for (const column of row) {\n      let eventScript = '';\n      let eventType = 'onmousedown';\n      let html = '';\n      switch (column) {\n        case '刪除':\n          eventScript = 'bus.search.deleteCharFromInout()';\n          html = getIconHTML('backspace');\n          break;\n        case '清空':\n          eventScript = 'bus.search.emptyInput()';\n          html = column;\n          break;\n        case '鍵盤':\n          eventScript = 'bus.search.openSystemKeyboard(event)';\n          html = getIconHTML('keyboard');\n          break;\n        default:\n          eventScript = `bus.search.typeTextIntoInput('${column}')`;\n          html = column;\n          break;\n      }\n\n      if (supportTouch()) {\n        eventType = 'ontouchstart';\n      }\n      result.push(`<button class=\"css_search_keyboard_key\" ${eventType}=\"${eventScript}\">${html}</button>`);\n    }\n  }\n  searchKeyboardElement.innerHTML = result.join('');\n}\n\nexport function openKeyboard(): void {\n  initializeKeyboard();\n  searchKeyboardElement.setAttribute('displayed', 'true');\n\n  playingCursorAnimation = true;\n  animateCursor();\n\n  updateSearchInput(-1, -1);\n}\n\nexport function closeKeyboard(): void {\n  searchKeyboardElement.setAttribute('displayed', 'false');\n  playingCursorAnimation = false;\n}\n\nexport function typeTextIntoInput(value): void {\n  const currentValue = getSearchInputValue();\n  const newValue = `${currentValue}${value}`;\n  searchInputElement.value = newValue;\n  updateSearchResult();\n  updateSearchInput(-1, -1);\n}\n\nexport function deleteCharFromInout(): void {\n  const currentValue = getSearchInputValue();\n  const newValue = currentValue.substring(0, currentValue.length - 1);\n  searchInputElement.value = newValue;\n  updateSearchResult();\n  updateSearchInput(-1, -1);\n}\n\nexport function emptyInput(): void {\n  searchInputElement.value = '';\n  updateSearchResult();\n  updateSearchInput(-1, -1);\n}\n\nexport function openSystemKeyboard(event: Event): void {\n  event.preventDefault();\n  searchInputElement.focus();\n}\n\nexport function updateSearchInput(cursorStart: number, cursorEnd: number): void {\n  let value = getSearchInputValue();\n  let empty = false;\n  if (value.length === 0) {\n    value = searchInputPlaceholder;\n    empty = true;\n    cursorStart = 0;\n    cursorEnd = 0;\n  } else {\n    if (cursorStart === -1 && cursorEnd === -1) {\n      cursorStart = value.length;\n      cursorEnd = cursorStart * 1;\n    }\n  }\n\n  size = querySize('head-two-button');\n  width = size.width * searchInputCanvasScale;\n  height = size.height * searchInputCanvasScale;\n  textColor = getCSSVariableValue('--b-cssvar-333333');\n  placeholderTextColor = getCSSVariableValue('--b-cssvar-aeaeb2');\n  cursorColor = getCSSVariableValue('--b-cssvar-main-color');\n\n  searchInputCanvasContext.font = `500 ${fontSize}px ${fontFamily}`;\n  searchInputCanvasContext.textAlign = 'center';\n  searchInputCanvasContext.textBaseline = 'middle';\n\n  textWidth = searchInputCanvasContext.measureText(value).width;\n  textWidthToCursorStart = searchInputCanvasContext.measureText(value.substring(0, cursorStart)).width;\n  selectedTextWidth = searchInputCanvasContext.measureText(value.substring(cursorStart, cursorEnd)).width;\n  cursorOffset = empty ? 1 : Math.max(1, textWidthToCursorStart);\n\n  searchInputCanvasContext.clearRect(0, 0, width, height);\n\n  if (cursorStart === cursorEnd) {\n    selection = true;\n    searchInputCanvasContext.globalAlpha = 1;\n    searchInputCanvasContext.fillStyle = empty ? placeholderTextColor : textColor;\n    searchInputCanvasContext.fillText(value, textWidth / 2 + (Math.min(cursorOffset, width - padding) - cursorOffset), height / 2);\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, cursorWidth, lineHeight, cursorBorderRadius, cursorColor);\n  } else {\n    selection = false;\n    searchInputCanvasContext.globalAlpha = 0.27;\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, selectedTextWidth, lineHeight, selectionHighlightBorderRadius, cursorColor);\n    searchInputCanvasContext.globalAlpha = 1;\n    searchInputCanvasContext.fillStyle = empty ? placeholderTextColor : textColor;\n    searchInputCanvasContext.fillText(value, textWidth / 2 + (Math.min(cursorOffset, width - padding) - cursorOffset), height / 2);\n    searchInputCanvasContext.globalAlpha = 0.08;\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, selectedTextWidth, lineHeight, selectionHighlightBorderRadius, cursorColor);\n  }\n}\n\nexport function updateSearchResult(): void {\n  const currentType = getSearchTypeFilterValue();\n  const currentValue = getSearchInputValue();\n  if (!containPhoneticSymbols(currentValue)) {\n    const typeToIcon: Array<MaterialSymbols> = ['route', 'location_on', 'directions_bus'];\n    const html: Array<string> = [];\n    const searchResults = searchFor(currentValue, currentType, 30);\n    for (const result of searchResults) {\n      const name = result.item.n;\n      const typeIcon = getIconHTML(typeToIcon[result.item.type]);\n      let onclickScript = '';\n      switch (result.item.type) {\n        case 0:\n          onclickScript = `bus.route.openRoute(${result.item.id}, [${result.item.pid.join(',')}])`;\n          break;\n        case 1:\n          onclickScript = `bus.location.openLocation('${result.item.hash}')`;\n          break;\n        case 2:\n          onclickScript = `bus.bus.openBus(${result.item.id})`;\n          break;\n        default:\n          break;\n      }\n      html.push(`<div class=\"css_search_search_result\" onclick=\"${onclickScript}\"><div class=\"css_search_search_result_type\">${typeIcon}</div><div class=\"css_search_search_result_route_name\">${name}</div></div>`);\n    }\n    searchResultsElement.innerHTML = html.join('');\n  }\n}\n\nexport function switchSearchTypeFilter(): void {\n  const currentType = getSearchTypeFilterValue();\n  let newType: number = -1;\n  if (currentType >= -1 && currentType < 2) {\n    newType = currentType + 1;\n  } else {\n    newType = -1;\n  }\n  const icons: Array<MaterialSymbols> = ['filter_list', 'route', 'location_on', 'directions_bus'];\n  searchTypeFilterButtonElement.innerHTML = getIconHTML(icons[newType + 1]);\n  searchTypeFilterButtonElement.setAttribute('type', newType.toString());\n  updateSearchResult();\n}\n\nfunction animateCursor(): void {\n  const x = performance.now();\n  const alpha = 1 - Math.pow(Math.sin((Math.PI * x) / 960), 4);\n  if (selection) {\n    searchInputCanvasContext.globalAlpha = alpha;\n    searchInputCanvasContext.clearRect(Math.min(cursorOffset, width - padding) - 1, 0, cursorWidth + 2, height);\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, cursorWidth, lineHeight, cursorBorderRadius, cursorColor);\n  }\n  if (playingCursorAnimation) {\n    window.requestAnimationFrame(animateCursor);\n  }\n}\n","import { exportData } from '../../data/export/index';\nimport { importData } from '../../data/import/index';\nimport { listSettings, Setting } from '../../data/settings/index';\nimport { getCommitURLOfCurrentVersion } from '../../data/settings/version';\nimport { askForPersistentStorage } from '../../data/storage/index';\nimport { generateIdentifier, releaseFile } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst SettingsField = documentQuerySelector('.css_settings_field');\nconst SettingsBodyElement = elementQuerySelector(SettingsField, '.css_settings_body');\nconst SettingsElement = elementQuerySelector(SettingsBodyElement, '.css_settings');\n\nfunction generateElementOfItem(item: Setting): GeneratedElement {\n  const settingElement = document.createElement('div');\n  settingElement.classList.add('css_setting');\n  settingElement.setAttribute('type', item.type);\n\n  // Icon\n  const iconElement = document.createElement('div');\n  iconElement.classList.add('css_setting_icon');\n  const iconSpanElement = document.createElement('span');\n  iconSpanElement.innerHTML = getIconHTML(item.icon);\n  iconElement.appendChild(iconSpanElement);\n\n  // Name\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_setting_name');\n  nameElement.appendChild(document.createTextNode(item.name));\n\n  // Status\n  const statusElement = document.createElement('div');\n  statusElement.classList.add('css_setting_status');\n  statusElement.appendChild(document.createTextNode(item.status));\n\n  // Arrow\n  const arrowElement = document.createElement('div');\n  arrowElement.classList.add('css_setting_arrow');\n  const arrowSpanElement = document.createElement('span');\n  arrowSpanElement.innerHTML = getIconHTML('arrow_forward_ios');\n  arrowElement.appendChild(arrowSpanElement);\n\n  // Event handler (lambda)\n  if (typeof item.action === 'function') {\n    settingElement.onclick = function () {\n      item.action();\n    };\n  } else if (typeof item.action === 'string') {\n    settingElement.setAttribute('onclick', item.action);\n  }\n\n  // Assemble\n  settingElement.appendChild(iconElement);\n  settingElement.appendChild(nameElement);\n  settingElement.appendChild(statusElement);\n  settingElement.appendChild(arrowElement);\n\n  return {\n    element: settingElement,\n    id: ''\n  };\n}\n\nasync function initializeSettingsField() {\n  const list = await listSettings();\n  SettingsElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  for (const item of list) {\n    const thisElement = generateElementOfItem(item);\n    fragment.appendChild(thisElement.element);\n  }\n  SettingsElement.append(fragment);\n}\n\nexport function openSettings(): void {\n  pushPageHistory('Settings');\n  SettingsField.setAttribute('displayed', 'true');\n  initializeSettingsField();\n}\n\nexport function closeSettings(): void {\n  revokePageHistory('Settings');\n  SettingsField.setAttribute('displayed', 'false');\n}\n\nexport async function downloadExportFile() {\n  const exportedData = await exportData();\n  releaseFile(exportedData, 'application/json', 'bus-export.json');\n}\n\nexport function openFileToImportData(): void {\n  const identifier = generateIdentifier();\n  const fileInput = document.createElement('input');\n  fileInput.setAttribute('type', 'file');\n  fileInput.setAttribute('accept', 'application/json');\n  fileInput.setAttribute('name', identifier);\n  fileInput.id = identifier;\n  fileInput.classList.add('css_import_file_input');\n  fileInput.addEventListener(\n    'change',\n    function (event) {\n      // Check if a file is selected\n      if (event.target.files.length === 0) {\n        documentQuerySelector(`body #${identifier}`).remove();\n      } else {\n        // Get the first file selected by the user\n        const file = event.target.files[0];\n        const reader = new FileReader();\n\n        // When the file is successfully read\n        reader.onload = function (e) {\n          // Get the file content as text\n          const fileTextContent = e.target.result;\n\n          // Import the data\n          importData(fileTextContent).then((f) => {\n            if (f) {\n              promptMessage('已匯入資料', 'check_circle');\n            } else {\n              promptMessage('無法匯入資料', 'error');\n            }\n            documentQuerySelector(`body #${identifier}`).remove();\n          });\n        };\n\n        // Read the file as text\n        reader.readAsText(file);\n      }\n    },\n    { once: true }\n  );\n  fileInput.addEventListener(\n    'cancel',\n    function () {\n      documentQuerySelector(`body #${identifier}`).remove();\n    },\n    { once: true }\n  );\n\n  document.body.append(fileInput);\n  documentQuerySelector(`body #${identifier}`).click();\n}\n\nexport function viewCommitOfCurrentVersion(): void {\n  const url = getCommitURLOfCurrentVersion();\n  window.open(url);\n}\n\nexport function showPromptToAskForPersistentStorage(): void {\n  askForPersistentStorage().then((e) => {\n    switch (e) {\n      case 'granted':\n        promptMessage('已開啟永久儲存', 'check_circle');\n        break;\n      case 'denied':\n        promptMessage('永久儲存權限已被拒絕', 'cancel');\n        break;\n      case 'unsupported':\n        promptMessage('此瀏覽器不支援永久儲存', 'warning');\n        break;\n      default:\n        promptMessage('發生錯誤', 'error');\n        break;\n    }\n  });\n}\n","import { changeSettingOption, getSetting, SettingSelect, SettingSelectOption } from '../../data/settings/index';\nimport { documentQuerySelector, documentQuerySelectorAll, elementQuerySelector } from '../../tools/query-selector';\nimport { closePreviousPage, GeneratedElement, openPreviousPage, pushPageHistory } from '../index';\n\nconst SettingsOptionsField = documentQuerySelector('.css_settings_options_field');\nconst SettingsOptionsBodyElement = elementQuerySelector(SettingsOptionsField, '.css_settings_options_body');\nconst SettingsOptionsOptionsElement = elementQuerySelector(SettingsOptionsBodyElement, '.css_settings_options');\nconst SettingsOptionsDescriptionElement = elementQuerySelector(SettingsOptionsBodyElement, '.css_options_description');\nconst SettingsOptionsHeadElement = elementQuerySelector(SettingsOptionsField, '.css_settings_options_head');\nconst SettingsOptionsTitleElement = elementQuerySelector(SettingsOptionsHeadElement, '.css_settings_options_title');\n\nfunction generateElementOfItem(setting: SettingSelect, item: SettingSelectOption, index: number): GeneratedElement {\n  const optionElement = document.createElement('div');\n  optionElement.classList.add('css_option');\n\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_option_name');\n  nameElement.appendChild(document.createTextNode(item.name));\n\n  const checkboxContainerElement = document.createElement('div');\n  checkboxContainerElement.classList.add('css_option_checkbox');\n\n  const checkboxElement = document.createElement('input');\n  checkboxElement.type = 'checkbox';\n  checkboxElement.checked = setting.option === index;\n  checkboxElement.onclick = (event) => {\n    settingsOptionsHandler(event, setting.key, index);\n  };\n\n  checkboxContainerElement.appendChild(checkboxElement);\n  optionElement.appendChild(nameElement);\n  optionElement.appendChild(checkboxContainerElement);\n\n  return {\n    element: optionElement,\n    id: ''\n  };\n}\n\nfunction initializeSettingsOptionsField(settingKey: string): void {\n  const setting = getSetting(settingKey) as SettingSelect;\n  SettingsOptionsTitleElement.innerText = setting.name;\n  SettingsOptionsDescriptionElement.innerText = setting.description;\n  SettingsOptionsOptionsElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  let index: number = 0;\n  for (const item of setting.options) {\n    const thisElement = generateElementOfItem(setting, item, index);\n    fragment.appendChild(thisElement.element);\n    index += 1;\n  }\n  SettingsOptionsOptionsElement.append(fragment);\n}\n\nexport function openSettingsOptions(settingKey: string): void {\n  pushPageHistory('SettingsOptions');\n  SettingsOptionsField.setAttribute('displayed', 'true');\n  initializeSettingsOptionsField(settingKey);\n  closePreviousPage();\n}\n\nexport function closeSettingsOptions(): void {\n  // revokePageHistory('SettingsOptions');\n  SettingsOptionsField.setAttribute('displayed', 'false');\n  openPreviousPage();\n}\n\nexport function settingsOptionsHandler(event: Event, settingKey: string, index: number): void {\n  const checkboxes = documentQuerySelectorAll('.css_settings_options_field .css_settings_options_body .css_settings_options .css_option .css_option_checkbox input[type=\"checkbox\"]') as NodeListOf<HTMLInputElement>;\n  for (const checkbox of checkboxes) {\n    checkbox.checked = false;\n  }\n  const target = event.target as HTMLInputElement;\n  target.checked = true;\n  changeSettingOption(settingKey, index);\n}\n"],"names":["ScheduleNotificationField","documentQuerySelector","ScheduleNotificationBodyElement","elementQuerySelector","ScheduleNotificationListElement","generateElementOfItem","item","type","parameters","itemElement","document","createElement","classList","add","iconElement","iconSpanElement","innerHTML","getIconHTML","icon","appendChild","nameElement","createTextNode","name","onclick","scheduleNotificationForStopItemOnRoute","index","scheduleNotificationForStopItemOnLocation","element","id","openScheduleNotification","pushPageHistory","setAttribute","_step","fragment","DocumentFragment","_iterator","_createForOfIteratorHelper","scheduleNotificationOptions","s","n","done","newElement","value","append","err","e","f","initializeScheduleNotificationField","closeScheduleNotification","revokePageHistory","itemElementID","StopID","RouteID","EstimateTime","scheduleNotificationButtonElement","promptMessage","scheduleNotificationForStop","then","result","StorageField","StorageBodyElement","StatisticsElement","category","size","_initializeStorageStatistics","statistics","getStoresSizeStatistics","key","categorizedSizes","newItemElement","apply","arguments","openStorage","initializeStorageStatistics","closeStorage","SaveToFolderField","SaveToFolderBodyElement","SaveToFolderListElement","saveStopItemOnRoute","saveStopItemOnLocation","saveRouteOnDetailsPage","saveRouteOnRoute","_initializeSaveToFolderField","foldersWithContent","listFoldersWithContent","openSaveToFolder","_x","_x2","initializeSaveToFolderField","closeSaveToFolder","folderID","saveToFolderButtonElement","saveStop","isFolderContentSaved","k","booleanToString","actionButtonElement","saveRoute","searchField","searchHeadElement","searchBodyElement","searchInputElement","searchInputCanvasElement","searchTypeFilterButtonElement","searchResultsElement","searchKeyboardElement","searchInputCanvasContext","getContext","searchInputPlaceholder","searchInputCanvasScale","window","devicePixelRatio","padding","cursorWidth","cursorBorderRadius","selectionHighlightBorderRadius","lineHeight","fontSize","fontFamily","textColor","getCSSVariableValue","placeholderTextColor","cursorColor","textWidth","textWidthToCursorStart","selectedTextWidth","selection","cursorOffset","querySize","width","height","playingCursorAnimation","getSearchInputValue","String","getSearchTypeFilterValue","parseInt","getAttribute","openSearch","dataDownloadCompleted","_i","_keyboardKeys","length","column","eventScript","eventType","html","supportTouch","push","join","initializeKeyboard","animateCursor","updateSearchInput","prepareForSearch","closeSearch","resizeSearchInputCanvas","typeTextIntoInput","newValue","updateSearchResult","deleteCharFromInout","currentValue","substring","emptyInput","openSystemKeyboard","event","preventDefault","focus","cursorStart","cursorEnd","empty","font","textAlign","textBaseline","measureText","Math","max","clearRect","globalAlpha","fillStyle","fillText","min","drawRoundedRect","currentType","containPhoneticSymbols","_step2","typeToIcon","_iterator2","searchFor","typeIcon","onclickScript","pid","hash","switchSearchTypeFilter","newType","toString","x","performance","now","alpha","pow","sin","PI","requestAnimationFrame","SettingsField","SettingsBodyElement","SettingsElement","settingElement","statusElement","status","arrowElement","arrowSpanElement","action","_initializeSettingsField","_asyncToGenerator","list","listSettings","thisElement","openSettings","initializeSettingsField","closeSettings","downloadExportFile","_downloadExportFile","exportedData","exportData","releaseFile","openFileToImportData","identifier","generateIdentifier","fileInput","addEventListener","target","files","remove","file","reader","FileReader","onload","fileTextContent","importData","readAsText","once","body","click","viewCommitOfCurrentVersion","url","getCommitURLOfCurrentVersion","open","showPromptToAskForPersistentStorage","askForPersistentStorage","SettingsOptionsField","SettingsOptionsBodyElement","SettingsOptionsOptionsElement","SettingsOptionsDescriptionElement","SettingsOptionsHeadElement","SettingsOptionsTitleElement","setting","optionElement","checkboxContainerElement","checkboxElement","checked","option","settingsOptionsHandler","openSettingsOptions","settingKey","getSetting","innerText","description","options","initializeSettingsOptionsField","closePreviousPage","closeSettingsOptions","openPreviousPage","documentQuerySelectorAll","changeSettingOption"],"sourceRoot":""}