{"version":3,"file":"9c4a8d6bb54d8fe67832.js","mappings":"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","sources":["webpack://bus/./src/interface/home/folders/index.ts"],"sourcesContent":["import { integratedFolders, integrateFolders } from '../../../data/folder/index';\nimport { FieldSize, GeneratedElement } from '../../index';\nimport { getIconHTML } from '../../icons/index';\nimport { getSettingOptionValue, SettingSelectOptionRefreshIntervalValue } from '../../../data/settings/index';\nimport { getUpdateRate } from '../../../data/analytics/update-rate';\nimport { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../../tools/query-selector';\nimport { booleanToString, compareThings, generateIdentifier } from '../../../tools/index';\nimport { getDataReceivingProgress } from '../../../data/apis/loader';\nimport { promptMessage } from '../../prompt/index';\n\nconst HomeField = documentQuerySelector('.css_home_field');\nconst HomeHeadElement = elementQuerySelector(HomeField, '.css_home_head');\nconst HomeBodyElement = elementQuerySelector(HomeField, '.css_home_body');\nconst HomeFoldersField = elementQuerySelector(HomeBodyElement, '.css_home_folders');\nconst HomeUpdateTimerElement = elementQuerySelector(HomeHeadElement, '.css_home_update_timer_box .css_home_update_timer');\n\nlet previousIntegration = {} as integratedFolders;\nlet previousSkeletonScreen: boolean = false;\n\nlet foldersRefreshTimer_retryInterval: number = 10 * 1000;\nlet foldersRefreshTimer_baseInterval: number = 15 * 1000;\nlet foldersRefreshTimer_minInterval: number = 5 * 1000;\nlet foldersRefreshTimer_dynamicInterval: number = 15 * 1000;\nlet foldersRefreshTimer_dynamic: boolean = true;\nlet foldersRefreshTimer_streaming: boolean = false;\nlet foldersRefreshTimer_lastUpdate: number = 0;\nlet foldersRefreshTimer_nextUpdate: number = 0;\nlet foldersRefreshTimer_refreshing: boolean = false;\nlet foldersRefreshTimer_currentRequestID: string = '';\nlet foldersRefreshTimer_streamStarted: boolean = false;\nlet foldersRefreshTimer_timer: ReturnType<typeof setTimeout>;\n\nfunction queryFolderFieldSize(): FieldSize {\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight\n  };\n}\n\nfunction generateElementOfItem(): GeneratedElement {\n  const element = document.createElement('div');\n  element.classList.add('css_home_folder_item');\n  element.setAttribute('type', 'stop');\n  element.innerHTML = /*html*/ `<div class=\"css_home_folder_item_icon\"></div><div class=\"css_home_folder_item_context\"></div><div class=\"css_home_folder_item_main\"></div><div class=\"css_home_folder_item_capsule\"><div class=\"css_home_folder_item_status\"><div class=\"css_next_slide\" code=\"0\"></div><div class=\"css_current_slide\" code=\"0\"></div></div><div class=\"css_home_folder_item_button\">${getIconHTML('keyboard_arrow_right')}</div><div class=\"css_home_folder_item_capsule_separator\"></div></div>`;\n  return {\n    element: element,\n    id: null\n  };\n}\n\nfunction generateElementOfFolder(): GeneratedElement {\n  const element = document.createElement('div');\n  element.classList.add('css_home_folder');\n  element.innerHTML = /*html*/ `<div class=\"css_home_folder_head\"><div class=\"css_home_folder_icon\"></div><div class=\"css_home_folder_name\"></div></div><div class=\"css_home_folder_content\"></div>`;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nfunction updateUpdateTimer(): void {\n  const time = new Date().getTime();\n  let percentage = 0;\n  if (foldersRefreshTimer_refreshing) {\n    percentage = -1 + getDataReceivingProgress(foldersRefreshTimer_currentRequestID);\n  } else {\n    percentage = -1 * Math.min(1, Math.max(0, Math.abs(time - foldersRefreshTimer_lastUpdate) / foldersRefreshTimer_dynamicInterval));\n  }\n  HomeUpdateTimerElement.style.setProperty('--b-cssvar-update-timer', percentage.toString());\n  window.requestAnimationFrame(function () {\n    if (foldersRefreshTimer_streaming) {\n      updateUpdateTimer();\n    }\n  });\n}\n\nexport function setUpFolderFieldSkeletonScreen(Field: HTMLElement): void {\n  const FieldSize = queryFolderFieldSize();\n  const FieldWidth = FieldSize.width;\n  const FieldHeight = FieldSize.height;\n  var defaultItemQuantity = { f_0: Math.floor(FieldHeight / 50 / 3) + 2, f_1: Math.floor(FieldHeight / 50 / 3) + 2, f_2: Math.floor(FieldHeight / 50 / 3) + 2 };\n  var defaultFolderQuantity = 3;\n  var foldedContent = {};\n  var folders = {};\n  for (let i = 0; i < defaultFolderQuantity; i++) {\n    var folderKey = `f_${i}`;\n    foldedContent[folderKey] = [];\n    folders[folderKey] = {\n      name: '',\n      index: i,\n      icon: ''\n    };\n    for (let j = 0; j < defaultItemQuantity[folderKey]; j++) {\n      foldedContent[folderKey].push({\n        type: 'stop',\n        id: null,\n        status: {\n          code: 0,\n          text: null\n        },\n        name: null,\n        route: {\n          name: null,\n          endPoints: {\n            departure: null,\n            destination: null\n          },\n          id: null,\n          pathAttributeId: []\n        }\n      });\n    }\n  }\n  updateFolderField(\n    Field,\n    {\n      foldedContent: foldedContent,\n      folders: folders,\n      folderQuantity: defaultFolderQuantity,\n      itemQuantity: defaultItemQuantity,\n      dataUpdateTime: null\n    },\n    true\n  );\n}\n\nasync function updateFolderField(Field: HTMLElement, integration: object, skeletonScreen: boolean): void {\n  function updateItem(thisElement, thisItem, previousItem) {\n    function updateType(thisElement: HTMLElement, thisItem: object): void {\n      thisElement.setAttribute('type', thisItem.type);\n    }\n    function updateIcon(thisElement: HTMLElement, thisItem: object): void {\n      const iconElement = elementQuerySelector(thisElement, '.css_home_folder_item_icon');\n      let icon = '';\n      switch (thisItem.type) {\n        case 'stop':\n          icon = 'location_on';\n          break;\n        case 'route':\n          icon = 'route';\n          break;\n        case 'bus':\n          icon = 'directions_bus';\n          break;\n        case 'empty':\n          icon = 'lightbulb';\n          break;\n        default:\n          icon = '';\n          break;\n      }\n      iconElement.innerHTML = getIconHTML(icon);\n    }\n    function updateStatus(thisElement: HTMLElement, thisItem: object): void {\n      if (thisItem.type === 'stop') {\n        const thisItemStatusElement = elementQuerySelector(thisElement, '.css_home_folder_item_capsule .css_home_folder_item_status');\n        const nextSlideElement = elementQuerySelector(thisItemStatusElement, '.css_next_slide');\n        const currentSlideElement = elementQuerySelector(thisItemStatusElement, '.css_current_slide');\n        nextSlideElement.setAttribute('code', thisItem.status.code);\n        nextSlideElement.innerText = thisItem.status.text;\n        currentSlideElement.addEventListener(\n          'animationend',\n          function () {\n            currentSlideElement.setAttribute('code', thisItem.status.code);\n            currentSlideElement.innerText = thisItem.status.text;\n            currentSlideElement.classList.remove('css_slide_fade_out');\n          },\n          { once: true }\n        );\n        currentSlideElement.classList.add('css_slide_fade_out');\n      }\n    }\n    function updateMain(thisElement: HTMLElement, thisItem: object): void {\n      let main: string = '';\n      switch (thisItem.type) {\n        case 'stop':\n          main = thisItem.name;\n          break;\n        case 'route':\n          main = thisItem.name;\n          break;\n        case 'bus':\n          main = thisItem.busID;\n          break;\n        case 'empty':\n          main = '沒有內容';\n          break;\n        default:\n          main = 'null';\n          break;\n      }\n      elementQuerySelector(thisElement, '.css_home_folder_item_main').innerText = main;\n    }\n    function updateContext(thisElement: HTMLElement, thisItem: object): void {\n      let context: string = '';\n      switch (thisItem.type) {\n        case 'stop':\n          context = `${thisItem.route ? thisItem.route.name : ''} - 往${thisItem.route ? [thisItem.route.endPoints.destination, thisItem.route.endPoints.departure, ''][thisItem.direction ? thisItem.direction : 0] : ''}`;\n          break;\n        case 'route':\n          context = `${thisItem.endPoints.departure} \\u2194 ${thisItem.endPoints.destination}`;\n          break;\n        case 'bus':\n          context = thisItem.currentRoute.name; // TODO: integration\n          break;\n        case 'empty':\n          context = '提示';\n          break;\n        default:\n          context = 'null';\n          break;\n      }\n      elementQuerySelector(thisElement, '.css_home_folder_item_context').innerText = context;\n    }\n    function updateButton(thisElement: HTMLElement, thisItem: object): void {\n      const buttonElement = elementQuerySelector(thisElement, '.css_home_folder_item_capsule .css_home_folder_item_button');\n      let onclick = '';\n      switch (thisItem.type) {\n        case 'stop':\n          onclick = `bus.route.openRoute(${thisItem.route.id}, [${thisItem.route.pathAttributeId.join(',')}])`;\n          break;\n        case 'route':\n          onclick = `bus.route.openRoute(${thisItem.id}, [${thisItem.pathAttributeId.join(',')}])`;\n          break;\n        case 'bus':\n          break;\n        case 'empty':\n          break;\n        default:\n          break;\n      }\n      buttonElement.setAttribute('onclick', onclick);\n    }\n    function updateSkeletonScreen(thisElement: HTMLElement, skeletonScreen: boolean): void {\n      thisElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    }\n    if (previousItem === null) {\n      updateType(thisElement, thisItem);\n      updateIcon(thisElement, thisItem);\n      updateStatus(thisElement, thisItem);\n      updateMain(thisElement, thisItem);\n      updateContext(thisElement, thisItem);\n      updateButton(thisElement, thisItem);\n      updateSkeletonScreen(thisElement, skeletonScreen);\n    } else {\n      if (!(thisItem.type === previousItem.type)) {\n        updateType(thisElement, thisItem);\n        updateIcon(thisElement, thisItem);\n        updateStatus(thisElement, thisItem);\n        updateMain(thisElement, thisItem);\n        updateContext(thisElement, thisItem);\n        updateButton(thisElement, thisItem);\n        updateSkeletonScreen(thisElement, skeletonScreen);\n      } else {\n        switch (thisItem.type) {\n          case 'stop':\n            if (!compareThings(previousItem.route, thisItem.route)) {\n              updateContext(thisElement, thisItem);\n              updateButton(thisElement, thisItem);\n            }\n            if (!compareThings(previousItem.name, thisItem.name)) {\n              updateMain(thisElement, thisItem);\n            }\n            if (!(thisItem.status.code === previousItem.status.code) || !compareThings(previousItem.status.text, thisItem.status.text)) {\n              updateStatus(thisElement, thisItem);\n            }\n            break;\n          case 'route':\n            if (!compareThings(previousItem.id, thisItem.id)) {\n              updateButton(thisElement, thisItem);\n            }\n            if (!compareThings(previousItem.endPoints, thisItem.endPoints)) {\n              updateContext(thisElement, thisItem);\n            }\n            if (!compareThings(previousItem.name, thisItem.name)) {\n              updateMain(thisElement, thisItem);\n            }\n            break;\n          case 'bus':\n            if (!compareThings(previousItem.currentRoute, thisItem.currentRoute)) {\n              updateContext(thisElement, thisItem);\n            }\n            if (!compareThings(previousItem.busID, thisItem.busID)) {\n              updateMain(thisElement, thisItem);\n            }\n            break;\n          case 'empty':\n            if (!(thisItem.type === previousItem.type)) {\n              updateContext(thisElement, thisItem);\n              updateMain(thisElement, thisItem);\n            }\n            break;\n          default:\n            break;\n        }\n        if (!(skeletonScreen === previousSkeletonScreen)) {\n          updateSkeletonScreen(thisElement, skeletonScreen);\n        }\n      }\n    }\n  }\n\n  const FieldSize = queryFolderFieldSize();\n  const FieldWidth = FieldSize.width;\n  const FieldHeight = FieldSize.height;\n\n  const folderQuantity = integration.folderQuantity;\n  const itemQuantity = integration.itemQuantity;\n  const foldedContent = integration.foldedContent;\n  const folders = integration.folders;\n\n  Field.setAttribute('skeleton-screen', skeletonScreen);\n\n  const currentFolderSeatQuantity = elementQuerySelectorAll(Field, `.css_home_folder`).length;\n  if (!(folderQuantity === currentFolderSeatQuantity)) {\n    const capacity = currentFolderSeatQuantity - folderQuantity;\n    if (capacity < 0) {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const newFolderElement = generateElementOfFolder();\n        Field.appendChild(newFolderElement.element);\n      }\n    } else {\n      const FolderElements = elementQuerySelectorAll(Field, `.css_home_folder`);\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const folderIndex = currentFolderSeatQuantity - 1 - o;\n        FolderElements[folderIndex].remove();\n      }\n    }\n  }\n\n  for (let i = 0; i < folderQuantity; i++) {\n    const folderKey = `f_${i}`;\n    const currentItemSeatQuantity = elementQuerySelectorAll(elementQuerySelectorAll(Field, `.css_home_folder`)[i], `.css_home_folder_content .css_home_folder_item`).length;\n    if (!(itemQuantity[folderKey] === currentItemSeatQuantity)) {\n      const capacity = currentItemSeatQuantity - itemQuantity[folderKey];\n      if (capacity < 0) {\n        const FolderContentElement = elementQuerySelector(elementQuerySelectorAll(Field, `.css_home_folder`)[i], `.css_home_folder_content`);\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const newItemElement = generateElementOfItem();\n          FolderContentElement.appendChild(newItemElement.element);\n        }\n      } else {\n        const FolderContentItemElements = elementQuerySelectorAll(elementQuerySelectorAll(Field, `.css_home_folder`)[i], `.css_home_folder_content .css_home_folder_item`);\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const itemIndex = currentItemSeatQuantity - 1 - o;\n          FolderContentItemElements[itemIndex].remove();\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < folderQuantity; i++) {\n    const folderKey = `f_${i}`;\n    const thisFolderElement = elementQuerySelectorAll(Field, `.css_home_folder`)[i];\n    thisFolderElement.setAttribute('skeleton-screen', skeletonScreen);\n    const thisHeadElement = elementQuerySelector(thisFolderElement, `.css_home_folder_head`);\n    elementQuerySelector(thisHeadElement, '.css_home_folder_name').innerText = folders[folderKey].name;\n    elementQuerySelector(thisHeadElement, '.css_home_folder_icon').innerHTML = getIconHTML(folders[folderKey].icon);\n    for (let j = 0; j < itemQuantity[folderKey]; j++) {\n      const thisElement = elementQuerySelectorAll(elementQuerySelectorAll(Field, `.css_home_folder`)[i], `.css_home_folder_content .css_home_folder_item`)[j];\n      const thisItem = foldedContent[folderKey][j];\n      if (previousIntegration.hasOwnProperty('foldedContent')) {\n        if (previousIntegration.foldedContent.hasOwnProperty(folderKey)) {\n          if (previousIntegration.foldedContent[folderKey][j]) {\n            const previousItem = previousIntegration.foldedContent[folderKey][j];\n            updateItem(thisElement, thisItem, previousItem);\n          } else {\n            updateItem(thisElement, thisItem, null);\n          }\n        } else {\n          updateItem(thisElement, thisItem, null);\n        }\n      } else {\n        updateItem(thisElement, thisItem, null);\n      }\n    }\n  }\n  previousIntegration = integration;\n  previousSkeletonScreen = skeletonScreen;\n}\n\nasync function refreshFolders(): Promise<object> {\n  const time = new Date().getTime();\n  const refresh_interval_setting = getSettingOptionValue('refresh_interval') as SettingSelectOptionRefreshIntervalValue;\n  foldersRefreshTimer_dynamic = refresh_interval_setting.dynamic;\n  foldersRefreshTimer_baseInterval = refresh_interval_setting.baseInterval;\n  foldersRefreshTimer_refreshing = true;\n  foldersRefreshTimer_currentRequestID = generateIdentifier('r');\n  HomeUpdateTimerElement.setAttribute('refreshing', 'true');\n  const integration = await integrateFolders(foldersRefreshTimer_currentRequestID);\n  updateFolderField(HomeFoldersField, integration, false);\n  foldersRefreshTimer_lastUpdate = time;\n  const updateRate = await getUpdateRate();\n  if (foldersRefreshTimer_dynamic) {\n    foldersRefreshTimer_nextUpdate = Math.max(time + foldersRefreshTimer_minInterval, integration.dataUpdateTime + foldersRefreshTimer_baseInterval / updateRate);\n  } else {\n    foldersRefreshTimer_nextUpdate = time + foldersRefreshTimer_baseInterval;\n  }\n  foldersRefreshTimer_dynamicInterval = Math.max(foldersRefreshTimer_minInterval, foldersRefreshTimer_nextUpdate - time);\n  foldersRefreshTimer_refreshing = false;\n  HomeUpdateTimerElement.setAttribute('refreshing', 'false');\n  return { status: 'Successfully refreshed the folders.' };\n}\n\nasync function streamFolders(): void {\n  refreshFolders()\n    .then((result) => {\n      if (foldersRefreshTimer_streaming) {\n        foldersRefreshTimer_timer = setTimeout(function () {\n          streamFolders();\n        }, Math.max(foldersRefreshTimer_minInterval, foldersRefreshTimer_nextUpdate - new Date().getTime()));\n      } else {\n        foldersRefreshTimer_streamStarted = false;\n      }\n    })\n    .catch((err) => {\n      console.error(err);\n      if (foldersRefreshTimer_streaming) {\n        promptMessage(`（資料夾）發生網路錯誤，將在${foldersRefreshTimer_retryInterval / 1000}秒後重試。`, 'error');\n        foldersRefreshTimer_timer = setTimeout(function () {\n          streamFolders();\n        }, foldersRefreshTimer_retryInterval);\n      } else {\n        foldersRefreshTimer_streamStarted = false;\n      }\n    });\n}\n\nexport function initializeFolders(): void {\n  setUpFolderFieldSkeletonScreen(HomeFoldersField);\n  if (!foldersRefreshTimer_streaming) {\n    foldersRefreshTimer_streaming = true;\n    if (!foldersRefreshTimer_streamStarted) {\n      foldersRefreshTimer_streamStarted = true;\n      streamFolders();\n    } else {\n      refreshFolders();\n    }\n    updateUpdateTimer();\n  }\n}\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","HomeField","documentQuerySelector","HomeHeadElement","elementQuerySelector","HomeBodyElement","HomeFoldersField","HomeUpdateTimerElement","previousIntegration","previousSkeletonScreen","foldersRefreshTimer_baseInterval","foldersRefreshTimer_minInterval","foldersRefreshTimer_dynamicInterval","foldersRefreshTimer_dynamic","foldersRefreshTimer_streaming","foldersRefreshTimer_lastUpdate","foldersRefreshTimer_nextUpdate","foldersRefreshTimer_refreshing","foldersRefreshTimer_currentRequestID","foldersRefreshTimer_streamStarted","queryFolderFieldSize","width","window","innerWidth","height","innerHeight","generateElementOfItem","element","document","createElement","classList","add","setAttribute","innerHTML","concat","getIconHTML","id","updateUpdateTimer","time","Date","getTime","percentage","getDataReceivingProgress","Math","min","max","abs","style","setProperty","toString","requestAnimationFrame","setUpFolderFieldSkeletonScreen","Field","FieldSize","FieldHeight","defaultItemQuantity","f_0","floor","f_1","f_2","foldedContent","folders","folderKey","index","icon","j","status","code","text","route","endPoints","departure","destination","pathAttributeId","updateFolderField","folderQuantity","itemQuantity","dataUpdateTime","_x","_x2","_x3","_updateFolderField","_callee","integration","skeletonScreen","updateItem","currentFolderSeatQuantity","capacity","newFolderElement","FolderElements","_o","currentItemSeatQuantity","_capacity","FolderContentElement","_o2","newItemElement","FolderContentItemElements","_o3","_i","_folderKey","thisFolderElement","thisHeadElement","thisElement","thisItem","previousItem","_context","updateType","updateIcon","iconElement","updateStatus","thisItemStatusElement","nextSlideElement","currentSlideElement","innerText","addEventListener","remove","once","updateMain","main","busID","updateContext","context","direction","currentRoute","updateButton","buttonElement","onclick","join","updateSkeletonScreen","booleanToString","compareThings","elementQuerySelectorAll","appendChild","refreshFolders","_refreshFolders","_callee2","refresh_interval_setting","updateRate","_context2","getSettingOptionValue","dynamic","baseInterval","generateIdentifier","integrateFolders","getUpdateRate","streamFolders","_streamFolders","_callee3","_context3","result","setTimeout","err","console","error","promptMessage","foldersRefreshTimer_retryInterval","initializeFolders"],"sourceRoot":""}