{"version":3,"file":"808c9c676235b45dc869.js","mappings":"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","sources":["webpack://bus/./src/interface/route/index.ts","webpack://bus/./src/interface/save-to-folder/index.ts"],"sourcesContent":["import { IntegratedRoute, integratedStopItem, integrateRoute } from '../../data/route/index';\nimport { getIconHTML } from '../icons/index';\nimport { getDataReceivingProgress } from '../../data/apis/loader';\nimport { getSettingOptionValue, SettingSelectOptionRefreshIntervalValue } from '../../data/settings/index';\nimport { booleanToString, compareThings, generateIdentifier } from '../../tools/index';\nimport { getTextWidth } from '../../tools/graphic';\nimport { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../tools/query-selector';\nimport { getUpdateRate } from '../../data/analytics/update-rate/index';\nimport { isSaved } from '../../data/folder/index';\nimport { GeneratedElement, FieldSize, pushPageHistory, closePreviousPage, openPreviousPage, GroupStyles } from '../index';\nimport { promptMessage } from '../prompt/index';\nimport { indexToDay, timeObjectToString } from '../../tools/time';\nimport { logRecentView } from '../../data/recent-views/index';\n\nconst RouteField = documentQuerySelector('.css_route_field');\nconst RouteHeadElement = elementQuerySelector(RouteField, '.css_route_head');\nconst RouteNameElement = elementQuerySelector(RouteHeadElement, '.css_route_name');\nconst RouteButtonRightElement = elementQuerySelector(RouteHeadElement, '.css_route_button_right');\nconst RouteUpdateTimerElement = elementQuerySelector(RouteHeadElement, '.css_route_update_timer_box .css_route_update_timer');\nconst RouteGroupTabsTrayElement = elementQuerySelector(RouteHeadElement, '.css_route_group_tabs .css_route_group_tabs_tray');\nconst RouteGroupTabLineElement = elementQuerySelector(RouteHeadElement, '.css_route_group_tab_line_track .css_route_group_tab_line');\nconst RouteGroupsElement = elementQuerySelector(RouteField, '.css_route_groups');\n\nlet previousIntegration = {} as IntegratedRoute;\nlet previousSkeletonScreen: boolean = false;\n\nlet routeSliding_initialIndex: number = 0;\nlet routeSliding_targetIndex: number = 0;\nlet routeSliding_groupQuantity: number = 0;\nlet routeSliding_groupStyles: GroupStyles = {};\nlet routeSliding_fieldWidth: number = 0;\nlet routeSliding_fieldHeight: number = 0;\nlet routeSliding_sliding: boolean = false;\n\nlet routeRefreshTimer_retryInterval: number = 10 * 1000;\nlet routeRefreshTimer_baseInterval: number = 15 * 1000;\nlet routeRefreshTimer_minInterval: number = 5 * 1000;\nlet routeRefreshTimer_dynamicInterval: number = 15 * 1000;\nlet routeRefreshTimer_dynamic: boolean = true;\nlet routeRefreshTimer_streaming: boolean = false;\nlet routeRefreshTimer_lastUpdate: number = 0;\nlet routeRefreshTimer_nextUpdate: number = 0;\nlet routeRefreshTimer_refreshing: boolean = false;\nlet routeRefreshTimer_currentRequestID: string = '';\nlet routeRefreshTimer_streamStarted: boolean = false;\nvar routeRefreshTimer_timer: ReturnType<typeof setTimeout>;\n\nlet currentRouteIDSet_RouteID: number = 0;\nlet currentRouteIDSet_PathAttributeId: Array<number> = [];\n\nlet tabPadding: number = 20;\n\nexport function initializeRouteSliding(): void {\n  RouteGroupsElement.addEventListener('touchstart', function () {\n    routeSliding_initialIndex = Math.round(RouteGroupsElement.scrollLeft / routeSliding_fieldWidth);\n  });\n\n  RouteGroupsElement.addEventListener('scroll', function (event: Event) {\n    routeSliding_sliding = true;\n    const target = event.target as HTMLElement;\n    const currentIndex = target.scrollLeft / routeSliding_fieldWidth;\n    if (currentIndex > routeSliding_initialIndex) {\n      routeSliding_targetIndex = routeSliding_initialIndex + 1;\n    } else {\n      routeSliding_targetIndex = routeSliding_initialIndex - 1;\n    }\n    const initialSize = routeSliding_groupStyles[`g_${routeSliding_initialIndex}`] || { width: 0, offset: 0 };\n    const targetSize = routeSliding_groupStyles[`g_${routeSliding_targetIndex}`] || { width: 0, offset: 0 };\n    const tabWidth = initialSize.width + (targetSize.width - initialSize.width) * Math.abs(currentIndex - routeSliding_initialIndex);\n    const offset = (initialSize.offset + (targetSize.offset - initialSize.offset) * Math.abs(currentIndex - routeSliding_initialIndex)) * -1 + routeSliding_fieldWidth * 0.5 - tabWidth * 0.5;\n\n    updateRouteCSS(routeSliding_groupQuantity, offset, tabWidth - tabPadding, currentIndex);\n\n    if (currentIndex === routeSliding_targetIndex) {\n      routeSliding_initialIndex = Math.round(RouteGroupsElement.scrollLeft / routeSliding_fieldWidth);\n      routeSliding_sliding = false;\n    }\n  });\n}\n\nfunction queryRouteFieldSize(): FieldSize {\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight\n  };\n}\n\nexport function ResizeRouteField(): void {\n  const FieldSize = queryRouteFieldSize();\n  const FieldWidth = FieldSize.width;\n  const FieldHeight = FieldSize.height;\n  RouteField.style.setProperty('--b-cssvar-route-field-width', `${FieldWidth}px`);\n  RouteField.style.setProperty('--b-cssvar-route-field-height', `${FieldHeight}px`);\n}\n\nexport function updateRouteCSS(groupQuantity: number, offset: number, tabLineWidth: number, percentage: number): void {\n  RouteField.style.setProperty('--b-cssvar-route-group-quantity', groupQuantity.toString());\n  RouteGroupTabLineElement.style.setProperty('--b-cssvar-route-tab-line-width-scale', (tabLineWidth / 30).toFixed(5));\n  RouteGroupTabsTrayElement.style.setProperty('--b-cssvar-route-tabs-tray-offset', `${offset.toFixed(5)}px`);\n  RouteGroupTabsTrayElement.style.setProperty('--b-cssvar-route-percentage', percentage.toFixed(5));\n}\n\nfunction updateUpdateTimer(): void {\n  const time = new Date().getTime();\n  let percentage = 0;\n  if (routeRefreshTimer_refreshing) {\n    percentage = -1 + getDataReceivingProgress(routeRefreshTimer_currentRequestID);\n  } else {\n    percentage = -1 * Math.min(1, Math.max(0, Math.abs(time - routeRefreshTimer_lastUpdate) / routeRefreshTimer_dynamicInterval));\n  }\n  RouteUpdateTimerElement.style.setProperty('--b-cssvar-update-timer', percentage.toString());\n  window.requestAnimationFrame(function () {\n    if (routeRefreshTimer_streaming) {\n      updateUpdateTimer();\n    }\n  });\n}\n\nfunction generateElementOfThreadBox(): GeneratedElement {\n  var identifier = generateIdentifier('i');\n  var element = document.createElement('div');\n  element.classList.add('css_route_group_thread_box');\n  element.id = identifier;\n  element.setAttribute('stretched', 'false');\n  element.innerHTML = /*html*/ `<div class=\"css_route_group_thread\"></div><div class=\"css_route_group_thread_status\"><div class=\"css_next_slide\" code=\"0\"></div><div class=\"css_current_slide\" code=\"0\"></div></div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction generateElementOfItem(threadBoxIdentifier: string): GeneratedElement {\n  var identifier = generateIdentifier('i');\n  var element = document.createElement('div');\n  element.classList.add('css_route_group_item');\n  element.id = identifier;\n  element.setAttribute('stretched', 'false');\n  element.innerHTML = /*html*/ `<div class=\"css_route_group_item_head\"><div class=\"css_route_group_item_name\"></div><div class=\"css_route_group_item_capsule\"><div class=\"css_route_group_item_status\"><div class=\"css_next_slide\" code=\"0\"></div><div class=\"css_current_slide\" code=\"0\"></div></div><div class=\"css_route_group_item_stretch\" onclick=\"bus.route.stretchRouteItemBody('${identifier}', '${threadBoxIdentifier}')\">${getIconHTML('keyboard_arrow_down')}</div><div class=\"css_route_group_item_capsule_separator\"></div></div></div><div class=\"css_route_group_item_body\"><div class=\"css_route_group_item_buttons\"><div class=\"css_route_group_item_button\" highlighted=\"true\" type=\"tab\" onclick=\"bus.route.switchRouteBodyTab('${identifier}', 0)\" code=\"0\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('directions_bus')}</div>公車</div><div class=\"css_route_group_item_button\" highlighted=\"false\" type=\"tab\" onclick=\"bus.route.switchRouteBodyTab('${identifier}', 1)\" code=\"1\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('departure_board')}</div>抵達時間</div><div class=\"css_route_group_item_button\" highlighted=\"false\" type=\"tab\" onclick=\"bus.route.switchRouteBodyTab('${identifier}', 2)\" code=\"2\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('route')}</div>路線</div><div class=\"css_route_group_item_button\" highlighted=\"false\" type=\"save-to-folder\" onclick=\"bus.folder.openSaveToFolder('stop', ['${identifier}', null, null])\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('folder')}</div>儲存至資料夾</div></div><div class=\"css_route_group_item_buses\" displayed=\"true\"></div><div class=\"css_route_group_item_overlapping_routes\" displayed=\"false\"></div><div class=\"css_route_group_item_bus_arrival_times\" displayed=\"false\"></div></div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction generateElementOfGroup(): GeneratedElement {\n  var identifier = generateIdentifier('g');\n  var element = document.createElement('div');\n  element.classList.add('css_route_group');\n  element.id = identifier;\n  var tracksElement = document.createElement('div');\n  tracksElement.classList.add('css_route_group_tracks');\n  var threadTrackElement = document.createElement('div');\n  threadTrackElement.classList.add('css_route_group_threads_track');\n  var itemsTrackElement = document.createElement('div');\n  itemsTrackElement.classList.add('css_route_group_items_track');\n  tracksElement.appendChild(threadTrackElement);\n  tracksElement.appendChild(itemsTrackElement);\n  element.appendChild(tracksElement);\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction generateElementOfTab(): GeneratedElement {\n  var identifier = generateIdentifier('t');\n  var element = document.createElement('div');\n  element.classList.add('css_route_group_tab');\n  element.id = identifier;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction setUpRouteFieldSkeletonScreen(Field: HTMLElement): void {\n  const FieldSize = queryRouteFieldSize();\n  const FieldWidth = FieldSize.width;\n  const FieldHeight = FieldSize.height;\n  const defaultItemQuantity: number = Math.floor(FieldHeight / 50) + 5;\n  const defaultGroupQuantity = 2;\n  let groupedItems: IntegratedRoute['groupedItems'] = {};\n  for (let i = 0; i < defaultGroupQuantity; i++) {\n    const groupKey: string = `g_${i}`;\n    groupedItems[groupKey] = [];\n    for (let j = 0; j < defaultItemQuantity; j++) {\n      groupedItems[groupKey].push({\n        name: '',\n        goBack: '0',\n        status: { code: 0, text: '' },\n        buses: [],\n        overlappingRoutes: [],\n        busArrivalTimes: [],\n        sequence: j,\n        position: {\n          longitude: 0,\n          latitude: 0\n        },\n        nearest: false,\n        progress: 0,\n        segmentBuffer: {\n          isSegmentBuffer: false,\n          isStartingPoint: false,\n          isEndingPoint: false\n        },\n        id: 0\n      });\n    }\n  }\n  updateRouteField(\n    Field,\n    {\n      groupedItems: groupedItems,\n      groupQuantity: defaultGroupQuantity,\n      itemQuantity: {\n        g_0: defaultItemQuantity,\n        g_1: defaultItemQuantity\n      },\n      RouteName: '載入中',\n      RouteEndPoints: {\n        RouteDeparture: '載入中',\n        RouteDestination: '載入中'\n      },\n      RouteID: 0,\n      PathAttributeId: [],\n      dataUpdateTime: null\n    },\n    true\n  );\n}\n\nfunction updateRouteField(Field: HTMLElement, integration: IntegratedRoute, skeletonScreen: boolean) {\n  function updateItem(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem, previousItem: integratedStopItem | null): void {\n    function updateStatus(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem): void {\n      const thisItemElementRect = thisItemElement.getBoundingClientRect();\n      const top = thisItemElementRect.top;\n      const left = thisItemElementRect.left;\n      const bottom = thisItemElementRect.bottom;\n      const right = thisItemElementRect.right;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n\n      const thisThreadStatusElement = elementQuerySelector(thisThreadBoxElement, '.css_route_group_thread_status');\n      const currentThreadSlideElement = elementQuerySelector(thisThreadStatusElement, '.css_current_slide');\n      const nextThreadSlideElement = elementQuerySelector(thisThreadStatusElement, '.css_next_slide');\n\n      const thisItemStatusElement = elementQuerySelector(thisItemElement, '.css_route_group_item_status');\n      const currentItemSlideElement = elementQuerySelector(thisItemStatusElement, '.css_current_slide');\n      const nextItemSlideElememt = elementQuerySelector(thisItemStatusElement, '.css_next_slide');\n\n      nextThreadSlideElement.setAttribute('code', thisItem.status.code.toString());\n\n      nextItemSlideElememt.setAttribute('code', thisItem.status.code.toString());\n      nextItemSlideElememt.innerText = thisItem.status.text;\n\n      if (top >= 0 && left >= 0 && bottom <= windowHeight && right <= windowWidth) {\n        currentThreadSlideElement.addEventListener(\n          'animationend',\n          function () {\n            currentThreadSlideElement.setAttribute('code', thisItem.status.code.toString());\n            currentThreadSlideElement.classList.remove('css_slide_fade_out');\n          },\n          { once: true }\n        );\n        currentItemSlideElement.addEventListener(\n          'animationend',\n          function () {\n            currentItemSlideElement.setAttribute('code', thisItem.status.code.toString());\n            currentItemSlideElement.innerText = thisItem.status.text;\n            currentItemSlideElement.classList.remove('css_slide_fade_out');\n          },\n          { once: true }\n        );\n        currentThreadSlideElement.classList.add('css_slide_fade_out');\n        currentItemSlideElement.classList.add('css_slide_fade_out');\n      } else {\n        currentThreadSlideElement.setAttribute('code', thisItem.status.code.toString());\n\n        currentItemSlideElement.setAttribute('code', thisItem.status.code.toString());\n        currentItemSlideElement.innerText = thisItem.status.text;\n      }\n    }\n    function updateSegmentBuffer(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem): void {\n      thisItemElement.setAttribute('segment-buffer', booleanToString(thisItem.segmentBuffer.isSegmentBuffer));\n      thisThreadBoxElement.setAttribute('segment-buffer', booleanToString(thisItem.segmentBuffer.isSegmentBuffer));\n    }\n    function updateName(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_name').innerText = thisItem.name;\n    }\n    function updateBuses(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_buses').innerHTML = thisItem.buses.length === 0 ? '<div class=\"css_route_group_item_buses_message\">目前沒有公車可顯示</div>' : thisItem.buses.map((bus) => `<div class=\"css_route_group_item_bus\" on-this-route=\"${bus.onThisRoute}\"><div class=\"css_route_group_item_bus_title\"><div class=\"css_route_group_item_bus_icon\">${getIconHTML('directions_bus')}</div><div class=\"css_route_group_item_bus_car_number\">${bus.carNumber}</div></div><div class=\"css_route_group_item_bus_attributes\"><div class=\"css_route_group_item_bus_route\">路線：${bus.RouteName}</div><div class=\"css_route_group_item_bus_car_status\">狀態：${bus.status.text}</div><div class=\"css_route_group_item_bus_car_type\">類型：${bus.type}</div></div></div>`).join('');\n    }\n    function updateOverlappingRoutes(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_overlapping_routes').innerHTML = thisItem.overlappingRoutes.length === 0 ? '<div class=\"css_route_group_item_overlapping_route_message\">目前沒有路線可顯示</div>' : thisItem.overlappingRoutes.map((route) => `<div class=\"css_route_group_item_overlapping_route\"><div class=\"css_route_group_item_overlapping_route_title\"><div class=\"css_route_group_item_overlapping_route_icon\">${getIconHTML('route')}</div><div class=\"css_route_group_item_overlapping_route_name\">${route.name}</div></div><div class=\"css_route_group_item_overlapping_route_endpoints\">${route.RouteEndPoints.html}</div><div class=\"css_route_group_item_overlapping_route_actions\"><div class=\"css_route_group_item_overlapping_route_action_button\" onclick=\"bus.route.switchRoute(${route.RouteID}, [${route.PathAttributeId.join(',')}])\">查看路線</div><div class=\"css_route_group_item_overlapping_route_action_button\" onclick=\"bus.folder.openSaveToFolder('route', [${route.RouteID}])\">收藏路線</div></div></div>`).join('');\n    }\n    function updateBusArrivalTimes(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_bus_arrival_times').innerHTML = thisItem.busArrivalTimes.length === 0 ? '<div class=\"css_route_group_item_bus_arrival_message\">目前沒有抵達時間可顯示</div>' : thisItem.busArrivalTimes.map((busArrivalTime) => `<div class=\"css_route_group_item_bus_arrival_time\"><div class=\"css_route_group_item_bus_arrival_time_title\"><div class=\"css_route_group_item_bus_arrival_time_icon\">${getIconHTML('schedule')}</div><div class=\"css_route_group_item_bus_arrival_time_time\">${busArrivalTime.time}</div></div><div class=\"css_route_group_item_bus_arrival_time_attributes\"><div class=\"css_route_group_item_bus_arrival_time_personal_schedule_name\">個人化行程：${busArrivalTime.personalSchedule.name}</div><div class=\"css_route_group_item_bus_arrival_time_personal_schedule_period\">時段：${timeObjectToString(busArrivalTime.personalSchedule.period.start)} - ${timeObjectToString(busArrivalTime.personalSchedule.period.end)}</div><div class=\"css_route_group_item_bus_arrival_time_personal_schedule_days\">重複：${busArrivalTime.personalSchedule.days.map((day) => indexToDay(day).name).join('、')}</div></div></div>`).join('');\n    }\n    function updateNearest(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem): void {\n      thisItemElement.setAttribute('nearest', booleanToString(thisItem.nearest));\n      thisThreadBoxElement.setAttribute('nearest', booleanToString(thisItem.nearest));\n    }\n    function updateThread(thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem, previousItem: integratedStopItem | null): void {\n      var previousProgress = previousItem?.progress || 0;\n      var thisProgress = thisItem?.progress || 0;\n      const thisThreadElement = elementQuerySelector(thisThreadBoxElement, '.css_route_group_thread');\n      if (!(previousProgress === 0) && thisProgress === 0 && Math.abs(thisProgress - previousProgress) > 0) {\n        thisThreadElement.style.setProperty('--b-cssvar-thread-progress-a', `${100}%`);\n        thisThreadElement.style.setProperty('--b-cssvar-thread-progress-b', `${100}%`);\n        thisThreadElement.addEventListener(\n          'transitionend',\n          function () {\n            thisThreadElement.style.setProperty('--b-cssvar-thread-progress-a', `${0}%`);\n            thisThreadElement.style.setProperty('--b-cssvar-thread-progress-b', `${0}%`);\n          },\n          { once: true }\n        );\n      } else {\n        thisThreadElement.style.setProperty('--b-cssvar-thread-progress-a', `${0}%`);\n        thisThreadElement.style.setProperty('--b-cssvar-thread-progress-b', `${thisProgress * 100}%`);\n      }\n    }\n    function updateStretch(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, skeletonScreen: boolean): void {\n      if (skeletonScreen) {\n        thisItemElement.setAttribute('stretched', 'false');\n        thisThreadBoxElement.setAttribute('stretched', 'false');\n      }\n    }\n    function updateSkeletonScreen(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, skeletonScreen: boolean): void {\n      thisItemElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n      thisThreadBoxElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    }\n    function updateSaveToFolderButton(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      const saveToFolderButtonElement = elementQuerySelector(thisItemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"save-to-folder\"]');\n      saveToFolderButtonElement.setAttribute('onclick', `bus.folder.openSaveToFolder('stop', ['${thisItemElement.id}', ${thisItem.id}, ${integration.RouteID}])`);\n      isSaved('stop', thisItem.id).then((e) => {\n        saveToFolderButtonElement.setAttribute('highlighted', booleanToString(e));\n      });\n    }\n\n    if (previousItem === null) {\n      updateStatus(thisItemElement, thisThreadBoxElement, thisItem);\n      updateName(thisItemElement, thisItem);\n      updateBuses(thisItemElement, thisItem);\n      updateOverlappingRoutes(thisItemElement, thisItem);\n      updateBusArrivalTimes(thisItemElement, thisItem);\n      updateSegmentBuffer(thisItemElement, thisThreadBoxElement, thisItem);\n      updateNearest(thisItemElement, thisThreadBoxElement, thisItem);\n      updateThread(thisThreadBoxElement, thisItem, previousItem);\n      updateStretch(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      updateSkeletonScreen(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      updateSaveToFolderButton(thisItemElement, thisItem);\n    } else {\n      if (!(thisItem.status.code === previousItem.status.code) || !compareThings(previousItem.status.text, thisItem.status.text)) {\n        updateStatus(thisItemElement, thisThreadBoxElement, thisItem);\n      }\n      if (!compareThings(previousItem.buses, thisItem.buses)) {\n        updateBuses(thisItemElement, thisItem);\n      }\n      if (!compareThings(previousItem.busArrivalTimes, thisItem.busArrivalTimes)) {\n        updateBusArrivalTimes(thisItemElement, thisItem);\n      }\n      if (!compareThings(previousItem.segmentBuffer, thisItem.segmentBuffer)) {\n        updateSegmentBuffer(thisItemElement, thisThreadBoxElement, thisItem);\n      }\n      if (!(previousItem.nearest === thisItem.nearest)) {\n        updateNearest(thisItemElement, thisThreadBoxElement, thisItem);\n      }\n      if (!(previousItem.progress === thisItem.progress)) {\n        updateThread(thisThreadBoxElement, thisItem, previousItem);\n      }\n      if (!(previousItem.id === thisItem.id)) {\n        updateName(thisItemElement, thisItem);\n        updateOverlappingRoutes(thisItemElement, thisItem);\n        updateSaveToFolderButton(thisItemElement, thisItem);\n      }\n      if (!(skeletonScreen === previousSkeletonScreen)) {\n        updateStretch(thisItemElement, thisThreadBoxElement, skeletonScreen);\n        updateSkeletonScreen(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      }\n    }\n  }\n\n  const FieldSize = queryRouteFieldSize();\n  const FieldWidth = FieldSize.width;\n  const FieldHeight = FieldSize.height;\n\n  const groupQuantity = integration.groupQuantity;\n  const itemQuantity = integration.itemQuantity;\n  const groupedItems = integration.groupedItems;\n\n  routeSliding_groupQuantity = groupQuantity;\n  routeSliding_fieldWidth = FieldWidth;\n  routeSliding_fieldHeight = FieldHeight;\n\n  let cumulativeOffset = 0;\n  for (let i = 0; i < groupQuantity; i++) {\n    const width = getTextWidth([integration.RouteEndPoints.RouteDestination, integration.RouteEndPoints.RouteDeparture, ''].map((e) => `往${e}`)[i], 500, '17px', `\"Noto Sans TC\", sans-serif`) + tabPadding;\n    routeSliding_groupStyles[`g_${i}`] = {\n      width: width,\n      offset: cumulativeOffset\n    };\n    cumulativeOffset += width;\n  }\n  const offset = routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].offset * -1 + routeSliding_fieldWidth * 0.5 - routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].width * 0.5;\n  if (!routeSliding_sliding) {\n    updateRouteCSS(routeSliding_groupQuantity, offset, routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].width - tabPadding, routeSliding_initialIndex);\n  }\n  RouteNameElement.innerHTML = /*html*/ `<span>${integration.RouteName}</span>`;\n  Field.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n  RouteButtonRightElement.setAttribute('onclick', `bus.route.openRouteDetails(${integration.RouteID}, [${integration.PathAttributeId.join(',')}])`);\n\n  const currentGroupSeatQuantity = elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`).length;\n  if (!(groupQuantity === currentGroupSeatQuantity)) {\n    const capacity = currentGroupSeatQuantity - groupQuantity;\n    if (capacity < 0) {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const newGroupElement = generateElementOfGroup();\n        RouteGroupsElement.appendChild(newGroupElement.element);\n        const newTabElement = generateElementOfTab();\n        RouteGroupTabsTrayElement.appendChild(newTabElement.element);\n      }\n    } else {\n      const GroupElements = elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`);\n      const TabElements = elementQuerySelectorAll(Field, `.css_route_head .css_route_group_tabs .css_route_group_tabs_tray .css_route_group_tab`);\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const groupIndex = currentGroupSeatQuantity - 1 - o;\n        GroupElements[groupIndex].remove();\n        TabElements[groupIndex].remove();\n      }\n    }\n  }\n\n  for (let i = 0; i < groupQuantity; i++) {\n    const groupKey = `g_${i}`;\n    const currentItemSeatQuantity = elementQuerySelectorAll(elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_items_track'), `.css_route_group_item`).length;\n    if (!(itemQuantity[groupKey] === currentItemSeatQuantity)) {\n      const capacity = currentItemSeatQuantity - itemQuantity[groupKey];\n      if (capacity < 0) {\n        const RouteGroupItemsTrackElement = elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_items_track');\n        const RouteGroupThreadsTrackElement = elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_threads_track');\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const newThreadBoxElement = generateElementOfThreadBox();\n          const newItemElement = generateElementOfItem(newThreadBoxElement.id);\n          RouteGroupItemsTrackElement.appendChild(newItemElement.element);\n          RouteGroupThreadsTrackElement.appendChild(newThreadBoxElement.element);\n        }\n      } else {\n        const RouteGroupItemElements = elementQuerySelectorAll(elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_items_track'), `.css_route_group_item`);\n        const RouteGroupThreadElements = elementQuerySelectorAll(elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_threads_track'), `.css_route_group_thread_box`);\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const itemIndex = currentItemSeatQuantity - 1 - o;\n          RouteGroupItemElements[itemIndex].remove();\n          RouteGroupThreadElements[itemIndex].remove();\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < groupQuantity; i++) {\n    const groupKey = `g_${i}`;\n    const thisTabElement = elementQuerySelectorAll(Field, `.css_route_head .css_route_group_tabs .css_route_group_tabs_tray .css_route_group_tab`)[i];\n    thisTabElement.innerHTML = [integration.RouteEndPoints.RouteDestination, integration.RouteEndPoints.RouteDeparture, ''].map((e) => `<span>往${e}</span>`)[i];\n    thisTabElement.style.setProperty('--b-cssvar-route-tab-width', `${routeSliding_groupStyles[groupKey].width}px`);\n    thisTabElement.style.setProperty('--b-cssvar-route-tab-index', `${i}`);\n\n    const RouteGroupItemElements = elementQuerySelectorAll(elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_items_track'), `.css_route_group_item`);\n    const RouteGroupThreadElements = elementQuerySelectorAll(elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_threads_track'), `.css_route_group_thread_box`);\n    for (let j = 0; j < itemQuantity[groupKey]; j++) {\n      const thisItemElement = RouteGroupItemElements[j];\n      const thisThreadBoxElement = RouteGroupThreadElements[j];\n      const thisItem = groupedItems[groupKey][j];\n      if (previousIntegration.hasOwnProperty('groupedItems')) {\n        if (previousIntegration.groupedItems.hasOwnProperty(groupKey)) {\n          if (previousIntegration.groupedItems[groupKey][j]) {\n            const previousItem = previousIntegration.groupedItems[groupKey][j];\n            updateItem(thisItemElement, thisThreadBoxElement, thisItem, previousItem);\n          } else {\n            updateItem(thisItemElement, thisThreadBoxElement, thisItem, null);\n          }\n        } else {\n          updateItem(thisItemElement, thisThreadBoxElement, thisItem, null);\n        }\n      } else {\n        updateItem(thisItemElement, thisThreadBoxElement, thisItem, null);\n      }\n    }\n  }\n  previousIntegration = integration;\n  previousSkeletonScreen = skeletonScreen;\n}\n\nasync function refreshRoute(): Promise<object> {\n  const refresh_interval_setting = getSettingOptionValue('refresh_interval') as SettingSelectOptionRefreshIntervalValue;\n  routeRefreshTimer_dynamic = refresh_interval_setting.dynamic;\n  routeRefreshTimer_baseInterval = refresh_interval_setting.baseInterval;\n  routeRefreshTimer_refreshing = true;\n  routeRefreshTimer_currentRequestID = generateIdentifier('r');\n  RouteUpdateTimerElement.setAttribute('refreshing', 'true');\n  const integration = await integrateRoute(currentRouteIDSet_RouteID, currentRouteIDSet_PathAttributeId, routeRefreshTimer_currentRequestID);\n  updateRouteField(RouteField, integration, false);\n  routeRefreshTimer_lastUpdate = new Date().getTime();\n  if (routeRefreshTimer_dynamic) {\n    const updateRate = await getUpdateRate();\n    routeRefreshTimer_nextUpdate = Math.max(new Date().getTime() + routeRefreshTimer_minInterval, integration.dataUpdateTime + routeRefreshTimer_baseInterval / updateRate);\n  } else {\n    routeRefreshTimer_nextUpdate = new Date().getTime() + routeRefreshTimer_baseInterval;\n  }\n  routeRefreshTimer_dynamicInterval = Math.max(routeRefreshTimer_minInterval, routeRefreshTimer_nextUpdate - new Date().getTime());\n  routeRefreshTimer_refreshing = false;\n  RouteUpdateTimerElement.setAttribute('refreshing', 'false');\n  return { status: 'Successfully refreshed the route.' };\n}\n\nexport function streamRoute(): void {\n  refreshRoute()\n    .then((result) => {\n      if (routeRefreshTimer_streaming) {\n        routeRefreshTimer_timer = setTimeout(function () {\n          streamRoute();\n        }, Math.max(routeRefreshTimer_minInterval, routeRefreshTimer_nextUpdate - new Date().getTime()));\n      } else {\n        routeRefreshTimer_streamStarted = false;\n      }\n    })\n    .catch((err) => {\n      console.error(err);\n      if (routeRefreshTimer_streaming) {\n        promptMessage(`（路線）發生網路錯誤，將在${routeRefreshTimer_retryInterval / 1000}秒後重試。`, 'error');\n        routeRefreshTimer_timer = setTimeout(function () {\n          streamRoute();\n        }, routeRefreshTimer_retryInterval);\n      } else {\n        routeRefreshTimer_streamStarted = false;\n      }\n    });\n}\n\nexport function openRoute(RouteID: number, PathAttributeId: Array<number>): void {\n  pushPageHistory('Route');\n  logRecentView('route', RouteID);\n  currentRouteIDSet_RouteID = RouteID;\n  currentRouteIDSet_PathAttributeId = PathAttributeId;\n  routeSliding_initialIndex = 0;\n  RouteField.setAttribute('displayed', 'true');\n  elementQuerySelector(RouteField, '.css_route_groups').scrollLeft = 0;\n  setUpRouteFieldSkeletonScreen(RouteField);\n  if (!routeRefreshTimer_streaming) {\n    routeRefreshTimer_streaming = true;\n    if (!routeRefreshTimer_streamStarted) {\n      routeRefreshTimer_streamStarted = true;\n      streamRoute();\n    } else {\n      refreshRoute();\n    }\n    updateUpdateTimer();\n  }\n  closePreviousPage();\n}\n\nexport function closeRoute(): void {\n  // revokePageHistory('Route');\n  RouteField.setAttribute('displayed', 'false');\n  routeRefreshTimer_streaming = false;\n  openPreviousPage();\n}\n\nexport function switchRoute(RouteID: number, PathAttributeId: Array<number>) {\n  routeRefreshTimer_streaming = false;\n  openRoute(RouteID, PathAttributeId);\n}\n\nexport function stretchRouteItemBody(itemElementID: string, threadBoxElementID: string): void {\n  const itemElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  const threadBoxElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_threads_track .css_route_group_thread_box#${threadBoxElementID}`);\n  if (itemElement.getAttribute('stretched') === 'true') {\n    itemElement.setAttribute('stretched', 'false');\n    threadBoxElement.setAttribute('stretched', 'false');\n  } else {\n    itemElement.setAttribute('stretched', 'true');\n    threadBoxElement.setAttribute('stretched', 'true');\n  }\n}\n\nexport function switchRouteBodyTab(itemID: string, tabCode: number): void {\n  const itemElement = elementQuerySelector(RouteGroupsElement, `.css_route_group_item#${itemID}`);\n  const buttons = elementQuerySelector(itemElement, '.css_route_group_item_buttons');\n  const button = elementQuerySelectorAll(buttons, '.css_route_group_item_button[highlighted=\"true\"][type=\"tab\"]');\n  for (const t of button) {\n    t.setAttribute('highlighted', 'false');\n  }\n  elementQuerySelector(buttons, `.css_route_group_item_button[code=\"${tabCode}\"]`).setAttribute('highlighted', 'true');\n  switch (tabCode) {\n    case 0:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'true');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'flase');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'false');\n      break;\n    case 1:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'true');\n      break;\n    case 2:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'true');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'false');\n      break;\n    default:\n      break;\n  }\n}\n","import { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { generateIdentifier } from '../../tools/index';\nimport { listFoldersWithContent, FoldersWithContent, FolderContentType, saveStop, isSaved, saveRoute } from '../../data/folder/index';\nimport { getIconHTML } from '../icons/index';\nimport { promptMessage } from '../prompt/index';\n\nfunction generateElementOfItem(item: FoldersWithContent, type: FolderContentType, parameters: Array): GeneratedElement {\n  var identifier = generateIdentifier('i');\n  var element = document.createElement('div');\n  element.classList.add('css_save_to_folder_list_item');\n  element.id = identifier;\n  switch (type) {\n    case 'stop':\n      element.setAttribute('onclick', `bus.folder.saveStopItemOnRoute('${parameters[0]}', '${item.folder.id}', ${parameters[1]}, ${parameters[2]})`);\n      break;\n    case 'route':\n      element.setAttribute('onclick', `bus.folder.saveRouteOnDetailsPage('${item.folder.id}', ${parameters[0]})`);\n      break;\n    case 'bus':\n      break;\n    default:\n      break;\n  }\n  element.innerHTML = /*html*/ `<div class=\"css_save_to_folder_item_icon\">${getIconHTML(item.folder.icon)}</div><div class=\"css_save_to_folder_item_name\">${item.folder.name}</div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nasync function initializeSaveToFolderField(type: FolderContentType, parameters: Array): void {\n  var Field = documentQuerySelector('.css_save_to_folder_field');\n  elementQuerySelector(Field, '.css_save_to_folder_body .css_save_to_folder_list').innerHTML = '';\n  var foldersWithContent = await listFoldersWithContent();\n  for (var item of foldersWithContent) {\n    var thisElement = generateElementOfItem(item, type, parameters);\n    elementQuerySelector(Field, '.css_save_to_folder_body .css_save_to_folder_list').appendChild(thisElement.element);\n  }\n}\n\nexport function openSaveToFolder(type: FolderContentType, parameters: Array): void {\n  pushPageHistory('SaveToFolder');\n  var Field = documentQuerySelector('.css_save_to_folder_field');\n  Field.setAttribute('displayed', 'true');\n  initializeSaveToFolderField(type, parameters);\n}\n\nexport function closeSaveToFolder(): void {\n  revokePageHistory('SaveToFolder');\n  var Field = documentQuerySelector('.css_save_to_folder_field');\n  Field.setAttribute('displayed', 'false');\n}\n\nexport function saveStopItemOnRoute(itemElementID: string, folderID: string, StopID: number, RouteID: number): void {\n  var itemElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  var actionButtonElement = elementQuerySelector(itemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"save-to-folder\"]');\n  saveStop(folderID, StopID, RouteID).then((e) => {\n    if (e) {\n      isSaved('stop', StopID).then((k) => {\n        if (k) {\n          actionButtonElement.setAttribute('highlighted', k);\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('此資料夾不支援站牌類型項目', 'warning');\n    }\n  });\n}\n\nexport function saveRouteOnDetailsPage(folderID: string, RouteID: number): void {\n  var actionButtonElement = documentQuerySelector('.css_route_details_field .css_route_details_body .css_route_details_groups .css_route_details_group[group=\"actions\"] .css_route_details_group_body .css_route_details_action_button[action=\"save-to-folder\"]');\n  saveRoute(folderID, RouteID).then((e) => {\n    if (e) {\n      isSaved('route', RouteID).then((k) => {\n        if (k) {\n          actionButtonElement.setAttribute('highlighted', 'true');\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('此資料夾不支援路線類型項目', 'warning');\n    }\n  });\n}\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_createForOfIteratorHelper","Array","isArray","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_n","F","asyncGeneratorStep","RouteField","documentQuerySelector","RouteHeadElement","elementQuerySelector","RouteNameElement","RouteButtonRightElement","RouteUpdateTimerElement","RouteGroupTabsTrayElement","RouteGroupTabLineElement","RouteGroupsElement","previousIntegration","previousSkeletonScreen","routeSliding_initialIndex","routeSliding_targetIndex","routeSliding_groupQuantity","routeSliding_groupStyles","routeSliding_fieldWidth","routeSliding_sliding","routeRefreshTimer_retryInterval","routeRefreshTimer_baseInterval","routeRefreshTimer_minInterval","routeRefreshTimer_dynamicInterval","routeRefreshTimer_dynamic","routeRefreshTimer_streaming","routeRefreshTimer_lastUpdate","routeRefreshTimer_nextUpdate","routeRefreshTimer_refreshing","routeRefreshTimer_currentRequestID","routeRefreshTimer_streamStarted","currentRouteIDSet_RouteID","currentRouteIDSet_PathAttributeId","tabPadding","initializeRouteSliding","addEventListener","Math","round","scrollLeft","event","currentIndex","target","initialSize","concat","width","offset","targetSize","tabWidth","abs","updateRouteCSS","queryRouteFieldSize","window","innerWidth","height","innerHeight","ResizeRouteField","FieldSize","FieldWidth","FieldHeight","style","setProperty","groupQuantity","tabLineWidth","percentage","toFixed","updateUpdateTimer","time","Date","getTime","getDataReceivingProgress","min","max","requestAnimationFrame","generateElementOfThreadBox","identifier","generateIdentifier","element","document","createElement","classList","add","id","setAttribute","innerHTML","generateElementOfItem","threadBoxIdentifier","getIconHTML","generateElementOfGroup","tracksElement","threadTrackElement","itemsTrackElement","appendChild","updateRouteField","Field","integration","skeletonScreen","updateItem","thisItemElement","thisThreadBoxElement","thisItem","previousItem","updateStatus","thisItemElementRect","getBoundingClientRect","top","left","bottom","right","windowWidth","windowHeight","thisThreadStatusElement","currentThreadSlideElement","nextThreadSlideElement","thisItemStatusElement","currentItemSlideElement","nextItemSlideElememt","status","code","innerText","text","remove","once","updateSegmentBuffer","booleanToString","segmentBuffer","isSegmentBuffer","updateName","updateBuses","buses","map","bus","onThisRoute","carNumber","RouteName","join","updateOverlappingRoutes","overlappingRoutes","route","RouteEndPoints","html","RouteID","PathAttributeId","updateBusArrivalTimes","busArrivalTimes","busArrivalTime","personalSchedule","timeObjectToString","period","start","end","days","day","indexToDay","updateNearest","nearest","updateThread","previousProgress","progress","thisProgress","thisThreadElement","updateStretch","updateSkeletonScreen","updateSaveToFolderButton","saveToFolderButtonElement","isSaved","compareThings","itemQuantity","groupedItems","cumulativeOffset","getTextWidth","RouteDestination","RouteDeparture","currentGroupSeatQuantity","elementQuerySelectorAll","capacity","newGroupElement","newTabElement","GroupElements","TabElements","groupIndex","groupKey","currentItemSeatQuantity","RouteGroupItemsTrackElement","RouteGroupThreadsTrackElement","newThreadBoxElement","newItemElement","RouteGroupItemElements","RouteGroupThreadElements","itemIndex","thisTabElement","j","refreshRoute","_refreshRoute","apply","arguments","_callee","refresh_interval_setting","updateRate","_context","getSettingOptionValue","dynamic","baseInterval","integrateRoute","getUpdateRate","dataUpdateTime","_next","_throw","streamRoute","result","setTimeout","err","console","error","promptMessage","openRoute","pushPageHistory","logRecentView","defaultItemQuantity","floor","goBack","sequence","position","longitude","latitude","isStartingPoint","isEndingPoint","g_0","g_1","setUpRouteFieldSkeletonScreen","closePreviousPage","closeRoute","openPreviousPage","switchRoute","stretchRouteItemBody","itemElementID","threadBoxElementID","itemElement","threadBoxElement","getAttribute","switchRouteBodyTab","itemID","tabCode","_step","buttons","_iterator","item","parameters","folder","icon","_initializeSaveToFolderField","foldersWithContent","thisElement","listFoldersWithContent","openSaveToFolder","_x","_x2","initializeSaveToFolderField","closeSaveToFolder","revokePageHistory","saveStopItemOnRoute","folderID","StopID","actionButtonElement","saveStop","k","saveRouteOnDetailsPage","saveRoute"],"sourceRoot":""}