{"version":3,"file":"2a9915ff554ca7bac2f8.js","mappings":"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","sources":["webpack://bus/./src/interface/route/index.ts"],"sourcesContent":["import { getUpdateRate } from '../../data/analytics/update-rate/index';\nimport { DataReceivingProgressEvent } from '../../data/apis/loader';\nimport { isFolderContentSaved } from '../../data/folder/index';\nimport { stopHasNotifcationSchedules } from '../../data/notification/index';\nimport { logRecentView } from '../../data/recent-views/index';\nimport { IntegratedRoute, integratedStopItem, integrateRoute } from '../../data/route/index';\nimport { getSettingOptionValue, SettingSelectOptionRefreshIntervalValue } from '../../data/settings/index';\nimport { getTextWidth } from '../../tools/graphic';\nimport { booleanToString, compareThings, generateIdentifier } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll, getElementsBelow } from '../../tools/query-selector';\nimport { indexToDay, timeObjectToString } from '../../tools/time';\nimport { getIconHTML } from '../icons/index';\nimport { closePreviousPage, GeneratedElement, GroupStyles, openPreviousPage, pushPageHistory, querySize } from '../index';\nimport { promptMessage } from '../prompt/index';\nimport { openSaveToFolder } from '../save-to-folder/index';\nimport { openScheduleNotification } from '../schedule-notification/index';\nimport { openRouteDetails } from './details/index';\n\nconst RouteField = documentQuerySelector('.css_route_field');\nconst RouteHeadElement = elementQuerySelector(RouteField, '.css_route_head');\nconst RouteNameElement = elementQuerySelector(RouteHeadElement, '.css_route_name');\nconst RouteNameSpanElement = elementQuerySelector(RouteNameElement, 'span');\nconst RouteButtonRightElement = elementQuerySelector(RouteHeadElement, '.css_route_button_right');\nconst RouteUpdateTimerElement = elementQuerySelector(RouteHeadElement, '.css_route_update_timer_box .css_route_update_timer');\nconst RouteGroupTabsElement = elementQuerySelector(RouteHeadElement, '.css_route_group_tabs');\nconst RouteGroupTabsTrayElement = elementQuerySelector(RouteGroupTabsElement, '.css_route_group_tabs_tray');\nconst RouteGroupTabLineTrackElement = elementQuerySelector(RouteHeadElement, '.css_route_group_tab_line_track');\nconst RouteGroupTabLineElement = elementQuerySelector(RouteGroupTabLineTrackElement, '.css_route_group_tab_line');\nconst RouteGroupsElement = elementQuerySelector(RouteField, '.css_route_groups');\n\nlet previousIntegration = {} as IntegratedRoute;\nlet previousAnimation: boolean = false;\nlet previousSkeletonScreen: boolean = false;\n\nlet routeSliding_initialIndex: number = 0;\nlet routeSliding_targetIndex: number = 0;\nlet routeSliding_groupQuantity: number = 0;\nlet routeSliding_groupStyles: GroupStyles = {};\nlet routeSliding_fieldWidth: number = 0;\nlet routeSliding_fieldHeight: number = 0;\nlet routeSliding_sliding: boolean = false;\n\nlet routeRefreshTimer_retryInterval: number = 10 * 1000;\nlet routeRefreshTimer_baseInterval: number = 15 * 1000;\nlet routeRefreshTimer_minInterval: number = 5 * 1000;\nlet routeRefreshTimer_dynamicInterval: number = 15 * 1000;\nlet routeRefreshTimer_dynamic: boolean = true;\nlet routeRefreshTimer_lastUpdate: number = 0;\nlet routeRefreshTimer_nextUpdate: number = 0;\nlet routeRefreshTimer_currentRequestID: string = '';\nlet routeRefreshTimer_refreshing: boolean = false;\nlet routeRefreshTimer_streaming: boolean = false;\nlet routeRefreshTimer_streamStarted: boolean = false;\n\nlet currentRouteIDSet_RouteID: number = 0;\nlet currentRouteIDSet_PathAttributeId: Array<number> = [];\n\nlet tabPadding: number = 20;\n\nexport function initializeRouteSliding(): void {\n  RouteGroupsElement.addEventListener(\n    'touchstart',\n    function () {\n      routeSliding_initialIndex = Math.round(RouteGroupsElement.scrollLeft / routeSliding_fieldWidth);\n    },\n    { passive: true }\n  );\n\n  RouteGroupsElement.addEventListener(\n    'scroll',\n    function (event: Event) {\n      routeSliding_sliding = true;\n      const target = event.target as HTMLElement;\n      const currentIndex = target.scrollLeft / routeSliding_fieldWidth;\n      if (currentIndex > routeSliding_initialIndex) {\n        routeSliding_targetIndex = routeSliding_initialIndex + 1;\n      } else {\n        routeSliding_targetIndex = routeSliding_initialIndex - 1;\n      }\n      const initialSize = routeSliding_groupStyles[`g_${routeSliding_initialIndex}`] || { width: 0, offset: 0 };\n      const targetSize = routeSliding_groupStyles[`g_${routeSliding_targetIndex}`] || { width: 0, offset: 0 };\n      const tabWidth = initialSize.width + (targetSize.width - initialSize.width) * Math.abs(currentIndex - routeSliding_initialIndex);\n      const offset = (initialSize.offset + (targetSize.offset - initialSize.offset) * Math.abs(currentIndex - routeSliding_initialIndex)) * -1 + routeSliding_fieldWidth * 0.5 - tabWidth * 0.5;\n\n      updateRouteCSS(routeSliding_groupQuantity, offset, tabWidth - tabPadding, currentIndex);\n\n      if (currentIndex === routeSliding_targetIndex) {\n        routeSliding_initialIndex = Math.round(RouteGroupsElement.scrollLeft / routeSliding_fieldWidth);\n        routeSliding_sliding = false;\n      }\n    },\n    { passive: true }\n  );\n}\n\nexport function updateRouteCSS(groupQuantity: number, offset: number, tabLineWidth: number, percentage: number): void {\n  RouteGroupsElement.style.setProperty('--b-cssvar-route-group-quantity', groupQuantity.toString());\n  RouteGroupTabLineElement.style.setProperty('--b-cssvar-route-tab-line-width-scale', tabLineWidth.toString());\n  RouteGroupTabsTrayElement.style.setProperty('--b-cssvar-route-tabs-tray-offset', `${offset.toFixed(5)}px`);\n  RouteGroupTabsTrayElement.style.setProperty('--b-cssvar-route-percentage', percentage.toFixed(5));\n}\n\nfunction animateUpdateTimer(): void {\n  RouteUpdateTimerElement.style.setProperty('--b-cssvar-route-update-timer-interval', `${routeRefreshTimer_dynamicInterval}ms`);\n  RouteUpdateTimerElement.classList.add('css_route_update_timer_slide_rtl');\n}\n\nfunction handleDataReceivingProgressUpdates(event: Event): void {\n  const CustomEvent = event as DataReceivingProgressEvent;\n  if (routeRefreshTimer_refreshing) {\n    const offsetRatio = CustomEvent.detail.progress - 1;\n    RouteUpdateTimerElement.style.setProperty('--b-cssvar-route-update-timer-offset-ratio', offsetRatio.toString());\n  }\n  if (CustomEvent.detail.stage === 'end') {\n    document.removeEventListener(CustomEvent.detail.target, handleDataReceivingProgressUpdates);\n  }\n}\n\nfunction generateElementOfThreadBox(): GeneratedElement {\n  const identifier = generateIdentifier();\n\n  // Main thread box element\n  const threadBoxElement = document.createElement('div');\n  threadBoxElement.classList.add('css_route_group_thread_box');\n  threadBoxElement.id = identifier;\n  threadBoxElement.setAttribute('stretched', 'false');\n  threadBoxElement.setAttribute('stretching', 'false');\n  threadBoxElement.setAttribute('push-direction', '0'); // 0: normal state, 1: downward, 2: upward\n  threadBoxElement.setAttribute('push-state', '0'); // 0: normal state, 1: compensation , 2: transition\n\n  // Thread container\n  const threadElement = document.createElement('div');\n  threadElement.classList.add('css_route_group_thread');\n\n  // Thread progress\n  const threadProgressElement = document.createElement('div');\n  threadProgressElement.classList.add('css_route_group_thread_progress');\n  threadProgressElement.setAttribute('displayed', 'false');\n  threadElement.appendChild(threadProgressElement);\n\n  // Thread status container\n  const threadStatusElement = document.createElement('div');\n  threadStatusElement.classList.add('css_route_group_thread_status');\n\n  // Next slide\n  const nextSlideElement = document.createElement('div');\n  nextSlideElement.classList.add('css_next_slide');\n  nextSlideElement.setAttribute('code', '0');\n  nextSlideElement.setAttribute('displayed', 'false');\n  threadStatusElement.appendChild(nextSlideElement);\n\n  // Current slide\n  const currentSlideElement = document.createElement('div');\n  currentSlideElement.classList.add('css_current_slide');\n  currentSlideElement.setAttribute('code', '0');\n  currentSlideElement.setAttribute('displayed', 'true');\n  threadStatusElement.appendChild(currentSlideElement);\n\n  // Assemble\n  threadBoxElement.appendChild(threadElement);\n  threadBoxElement.appendChild(threadStatusElement);\n\n  return {\n    element: threadBoxElement,\n    id: identifier\n  };\n}\n\nfunction generateElementOfItem(threadBoxIdentifier: string): GeneratedElement {\n  const identifier = generateIdentifier();\n\n  // Main item element\n  const itemElement = document.createElement('div');\n  itemElement.classList.add('css_route_group_item');\n  itemElement.id = identifier;\n  itemElement.setAttribute('stretched', 'false');\n  itemElement.setAttribute('stretching', 'false');\n  itemElement.setAttribute('push-direction', '0'); // 0: normal state, 1: downward, 2: upward\n  itemElement.setAttribute('push-state', '0'); // 0: normal state, 1: compensation , 2: transition\n\n  // Head\n  const headElement = document.createElement('div');\n  headElement.classList.add('css_route_group_item_head');\n\n  // Name\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_route_group_item_name');\n  headElement.appendChild(nameElement);\n\n  // Capsule\n  const capsuleElement = document.createElement('div');\n  capsuleElement.classList.add('css_route_group_item_capsule');\n\n  // Status\n  const statusElement = document.createElement('div');\n  statusElement.classList.add('css_route_group_item_status');\n\n  const nextSlideElement = document.createElement('div');\n  nextSlideElement.classList.add('css_next_slide');\n  nextSlideElement.setAttribute('code', '0');\n  nextSlideElement.setAttribute('displayed', 'false');\n  statusElement.appendChild(nextSlideElement);\n\n  const currentSlideElement = document.createElement('div');\n  currentSlideElement.classList.add('css_current_slide');\n  currentSlideElement.setAttribute('code', '0');\n  currentSlideElement.setAttribute('displayed', 'true');\n  statusElement.appendChild(currentSlideElement);\n\n  capsuleElement.appendChild(statusElement);\n\n  // Stretch button\n  const stretchElement = document.createElement('div');\n  stretchElement.classList.add('css_route_group_item_stretch');\n  stretchElement.innerHTML = getIconHTML('keyboard_arrow_down');\n  stretchElement.onclick = () => {\n    stretchRouteItem(identifier, threadBoxIdentifier);\n  };\n  capsuleElement.appendChild(stretchElement);\n\n  // Capsule separator\n  const capsuleSeparatorElement = document.createElement('div');\n  capsuleSeparatorElement.classList.add('css_route_group_item_capsule_separator');\n  capsuleElement.appendChild(capsuleSeparatorElement);\n\n  headElement.appendChild(capsuleElement);\n\n  // Body\n  const bodyElement = document.createElement('div');\n  bodyElement.classList.add('css_route_group_item_body');\n  bodyElement.setAttribute('displayed', 'false');\n\n  // Buttons\n  const buttonsElement = document.createElement('div');\n  buttonsElement.classList.add('css_route_group_item_buttons');\n\n  // Tab: 公車\n  const tabBusElement = document.createElement('div');\n  tabBusElement.classList.add('css_route_group_item_button');\n  tabBusElement.setAttribute('highlighted', 'true');\n  tabBusElement.setAttribute('type', 'tab');\n  tabBusElement.setAttribute('code', '0');\n  tabBusElement.onclick = () => {\n    switchRouteBodyTab(identifier, 0);\n  };\n\n  const tabBusIconElement = document.createElement('div');\n  tabBusIconElement.classList.add('css_route_group_item_button_icon');\n  tabBusIconElement.innerHTML = getIconHTML('directions_bus');\n  tabBusElement.appendChild(tabBusIconElement);\n  tabBusElement.appendChild(document.createTextNode('公車'));\n  buttonsElement.appendChild(tabBusElement);\n\n  // Tab: 抵達時間\n  const tabArrivalElement = document.createElement('div');\n  tabArrivalElement.classList.add('css_route_group_item_button');\n  tabArrivalElement.setAttribute('highlighted', 'false');\n  tabArrivalElement.setAttribute('type', 'tab');\n  tabArrivalElement.setAttribute('code', '1');\n  tabArrivalElement.onclick = () => {\n    switchRouteBodyTab(identifier, 1);\n  };\n\n  const tabArrivalIconElement = document.createElement('div');\n  tabArrivalIconElement.classList.add('css_route_group_item_button_icon');\n  tabArrivalIconElement.innerHTML = getIconHTML('departure_board');\n  tabArrivalElement.appendChild(tabArrivalIconElement);\n  tabArrivalElement.appendChild(document.createTextNode('抵達時間'));\n  buttonsElement.appendChild(tabArrivalElement);\n\n  // Tab: 路線\n  const tabRouteElement = document.createElement('div');\n  tabRouteElement.classList.add('css_route_group_item_button');\n  tabRouteElement.setAttribute('highlighted', 'false');\n  tabRouteElement.setAttribute('type', 'tab');\n  tabRouteElement.setAttribute('code', '2');\n  tabRouteElement.onclick = () => {\n    switchRouteBodyTab(identifier, 2);\n  };\n\n  const tabRouteIconElement = document.createElement('div');\n  tabRouteIconElement.classList.add('css_route_group_item_button_icon');\n  tabRouteIconElement.innerHTML = getIconHTML('route');\n  tabRouteElement.appendChild(tabRouteIconElement);\n  tabRouteElement.appendChild(document.createTextNode('路線'));\n  buttonsElement.appendChild(tabRouteElement);\n\n  // Tab: 地點\n  const tabLocationElement = document.createElement('div');\n  tabLocationElement.classList.add('css_route_group_item_button');\n  tabLocationElement.setAttribute('highlighted', 'false');\n  tabLocationElement.setAttribute('type', 'tab');\n  tabLocationElement.setAttribute('code', '3');\n  tabLocationElement.onclick = () => {\n    switchRouteBodyTab(identifier, 3);\n  };\n\n  const tabLocationIconElement = document.createElement('div');\n  tabLocationIconElement.classList.add('css_route_group_item_button_icon');\n  tabLocationIconElement.innerHTML = getIconHTML('location_on');\n  tabLocationElement.appendChild(tabLocationIconElement);\n  tabLocationElement.appendChild(document.createTextNode('地點'));\n  buttonsElement.appendChild(tabLocationElement);\n\n  // Save to folder\n  const saveToFolderElement = document.createElement('div');\n  saveToFolderElement.classList.add('css_route_group_item_button');\n  saveToFolderElement.setAttribute('highlighted', 'false');\n  saveToFolderElement.setAttribute('type', 'save-to-folder');\n  /*\n  saveToFolderElement.onclick = () => {\n    openSaveToFolder('stop-on-route', [identifier, null, null]);\n  };\n  */\n\n  const saveToFolderIconElement = document.createElement('div');\n  saveToFolderIconElement.classList.add('css_route_group_item_button_icon');\n  saveToFolderIconElement.innerHTML = getIconHTML('folder');\n  saveToFolderElement.appendChild(saveToFolderIconElement);\n  saveToFolderElement.appendChild(document.createTextNode('儲存'));\n  buttonsElement.appendChild(saveToFolderElement);\n\n  // Schedule notification\n  const scheduleNotificationElement = document.createElement('div');\n  scheduleNotificationElement.classList.add('css_route_group_item_button');\n  scheduleNotificationElement.setAttribute('highlighted', 'false');\n  scheduleNotificationElement.setAttribute('type', 'schedule-notification');\n  scheduleNotificationElement.setAttribute('enabled', 'true');\n  /*\n  scheduleNotificationElement.onclick = () => {\n    openScheduleNotification('stop-on-route', [identifier, null, null, null]);\n  };\n  */\n\n  const scheduleNotificationIconElement = document.createElement('div');\n  scheduleNotificationIconElement.classList.add('css_route_group_item_button_icon');\n  scheduleNotificationIconElement.innerHTML = getIconHTML('notifications');\n  scheduleNotificationElement.appendChild(scheduleNotificationIconElement);\n  scheduleNotificationElement.appendChild(document.createTextNode('到站通知'));\n  buttonsElement.appendChild(scheduleNotificationElement);\n\n  bodyElement.appendChild(buttonsElement);\n\n  // Buses\n  const busesElement = document.createElement('div');\n  busesElement.classList.add('css_route_group_item_buses');\n  busesElement.setAttribute('displayed', 'true');\n  bodyElement.appendChild(busesElement);\n\n  // Overlapping routes\n  const overlappingRoutesElement = document.createElement('div');\n  overlappingRoutesElement.classList.add('css_route_group_item_overlapping_routes');\n  overlappingRoutesElement.setAttribute('displayed', 'false');\n  bodyElement.appendChild(overlappingRoutesElement);\n\n  // Bus arrival times\n  const busArrivalTimesElement = document.createElement('div');\n  busArrivalTimesElement.classList.add('css_route_group_item_bus_arrival_times');\n  busArrivalTimesElement.setAttribute('displayed', 'false');\n  bodyElement.appendChild(busArrivalTimesElement);\n\n  // Nearby locations\n  const nearbyLocationsElement = document.createElement('div');\n  nearbyLocationsElement.classList.add('css_route_group_item_nearby_locations');\n  nearbyLocationsElement.setAttribute('displayed', 'false');\n  bodyElement.appendChild(nearbyLocationsElement);\n\n  // Assemble\n  itemElement.appendChild(headElement);\n  itemElement.appendChild(bodyElement);\n\n  return {\n    element: itemElement,\n    id: identifier\n  };\n}\n\nfunction generateElementOfGroup(): GeneratedElement {\n  const element = document.createElement('div');\n  element.classList.add('css_route_group');\n\n  const tracksElement = document.createElement('div');\n  tracksElement.classList.add('css_route_group_tracks');\n\n  const threadTrackElement = document.createElement('div');\n  threadTrackElement.classList.add('css_route_group_threads_track');\n\n  const threadBoxSpace = document.createElement('div');\n  threadBoxSpace.classList.add('css_route_group_thread_box_space_top');\n\n  const itemsTrackElement = document.createElement('div');\n  itemsTrackElement.classList.add('css_route_group_items_track');\n\n  const itemSpaceElement = document.createElement('div');\n  itemSpaceElement.classList.add('css_route_group_item_space_top');\n\n  itemsTrackElement.appendChild(itemSpaceElement);\n  threadTrackElement.appendChild(threadBoxSpace);\n  tracksElement.appendChild(threadTrackElement);\n  tracksElement.appendChild(itemsTrackElement);\n  element.appendChild(tracksElement);\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nfunction generateElementOfTab(): GeneratedElement {\n  const element = document.createElement('div');\n  element.classList.add('css_route_group_tab');\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nfunction setUpRouteFieldSkeletonScreen(): void {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const WindowSize = querySize('window');\n  const FieldWidth = WindowSize.width;\n  const FieldHeight = WindowSize.height;\n  const defaultItemQuantity: number = Math.floor(FieldHeight / 50) + 5;\n  const defaultGroupQuantity = 2;\n  let groupedItems: IntegratedRoute['groupedItems'] = {};\n  for (let i = 0; i < defaultGroupQuantity; i++) {\n    const groupKey: string = `g_${i}`;\n    groupedItems[groupKey] = [];\n    for (let j = 0; j < defaultItemQuantity; j++) {\n      groupedItems[groupKey].push({\n        name: '',\n        goBack: '0',\n        status: { code: 8, text: '', time: -6 },\n        buses: [],\n        overlappingRoutes: [],\n        busArrivalTimes: [],\n        nearbyLocations: [],\n        sequence: j,\n        position: {\n          longitude: 0,\n          latitude: 0\n        },\n        nearest: false,\n        progress: 0,\n        segmentBuffer: {\n          isSegmentBuffer: false,\n          isStartingPoint: false,\n          isEndingPoint: false\n        },\n        id: 0\n      });\n    }\n  }\n  updateRouteField(\n    {\n      groupedItems: groupedItems,\n      groupQuantity: defaultGroupQuantity,\n      itemQuantity: {\n        g_0: defaultItemQuantity,\n        g_1: defaultItemQuantity\n      },\n      RouteName: '載入中',\n      RouteEndPoints: {\n        RouteDeparture: '載入中',\n        RouteDestination: '載入中'\n      },\n      RouteID: 0,\n      PathAttributeId: [],\n      dataUpdateTime: 0\n    },\n    true,\n    playing_animation\n  );\n}\n\nfunction updateRouteField(integration: IntegratedRoute, skeletonScreen: boolean, animation: boolean): void {\n  function updateItem(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem, previousItem: integratedStopItem | null, skeletonScreen: boolean, animation: boolean): void {\n    function updateStatus(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem, skeletonScreen: boolean, animation: boolean): void {\n      const thisThreadStatusElement = elementQuerySelector(thisThreadBoxElement, '.css_route_group_thread_status');\n      const currentThreadSlideElement = elementQuerySelector(thisThreadStatusElement, '.css_current_slide');\n      const nextThreadSlideElement = elementQuerySelector(thisThreadStatusElement, '.css_next_slide');\n\n      const thisItemStatusElement = elementQuerySelector(thisItemElement, '.css_route_group_item_status');\n      const currentItemSlideElement = elementQuerySelector(thisItemStatusElement, '.css_current_slide');\n      const nextItemSlideElememt = elementQuerySelector(thisItemStatusElement, '.css_next_slide');\n\n      nextThreadSlideElement.setAttribute('code', thisItem.status.code.toString());\n\n      nextItemSlideElememt.setAttribute('code', thisItem.status.code.toString());\n      nextItemSlideElememt.innerText = thisItem.status.text;\n\n      if (!skeletonScreen) {\n        if (animation) {\n          const thisItemElementRect = thisItemElement.getBoundingClientRect();\n          const top = thisItemElementRect.top;\n          const left = thisItemElementRect.left;\n          const bottom = thisItemElementRect.bottom;\n          const right = thisItemElementRect.right;\n          const windowWidth = window.innerWidth;\n          const windowHeight = window.innerHeight;\n          if (bottom > 0 && top < windowHeight && right > 0 && left < windowWidth) {\n            currentThreadSlideElement.addEventListener(\n              'animationend',\n              function () {\n                currentThreadSlideElement.setAttribute('code', thisItem.status.code.toString());\n                currentThreadSlideElement.classList.remove('css_slide_fade_out');\n                nextThreadSlideElement.setAttribute('displayed', 'false');\n              },\n              { once: true }\n            );\n            currentItemSlideElement.addEventListener(\n              'animationend',\n              function () {\n                currentItemSlideElement.setAttribute('code', thisItem.status.code.toString());\n                currentItemSlideElement.innerText = thisItem.status.text;\n                currentItemSlideElement.classList.remove('css_slide_fade_out');\n                nextItemSlideElememt.setAttribute('displayed', 'false');\n              },\n              { once: true }\n            );\n            nextItemSlideElememt.setAttribute('displayed', 'true');\n            nextThreadSlideElement.setAttribute('displayed', 'true');\n            currentThreadSlideElement.classList.add('css_slide_fade_out');\n            currentItemSlideElement.classList.add('css_slide_fade_out');\n            return;\n          }\n        }\n      }\n\n      currentThreadSlideElement.setAttribute('code', thisItem.status.code.toString());\n      currentItemSlideElement.setAttribute('code', thisItem.status.code.toString());\n      currentItemSlideElement.innerText = thisItem.status.text;\n    }\n\n    function updateSegmentBuffer(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem): void {\n      thisItemElement.setAttribute('segment-buffer', booleanToString(thisItem.segmentBuffer.isSegmentBuffer));\n      thisThreadBoxElement.setAttribute('segment-buffer', booleanToString(thisItem.segmentBuffer.isSegmentBuffer));\n    }\n\n    function updateName(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_name').innerText = thisItem.name;\n    }\n\n    function updateBuses(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_buses').innerHTML = thisItem.buses.length === 0 ? '<div class=\"css_route_group_item_buses_message\">目前沒有公車可顯示</div>' : thisItem.buses.map((bus) => `<div class=\"css_route_group_item_bus\" on-this-route=\"${bus.onThisRoute}\"><div class=\"css_route_group_item_bus_title\"><div class=\"css_route_group_item_bus_icon\">${getIconHTML('directions_bus')}</div><div class=\"css_route_group_item_bus_car_number\">${bus.carNumber}</div></div><div class=\"css_route_group_item_bus_attributes\"><div class=\"css_route_group_item_bus_route\">路線：${bus.RouteName}</div><div class=\"css_route_group_item_bus_car_status\">狀態：${bus.status.text}</div><div class=\"css_route_group_item_bus_car_type\">類型：${bus.type}</div></div></div>`).join('');\n    }\n\n    function updateOverlappingRoutes(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_overlapping_routes').innerHTML = thisItem.overlappingRoutes.length === 0 ? '<div class=\"css_route_group_item_overlapping_route_message\">目前沒有路線可顯示</div>' : thisItem.overlappingRoutes.map((route) => `<div class=\"css_route_group_item_overlapping_route\"><div class=\"css_route_group_item_overlapping_route_title\"><div class=\"css_route_group_item_overlapping_route_icon\">${getIconHTML('route')}</div><div class=\"css_route_group_item_overlapping_route_name\">${route.name}</div></div><div class=\"css_route_group_item_overlapping_route_endpoints\">${route.RouteEndPoints.html}</div><div class=\"css_route_group_item_overlapping_route_actions\"><div class=\"css_route_group_item_overlapping_route_action_button\" onclick=\"bus.route.switchRoute(${route.RouteID}, [${route.PathAttributeId.join(',')}])\">查看路線</div><div class=\"css_route_group_item_overlapping_route_action_button\" onclick=\"bus.folder.openSaveToFolder('route-on-route', [${route.RouteID}])\">儲存路線</div></div></div>`).join('');\n    }\n\n    function updateBusArrivalTimes(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_bus_arrival_times').innerHTML = thisItem.busArrivalTimes.length === 0 ? '<div class=\"css_route_group_item_bus_arrival_message\">目前沒有抵達時間可顯示</div>' : thisItem.busArrivalTimes.map((busArrivalTime) => `<div class=\"css_route_group_item_bus_arrival_time\"><div class=\"css_route_group_item_bus_arrival_time_title\"><div class=\"css_route_group_item_bus_arrival_time_icon\">${getIconHTML('calendar_view_day')}</div><div class=\"css_route_group_item_bus_arrival_time_personal_schedule_name\">${busArrivalTime.personalSchedule.name}</div><div class=\"css_route_group_item_bus_arrival_time_personal_schedule_time\">週${indexToDay(busArrivalTime.day).name} ${timeObjectToString(busArrivalTime.personalSchedule.period.start)} - ${timeObjectToString(busArrivalTime.personalSchedule.period.end)}</div></div><div class=\"css_route_group_item_bus_arrival_time_chart\">${busArrivalTime.chart}</div></div>`).join('');\n    }\n\n    function updateNearbyLocations(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_nearby_locations').innerHTML = thisItem.nearbyLocations.length === 0 ? '<div class=\"css_route_group_item_nearby_locations_message\">目前沒有地點可顯示</div>' : thisItem.nearbyLocations.map((nearbyLocation) => `<div class=\"css_route_group_item_nearby_location\"><div class=\"css_route_group_item_nearby_location_title\"><div class=\"css_route_group_item_nearby_location_icon\">${getIconHTML('location_on')}</div><div class=\"css_route_group_item_nearby_location_name\">${nearbyLocation.name}</div></div><div class=\"css_route_group_item_nearby_location_distance\">${nearbyLocation.distance}公尺</div><div class=\"css_route_group_item_nearby_location_actions\"><div class=\"css_route_group_item_nearby_location_action_button\" onclick=\"bus.location.openLocation('${nearbyLocation.hash}')\">查看地點</div><div class=\"css_route_group_item_nearby_location_action_button\" onclick=\"bus.folder.openSaveToFolder('location-on-route', [${nearbyLocation.hash}])\">儲存地點</div></div></div>`).join('');\n    }\n\n    function updateNearest(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem): void {\n      thisItemElement.setAttribute('nearest', booleanToString(thisItem.nearest));\n      thisThreadBoxElement.setAttribute('nearest', booleanToString(thisItem.nearest));\n    }\n\n    function updateThread(thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem, previousItem: integratedStopItem | null, skeletonScreen: boolean, animation: boolean): void {\n      const previousProgress = previousItem?.progress || 0;\n      const thisProgress = thisItem?.progress || 0;\n      const thisThreadProgressElement = elementQuerySelector(thisThreadBoxElement, '.css_route_group_thread .css_route_group_thread_progress');\n      if (!skeletonScreen) {\n        if (animation) {\n          if (previousProgress !== 0 && thisProgress === 0 && Math.abs(thisProgress - previousProgress) > 0) {\n            thisThreadProgressElement.style.setProperty('--b-cssvar-thread-progress-translate-y', '100%');\n            thisThreadProgressElement.addEventListener(\n              'transitionend',\n              function () {\n                thisThreadProgressElement.setAttribute('displayed', 'false');\n                thisThreadProgressElement.style.setProperty('--b-cssvar-thread-progress-translate-y', '-100%');\n              },\n              { once: true }\n            );\n            return;\n          }\n        }\n      }\n      if (thisProgress > 0) {\n        thisThreadProgressElement.setAttribute('displayed', 'true');\n        thisThreadProgressElement.style.setProperty('--b-cssvar-thread-progress-translate-y', `${(thisProgress - 1) * 100}%`);\n      } else {\n        thisThreadProgressElement.setAttribute('displayed', 'false');\n      }\n    }\n\n    function updateStretch(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, skeletonScreen: boolean): void {\n      if (skeletonScreen) {\n        const thisItemBodyElement = elementQuerySelector(thisItemElement, '.css_route_group_item_body');\n        thisItemBodyElement.setAttribute('displayed', 'false');\n        thisItemElement.setAttribute('stretched', 'false');\n        thisThreadBoxElement.setAttribute('stretched', 'false');\n      }\n    }\n\n    function updateAnimation(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, animation: boolean): void {\n      thisItemElement.setAttribute('animation', booleanToString(animation));\n      thisThreadBoxElement.setAttribute('animation', booleanToString(animation));\n    }\n\n    function updateSkeletonScreen(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, skeletonScreen: boolean): void {\n      thisItemElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n      thisThreadBoxElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    }\n\n    function updateSaveToFolderButton(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      const saveToFolderButtonElement = elementQuerySelector(thisItemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"save-to-folder\"]');\n      saveToFolderButtonElement.onclick = function () {\n        openSaveToFolder('stop-on-route', [thisItemElement.id, thisItem.id, integration.RouteID]);\n      };\n      isFolderContentSaved('stop', thisItem.id).then((e) => {\n        saveToFolderButtonElement.setAttribute('highlighted', booleanToString(e));\n      });\n    }\n\n    function updateScheduleNotificationButton(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      const scheduleNotificationButtonElement = elementQuerySelector(thisItemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"schedule-notification\"]');\n      scheduleNotificationButtonElement.onclick = function () {\n        openScheduleNotification('stop-on-route', [thisItemElement.id, thisItem.id, integration.RouteID, thisItem.status.time]);\n      };\n      const havingNotifcationSchedules = stopHasNotifcationSchedules(thisItem.id);\n      scheduleNotificationButtonElement.setAttribute('highlighted', booleanToString(havingNotifcationSchedules));\n    }\n\n    if (previousItem === null) {\n      updateStatus(thisItemElement, thisThreadBoxElement, thisItem, skeletonScreen, animation);\n      updateName(thisItemElement, thisItem);\n      updateBuses(thisItemElement, thisItem);\n      updateOverlappingRoutes(thisItemElement, thisItem);\n      updateBusArrivalTimes(thisItemElement, thisItem);\n      updateNearbyLocations(thisItemElement, thisItem);\n      updateSegmentBuffer(thisItemElement, thisThreadBoxElement, thisItem);\n      updateNearest(thisItemElement, thisThreadBoxElement, thisItem);\n      updateThread(thisThreadBoxElement, thisItem, previousItem, skeletonScreen, animation);\n      updateStretch(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      updateAnimation(thisItemElement, thisThreadBoxElement, animation);\n      updateSkeletonScreen(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      updateSaveToFolderButton(thisItemElement, thisItem);\n      updateScheduleNotificationButton(thisItemElement, thisItem);\n    } else {\n      if (thisItem.status.time !== previousItem.status.time) {\n        updateStatus(thisItemElement, thisThreadBoxElement, thisItem, skeletonScreen, animation);\n        updateScheduleNotificationButton(thisItemElement, thisItem);\n      }\n      if (!compareThings(previousItem.buses, thisItem.buses)) {\n        updateBuses(thisItemElement, thisItem);\n      }\n      if (!compareThings(previousItem.busArrivalTimes, thisItem.busArrivalTimes)) {\n        updateBusArrivalTimes(thisItemElement, thisItem);\n      }\n      if (previousItem.nearest !== thisItem.nearest) {\n        updateNearest(thisItemElement, thisThreadBoxElement, thisItem);\n      }\n      if (previousItem.progress !== thisItem.progress) {\n        updateThread(thisThreadBoxElement, thisItem, previousItem, skeletonScreen, animation);\n      }\n      if (previousItem.id !== thisItem.id) {\n        updateName(thisItemElement, thisItem);\n        updateSegmentBuffer(thisItemElement, thisThreadBoxElement, thisItem);\n        updateOverlappingRoutes(thisItemElement, thisItem);\n        updateNearbyLocations(thisItemElement, thisItem);\n        updateSaveToFolderButton(thisItemElement, thisItem);\n        updateScheduleNotificationButton(thisItemElement, thisItem);\n      }\n      if (previousAnimation !== animation) {\n        updateAnimation(thisItemElement, thisThreadBoxElement, animation);\n      }\n      if (previousSkeletonScreen !== skeletonScreen) {\n        updateStretch(thisItemElement, thisThreadBoxElement, skeletonScreen);\n        updateSkeletonScreen(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      }\n    }\n  }\n\n  const WindowSize = querySize('window');\n  const FieldWidth = WindowSize.width;\n  const FieldHeight = WindowSize.height;\n\n  const groupQuantity = integration.groupQuantity;\n  const itemQuantity = integration.itemQuantity;\n  const groupedItems = integration.groupedItems;\n\n  routeSliding_groupQuantity = groupQuantity;\n  routeSliding_fieldWidth = FieldWidth;\n  routeSliding_fieldHeight = FieldHeight;\n\n  let cumulativeOffset = 0;\n  for (let i = 0; i < groupQuantity; i++) {\n    const width = getTextWidth([integration.RouteEndPoints.RouteDestination, integration.RouteEndPoints.RouteDeparture, ''].map((e) => `往${e}`)[i], 500, '17px', `\"Noto Sans TC\", sans-serif`) + tabPadding;\n    routeSliding_groupStyles[`g_${i}`] = {\n      width: width,\n      offset: cumulativeOffset\n    };\n    cumulativeOffset += width;\n  }\n  const offset = routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].offset * -1 + routeSliding_fieldWidth * 0.5 - routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].width * 0.5;\n  if (!routeSliding_sliding) {\n    updateRouteCSS(routeSliding_groupQuantity, offset, routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].width - tabPadding, routeSliding_initialIndex);\n  }\n\n  if (previousSkeletonScreen !== skeletonScreen) {\n    RouteNameElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    RouteGroupTabsElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    RouteGroupTabLineTrackElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n  }\n\n  if (previousAnimation !== animation) {\n    RouteNameElement.setAttribute('animation', booleanToString(animation));\n    RouteGroupTabsElement.setAttribute('animation', booleanToString(animation));\n    RouteGroupTabLineTrackElement.setAttribute('animation', booleanToString(animation));\n  }\n\n  if (previousIntegration?.RouteID !== integration.RouteID) {\n    RouteNameSpanElement.innerText = integration.RouteName;\n    RouteButtonRightElement.onclick = function () {\n      openRouteDetails(integration.RouteID, integration.PathAttributeId);\n    };\n  }\n\n  const currentGroupSeatQuantity = elementQuerySelectorAll(RouteGroupsElement, '.css_route_group').length;\n  if (groupQuantity !== currentGroupSeatQuantity) {\n    const capacity = currentGroupSeatQuantity - groupQuantity;\n    if (capacity < 0) {\n      const newGroupsFragment = new DocumentFragment();\n      const newTabsFragment = new DocumentFragment();\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const newGroupElement = generateElementOfGroup();\n        newGroupsFragment.appendChild(newGroupElement.element);\n        const newTabElement = generateElementOfTab();\n        newTabsFragment.appendChild(newTabElement.element);\n      }\n      RouteGroupsElement.append(newGroupsFragment);\n      RouteGroupTabsTrayElement.append(newTabsFragment);\n    } else {\n      const GroupElements = elementQuerySelectorAll(RouteGroupsElement, '.css_route_group');\n      const TabElements = elementQuerySelectorAll(RouteGroupTabsTrayElement, '.css_route_group_tab');\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const groupIndex = currentGroupSeatQuantity - 1 - o;\n        GroupElements[groupIndex].remove();\n        TabElements[groupIndex].remove();\n      }\n    }\n  }\n\n  const RouteGroupElements = elementQuerySelectorAll(RouteGroupsElement, '.css_route_group');\n\n  for (let i = 0; i < groupQuantity; i++) {\n    const groupKey = `g_${i}`;\n    const thisGroupElement = RouteGroupElements[i];\n    const thisGroupItemsTrackElement = elementQuerySelector(thisGroupElement, '.css_route_group_items_track');\n    const thisGroupThreadsTrackElement = elementQuerySelector(thisGroupElement, '.css_route_group_threads_track');\n    const currentItemSeatQuantity = elementQuerySelectorAll(thisGroupItemsTrackElement, '.css_route_group_item').length;\n    if (itemQuantity[groupKey] !== currentItemSeatQuantity) {\n      const capacity = currentItemSeatQuantity - itemQuantity[groupKey];\n      if (capacity < 0) {\n        const newItemsFragment = new DocumentFragment();\n        const newThreadsFragment = new DocumentFragment();\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const newThreadBoxElement = generateElementOfThreadBox();\n          const newItemElement = generateElementOfItem(newThreadBoxElement.id);\n          newItemsFragment.appendChild(newItemElement.element);\n          newThreadsFragment.appendChild(newThreadBoxElement.element);\n        }\n        thisGroupItemsTrackElement.append(newItemsFragment);\n        thisGroupThreadsTrackElement.append(newThreadsFragment);\n      } else {\n        const thisGroupItemElements = elementQuerySelectorAll(thisGroupItemsTrackElement, '.css_route_group_item');\n        const thisGroupThreadElements = elementQuerySelectorAll(thisGroupThreadsTrackElement, '.css_route_group_thread_box');\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const itemIndex = currentItemSeatQuantity - 1 - o;\n          thisGroupItemElements[itemIndex].remove();\n          thisGroupThreadElements[itemIndex].remove();\n        }\n      }\n    }\n  }\n\n  const TabElements = elementQuerySelectorAll(RouteGroupTabsTrayElement, '.css_route_group_tab');\n  for (let i = 0; i < groupQuantity; i++) {\n    const groupKey = `g_${i}`;\n\n    const thisTabElement = TabElements[i];\n    thisTabElement.innerHTML = [integration.RouteEndPoints.RouteDestination, integration.RouteEndPoints.RouteDeparture, ''].map((e) => `<span>往${e}</span>`)[i];\n    thisTabElement.style.setProperty('--b-cssvar-route-tab-width', `${routeSliding_groupStyles[groupKey].width}px`);\n    thisTabElement.style.setProperty('--b-cssvar-route-tab-index', i.toString());\n\n    const thisGroupElement = RouteGroupElements[i];\n    if (skeletonScreen) {\n      thisGroupElement.scrollTop = 0;\n    }\n\n    const thisGroupItemsTrackElement = elementQuerySelector(thisGroupElement, '.css_route_group_items_track');\n    const thisGroupThreadsTrackElement = elementQuerySelector(thisGroupElement, '.css_route_group_threads_track');\n    const thisGroupItemElements = elementQuerySelectorAll(thisGroupItemsTrackElement, '.css_route_group_item');\n    const thisGroupThreadElements = elementQuerySelectorAll(thisGroupThreadsTrackElement, '.css_route_group_thread_box');\n    for (let j = 0; j < itemQuantity[groupKey]; j++) {\n      const thisItemElement = thisGroupItemElements[j];\n      const thisThreadBoxElement = thisGroupThreadElements[j];\n      const thisItem = groupedItems[groupKey][j];\n      if (previousIntegration.hasOwnProperty('groupedItems')) {\n        if (previousIntegration.groupedItems.hasOwnProperty(groupKey)) {\n          if (previousIntegration.groupedItems[groupKey][j]) {\n            const previousItem = previousIntegration.groupedItems[groupKey][j];\n            updateItem(thisItemElement, thisThreadBoxElement, thisItem, previousItem, skeletonScreen, animation);\n          } else {\n            updateItem(thisItemElement, thisThreadBoxElement, thisItem, null, skeletonScreen, animation);\n          }\n        } else {\n          updateItem(thisItemElement, thisThreadBoxElement, thisItem, null, skeletonScreen, animation);\n        }\n      } else {\n        updateItem(thisItemElement, thisThreadBoxElement, thisItem, null, skeletonScreen, animation);\n      }\n    }\n  }\n\n  previousIntegration = integration;\n  previousAnimation = animation;\n  previousSkeletonScreen = skeletonScreen;\n}\n\nasync function refreshRoute() {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const refresh_interval_setting = getSettingOptionValue('refresh_interval') as SettingSelectOptionRefreshIntervalValue;\n  const busArrivalTimeChartSize = querySize('route-bus-arrival-time-chart');\n  routeRefreshTimer_dynamic = refresh_interval_setting.dynamic;\n  routeRefreshTimer_baseInterval = refresh_interval_setting.baseInterval;\n  routeRefreshTimer_refreshing = true;\n  routeRefreshTimer_currentRequestID = generateIdentifier();\n  RouteUpdateTimerElement.setAttribute('refreshing', 'true');\n  RouteUpdateTimerElement.classList.remove('css_route_update_timer_slide_rtl');\n  document.addEventListener(routeRefreshTimer_currentRequestID, handleDataReceivingProgressUpdates);\n  const integration = await integrateRoute(currentRouteIDSet_RouteID, currentRouteIDSet_PathAttributeId, busArrivalTimeChartSize.width, busArrivalTimeChartSize.height, routeRefreshTimer_currentRequestID);\n  updateRouteField(integration, false, playing_animation);\n  let updateRate = 0;\n  if (routeRefreshTimer_dynamic) {\n    updateRate = await getUpdateRate();\n  }\n  routeRefreshTimer_lastUpdate = new Date().getTime();\n  if (routeRefreshTimer_dynamic) {\n    routeRefreshTimer_nextUpdate = Math.max(routeRefreshTimer_lastUpdate + routeRefreshTimer_minInterval, integration.dataUpdateTime + routeRefreshTimer_baseInterval / updateRate);\n  } else {\n    routeRefreshTimer_nextUpdate = routeRefreshTimer_lastUpdate + routeRefreshTimer_baseInterval;\n  }\n  routeRefreshTimer_dynamicInterval = Math.max(routeRefreshTimer_minInterval, routeRefreshTimer_nextUpdate - routeRefreshTimer_lastUpdate);\n  routeRefreshTimer_refreshing = false;\n  RouteUpdateTimerElement.setAttribute('refreshing', 'false');\n  animateUpdateTimer();\n}\n\nexport function streamRoute(): void {\n  refreshRoute()\n    .then(function () {\n      if (routeRefreshTimer_streaming) {\n        setTimeout(function () {\n          streamRoute();\n        }, Math.max(routeRefreshTimer_minInterval, routeRefreshTimer_nextUpdate - new Date().getTime()));\n      } else {\n        routeRefreshTimer_streamStarted = false;\n      }\n    })\n    .catch((err) => {\n      console.error(err);\n      if (routeRefreshTimer_streaming) {\n        promptMessage(`路線網路連線中斷，將在${routeRefreshTimer_retryInterval / 1000}秒後重試。`, 'error');\n        setTimeout(function () {\n          streamRoute();\n        }, routeRefreshTimer_retryInterval);\n      } else {\n        routeRefreshTimer_streamStarted = false;\n      }\n    });\n}\n\nexport function openRoute(RouteID: number, PathAttributeId: Array<number>): void {\n  pushPageHistory('Route');\n  logRecentView('route', RouteID);\n  currentRouteIDSet_RouteID = RouteID;\n  currentRouteIDSet_PathAttributeId = PathAttributeId;\n  routeSliding_initialIndex = 0;\n  RouteField.setAttribute('displayed', 'true');\n  RouteGroupsElement.scrollLeft = 0;\n  setUpRouteFieldSkeletonScreen();\n  if (!routeRefreshTimer_streaming) {\n    routeRefreshTimer_streaming = true;\n    if (!routeRefreshTimer_streamStarted) {\n      routeRefreshTimer_streamStarted = true;\n      streamRoute();\n    } else {\n      refreshRoute();\n    }\n  }\n  closePreviousPage();\n}\n\nexport function closeRoute(): void {\n  // revokePageHistory('Route');\n  RouteField.setAttribute('displayed', 'false');\n  routeRefreshTimer_streaming = false;\n  openPreviousPage();\n}\n\nexport function switchRoute(RouteID: number, PathAttributeId: Array<number>): void {\n  routeRefreshTimer_streaming = false;\n  openRoute(RouteID, PathAttributeId);\n}\n\nexport function stretchRouteItem(itemElementID: string, threadBoxElementID: string): void {\n  const itemElement = elementQuerySelector(RouteGroupsElement, `.css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  const itemBodyElement = elementQuerySelector(itemElement, '.css_route_group_item_body');\n  const threadBoxElement = elementQuerySelector(RouteGroupsElement, `.css_route_group .css_route_group_tracks .css_route_group_threads_track .css_route_group_thread_box#${threadBoxElementID}`);\n\n  const itemsTrackElement = itemElement.parentElement as HTMLElement;\n  const threadTrackElement = threadBoxElement.parentElement as HTMLElement;\n\n  const elementsBelowThreadBoxElement = getElementsBelow(threadBoxElement, 'css_route_group_thread_box');\n  const elementsBelowItemElement = getElementsBelow(itemElement, 'css_route_group_item');\n\n  const elementsBelowLength = elementsBelowItemElement.length; // = elementsBelowThreadBoxElement.length\n\n  const itemsTrackElementRect = itemsTrackElement.getBoundingClientRect();\n  const itemElementRect = itemElement.getBoundingClientRect();\n  const threadTrackElementRect = threadTrackElement.getBoundingClientRect();\n  const threadBoxElementRect = threadBoxElement.getBoundingClientRect();\n\n  // const threadBoxElementX = threadBoxElementRect.left - threadTrackElementRect.left;\n  const threadBoxElementY = threadBoxElementRect.top - threadTrackElementRect.top;\n\n  // const itemElementX = itemElementRect.left - itemsTrackElementRect.left;\n  const itemElementY = itemElementRect.top - itemsTrackElementRect.top; // itemElementRect.top + scrollTop - (itemsTrackElementRect.top + scrollTop)\n\n  const stretched = itemElement.getAttribute('stretched') === 'true' ? true : false;\n  const animation = itemElement.getAttribute('animation') === 'true' ? true : false;\n\n  if (animation) {\n    const pushDirection = stretched ? '2' : '1';\n\n    // Separate the elements from the document flow while keeping its position\n    threadBoxElement.setAttribute('stretching', 'true');\n    // threadBoxElement.style.setProperty('--b-cssvar-css-route-group-thread-box-x', `${threadBoxElementX}px`);\n    threadBoxElement.style.setProperty('--b-cssvar-css-route-group-thread-box-y', `${threadBoxElementY}px`);\n\n    itemElement.setAttribute('stretching', 'true');\n    // itemElement.style.setProperty('--b-cssvar-css-route-group-item-x', `${itemElementX}px`);\n    itemElement.style.setProperty('--b-cssvar-css-route-group-item-y', `${itemElementY}px`);\n\n    // Set push direction and push state\n    for (let i = 0; i < elementsBelowLength; i++) {\n      const thisItemElement = elementsBelowItemElement[i];\n      const thisThreadBoxElement = elementsBelowThreadBoxElement[i];\n      // thisThreadBoxElement.style.setProperty('--b-cssvar-css-route-group-thread-z-index', (elementsBelowLength - i - 1).toString());\n      thisThreadBoxElement.style.setProperty('--b-cssvar-css-route-group-thread-z-index', (-1 * i - 1).toString());\n      thisThreadBoxElement.setAttribute('push-direction', pushDirection);\n      thisThreadBoxElement.setAttribute('push-state', '1');\n      thisItemElement.setAttribute('push-direction', pushDirection);\n      thisItemElement.setAttribute('push-state', '1');\n    }\n\n    itemElement.addEventListener(\n      'transitionend',\n      function () {\n        // Reset the push direction and push state\n        for (let i = 0; i < elementsBelowLength; i++) {\n          const thisItemElement = elementsBelowItemElement[i];\n          const thisThreadBoxElement = elementsBelowThreadBoxElement[i];\n          thisThreadBoxElement.setAttribute('push-direction', '0');\n          thisThreadBoxElement.setAttribute('push-state', '0');\n          thisItemElement.setAttribute('push-direction', '0');\n          thisItemElement.setAttribute('push-state', '0');\n        }\n        // Deposit the element\n        threadBoxElement.setAttribute('stretching', 'false');\n        itemElement.setAttribute('stretching', 'false');\n      },\n      { once: true }\n    );\n\n    itemElement.addEventListener(\n      'transitionstart',\n      function () {\n        // Transition the elements below\n        for (let i = 0; i < elementsBelowLength; i++) {\n          const thisItemElement = elementsBelowItemElement[i];\n          const thisThreadBoxElement = elementsBelowThreadBoxElement[i];\n          thisThreadBoxElement.setAttribute('push-state', '2');\n          thisItemElement.setAttribute('push-state', '2');\n        }\n      },\n      { once: true }\n    );\n  }\n\n  // Switch the state of the stretching element\n  if (stretched) {\n    if (animation) {\n      itemBodyElement.addEventListener(\n        'transitionend',\n        function () {\n          itemBodyElement.setAttribute('displayed', 'false');\n        },\n        { once: true }\n      );\n    } else {\n      itemBodyElement.setAttribute('displayed', 'false');\n    }\n    itemElement.setAttribute('stretched', 'false');\n    threadBoxElement.setAttribute('stretched', 'false');\n  } else {\n    itemBodyElement.setAttribute('displayed', 'true');\n    itemElement.setAttribute('stretched', 'true');\n    threadBoxElement.setAttribute('stretched', 'true');\n  }\n}\n\nexport function switchRouteBodyTab(itemID: string, tabCode: number): void {\n  const itemElement = elementQuerySelector(RouteGroupsElement, `.css_route_group_item#${itemID}`);\n  const buttons = elementQuerySelector(itemElement, '.css_route_group_item_buttons');\n  const button = elementQuerySelectorAll(buttons, '.css_route_group_item_button[highlighted=\"true\"][type=\"tab\"]');\n  for (const t of button) {\n    t.setAttribute('highlighted', 'false');\n  }\n  elementQuerySelector(buttons, `.css_route_group_item_button[code=\"${tabCode}\"]`).setAttribute('highlighted', 'true');\n  switch (tabCode) {\n    case 0:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'true');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_nearby_locations').setAttribute('displayed', 'false');\n      break;\n    case 1:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'true');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_nearby_locations').setAttribute('displayed', 'false');\n      break;\n    case 2:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'true');\n      elementQuerySelector(itemElement, '.css_route_group_item_nearby_locations').setAttribute('displayed', 'false');\n      break;\n    case 3:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_nearby_locations').setAttribute('displayed', 'true');\n      break;\n    default:\n      break;\n  }\n}\n"],"names":["RouteField","documentQuerySelector","RouteHeadElement","elementQuerySelector","RouteNameElement","RouteNameSpanElement","RouteButtonRightElement","RouteUpdateTimerElement","RouteGroupTabsElement","RouteGroupTabsTrayElement","RouteGroupTabLineTrackElement","RouteGroupTabLineElement","RouteGroupsElement","previousIntegration","previousAnimation","previousSkeletonScreen","routeSliding_initialIndex","routeSliding_targetIndex","routeSliding_groupQuantity","routeSliding_groupStyles","routeSliding_fieldWidth","routeSliding_sliding","routeRefreshTimer_retryInterval","routeRefreshTimer_baseInterval","routeRefreshTimer_minInterval","routeRefreshTimer_dynamicInterval","routeRefreshTimer_dynamic","routeRefreshTimer_lastUpdate","routeRefreshTimer_nextUpdate","routeRefreshTimer_currentRequestID","routeRefreshTimer_refreshing","routeRefreshTimer_streaming","routeRefreshTimer_streamStarted","currentRouteIDSet_RouteID","currentRouteIDSet_PathAttributeId","tabPadding","initializeRouteSliding","addEventListener","Math","round","scrollLeft","passive","event","currentIndex","target","initialSize","width","offset","targetSize","tabWidth","abs","updateRouteCSS","groupQuantity","tabLineWidth","percentage","style","setProperty","toString","toFixed","handleDataReceivingProgressUpdates","CustomEvent","offsetRatio","detail","progress","stage","document","removeEventListener","generateElementOfThreadBox","identifier","generateIdentifier","threadBoxElement","createElement","classList","add","id","setAttribute","threadElement","threadProgressElement","appendChild","threadStatusElement","nextSlideElement","currentSlideElement","element","generateElementOfItem","threadBoxIdentifier","itemElement","headElement","nameElement","capsuleElement","statusElement","stretchElement","innerHTML","getIconHTML","onclick","itemElementID","threadBoxElementID","itemBodyElement","itemsTrackElement","parentElement","threadTrackElement","elementsBelowThreadBoxElement","getElementsBelow","elementsBelowItemElement","elementsBelowLength","length","itemsTrackElementRect","getBoundingClientRect","itemElementRect","threadTrackElementRect","threadBoxElementY","top","itemElementY","stretched","getAttribute","animation","pushDirection","i","thisItemElement","thisThreadBoxElement","once","stretchRouteItem","capsuleSeparatorElement","bodyElement","buttonsElement","tabBusElement","switchRouteBodyTab","tabBusIconElement","createTextNode","tabArrivalElement","tabArrivalIconElement","tabRouteElement","tabRouteIconElement","tabLocationElement","tabLocationIconElement","saveToFolderElement","saveToFolderIconElement","scheduleNotificationElement","scheduleNotificationIconElement","busesElement","overlappingRoutesElement","busArrivalTimesElement","nearbyLocationsElement","generateElementOfGroup","tracksElement","threadBoxSpace","itemSpaceElement","updateRouteField","integration","skeletonScreen","_previousIntegration","updateItem","thisItem","previousItem","updateStatus","thisThreadStatusElement","currentThreadSlideElement","nextThreadSlideElement","thisItemStatusElement","currentItemSlideElement","nextItemSlideElememt","status","code","innerText","text","thisItemElementRect","left","bottom","right","windowWidth","window","innerWidth","windowHeight","innerHeight","remove","updateSegmentBuffer","booleanToString","segmentBuffer","isSegmentBuffer","updateName","name","updateBuses","buses","map","bus","onThisRoute","carNumber","RouteName","type","join","updateOverlappingRoutes","overlappingRoutes","route","RouteEndPoints","html","RouteID","PathAttributeId","updateBusArrivalTimes","busArrivalTimes","busArrivalTime","personalSchedule","indexToDay","day","timeObjectToString","period","start","end","chart","updateNearbyLocations","nearbyLocations","nearbyLocation","distance","hash","updateNearest","nearest","updateThread","previousProgress","thisProgress","thisThreadProgressElement","updateStretch","updateAnimation","updateSkeletonScreen","updateSaveToFolderButton","saveToFolderButtonElement","openSaveToFolder","isFolderContentSaved","then","e","updateScheduleNotificationButton","scheduleNotificationButtonElement","openScheduleNotification","time","havingNotifcationSchedules","stopHasNotifcationSchedules","compareThings","WindowSize","querySize","FieldWidth","FieldHeight","height","itemQuantity","groupedItems","cumulativeOffset","getTextWidth","RouteDestination","RouteDeparture","openRouteDetails","currentGroupSeatQuantity","elementQuerySelectorAll","capacity","newGroupsFragment","DocumentFragment","newTabsFragment","o","newGroupElement","newTabElement","append","GroupElements","TabElements","groupIndex","RouteGroupElements","groupKey","thisGroupElement","thisGroupItemsTrackElement","thisGroupThreadsTrackElement","currentItemSeatQuantity","newItemsFragment","newThreadsFragment","newThreadBoxElement","newItemElement","thisGroupItemElements","thisGroupThreadElements","itemIndex","thisTabElement","scrollTop","j","hasOwnProperty","refreshRoute","_refreshRoute","apply","arguments","playing_animation","getSettingOptionValue","refresh_interval_setting","busArrivalTimeChartSize","dynamic","baseInterval","integrateRoute","updateRate","getUpdateRate","Date","getTime","max","dataUpdateTime","streamRoute","setTimeout","err","promptMessage","openRoute","pushPageHistory","logRecentView","defaultItemQuantity","floor","push","goBack","sequence","position","longitude","latitude","isStartingPoint","isEndingPoint","g_0","g_1","setUpRouteFieldSkeletonScreen","closePreviousPage","closeRoute","openPreviousPage","switchRoute","itemID","tabCode","_step","buttons","_iterator","_createForOfIteratorHelper","s","n","done","value","f"],"sourceRoot":""}