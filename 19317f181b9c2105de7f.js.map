{"version":3,"file":"19317f181b9c2105de7f.js","mappings":"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","sources":["webpack://bus/./src/interface/folder-creator/index.ts","webpack://bus/./src/interface/folder-icon-selector/index.ts","webpack://bus/./src/interface/folder-manager/index.ts","webpack://bus/./src/interface/folder-editor/index.ts"],"sourcesContent":["import { createFolder } from '../../data/folder/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { openFolderIconSelector } from '../folder-icon-selector/index';\nimport { closePreviousPage, openPreviousPage, pushPageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst FolderCreatorField = documentQuerySelector('.css_folder_creator_field');\nconst FolderCreatorBodyElement = elementQuerySelector(FolderCreatorField, '.css_folder_creator_body');\nconst FolderCreatorGroupsElement = elementQuerySelector(FolderCreatorBodyElement, '.css_folder_creator_groups');\nconst NameInputElement = elementQuerySelector(FolderCreatorGroupsElement, '.css_folder_creator_group[group=\"folder-name\"] .css_folder_creator_group_body input');\nconst IconInputElement = elementQuerySelector(FolderCreatorGroupsElement, '.css_folder_creator_group[group=\"folder-icon\"] .css_folder_creator_group_body .css_folder_creator_icon_input input');\nconst OpenFolderIconSelectorElement = elementQuerySelector(FolderCreatorGroupsElement, '.css_folder_creator_field .css_folder_creator_body .css_folder_creator_groups .css_folder_creator_group[group=\"folder-icon\"] .css_folder_creator_group_body .css_folder_creator_icon_input .css_folder_creator_open_folder_icon_selector');\n\nOpenFolderIconSelectorElement.onclick = function () {\n  openFolderIconSelector('creator');\n};\n\nexport function createFormulatedFolder(): void {\n  const name = NameInputElement.value;\n  const icon = IconInputElement.value;\n  createFolder(name, icon).then((e) => {\n    if (e) {\n      closeFolderCreator();\n      promptMessage('已建立資料夾', 'folder');\n    } else {\n      promptMessage('無法建立資料夾', 'error');\n    }\n  });\n}\n\nexport function openFolderCreator(): void {\n  pushPageHistory('FolderCreator');\n  FolderCreatorField.setAttribute('displayed', 'true');\n  closePreviousPage();\n}\n\nexport function closeFolderCreator(): void {\n  // revokePageHistory('FolderCreator');\n  FolderCreatorField.setAttribute('displayed', 'false');\n  openPreviousPage();\n}\n","import { getMaterialSymbols } from '../../data/apis/getMaterialSymbols/index';\nimport { deleteDataReceivingProgress } from '../../data/apis/loader';\nimport { prepareForMaterialSymbolsSearch, searchForMaterialSymbols } from '../../data/search/searchMaterialSymbols';\nimport { generateIdentifier } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { containPhoneticSymbols } from '../../tools/text';\nimport { dataDownloadCompleted } from '../home/index';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\ntype Target = 'editor' | 'creator' | '';\n\nlet currentTarget: Target = '';\n\nconst folderEditorField = documentQuerySelector('.css_folder_editor_field');\nconst folderCreatorField = documentQuerySelector('.css_folder_creator_field');\nconst folderIconSelectorField = documentQuerySelector('.css_folder_icon_selector_field');\n\nfunction generateElementOfSymbol(symbol: string): GeneratedElement {\n  const element = document.createElement('div');\n  element.classList.add('css_folder_icon_selector_symbol');\n  element.onclick = function () {\n    selectFolderIcon(symbol, currentTarget);\n  };\n  element.innerHTML = getIconHTML(symbol);\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nasync function initializeFolderIconSelectorField() {\n  const materialSymbolsElement = elementQuerySelector(folderIconSelectorField, '.css_folder_icon_selector_body .css_folder_icon_selector_material_symbols');\n  materialSymbolsElement.innerHTML = '';\n  const requestID = generateIdentifier();\n  const materialSymbols = await getMaterialSymbols(requestID);\n  deleteDataReceivingProgress(requestID);\n  const fragment = new DocumentFragment();\n  for (const symbol of materialSymbols) {\n    const symbolElement = generateElementOfSymbol(symbol, currentTarget);\n    fragment.appendChild(symbolElement.element);\n  }\n  materialSymbolsElement.append(fragment);\n}\n\nexport function updateMaterialSymbolsSearchResult(query: string): void {\n  const materialSymbolsSearchResultsElement = elementQuerySelector(folderIconSelectorField, '.css_folder_icon_selector_body .css_folder_icon_selector_material_symbols_search_results');\n  const materialSymbolsElement = elementQuerySelector(folderIconSelectorField, '.css_folder_icon_selector_body .css_folder_icon_selector_material_symbols');\n  if (!containPhoneticSymbols(query)) {\n    const searchResults = searchForMaterialSymbols(query, 100);\n    const fragment = new DocumentFragment();\n    for (const result of searchResults) {\n      const symbolElement = generateElementOfSymbol(result.item, currentTarget);\n      fragment.appendChild(symbolElement.element);\n    }\n    materialSymbolsSearchResultsElement.innerHTML = '';\n    materialSymbolsSearchResultsElement.append(fragment);\n    materialSymbolsSearchResultsElement.setAttribute('displayed', searchResults.length > 0 ? 'true' : 'false');\n    materialSymbolsElement.setAttribute('displayed', searchResults.length > 0 ? 'false' : 'true');\n  }\n}\n\nexport function selectFolderIcon(symbol: string): void {\n  let iconInputElement;\n  switch (currentTarget) {\n    case 'editor':\n      iconInputElement = elementQuerySelector(folderEditorField, '.css_folder_editor_body .css_folder_editor_groups .css_folder_editor_group[group=\"folder-icon\"] .css_folder_editor_group_body .css_folder_editor_icon_input input');\n      break;\n    case 'creator':\n      iconInputElement = elementQuerySelector(folderCreatorField, '.css_folder_creator_body .css_folder_creator_groups .css_folder_creator_group[group=\"folder-icon\"] .css_folder_creator_group_body .css_folder_creator_icon_input input');\n      break;\n    default:\n      break;\n  }\n  iconInputElement.value = symbol;\n  closeFolderIconSelector();\n}\n\nexport function openFolderIconSelector(target: Target): void {\n  pushPageHistory('FolderIconSelector');\n  var openFolderIconSelectorElement;\n  switch (target) {\n    case 'editor':\n      currentTarget = 'editor';\n      openFolderIconSelectorElement = elementQuerySelector(folderEditorField, '.css_folder_editor_body .css_folder_editor_groups .css_folder_editor_group[group=\"folder-icon\"] .css_folder_editor_group_body .css_folder_editor_icon_input .css_folder_editor_open_folder_icon_selector');\n      break;\n    case 'creator':\n      currentTarget = 'creator';\n      openFolderIconSelectorElement = elementQuerySelector(folderCreatorField, '.css_folder_creator_body .css_folder_creator_groups .css_folder_creator_group[group=\"folder-icon\"] .css_folder_creator_group_body .css_folder_creator_icon_input .css_folder_creator_open_folder_icon_selector');\n      break;\n    default:\n      break;\n  }\n  if (dataDownloadCompleted) {\n    folderIconSelectorField.setAttribute('displayed', 'true');\n    initializeFolderIconSelectorField(currentTarget);\n    prepareForMaterialSymbolsSearch();\n  } else {\n    promptMessage('資料還在下載中', 'download_for_offline');\n  }\n}\n\nexport function closeFolderIconSelector(): void {\n  revokePageHistory('FolderIconSelector');\n  folderIconSelectorField.setAttribute('displayed', 'false');\n}\n","import { FolderWithContent, listFoldersWithContent } from '../../data/folder/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { openFolderEditor } from '../folder-editor/index';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\n\nconst FolderManagerField = documentQuerySelector('.css_folder_manager_field');\nconst FolderManagerBodyElement = elementQuerySelector(FolderManagerField, '.css_folder_manager_body');\nconst FolderManagerFolderListElement = elementQuerySelector(FolderManagerBodyElement, '.css_folder_manager_folder_list');\n\nfunction generateElementOfItem(item: FolderWithContent): GeneratedElement {\n  // Main container\n  const folderItemElement = document.createElement('div');\n  folderItemElement.classList.add('css_folder_manager_folder_item');\n  folderItemElement.onclick = () => {\n    openFolderEditor(item.id);\n  };\n\n  // Icon\n  const iconElement = document.createElement('div');\n  iconElement.classList.add('css_folder_manager_folder_item_icon');\n  iconElement.innerHTML = getIconHTML(item.icon);\n\n  // Name\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_folder_manager_folder_item_name');\n  nameElement.appendChild(document.createTextNode(item.name));\n\n  // Status\n  const statusElement = document.createElement('div');\n  statusElement.classList.add('css_folder_manager_folder_item_status');\n  statusElement.appendChild(document.createTextNode(String(item.contentLength)));\n\n  // Arrow\n  const arrowElement = document.createElement('div');\n  arrowElement.classList.add('css_folder_manager_folder_item_arrow');\n  arrowElement.innerHTML = getIconHTML('arrow_forward_ios');\n\n  // Assemble\n  folderItemElement.appendChild(iconElement);\n  folderItemElement.appendChild(nameElement);\n  folderItemElement.appendChild(statusElement);\n  folderItemElement.appendChild(arrowElement);\n\n  return {\n    element: folderItemElement,\n    id: ''\n  };\n}\n\nasync function initializeFolderManagerField() {\n  const foldersWithContent = await listFoldersWithContent();\n  FolderManagerFolderListElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  for (const item of foldersWithContent) {\n    const newItemElement = generateElementOfItem(item);\n    fragment.appendChild(newItemElement.element);\n  }\n  FolderManagerFolderListElement.append(fragment);\n}\n\nexport function openFolderManager(): void {\n  pushPageHistory('FolderManager');\n  FolderManagerField.setAttribute('displayed', 'true');\n  initializeFolderManagerField();\n  // closePreviousPage();\n}\n\nexport function closeFolderManager(): void {\n  revokePageHistory('FolderManager');\n  FolderManagerField.setAttribute('displayed', 'false');\n  // openPreviousPage();\n}\n","import { Folder, FolderContent, getFolder, listFolderContent, removeFromFolder, updateFolder, updateFolderContentIndex } from '../../data/folder/index';\nimport { generateIdentifier } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { openFolderIconSelector } from '../folder-icon-selector/index';\nimport { getIconHTML } from '../icons/index';\nimport { MaterialSymbols } from '../icons/material-symbols-type';\nimport { closePreviousPage, GeneratedElement, openPreviousPage, pushPageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst FolderEditorField = documentQuerySelector('.css_folder_editor_field');\nconst FolderEditorHeadElement = elementQuerySelector(FolderEditorField, '.css_folder_editor_head');\nconst LeftButtonElement = elementQuerySelector(FolderEditorHeadElement, '.css_folder_editor_button_left');\nconst FolderEditorBodyElement = elementQuerySelector(FolderEditorField, '.css_folder_editor_body');\nconst FolderEditorGroupsElement = elementQuerySelector(FolderEditorBodyElement, '.css_folder_editor_groups');\nconst NameInputElement = elementQuerySelector(FolderEditorGroupsElement, '.css_folder_editor_group[group=\"folder-name\"] .css_folder_editor_group_body input') as HTMLInputElement;\nconst IconInputElement = elementQuerySelector(FolderEditorGroupsElement, '.css_folder_editor_group[group=\"folder-icon\"] .css_folder_editor_group_body .css_folder_editor_icon_input input') as HTMLInputElement;\nconst OpenFolderIconSelectorElement = elementQuerySelector(FolderEditorGroupsElement, '.css_folder_editor_group[group=\"folder-icon\"] .css_folder_editor_group_body .css_folder_editor_icon_input .css_folder_editor_open_folder_icon_selector');\nconst FolderContentElement = elementQuerySelector(FolderEditorGroupsElement, '.css_folder_editor_group[group=\"folder-content\"] .css_folder_editor_group_body');\n\nOpenFolderIconSelectorElement.onclick = function () {\n  openFolderIconSelector('editor');\n};\n\nfunction generateElementOfItem(folder: Folder, item: FolderContent): GeneratedElement {\n  const identifier = generateIdentifier();\n\n  // Main container\n  const itemElement = document.createElement('div');\n  itemElement.id = identifier;\n  itemElement.classList.add('css_folder_editor_folder_item');\n  itemElement.setAttribute('type', item.type);\n\n  // Icon, context, main text\n  let context = '';\n  let main = '';\n  let icon: MaterialSymbols = '';\n  switch (item.type) {\n    case 'stop':\n      icon = 'location_on';\n      context = `${item.route ? item.route.name : ''} - 往${item.route ? [item.route.endPoints.destination, item.route.endPoints.departure, ''][item.direction ? item.direction : 0] : ''}`;\n      main = item.name;\n      break;\n    case 'route':\n      icon = 'route';\n      context = `${item.endPoints.departure} \\u2194 ${item.endPoints.destination}`;\n      main = item.name;\n      break;\n    case 'location':\n      icon = 'location_on';\n      context = '地點';\n      main = item.name;\n      break;\n    case 'bus':\n      context = '';\n      main = item.name;\n      break;\n    case 'empty':\n      icon = 'lightbulb';\n      context = '提示';\n      main = '沒有內容';\n      break;\n    default:\n      icon = '';\n      context = 'null';\n      main = 'null';\n      break;\n  }\n\n  // Icon element\n  const iconElement = document.createElement('div');\n  iconElement.classList.add('css_folder_editor_folder_item_icon');\n  iconElement.innerHTML = getIconHTML(icon);\n\n  // Context element\n  const contextElement = document.createElement('div');\n  contextElement.classList.add('css_folder_editor_folder_item_context');\n  contextElement.appendChild(document.createTextNode(context));\n\n  // Main element\n  const mainElement = document.createElement('div');\n  mainElement.classList.add('css_folder_editor_folder_item_main');\n  mainElement.appendChild(document.createTextNode(main));\n\n  // Capsule element\n  const capsuleElement = document.createElement('div');\n  capsuleElement.classList.add('css_folder_editor_folder_item_capsule');\n\n  // Sort up control\n  const sortUpElement = document.createElement('div');\n  sortUpElement.classList.add('css_folder_editor_folder_item_sort_control_up');\n  sortUpElement.innerHTML = getIconHTML('keyboard_arrow_down');\n  sortUpElement.onclick = () => {\n    moveItemOnFolderEditor(identifier, folder.id, item.type, item.id, 'up');\n  };\n\n  // Sort down control\n  const sortDownElement = document.createElement('div');\n  sortDownElement.classList.add('css_folder_editor_folder_item_sort_control_down');\n  sortDownElement.innerHTML = getIconHTML('keyboard_arrow_down');\n  sortDownElement.onclick = () => {\n    moveItemOnFolderEditor(identifier, folder.id, item.type, item.id, 'down');\n  };\n\n  // Delete control\n  const deleteElement = document.createElement('div');\n  deleteElement.classList.add('css_folder_editor_folder_item_delete');\n  deleteElement.innerHTML = getIconHTML('delete');\n  deleteElement.onclick = () => {\n    removeItemOnFolderEditor(identifier, folder.id, item.type, item.id);\n  };\n\n  // Capsule separators\n  const separator1Element = document.createElement('div');\n  separator1Element.classList.add('css_folder_editor_folder_item_capsule_separator');\n  const separator2Element = document.createElement('div');\n  separator2Element.classList.add('css_folder_editor_folder_item_capsule_separator');\n\n  // Assemble capsule\n  capsuleElement.appendChild(sortUpElement);\n  capsuleElement.appendChild(sortDownElement);\n  capsuleElement.appendChild(deleteElement);\n  capsuleElement.appendChild(separator1Element);\n  capsuleElement.appendChild(separator2Element);\n\n  // Assemble main item\n  itemElement.appendChild(iconElement);\n  itemElement.appendChild(contextElement);\n  itemElement.appendChild(mainElement);\n  itemElement.appendChild(capsuleElement);\n\n  return {\n    element: itemElement,\n    id: identifier\n  };\n}\n\nfunction updateFolderEditorField(folder: Folder, content: Array<FolderContent>): void {\n  NameInputElement.value = folder.name;\n  IconInputElement.value = folder.icon;\n\n  LeftButtonElement.onclick = function () {\n    saveEditedFolder(folder.id);\n  };\n\n  FolderContentElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  for (const item of content) {\n    const thisItemElement = generateElementOfItem(folder, item);\n    fragment.appendChild(thisItemElement.element);\n  }\n  FolderContentElement.append(fragment);\n}\n\nasync function initializeFolderEditorField(folderID: string) {\n  // TODO: add skeleton screen\n  const folder = await getFolder(folderID);\n  const content = await listFolderContent(folderID);\n  updateFolderEditorField(folder, content);\n}\n\nexport function openFolderEditor(folderID: string): void {\n  pushPageHistory('FolderEditor');\n  FolderEditorField.setAttribute('displayed', 'true');\n  initializeFolderEditorField(folderID);\n  closePreviousPage();\n}\n\nexport function closeFolderEditor(): void {\n  // revokePageHistory('FolderEditor');\n  FolderEditorField.setAttribute('displayed', 'false');\n  openPreviousPage();\n}\n\nexport function removeItemOnFolderEditor(itemID: string, folderID: Folder['id'], type: FolderContent['type'], id: number): void {\n  const itemElement = elementQuerySelector(FolderEditorField, `.css_folder_editor_body .css_folder_editor_groups .css_folder_editor_group[group=\"folder-content\"] .css_folder_editor_group_body .css_folder_editor_folder_item#${itemID}`);\n  removeFromFolder(folderID, type, id).then((e) => {\n    if (e) {\n      itemElement.remove();\n      switch (type) {\n        case 'stop':\n          promptMessage('已移除站牌', 'delete');\n          break;\n        case 'route':\n          promptMessage('已移除路線', 'delete');\n          break;\n        case 'location':\n          promptMessage('已移除地點', 'delete');\n          break;\n        default:\n          break;\n      }\n    } else {\n      promptMessage('無法移除', 'error');\n    }\n  });\n}\n\nexport function moveItemOnFolderEditor(itemID: string, folderID: Folder['id'], type: FolderContent['type'], id: FolderContent['id'], direction: 'up' | 'down'): void {\n  const itemElement = elementQuerySelector(FolderEditorField, `.css_folder_editor_body .css_folder_editor_groups .css_folder_editor_group[group=\"folder-content\"] .css_folder_editor_group_body .css_folder_editor_folder_item#${itemID}`);\n  updateFolderContentIndex(folderID, type, id, direction).then((e) => {\n    if (e) {\n      switch (direction) {\n        case 'up':\n          const previousSibling = itemElement.previousElementSibling;\n          if (previousSibling) {\n            itemElement.parentNode.insertBefore(itemElement, previousSibling);\n          }\n          promptMessage('已往上移', 'arrow_circle_up');\n          break;\n        case 'down':\n          const nextSibling = itemElement.nextElementSibling;\n          if (nextSibling) {\n            itemElement.parentNode.insertBefore(nextSibling, itemElement);\n          }\n          promptMessage('已往下移', 'arrow_circle_down');\n          break;\n        default:\n          break;\n      }\n    } else {\n      promptMessage('無法移動', 'error');\n    }\n  });\n}\n\nexport function saveEditedFolder(folderID: string): void {\n  const name = NameInputElement.value;\n  const icon = IconInputElement.value;\n  updateFolder(folderID, name, icon);\n  closeFolderEditor();\n}\n"],"names":["FolderCreatorField","documentQuerySelector","FolderCreatorBodyElement","elementQuerySelector","FolderCreatorGroupsElement","NameInputElement","IconInputElement","createFormulatedFolder","name","value","icon","createFolder","then","e","closeFolderCreator","promptMessage","openFolderCreator","pushPageHistory","setAttribute","closePreviousPage","openPreviousPage","onclick","openFolderIconSelector","currentTarget","folderEditorField","folderCreatorField","folderIconSelectorField","generateElementOfSymbol","symbol","element","document","createElement","classList","add","iconInputElement","closeFolderIconSelector","selectFolderIcon","innerHTML","getIconHTML","id","_initializeFolderIconSelectorField","materialSymbolsElement","requestID","generateIdentifier","materialSymbols","getMaterialSymbols","deleteDataReceivingProgress","_step2","fragment","DocumentFragment","_iterator2","_createForOfIteratorHelper","s","n","done","symbolElement","appendChild","err","f","append","apply","arguments","updateMaterialSymbolsSearchResult","query","materialSymbolsSearchResultsElement","containPhoneticSymbols","_step","searchResults","searchForMaterialSymbols","_iterator","item","length","target","dataDownloadCompleted","initializeFolderIconSelectorField","prepareForMaterialSymbolsSearch","revokePageHistory","FolderManagerField","FolderManagerBodyElement","FolderManagerFolderListElement","generateElementOfItem","folderItemElement","openFolderEditor","iconElement","nameElement","createTextNode","statusElement","String","contentLength","arrowElement","_initializeFolderManagerField","foldersWithContent","listFoldersWithContent","newItemElement","openFolderManager","initializeFolderManagerField","closeFolderManager","FolderEditorField","FolderEditorHeadElement","LeftButtonElement","FolderEditorBodyElement","FolderEditorGroupsElement","OpenFolderIconSelectorElement","FolderContentElement","folder","identifier","itemElement","type","context","main","route","endPoints","destination","departure","direction","contextElement","mainElement","capsuleElement","sortUpElement","moveItemOnFolderEditor","sortDownElement","deleteElement","itemID","folderID","removeFromFolder","remove","removeItemOnFolderEditor","separator1Element","separator2Element","_initializeFolderEditorField","content","saveEditedFolder","thisItemElement","updateFolderEditorField","getFolder","listFolderContent","_x","initializeFolderEditorField","closeFolderEditor","updateFolderContentIndex","previousSibling","previousElementSibling","parentNode","insertBefore","nextSibling","nextElementSibling","updateFolder"],"sourceRoot":""}