{"version":3,"file":"fa65f974b04f167aab53.js","mappings":"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","sources":["webpack://bus/./src/interface/route/index.ts"],"sourcesContent":["import { getUpdateRate } from '../../data/analytics/update-rate/index';\nimport { DataReceivingProgressEvent } from '../../data/apis/loader';\nimport { isFolderContentSaved } from '../../data/folder/index';\nimport { stopHasNotifcationSchedules } from '../../data/notification/index';\nimport { logRecentView } from '../../data/recent-views/index';\nimport { IntegratedRoute, integratedStopItem, integrateRoute } from '../../data/route/index';\nimport { getSettingOptionValue, SettingSelectOptionRefreshIntervalValue } from '../../data/settings/index';\nimport { getTextWidth } from '../../tools/graphic';\nimport { booleanToString, compareThings, generateIdentifier } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll, getElementsBelow } from '../../tools/query-selector';\nimport { indexToDay, timeObjectToString } from '../../tools/time';\nimport { getIconHTML } from '../icons/index';\nimport { closePreviousPage, GeneratedElement, GroupStyles, openPreviousPage, pushPageHistory, querySize } from '../index';\nimport { promptMessage } from '../prompt/index';\nimport { openSaveToFolder } from '../save-to-folder/index';\nimport { openScheduleNotification } from '../schedule-notification/index';\nimport { openRouteDetails } from './details/index';\n\nconst RouteField = documentQuerySelector('.css_route_field');\nconst RouteHeadElement = elementQuerySelector(RouteField, '.css_route_head');\nconst RouteNameElement = elementQuerySelector(RouteHeadElement, '.css_route_name');\nconst RouteButtonRightElement = elementQuerySelector(RouteHeadElement, '.css_route_button_right');\nconst RouteUpdateTimerElement = elementQuerySelector(RouteHeadElement, '.css_route_update_timer_box .css_route_update_timer');\nconst RouteGroupTabsElement = elementQuerySelector(RouteHeadElement, '.css_route_group_tabs');\nconst RouteGroupTabsTrayElement = elementQuerySelector(RouteGroupTabsElement, '.css_route_group_tabs_tray');\nconst RouteGroupTabLineTrackElement = elementQuerySelector(RouteHeadElement, '.css_route_group_tab_line_track');\nconst RouteGroupTabLineElement = elementQuerySelector(RouteGroupTabLineTrackElement, '.css_route_group_tab_line');\nconst RouteGroupsElement = elementQuerySelector(RouteField, '.css_route_groups');\n\nlet previousIntegration = {} as IntegratedRoute;\nlet previousAnimation: boolean = true;\nlet previousSkeletonScreen: boolean = false;\n\nlet routeSliding_initialIndex: number = 0;\nlet routeSliding_targetIndex: number = 0;\nlet routeSliding_groupQuantity: number = 0;\nlet routeSliding_groupStyles: GroupStyles = {};\nlet routeSliding_fieldWidth: number = 0;\nlet routeSliding_fieldHeight: number = 0;\nlet routeSliding_sliding: boolean = false;\n\nlet routeRefreshTimer_retryInterval: number = 10 * 1000;\nlet routeRefreshTimer_baseInterval: number = 15 * 1000;\nlet routeRefreshTimer_minInterval: number = 5 * 1000;\nlet routeRefreshTimer_dynamicInterval: number = 15 * 1000;\nlet routeRefreshTimer_dynamic: boolean = true;\nlet routeRefreshTimer_lastUpdate: number = 0;\nlet routeRefreshTimer_nextUpdate: number = 0;\nlet routeRefreshTimer_currentRequestID: string = '';\nlet routeRefreshTimer_refreshing: boolean = false;\nlet routeRefreshTimer_streaming: boolean = false;\nlet routeRefreshTimer_streamStarted: boolean = false;\n\nlet currentRouteIDSet_RouteID: number = 0;\nlet currentRouteIDSet_PathAttributeId: Array<number> = [];\n\nlet tabPadding: number = 20;\n\nexport function initializeRouteSliding(): void {\n  RouteGroupsElement.addEventListener(\n    'touchstart',\n    function () {\n      routeSliding_initialIndex = Math.round(RouteGroupsElement.scrollLeft / routeSliding_fieldWidth);\n    },\n    { passive: true }\n  );\n\n  RouteGroupsElement.addEventListener(\n    'scroll',\n    function (event: Event) {\n      routeSliding_sliding = true;\n      const target = event.target as HTMLElement;\n      const currentIndex = target.scrollLeft / routeSliding_fieldWidth;\n      if (currentIndex > routeSliding_initialIndex) {\n        routeSliding_targetIndex = routeSliding_initialIndex + 1;\n      } else {\n        routeSliding_targetIndex = routeSliding_initialIndex - 1;\n      }\n      const initialSize = routeSliding_groupStyles[`g_${routeSliding_initialIndex}`] || { width: 0, offset: 0 };\n      const targetSize = routeSliding_groupStyles[`g_${routeSliding_targetIndex}`] || { width: 0, offset: 0 };\n      const tabWidth = initialSize.width + (targetSize.width - initialSize.width) * Math.abs(currentIndex - routeSliding_initialIndex);\n      const offset = (initialSize.offset + (targetSize.offset - initialSize.offset) * Math.abs(currentIndex - routeSliding_initialIndex)) * -1 + routeSliding_fieldWidth * 0.5 - tabWidth * 0.5;\n\n      updateRouteCSS(routeSliding_groupQuantity, offset, tabWidth - tabPadding, currentIndex);\n\n      if (currentIndex === routeSliding_targetIndex) {\n        routeSliding_initialIndex = Math.round(RouteGroupsElement.scrollLeft / routeSliding_fieldWidth);\n        routeSliding_sliding = false;\n      }\n    },\n    { passive: true }\n  );\n}\n\nexport function updateRouteCSS(groupQuantity: number, offset: number, tabLineWidth: number, percentage: number): void {\n  RouteGroupsElement.style.setProperty('--b-cssvar-route-group-quantity', groupQuantity.toString());\n  RouteGroupTabLineElement.style.setProperty('--b-cssvar-route-tab-line-width-scale', tabLineWidth.toString());\n  RouteGroupTabsTrayElement.style.setProperty('--b-cssvar-route-tabs-tray-offset', `${offset.toFixed(5)}px`);\n  RouteGroupTabsTrayElement.style.setProperty('--b-cssvar-route-percentage', percentage.toFixed(5));\n}\n\nfunction animateUpdateTimer(): void {\n  RouteUpdateTimerElement.style.setProperty('--b-cssvar-route-update-timer-interval', `${routeRefreshTimer_dynamicInterval}ms`);\n  RouteUpdateTimerElement.classList.add('css_route_update_timer_slide_rtl');\n}\n\nfunction handleDataReceivingProgressUpdates(event: Event): void {\n  const CustomEvent = event as DataReceivingProgressEvent;\n  if (routeRefreshTimer_refreshing) {\n    const offsetRatio = CustomEvent.detail.progress - 1;\n    RouteUpdateTimerElement.style.setProperty('--b-cssvar-route-update-timer-offset-ratio', offsetRatio.toString());\n  }\n  if (CustomEvent.detail.stage === 'end') {\n    document.removeEventListener(CustomEvent.detail.target, handleDataReceivingProgressUpdates);\n  }\n}\n\nfunction generateElementOfThreadBox(): GeneratedElement {\n  const identifier = generateIdentifier();\n  const element = document.createElement('div');\n  element.classList.add('css_route_group_thread_box');\n  element.id = identifier;\n  element.setAttribute('stretched', 'false');\n  element.setAttribute('stretching', 'false');\n  element.setAttribute('push-direction', '0'); // 0: normal state, 1: downward, 2: upward\n  element.setAttribute('push-state', '0'); // 0: normal state, 1: compensation , 2: transition\n  element.innerHTML = /*html*/ `<div class=\"css_route_group_thread\"><div class=\"css_route_group_thread_progress\" displayed=\"false\"></div></div><div class=\"css_route_group_thread_status\"><div class=\"css_next_slide\" code=\"0\" displayed=\"false\"></div><div class=\"css_current_slide\" code=\"0\" displayed=\"true\"></div></div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction generateElementOfItem(threadBoxIdentifier: string): GeneratedElement {\n  const identifier = generateIdentifier();\n  const element = document.createElement('div');\n  element.classList.add('css_route_group_item');\n  element.id = identifier;\n  element.setAttribute('stretched', 'false');\n  element.setAttribute('stretching', 'false');\n  element.setAttribute('push-direction', '0'); // 0: normal state, 1: downward, 2: upward\n  element.setAttribute('push-state', '0'); // 0: normal state, 1: compensation , 2: transition\n  element.innerHTML = /*html*/ `<div class=\"css_route_group_item_head\"><div class=\"css_route_group_item_name\"></div><div class=\"css_route_group_item_capsule\"><div class=\"css_route_group_item_status\"><div class=\"css_next_slide\" code=\"0\" displayed=\"false\"></div><div class=\"css_current_slide\" code=\"0\" displayed=\"true\"></div></div><div class=\"css_route_group_item_stretch\" onclick=\"bus.route.stretchRouteItem('${identifier}', '${threadBoxIdentifier}')\">${getIconHTML('keyboard_arrow_down')}</div><div class=\"css_route_group_item_capsule_separator\"></div></div></div><div class=\"css_route_group_item_body\" displayed=\"false\"><div class=\"css_route_group_item_buttons\"><div class=\"css_route_group_item_button\" highlighted=\"true\" type=\"tab\" onclick=\"bus.route.switchRouteBodyTab('${identifier}', 0)\" code=\"0\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('directions_bus')}</div>公車</div><div class=\"css_route_group_item_button\" highlighted=\"false\" type=\"tab\" onclick=\"bus.route.switchRouteBodyTab('${identifier}', 1)\" code=\"1\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('departure_board')}</div>抵達時間</div><div class=\"css_route_group_item_button\" highlighted=\"false\" type=\"tab\" onclick=\"bus.route.switchRouteBodyTab('${identifier}', 2)\" code=\"2\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('route')}</div>路線</div><div class=\"css_route_group_item_button\" highlighted=\"false\" type=\"tab\" onclick=\"bus.route.switchRouteBodyTab('${identifier}', 3)\" code=\"3\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('location_on')}</div>地點</div><div class=\"css_route_group_item_button\" highlighted=\"false\" type=\"save-to-folder\" onclick=\"bus.folder.openSaveToFolder('stop-on-route', ['${identifier}', null, null])\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('folder')}</div>儲存</div><div class=\"css_route_group_item_button\" highlighted=\"false\" type=\"schedule-notification\" onclick=\"bus.notification.openScheduleNotification('stop-on-route', ['${identifier}', null, null, null])\" enabled=\"true\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('notifications')}</div>到站通知</div></div><div class=\"css_route_group_item_buses\" displayed=\"true\"></div><div class=\"css_route_group_item_overlapping_routes\" displayed=\"false\"></div><div class=\"css_route_group_item_bus_arrival_times\" displayed=\"false\"></div><div class=\"css_route_group_item_nearby_locations\" displayed=\"false\"></div></div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction generateElementOfGroup(): GeneratedElement {\n  const element = document.createElement('div');\n  element.classList.add('css_route_group');\n\n  const tracksElement = document.createElement('div');\n  tracksElement.classList.add('css_route_group_tracks');\n\n  const threadTrackElement = document.createElement('div');\n  threadTrackElement.classList.add('css_route_group_threads_track');\n\n  const threadBoxSpace = document.createElement('div');\n  threadBoxSpace.classList.add('css_route_group_thread_box_space_top');\n\n  const itemsTrackElement = document.createElement('div');\n  itemsTrackElement.classList.add('css_route_group_items_track');\n\n  const itemSpaceElement = document.createElement('div');\n  itemSpaceElement.classList.add('css_route_group_item_space_top');\n\n  itemsTrackElement.appendChild(itemSpaceElement);\n  threadTrackElement.appendChild(threadBoxSpace);\n  tracksElement.appendChild(threadTrackElement);\n  tracksElement.appendChild(itemsTrackElement);\n  element.appendChild(tracksElement);\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nfunction generateElementOfTab(): GeneratedElement {\n  const element = document.createElement('div');\n  element.classList.add('css_route_group_tab');\n\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nfunction setUpRouteFieldSkeletonScreen(): void {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const WindowSize = querySize('window');\n  const FieldWidth = WindowSize.width;\n  const FieldHeight = WindowSize.height;\n  const defaultItemQuantity: number = Math.floor(FieldHeight / 50) + 5;\n  const defaultGroupQuantity = 2;\n  let groupedItems: IntegratedRoute['groupedItems'] = {};\n  for (let i = 0; i < defaultGroupQuantity; i++) {\n    const groupKey: string = `g_${i}`;\n    groupedItems[groupKey] = [];\n    for (let j = 0; j < defaultItemQuantity; j++) {\n      groupedItems[groupKey].push({\n        name: '',\n        goBack: '0',\n        status: { code: 8, text: '', time: -6 },\n        buses: [],\n        overlappingRoutes: [],\n        busArrivalTimes: [],\n        nearbyLocations: [],\n        sequence: j,\n        position: {\n          longitude: 0,\n          latitude: 0\n        },\n        nearest: false,\n        progress: 0,\n        segmentBuffer: {\n          isSegmentBuffer: false,\n          isStartingPoint: false,\n          isEndingPoint: false\n        },\n        id: 0\n      });\n    }\n  }\n  updateRouteField(\n    {\n      groupedItems: groupedItems,\n      groupQuantity: defaultGroupQuantity,\n      itemQuantity: {\n        g_0: defaultItemQuantity,\n        g_1: defaultItemQuantity\n      },\n      RouteName: '載入中',\n      RouteEndPoints: {\n        RouteDeparture: '載入中',\n        RouteDestination: '載入中'\n      },\n      RouteID: 0,\n      PathAttributeId: [],\n      dataUpdateTime: 0\n    },\n    true,\n    playing_animation\n  );\n}\n\nfunction updateRouteField(integration: IntegratedRoute, skeletonScreen: boolean, animation: boolean): void {\n  function updateItem(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem, previousItem: integratedStopItem | null, skeletonScreen: boolean, animation: boolean): void {\n    function updateStatus(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem, skeletonScreen: boolean, animation: boolean): void {\n      const thisThreadStatusElement = elementQuerySelector(thisThreadBoxElement, '.css_route_group_thread_status');\n      const currentThreadSlideElement = elementQuerySelector(thisThreadStatusElement, '.css_current_slide');\n      const nextThreadSlideElement = elementQuerySelector(thisThreadStatusElement, '.css_next_slide');\n\n      const thisItemStatusElement = elementQuerySelector(thisItemElement, '.css_route_group_item_status');\n      const currentItemSlideElement = elementQuerySelector(thisItemStatusElement, '.css_current_slide');\n      const nextItemSlideElememt = elementQuerySelector(thisItemStatusElement, '.css_next_slide');\n\n      nextThreadSlideElement.setAttribute('code', thisItem.status.code.toString());\n\n      nextItemSlideElememt.setAttribute('code', thisItem.status.code.toString());\n      nextItemSlideElememt.innerText = thisItem.status.text;\n\n      if (!skeletonScreen) {\n        if (animation) {\n          const thisItemElementRect = thisItemElement.getBoundingClientRect();\n          const top = thisItemElementRect.top;\n          const left = thisItemElementRect.left;\n          const bottom = thisItemElementRect.bottom;\n          const right = thisItemElementRect.right;\n          const windowWidth = window.innerWidth;\n          const windowHeight = window.innerHeight;\n          if (bottom > 0 && top < windowHeight && right > 0 && left < windowWidth) {\n            currentThreadSlideElement.addEventListener(\n              'animationend',\n              function () {\n                currentThreadSlideElement.setAttribute('code', thisItem.status.code.toString());\n                currentThreadSlideElement.classList.remove('css_slide_fade_out');\n                nextThreadSlideElement.setAttribute('displayed', 'false');\n              },\n              { once: true }\n            );\n            currentItemSlideElement.addEventListener(\n              'animationend',\n              function () {\n                currentItemSlideElement.setAttribute('code', thisItem.status.code.toString());\n                currentItemSlideElement.innerText = thisItem.status.text;\n                currentItemSlideElement.classList.remove('css_slide_fade_out');\n                nextItemSlideElememt.setAttribute('displayed', 'false');\n              },\n              { once: true }\n            );\n            nextItemSlideElememt.setAttribute('displayed', 'true');\n            nextThreadSlideElement.setAttribute('displayed', 'true');\n            currentThreadSlideElement.classList.add('css_slide_fade_out');\n            currentItemSlideElement.classList.add('css_slide_fade_out');\n            return;\n          }\n        }\n      }\n\n      currentThreadSlideElement.setAttribute('code', thisItem.status.code.toString());\n      currentItemSlideElement.setAttribute('code', thisItem.status.code.toString());\n      currentItemSlideElement.innerText = thisItem.status.text;\n    }\n\n    function updateSegmentBuffer(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem): void {\n      thisItemElement.setAttribute('segment-buffer', booleanToString(thisItem.segmentBuffer.isSegmentBuffer));\n      thisThreadBoxElement.setAttribute('segment-buffer', booleanToString(thisItem.segmentBuffer.isSegmentBuffer));\n    }\n\n    function updateName(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_name').innerText = thisItem.name;\n    }\n\n    function updateBuses(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_buses').innerHTML = thisItem.buses.length === 0 ? '<div class=\"css_route_group_item_buses_message\">目前沒有公車可顯示</div>' : thisItem.buses.map((bus) => `<div class=\"css_route_group_item_bus\" on-this-route=\"${bus.onThisRoute}\"><div class=\"css_route_group_item_bus_title\"><div class=\"css_route_group_item_bus_icon\">${getIconHTML('directions_bus')}</div><div class=\"css_route_group_item_bus_car_number\">${bus.carNumber}</div></div><div class=\"css_route_group_item_bus_attributes\"><div class=\"css_route_group_item_bus_route\">路線：${bus.RouteName}</div><div class=\"css_route_group_item_bus_car_status\">狀態：${bus.status.text}</div><div class=\"css_route_group_item_bus_car_type\">類型：${bus.type}</div></div></div>`).join('');\n    }\n\n    function updateOverlappingRoutes(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_overlapping_routes').innerHTML = thisItem.overlappingRoutes.length === 0 ? '<div class=\"css_route_group_item_overlapping_route_message\">目前沒有路線可顯示</div>' : thisItem.overlappingRoutes.map((route) => `<div class=\"css_route_group_item_overlapping_route\"><div class=\"css_route_group_item_overlapping_route_title\"><div class=\"css_route_group_item_overlapping_route_icon\">${getIconHTML('route')}</div><div class=\"css_route_group_item_overlapping_route_name\">${route.name}</div></div><div class=\"css_route_group_item_overlapping_route_endpoints\">${route.RouteEndPoints.html}</div><div class=\"css_route_group_item_overlapping_route_actions\"><div class=\"css_route_group_item_overlapping_route_action_button\" onclick=\"bus.route.switchRoute(${route.RouteID}, [${route.PathAttributeId.join(',')}])\">查看路線</div><div class=\"css_route_group_item_overlapping_route_action_button\" onclick=\"bus.folder.openSaveToFolder('route-on-route', [${route.RouteID}])\">收藏路線</div></div></div>`).join('');\n    }\n\n    function updateBusArrivalTimes(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_bus_arrival_times').innerHTML = thisItem.busArrivalTimes.length === 0 ? '<div class=\"css_route_group_item_bus_arrival_message\">目前沒有抵達時間可顯示</div>' : thisItem.busArrivalTimes.map((busArrivalTime) => `<div class=\"css_route_group_item_bus_arrival_time\"><div class=\"css_route_group_item_bus_arrival_time_title\"><div class=\"css_route_group_item_bus_arrival_time_icon\">${getIconHTML('calendar_view_day')}</div><div class=\"css_route_group_item_bus_arrival_time_personal_schedule_name\">${busArrivalTime.personalSchedule.name}</div><div class=\"css_route_group_item_bus_arrival_time_personal_schedule_time\">週${indexToDay(busArrivalTime.day).name} ${timeObjectToString(busArrivalTime.personalSchedule.period.start)} - ${timeObjectToString(busArrivalTime.personalSchedule.period.end)}</div></div><div class=\"css_route_group_item_bus_arrival_time_chart\">${busArrivalTime.chart}</div></div>`).join('');\n    }\n\n    function updateNearbyLocations(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_nearby_locations').innerHTML = thisItem.nearbyLocations.length === 0 ? '<div class=\"css_route_group_item_nearby_locations_message\">目前沒有地點可顯示</div>' : thisItem.nearbyLocations.map((nearbyLocation) => `<div class=\"css_route_group_item_nearby_location\"><div class=\"css_route_group_item_nearby_location_title\"><div class=\"css_route_group_item_nearby_location_icon\">${getIconHTML('location_on')}</div><div class=\"css_route_group_item_nearby_location_name\">${nearbyLocation.name}</div></div><div class=\"css_route_group_item_nearby_location_distance\">${nearbyLocation.distance}公尺</div><div class=\"css_route_group_item_nearby_location_actions\"><div class=\"css_route_group_item_nearby_location_action_button\" onclick=\"bus.location.openLocation('${nearbyLocation.hash}')\">查看地點</div><div class=\"css_route_group_item_nearby_location_action_button\">收藏地點</div></div></div>`).join('');\n    }\n\n    function updateNearest(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem): void {\n      thisItemElement.setAttribute('nearest', booleanToString(thisItem.nearest));\n      thisThreadBoxElement.setAttribute('nearest', booleanToString(thisItem.nearest));\n    }\n\n    function updateThread(thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem, previousItem: integratedStopItem | null, skeletonScreen: boolean, animation: boolean): void {\n      const previousProgress = previousItem?.progress || 0;\n      const thisProgress = thisItem?.progress || 0;\n      const thisThreadProgressElement = elementQuerySelector(thisThreadBoxElement, '.css_route_group_thread .css_route_group_thread_progress');\n      if (!skeletonScreen) {\n        if (animation) {\n          if (previousProgress !== 0 && thisProgress === 0 && Math.abs(thisProgress - previousProgress) > 0) {\n            thisThreadProgressElement.style.setProperty('--b-cssvar-thread-progress-translate-y', '100%');\n            thisThreadProgressElement.addEventListener(\n              'transitionend',\n              function () {\n                thisThreadProgressElement.setAttribute('displayed', 'false');\n                thisThreadProgressElement.style.setProperty('--b-cssvar-thread-progress-translate-y', '-100%');\n              },\n              { once: true }\n            );\n            return;\n          }\n        }\n      }\n      if (thisProgress > 0) {\n        thisThreadProgressElement.setAttribute('displayed', 'true');\n        thisThreadProgressElement.style.setProperty('--b-cssvar-thread-progress-translate-y', `${(thisProgress - 1) * 100}%`);\n      } else {\n        thisThreadProgressElement.setAttribute('displayed', 'false');\n      }\n    }\n\n    function updateStretch(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, skeletonScreen: boolean): void {\n      if (skeletonScreen) {\n        const thisItemBodyElement = elementQuerySelector(thisItemElement, '.css_route_group_item_body');\n        thisItemBodyElement.setAttribute('displayed', 'false');\n        thisItemElement.setAttribute('stretched', 'false');\n        thisThreadBoxElement.setAttribute('stretched', 'false');\n      }\n    }\n\n    function updateAnimation(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, animation: boolean): void {\n      thisItemElement.setAttribute('animation', booleanToString(animation));\n      thisThreadBoxElement.setAttribute('animation', booleanToString(animation));\n    }\n\n    function updateSkeletonScreen(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, skeletonScreen: boolean): void {\n      thisItemElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n      thisThreadBoxElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    }\n\n    function updateSaveToFolderButton(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      const saveToFolderButtonElement = elementQuerySelector(thisItemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"save-to-folder\"]');\n      saveToFolderButtonElement.onclick = function () {\n        openSaveToFolder('stop-on-route', [thisItemElement.id, thisItem.id, integration.RouteID]);\n      };\n      isFolderContentSaved('stop', thisItem.id).then((e) => {\n        saveToFolderButtonElement.setAttribute('highlighted', booleanToString(e));\n      });\n    }\n\n    function updateScheduleNotificationButton(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      const scheduleNotificationButtonElement = elementQuerySelector(thisItemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"schedule-notification\"]');\n      scheduleNotificationButtonElement.onclick = function () {\n        openScheduleNotification('stop-on-route', [thisItemElement.id, thisItem.id, integration.RouteID, thisItem.status.time]);\n      };\n      const havingNotifcationSchedules = stopHasNotifcationSchedules(thisItem.id);\n      scheduleNotificationButtonElement.setAttribute('highlighted', booleanToString(havingNotifcationSchedules));\n    }\n\n    if (previousItem === null) {\n      updateStatus(thisItemElement, thisThreadBoxElement, thisItem, skeletonScreen, animation);\n      updateName(thisItemElement, thisItem);\n      updateBuses(thisItemElement, thisItem);\n      updateOverlappingRoutes(thisItemElement, thisItem);\n      updateBusArrivalTimes(thisItemElement, thisItem);\n      updateNearbyLocations(thisItemElement, thisItem);\n      updateSegmentBuffer(thisItemElement, thisThreadBoxElement, thisItem);\n      updateNearest(thisItemElement, thisThreadBoxElement, thisItem);\n      updateThread(thisThreadBoxElement, thisItem, previousItem, skeletonScreen, animation);\n      updateStretch(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      updateAnimation(thisItemElement, thisThreadBoxElement, animation);\n      updateSkeletonScreen(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      updateSaveToFolderButton(thisItemElement, thisItem);\n      updateScheduleNotificationButton(thisItemElement, thisItem);\n    } else {\n      if (thisItem.status.time !== previousItem.status.time) {\n        updateStatus(thisItemElement, thisThreadBoxElement, thisItem, skeletonScreen, animation);\n        updateScheduleNotificationButton(thisItemElement, thisItem);\n      }\n      if (!compareThings(previousItem.buses, thisItem.buses)) {\n        updateBuses(thisItemElement, thisItem);\n      }\n      if (!compareThings(previousItem.busArrivalTimes, thisItem.busArrivalTimes)) {\n        updateBusArrivalTimes(thisItemElement, thisItem);\n      }\n      if (!compareThings(previousItem.segmentBuffer, thisItem.segmentBuffer)) {\n        updateSegmentBuffer(thisItemElement, thisThreadBoxElement, thisItem);\n      }\n      if (previousItem.nearest !== thisItem.nearest) {\n        updateNearest(thisItemElement, thisThreadBoxElement, thisItem);\n      }\n      if (previousItem.progress !== thisItem.progress) {\n        updateThread(thisThreadBoxElement, thisItem, previousItem, skeletonScreen, animation);\n      }\n      if (previousItem.id !== thisItem.id) {\n        updateName(thisItemElement, thisItem);\n        updateOverlappingRoutes(thisItemElement, thisItem);\n        updateNearbyLocations(thisItemElement, thisItem);\n        updateSaveToFolderButton(thisItemElement, thisItem);\n        updateScheduleNotificationButton(thisItemElement, thisItem);\n      }\n      if (previousAnimation !== animation) {\n        updateAnimation(thisItemElement, thisThreadBoxElement, animation);\n      }\n      if (previousSkeletonScreen !== skeletonScreen) {\n        updateStretch(thisItemElement, thisThreadBoxElement, skeletonScreen);\n        updateSkeletonScreen(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      }\n    }\n  }\n\n  const WindowSize = querySize('window');\n  const FieldWidth = WindowSize.width;\n  const FieldHeight = WindowSize.height;\n\n  const groupQuantity = integration.groupQuantity;\n  const itemQuantity = integration.itemQuantity;\n  const groupedItems = integration.groupedItems;\n\n  routeSliding_groupQuantity = groupQuantity;\n  routeSliding_fieldWidth = FieldWidth;\n  routeSliding_fieldHeight = FieldHeight;\n\n  let cumulativeOffset = 0;\n  for (let i = 0; i < groupQuantity; i++) {\n    const width = getTextWidth([integration.RouteEndPoints.RouteDestination, integration.RouteEndPoints.RouteDeparture, ''].map((e) => `往${e}`)[i], 500, '17px', `\"Noto Sans TC\", sans-serif`) + tabPadding;\n    routeSliding_groupStyles[`g_${i}`] = {\n      width: width,\n      offset: cumulativeOffset\n    };\n    cumulativeOffset += width;\n  }\n  const offset = routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].offset * -1 + routeSliding_fieldWidth * 0.5 - routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].width * 0.5;\n  if (!routeSliding_sliding) {\n    updateRouteCSS(routeSliding_groupQuantity, offset, routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].width - tabPadding, routeSliding_initialIndex);\n  }\n\n  RouteNameElement.innerHTML = /*html*/ `<span>${integration.RouteName}</span>`;\n  RouteNameElement.setAttribute('animation', booleanToString(animation));\n  RouteNameElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n  RouteGroupTabsElement.setAttribute('animation', booleanToString(animation));\n  RouteGroupTabsElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n  RouteGroupTabLineTrackElement.setAttribute('animation', booleanToString(animation));\n  RouteGroupTabLineTrackElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n  RouteButtonRightElement.onclick = function () {\n    openRouteDetails(integration.RouteID, integration.PathAttributeId);\n  };\n  const currentGroupSeatQuantity = elementQuerySelectorAll(RouteGroupsElement, '.css_route_group').length;\n  if (groupQuantity !== currentGroupSeatQuantity) {\n    const capacity = currentGroupSeatQuantity - groupQuantity;\n    if (capacity < 0) {\n      const newGroupsFragment = new DocumentFragment();\n      const newTabsFragment = new DocumentFragment();\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const newGroupElement = generateElementOfGroup();\n        newGroupsFragment.appendChild(newGroupElement.element);\n        const newTabElement = generateElementOfTab();\n        newTabsFragment.appendChild(newTabElement.element);\n      }\n      RouteGroupsElement.append(newGroupsFragment);\n      RouteGroupTabsTrayElement.append(newTabsFragment);\n    } else {\n      const GroupElements = elementQuerySelectorAll(RouteGroupsElement, '.css_route_group');\n      const TabElements = elementQuerySelectorAll(RouteGroupTabsTrayElement, '.css_route_group_tab');\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const groupIndex = currentGroupSeatQuantity - 1 - o;\n        GroupElements[groupIndex].remove();\n        TabElements[groupIndex].remove();\n      }\n    }\n  }\n\n  const RouteGroupElements = elementQuerySelectorAll(RouteGroupsElement, '.css_route_group');\n\n  for (let i = 0; i < groupQuantity; i++) {\n    const groupKey = `g_${i}`;\n    const thisGroupElement = RouteGroupElements[i];\n    const thisGroupItemsTrackElement = elementQuerySelector(thisGroupElement, '.css_route_group_items_track');\n    const thisGroupThreadsTrackElement = elementQuerySelector(thisGroupElement, '.css_route_group_threads_track');\n    const currentItemSeatQuantity = elementQuerySelectorAll(thisGroupItemsTrackElement, '.css_route_group_item').length;\n    if (itemQuantity[groupKey] !== currentItemSeatQuantity) {\n      const capacity = currentItemSeatQuantity - itemQuantity[groupKey];\n      if (capacity < 0) {\n        const newItemsFragment = new DocumentFragment();\n        const newThreadsFragment = new DocumentFragment();\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const newThreadBoxElement = generateElementOfThreadBox();\n          const newItemElement = generateElementOfItem(newThreadBoxElement.id);\n          newItemsFragment.appendChild(newItemElement.element);\n          newThreadsFragment.appendChild(newThreadBoxElement.element);\n        }\n        thisGroupItemsTrackElement.append(newItemsFragment);\n        thisGroupThreadsTrackElement.append(newThreadsFragment);\n      } else {\n        const thisGroupItemElements = elementQuerySelectorAll(thisGroupItemsTrackElement, '.css_route_group_item');\n        const thisGroupThreadElements = elementQuerySelectorAll(thisGroupThreadsTrackElement, '.css_route_group_thread_box');\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const itemIndex = currentItemSeatQuantity - 1 - o;\n          thisGroupItemElements[itemIndex].remove();\n          thisGroupThreadElements[itemIndex].remove();\n        }\n      }\n    }\n  }\n\n  const TabElements = elementQuerySelectorAll(RouteGroupTabsTrayElement, '.css_route_group_tab');\n  for (let i = 0; i < groupQuantity; i++) {\n    const groupKey = `g_${i}`;\n\n    const thisTabElement = TabElements[i];\n    thisTabElement.innerHTML = [integration.RouteEndPoints.RouteDestination, integration.RouteEndPoints.RouteDeparture, ''].map((e) => `<span>往${e}</span>`)[i];\n    thisTabElement.style.setProperty('--b-cssvar-route-tab-width', `${routeSliding_groupStyles[groupKey].width}px`);\n    thisTabElement.style.setProperty('--b-cssvar-route-tab-index', i.toString());\n\n    const thisGroupElement = RouteGroupElements[i];\n    if (skeletonScreen) {\n      thisGroupElement.scrollTop = 0;\n    }\n\n    const thisGroupItemsTrackElement = elementQuerySelector(thisGroupElement, '.css_route_group_items_track');\n    const thisGroupThreadsTrackElement = elementQuerySelector(thisGroupElement, '.css_route_group_threads_track');\n    const thisGroupItemElements = elementQuerySelectorAll(thisGroupItemsTrackElement, '.css_route_group_item');\n    const thisGroupThreadElements = elementQuerySelectorAll(thisGroupThreadsTrackElement, '.css_route_group_thread_box');\n    for (let j = 0; j < itemQuantity[groupKey]; j++) {\n      const thisItemElement = thisGroupItemElements[j];\n      const thisThreadBoxElement = thisGroupThreadElements[j];\n      const thisItem = groupedItems[groupKey][j];\n      if (previousIntegration.hasOwnProperty('groupedItems')) {\n        if (previousIntegration.groupedItems.hasOwnProperty(groupKey)) {\n          if (previousIntegration.groupedItems[groupKey][j]) {\n            const previousItem = previousIntegration.groupedItems[groupKey][j];\n            updateItem(thisItemElement, thisThreadBoxElement, thisItem, previousItem, skeletonScreen, animation);\n          } else {\n            updateItem(thisItemElement, thisThreadBoxElement, thisItem, null, skeletonScreen, animation);\n          }\n        } else {\n          updateItem(thisItemElement, thisThreadBoxElement, thisItem, null, skeletonScreen, animation);\n        }\n      } else {\n        updateItem(thisItemElement, thisThreadBoxElement, thisItem, null, skeletonScreen, animation);\n      }\n    }\n  }\n\n  previousIntegration = integration;\n  previousAnimation = animation;\n  previousSkeletonScreen = skeletonScreen;\n}\n\nasync function refreshRoute() {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const refresh_interval_setting = getSettingOptionValue('refresh_interval') as SettingSelectOptionRefreshIntervalValue;\n  const busArrivalTimeChartSize = querySize('route-bus-arrival-time-chart');\n  routeRefreshTimer_dynamic = refresh_interval_setting.dynamic;\n  routeRefreshTimer_baseInterval = refresh_interval_setting.baseInterval;\n  routeRefreshTimer_refreshing = true;\n  routeRefreshTimer_currentRequestID = generateIdentifier();\n  RouteUpdateTimerElement.setAttribute('refreshing', 'true');\n  RouteUpdateTimerElement.classList.remove('css_route_update_timer_slide_rtl');\n  document.addEventListener(routeRefreshTimer_currentRequestID, handleDataReceivingProgressUpdates);\n  const integration = await integrateRoute(currentRouteIDSet_RouteID, currentRouteIDSet_PathAttributeId, busArrivalTimeChartSize.width, busArrivalTimeChartSize.height, routeRefreshTimer_currentRequestID);\n  updateRouteField(integration, false, playing_animation);\n  let updateRate = 0;\n  if (routeRefreshTimer_dynamic) {\n    updateRate = await getUpdateRate();\n  }\n  routeRefreshTimer_lastUpdate = new Date().getTime();\n  if (routeRefreshTimer_dynamic) {\n    routeRefreshTimer_nextUpdate = Math.max(routeRefreshTimer_lastUpdate + routeRefreshTimer_minInterval, integration.dataUpdateTime + routeRefreshTimer_baseInterval / updateRate);\n  } else {\n    routeRefreshTimer_nextUpdate = routeRefreshTimer_lastUpdate + routeRefreshTimer_baseInterval;\n  }\n  routeRefreshTimer_dynamicInterval = Math.max(routeRefreshTimer_minInterval, routeRefreshTimer_nextUpdate - routeRefreshTimer_lastUpdate);\n  routeRefreshTimer_refreshing = false;\n  RouteUpdateTimerElement.setAttribute('refreshing', 'false');\n  animateUpdateTimer();\n}\n\nexport function streamRoute(): void {\n  refreshRoute()\n    .then(function () {\n      if (routeRefreshTimer_streaming) {\n        setTimeout(function () {\n          streamRoute();\n        }, Math.max(routeRefreshTimer_minInterval, routeRefreshTimer_nextUpdate - new Date().getTime()));\n      } else {\n        routeRefreshTimer_streamStarted = false;\n      }\n    })\n    .catch((err) => {\n      console.error(err);\n      if (routeRefreshTimer_streaming) {\n        promptMessage(`路線網路連線中斷，將在${routeRefreshTimer_retryInterval / 1000}秒後重試。`, 'error');\n        setTimeout(function () {\n          streamRoute();\n        }, routeRefreshTimer_retryInterval);\n      } else {\n        routeRefreshTimer_streamStarted = false;\n      }\n    });\n}\n\nexport function openRoute(RouteID: number, PathAttributeId: Array<number>): void {\n  pushPageHistory('Route');\n  logRecentView('route', RouteID);\n  currentRouteIDSet_RouteID = RouteID;\n  currentRouteIDSet_PathAttributeId = PathAttributeId;\n  routeSliding_initialIndex = 0;\n  RouteField.setAttribute('displayed', 'true');\n  RouteGroupsElement.scrollLeft = 0;\n  setUpRouteFieldSkeletonScreen();\n  if (!routeRefreshTimer_streaming) {\n    routeRefreshTimer_streaming = true;\n    if (!routeRefreshTimer_streamStarted) {\n      routeRefreshTimer_streamStarted = true;\n      streamRoute();\n    } else {\n      refreshRoute();\n    }\n  }\n  closePreviousPage();\n}\n\nexport function closeRoute(): void {\n  // revokePageHistory('Route');\n  RouteField.setAttribute('displayed', 'false');\n  routeRefreshTimer_streaming = false;\n  openPreviousPage();\n}\n\nexport function switchRoute(RouteID: number, PathAttributeId: Array<number>): void {\n  routeRefreshTimer_streaming = false;\n  openRoute(RouteID, PathAttributeId);\n}\n\nexport function stretchRouteItem(itemElementID: string, threadBoxElementID: string): void {\n  const itemElement = elementQuerySelector(RouteGroupsElement, `.css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  const itemBodyElement = elementQuerySelector(itemElement, '.css_route_group_item_body');\n  const threadBoxElement = elementQuerySelector(RouteGroupsElement, `.css_route_group .css_route_group_tracks .css_route_group_threads_track .css_route_group_thread_box#${threadBoxElementID}`);\n\n  const itemsTrackElement = itemElement.parentElement as HTMLElement;\n  const threadTrackElement = threadBoxElement.parentElement as HTMLElement;\n\n  const elementsBelowThreadBoxElement = getElementsBelow(threadBoxElement, 'css_route_group_thread_box');\n  const elementsBelowItemElement = getElementsBelow(itemElement, 'css_route_group_item');\n\n  const elementsBelowLength = elementsBelowItemElement.length; // = elementsBelowThreadBoxElement.length\n\n  const itemsTrackElementRect = itemsTrackElement.getBoundingClientRect();\n  const itemElementRect = itemElement.getBoundingClientRect();\n  const threadTrackElementRect = threadTrackElement.getBoundingClientRect();\n  const threadBoxElementRect = threadBoxElement.getBoundingClientRect();\n\n  // const threadBoxElementX = threadBoxElementRect.left - threadTrackElementRect.left;\n  const threadBoxElementY = threadBoxElementRect.top - threadTrackElementRect.top;\n\n  // const itemElementX = itemElementRect.left - itemsTrackElementRect.left;\n  const itemElementY = itemElementRect.top - itemsTrackElementRect.top; // itemElementRect.top + scrollTop - (itemsTrackElementRect.top + scrollTop)\n\n  const stretched = itemElement.getAttribute('stretched') === 'true' ? true : false;\n  const animation = itemElement.getAttribute('animation') === 'true' ? true : false;\n\n  if (animation) {\n    const pushDirection = stretched ? '2' : '1';\n\n    // Separate the elements from the document flow while keeping its position\n    threadBoxElement.setAttribute('stretching', 'true');\n    // threadBoxElement.style.setProperty('--b-cssvar-css-route-group-thread-box-x', `${threadBoxElementX}px`);\n    threadBoxElement.style.setProperty('--b-cssvar-css-route-group-thread-box-y', `${threadBoxElementY}px`);\n\n    itemElement.setAttribute('stretching', 'true');\n    // itemElement.style.setProperty('--b-cssvar-css-route-group-item-x', `${itemElementX}px`);\n    itemElement.style.setProperty('--b-cssvar-css-route-group-item-y', `${itemElementY}px`);\n\n    // Set push direction and push state\n    for (let i = 0; i < elementsBelowLength; i++) {\n      const thisItemElement = elementsBelowItemElement[i];\n      const thisThreadBoxElement = elementsBelowThreadBoxElement[i];\n      // thisThreadBoxElement.style.setProperty('--b-cssvar-css-route-group-thread-z-index', (elementsBelowLength - i - 1).toString());\n      thisThreadBoxElement.style.setProperty('--b-cssvar-css-route-group-thread-z-index', (-1 * i - 1).toString());\n      thisThreadBoxElement.setAttribute('push-direction', pushDirection);\n      thisThreadBoxElement.setAttribute('push-state', '1');\n      thisItemElement.setAttribute('push-direction', pushDirection);\n      thisItemElement.setAttribute('push-state', '1');\n    }\n\n    itemElement.addEventListener(\n      'transitionend',\n      function () {\n        // Reset the push direction and push state\n        for (let i = 0; i < elementsBelowLength; i++) {\n          const thisItemElement = elementsBelowItemElement[i];\n          const thisThreadBoxElement = elementsBelowThreadBoxElement[i];\n          thisThreadBoxElement.setAttribute('push-direction', '0');\n          thisThreadBoxElement.setAttribute('push-state', '0');\n          thisItemElement.setAttribute('push-direction', '0');\n          thisItemElement.setAttribute('push-state', '0');\n        }\n        // Deposit the element\n        threadBoxElement.setAttribute('stretching', 'false');\n        itemElement.setAttribute('stretching', 'false');\n      },\n      { once: true }\n    );\n\n    itemElement.addEventListener(\n      'transitionstart',\n      function () {\n        // Transition the elements below\n        for (let i = 0; i < elementsBelowLength; i++) {\n          const thisItemElement = elementsBelowItemElement[i];\n          const thisThreadBoxElement = elementsBelowThreadBoxElement[i];\n          thisThreadBoxElement.setAttribute('push-state', '2');\n          thisItemElement.setAttribute('push-state', '2');\n        }\n      },\n      { once: true }\n    );\n  }\n\n  // Switch the state of the stretching element\n  if (stretched) {\n    if (animation) {\n      itemBodyElement.addEventListener(\n        'transitionend',\n        function () {\n          itemBodyElement.setAttribute('displayed', 'false');\n        },\n        { once: true }\n      );\n    } else {\n      itemBodyElement.setAttribute('displayed', 'false');\n    }\n    itemElement.setAttribute('stretched', 'false');\n    threadBoxElement.setAttribute('stretched', 'false');\n  } else {\n    itemBodyElement.setAttribute('displayed', 'true');\n    itemElement.setAttribute('stretched', 'true');\n    threadBoxElement.setAttribute('stretched', 'true');\n  }\n}\n\nexport function switchRouteBodyTab(itemID: string, tabCode: number): void {\n  const itemElement = elementQuerySelector(RouteGroupsElement, `.css_route_group_item#${itemID}`);\n  const buttons = elementQuerySelector(itemElement, '.css_route_group_item_buttons');\n  const button = elementQuerySelectorAll(buttons, '.css_route_group_item_button[highlighted=\"true\"][type=\"tab\"]');\n  for (const t of button) {\n    t.setAttribute('highlighted', 'false');\n  }\n  elementQuerySelector(buttons, `.css_route_group_item_button[code=\"${tabCode}\"]`).setAttribute('highlighted', 'true');\n  switch (tabCode) {\n    case 0:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'true');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_nearby_locations').setAttribute('displayed', 'false');\n      break;\n    case 1:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'true');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_nearby_locations').setAttribute('displayed', 'false');\n      break;\n    case 2:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'true');\n      elementQuerySelector(itemElement, '.css_route_group_item_nearby_locations').setAttribute('displayed', 'false');\n      break;\n    case 3:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_nearby_locations').setAttribute('displayed', 'true');\n      break;\n    default:\n      break;\n  }\n}\n"],"names":["RouteField","documentQuerySelector","RouteHeadElement","elementQuerySelector","RouteNameElement","RouteButtonRightElement","RouteUpdateTimerElement","RouteGroupTabsElement","RouteGroupTabsTrayElement","RouteGroupTabLineTrackElement","RouteGroupTabLineElement","RouteGroupsElement","previousIntegration","previousAnimation","previousSkeletonScreen","routeSliding_initialIndex","routeSliding_targetIndex","routeSliding_groupQuantity","routeSliding_groupStyles","routeSliding_fieldWidth","routeSliding_sliding","routeRefreshTimer_retryInterval","routeRefreshTimer_baseInterval","routeRefreshTimer_minInterval","routeRefreshTimer_dynamicInterval","routeRefreshTimer_dynamic","routeRefreshTimer_lastUpdate","routeRefreshTimer_nextUpdate","routeRefreshTimer_currentRequestID","routeRefreshTimer_refreshing","routeRefreshTimer_streaming","routeRefreshTimer_streamStarted","currentRouteIDSet_RouteID","currentRouteIDSet_PathAttributeId","tabPadding","initializeRouteSliding","addEventListener","Math","round","scrollLeft","passive","event","currentIndex","target","initialSize","width","offset","targetSize","tabWidth","abs","updateRouteCSS","groupQuantity","tabLineWidth","percentage","style","setProperty","toString","toFixed","handleDataReceivingProgressUpdates","CustomEvent","offsetRatio","detail","progress","stage","document","removeEventListener","generateElementOfThreadBox","identifier","generateIdentifier","element","createElement","classList","add","id","setAttribute","innerHTML","generateElementOfItem","threadBoxIdentifier","getIconHTML","generateElementOfGroup","tracksElement","threadTrackElement","threadBoxSpace","itemsTrackElement","itemSpaceElement","appendChild","updateRouteField","integration","skeletonScreen","animation","updateItem","thisItemElement","thisThreadBoxElement","thisItem","previousItem","updateStatus","thisThreadStatusElement","currentThreadSlideElement","nextThreadSlideElement","thisItemStatusElement","currentItemSlideElement","nextItemSlideElememt","status","code","innerText","text","thisItemElementRect","getBoundingClientRect","top","left","bottom","right","windowWidth","window","innerWidth","windowHeight","innerHeight","remove","once","updateSegmentBuffer","booleanToString","segmentBuffer","isSegmentBuffer","updateName","name","updateBuses","buses","length","map","bus","onThisRoute","carNumber","RouteName","type","join","updateOverlappingRoutes","overlappingRoutes","route","RouteEndPoints","html","RouteID","PathAttributeId","updateBusArrivalTimes","busArrivalTimes","busArrivalTime","personalSchedule","indexToDay","day","timeObjectToString","period","start","end","chart","updateNearbyLocations","nearbyLocations","nearbyLocation","distance","hash","updateNearest","nearest","updateThread","previousProgress","thisProgress","thisThreadProgressElement","updateStretch","updateAnimation","updateSkeletonScreen","updateSaveToFolderButton","saveToFolderButtonElement","onclick","openSaveToFolder","isFolderContentSaved","then","e","updateScheduleNotificationButton","scheduleNotificationButtonElement","openScheduleNotification","time","havingNotifcationSchedules","stopHasNotifcationSchedules","compareThings","WindowSize","querySize","FieldWidth","FieldHeight","height","itemQuantity","groupedItems","cumulativeOffset","i","getTextWidth","RouteDestination","RouteDeparture","openRouteDetails","currentGroupSeatQuantity","elementQuerySelectorAll","capacity","newGroupsFragment","DocumentFragment","newTabsFragment","o","newGroupElement","newTabElement","append","GroupElements","TabElements","groupIndex","RouteGroupElements","groupKey","thisGroupElement","thisGroupItemsTrackElement","thisGroupThreadsTrackElement","currentItemSeatQuantity","newItemsFragment","newThreadsFragment","newThreadBoxElement","newItemElement","thisGroupItemElements","thisGroupThreadElements","itemIndex","thisTabElement","scrollTop","j","hasOwnProperty","refreshRoute","_refreshRoute","apply","arguments","playing_animation","getSettingOptionValue","refresh_interval_setting","busArrivalTimeChartSize","dynamic","baseInterval","integrateRoute","updateRate","getUpdateRate","Date","getTime","max","dataUpdateTime","streamRoute","setTimeout","err","promptMessage","openRoute","pushPageHistory","logRecentView","defaultItemQuantity","floor","push","goBack","sequence","position","longitude","latitude","isStartingPoint","isEndingPoint","g_0","g_1","setUpRouteFieldSkeletonScreen","closePreviousPage","closeRoute","openPreviousPage","switchRoute","stretchRouteItem","itemElementID","threadBoxElementID","itemElement","itemBodyElement","threadBoxElement","parentElement","elementsBelowThreadBoxElement","getElementsBelow","elementsBelowItemElement","elementsBelowLength","itemsTrackElementRect","itemElementRect","threadTrackElementRect","threadBoxElementY","itemElementY","stretched","getAttribute","pushDirection","switchRouteBodyTab","itemID","tabCode","_step","buttons","_iterator","_createForOfIteratorHelper","s","n","done","value","f"],"sourceRoot":""}