{"version":3,"file":"fb35d9e24542aec54658.js","mappings":"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","sources":["webpack://bus/./src/interface/route/details/properties.ts","webpack://bus/./src/interface/route/details/index.ts","webpack://bus/./src/interface/register-notification/index.ts","webpack://bus/./src/interface/route/details/actions.ts","webpack://bus/./src/interface/route/details/calendar.ts"],"sourcesContent":["import { GeneratedElement } from '../../index';\nimport { booleanToString, compareThings } from '../../../tools/index';\nimport { getIconHTML } from '../../icons/index';\nimport { elementQuerySelector, elementQuerySelectorAll } from '../../../tools/query-selector';\nimport { getSettingOptionValue } from '../../../data/settings/index';\n\nlet previousProperties = [];\nlet previousAnimation: boolean = true;\nlet previousSkeletonScreen: boolean = false;\n\nfunction generateElementOfProperty(): GeneratedElement {\n  var element = document.createElement('div');\n  element.classList.add('css_route_details_property');\n  element.innerHTML = /*html*/ `<div class=\"css_route_details_property_icon\"></div><div class=\"css_route_details_property_value\"></div>`;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nexport function setUppropertiesGroupSkeletonScreen(Field: HTMLElement): void {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  var defaultPropertyQuantity = 5;\n  var properties = [];\n  for (let i = 0; i < defaultPropertyQuantity; i++) {\n    properties.push({\n      key: i,\n      icon: 'none',\n      value: ''\n    });\n  }\n  updatePropertiesField(Field, properties, true, playing_animation);\n}\n\nexport function updatePropertiesField(Field: HTMLElement, properties: Array, skeletonScreen: boolean, animation: boolean): void {\n  function updateProperty(thisElement: HTMLElement, thisProperty: object, previousProperty: object): void {\n    function updateIcon(thisElement: HTMLElement, thisProperty: object): void {\n      elementQuerySelector(thisElement, '.css_route_details_property_icon').innerHTML = getIconHTML(thisProperty.icon);\n    }\n\n    function updateValue(thisElement: HTMLElement, thisProperty: object): void {\n      elementQuerySelector(thisElement, '.css_route_details_property_value').innerText = thisProperty.value;\n    }\n\n    function updateAnimation(thisElement: HTMLElement, animation: boolean): void {\n      thisElement.setAttribute('animation', booleanToString(animation));\n    }\n\n    function updateSkeletonScreen(thisElement: HTMLElement, skeletonScreen: boolean): void {\n      thisElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    }\n\n    if (previousProperty === null) {\n      updateIcon(thisElement, thisProperty);\n      updateValue(thisElement, thisProperty);\n      updateAnimation(thisElement, animation);\n      updateSkeletonScreen(thisElement, skeletonScreen);\n    } else {\n      if (!compareThings(previousProperty, thisProperty)) {\n        updateIcon(thisElement, thisProperty);\n      }\n      if (!compareThings(previousProperty, thisProperty)) {\n        updateValue(thisElement, thisProperty);\n      }\n      if (!(previousAnimation === animation)) {\n        updateAnimation(thisElement, animation);\n      }\n      if (!(previousSkeletonScreen === skeletonScreen)) {\n        updateSkeletonScreen(thisElement, skeletonScreen);\n      }\n    }\n  }\n\n  var propertyQuantity = properties.length;\n\n  Field.setAttribute('skeleton-screen', skeletonScreen);\n\n  const currentPropertySeatQuantity = elementQuerySelectorAll(Field, `.css_route_details_group_body .css_route_details_property`).length;\n  if (!(propertyQuantity === currentPropertySeatQuantity)) {\n    const capacity = currentPropertySeatQuantity - propertyQuantity;\n    if (capacity < 0) {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        // const propertyIndex = currentPropertySeatQuantity + o;\n        const newPropertyElement = generateElementOfProperty(skeletonScreen);\n        elementQuerySelector(Field, '.css_route_details_group_body').appendChild(newPropertyElement.element);\n      }\n    } else {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const propertyIndex = currentPropertySeatQuantity - 1 - o;\n        elementQuerySelectorAll(Field, `.css_route_details_group_body .css_route_details_property`)[propertyIndex].remove();\n      }\n    }\n  }\n\n  for (let i = 0; i < propertyQuantity; i++) {\n    const thisPropertyElement = elementQuerySelectorAll(Field, `.css_route_details_group_body .css_route_details_property`)[i];\n    const thisProperty = properties[i];\n    if (previousProperties.length === 0) {\n      updateProperty(thisPropertyElement, thisProperty, null);\n    } else {\n      updateProperty(thisPropertyElement, thisProperty, previousProperties[i]);\n    }\n  }\n\n  previousProperties = properties;\n  previousAnimation = animation;\n  previousSkeletonScreen = skeletonScreen;\n}\n","import { integrateRouteDetails } from '../../../data/route/details';\nimport { setUpCalendarGroupSkeletonScreen, updateCalendarGroup } from './calendar';\nimport { setUppropertiesGroupSkeletonScreen, updatePropertiesField } from './properties';\nimport { booleanToString, generateIdentifier } from '../../../tools/index';\nimport { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../../tools/query-selector';\nimport { isFolderContentSaved } from '../../../data/folder/index';\nimport { pushPageHistory, revokePageHistory } from '../../index';\nimport { getSettingOptionValue } from '../../../data/settings/index';\n\nexport const RouteDetailsField = documentQuerySelector('.css_route_details_field');\nexport const RouteDetailsBodyElement = elementQuerySelector(RouteDetailsField, '.css_route_details_body');\nexport const RouteDetailsGroupsElement = elementQuerySelector(RouteDetailsBodyElement, '.css_route_details_groups');\n\nexport const CalendarGroupElement = elementQuerySelector(RouteDetailsGroupsElement, '.css_route_details_group[group=\"calendar\"]');\nexport const CalendarGroupBodyElement = elementQuerySelector(CalendarGroupElement, '.css_route_details_group_body');\nexport const CalendarDaysElement = elementQuerySelector(CalendarGroupBodyElement, '.css_route_details_calendar_days');\nexport const CalendarEventGroupsElement = elementQuerySelector(CalendarGroupBodyElement, '.css_route_details_calendar_event_groups');\n\nexport const ActionsGroupElememt = elementQuerySelector(RouteDetailsField, '.css_route_details_body .css_route_details_groups .css_route_details_group[group=\"actions\"]');\nexport const svaeToFolderActionButtonElement = elementQuerySelector(ActionsGroupElememt, '.css_route_details_group_body .css_route_details_action_button[action=\"save-to-folder\"]');\nexport const getPermalinkActionButton = elementQuerySelector(ActionsGroupElememt, '.css_route_details_group_body .css_route_details_action_button[action=\"get-permalink\"]');\n\nexport const PropertiesGroupElement = elementQuerySelector(RouteDetailsField, '.css_route_details_body .css_route_details_groups .css_route_details_group[group=\"properties\"]');\n\nasync function initializeRouteDetailsField(RouteID: number, PathAttributeId: Array<number>) {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const existence = await isFolderContentSaved('route', RouteID);\n  svaeToFolderActionButtonElement.setAttribute('animation', booleanToString(playing_animation));\n  svaeToFolderActionButtonElement.setAttribute('highlighted', booleanToString(existence));\n  svaeToFolderActionButtonElement.setAttribute('onclick', `bus.folder.openSaveToFolder('route', [${RouteID}])`);\n  getPermalinkActionButton.setAttribute('animation', booleanToString(playing_animation));\n  getPermalinkActionButton.setAttribute('onclick', `bus.route.shareRoutePermalink(${RouteID})`);\n  setUppropertiesGroupSkeletonScreen(PropertiesGroupElement);\n  setUpCalendarGroupSkeletonScreen();\n  const requestID = generateIdentifier('r');\n  const integration = await integrateRouteDetails(RouteID, PathAttributeId, requestID);\n  updatePropertiesField(PropertiesGroupElement, integration.properties, false, playing_animation);\n  updateCalendarGroup(integration.calendar, false, playing_animation);\n}\n\nexport function openRouteDetails(RouteID: number, PathAttributeId: Array<number>): void {\n  pushPageHistory('RouteDetails');\n  RouteDetailsField.setAttribute('displayed', 'true');\n  initializeRouteDetailsField(RouteID, PathAttributeId);\n}\n\nexport function closeRouteDetails(): void {\n  revokePageHistory('RouteDetails');\n  RouteDetailsField.setAttribute('displayed', 'false');\n  const CalendarEventGroupElements = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group');\n  for (const CalendarEventGroupElement of CalendarEventGroupElements) {\n    CalendarEventGroupElement.remove();\n  }\n  const CalendarDayElements = elementQuerySelectorAll(CalendarDaysElement, '.css_route_details_calendar_day');\n  for (const CalendarDayElement of CalendarDayElements) {\n    CalendarDayElement.remove();\n  }\n}\n","import { registerNotificationClient } from '../../data/notification/apis/registerNotificationClient/index';\nimport { getNotificationProvider, setNotificationProvider } from '../../data/notification/index';\nimport { isValidURL } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { closePreviousPage, openPreviousPage, pushPageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst RegisterNotificationField = documentQuerySelector('.css_register_notification_field');\nconst RegisterNotificationBodyElement = elementQuerySelector(RegisterNotificationField, '.css_register_notification_body');\nconst RegisterNotificationGroupsElement = elementQuerySelector(RegisterNotificationBodyElement, '.css_register_notification_groups');\n\nconst ProviderInputElement = elementQuerySelector(RegisterNotificationGroupsElement, '.css_register_notification_group[group=\"provider\"] .css_register_notification_group_body input');\nconst RgistrationKeyInputElement = elementQuerySelector(RegisterNotificationGroupsElement, '.css_register_notification_group[group=\"registration-key\"] .css_register_notification_group_body input');\n\nfunction initializeRegisterNotificationField() {\n  ProviderInputElement.value = getNotificationProvider();\n  RgistrationKeyInputElement.value = '';\n}\n\nexport function openRegisterNotification(): void {\n  pushPageHistory('RegisterNotification');\n  RegisterNotificationField.setAttribute('displayed', 'true');\n  initializeRegisterNotificationField();\n  closePreviousPage();\n}\n\nexport function closeRegisterNotification(): void {\n  // revokePageHistory('RegisterNotification');\n  RegisterNotificationField.setAttribute('displayed', 'false');\n  openPreviousPage();\n}\n\nexport async function saveFormulatedRegisterNotification() {\n  promptMessage('處理中', 'manufacturing');\n  const provider = ProviderInputElement.value;\n  const registrationKey = RgistrationKeyInputElement.value;\n  if (!isValidURL(provider)) {\n    promptMessage('無效的提供者', 'error');\n    return;\n  }\n  // register\n  setNotificationProvider(provider);\n  const registering = await registerNotificationClient(registrationKey);\n  if (registering) {\n    promptMessage('註冊成功', 'check_circle');\n    return;\n  } else {\n    promptMessage('註冊失敗', 'error');\n    return;\n  }\n}\n","import { searchRouteByRouteID } from '../../../data/search/index';\nimport { getPermalink } from '../../../tools/permalink';\nimport { promptMessage } from '../../prompt/index';\n\nexport async function shareRoutePermalink(RouteID: number) {\n  const thisRoute = await searchRouteByRouteID(RouteID);\n  if (thisRoute !== false) {\n    const link = getPermalink(0, {\n      id: RouteID,\n      name: thisRoute.n\n    });\n    if (navigator.share) {\n      navigator\n        .share({\n          title: thisRoute.n,\n          url: link\n        })\n        .then(() => {\n          promptMessage('已分享路線連結', 'link');\n        })\n        .catch((e) => {\n          promptMessage('已取消分享連結', 'cancel');\n          console.error(e);\n        });\n    }\n  }\n}\n","import { GeneratedElement, querySize } from '../../index';\nimport { elementQuerySelector, elementQuerySelectorAll } from '../../../tools/query-selector';\nimport { getSettingOptionValue } from '../../../data/settings/index';\nimport { getCSSVariableValue } from '../../../tools/style';\nimport { drawRoundedRect } from '../../../tools/graphic';\nimport { Calendar, CalendarDay, CalendarEvent, CalendarEventGroup } from '../../../data/route/details';\nimport { booleanToString } from '../../../tools/index';\nimport { CalendarDaysElement, CalendarEventGroupsElement } from './index';\n\n/*\nconst RouteDetailsField = documentQuerySelector('.css_route_details_field');\nconst RouteDetailsBodyElement = elementQuerySelector(RouteDetailsField, '.css_route_details_body');\nconst RouteDetailsGroupsElement = elementQuerySelector(RouteDetailsBodyElement, '.css_route_details_groups');\nconst CalendarGroupElement = elementQuerySelector(RouteDetailsGroupsElement, '.css_route_details_group[group=\"calendar\"]');\nconst CalendarGroupBodyElement = elementQuerySelector(CalendarGroupElement, '.css_route_details_group_body');\nconst CalendarDaysElement = elementQuerySelector(CalendarGroupBodyElement, '.css_route_details_calendar_days');\nconst CalendarEventGroupsElement = elementQuerySelector(CalendarGroupBodyElement, '.css_route_details_calendar_event_groups');\n*/\n\nconst calendar_ratio = 60;\nconst scaleLimit = Math.floor(4096 / (calendar_ratio * 24));\nconst gridlineBoxHeight = 10;\nconst gridlineWidth = 1.2;\nconst gridlineLabelWidthLimit = 45;\nconst fontFamily: string = '\"Noto Sans TC\", sans-serif';\n\nlet canvasSize = querySize('route-details-canvas');\nlet canvasWidth = canvasSize.width;\nlet canvasHeight = canvasSize.height;\nlet canvasScale = Math.min(window.devicePixelRatio, scaleLimit) || 1;\n\nlet previousCalendar = {} as Calendar;\nlet previousAnimation: boolean = true;\nlet previousSkeletonScreen: boolean = false;\n\nfunction resizeRouteDetailsCalendarCanvas(canvas: HTMLCanvasElement): void {\n  canvasSize = querySize('route-details-canvas');\n  canvasWidth = canvasSize.width;\n  canvasHeight = canvasSize.height;\n  canvasScale = Math.min(window.devicePixelRatio, scaleLimit) || 1;\n\n  // Set the new size\n  canvas.width = canvasWidth * canvasScale;\n  canvas.height = canvasHeight * canvasScale;\n\n  // Reset transformations before scaling\n  const context = canvas.getContext('2d');\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.scale(canvasScale, canvasScale);\n}\n\nfunction generateElementOfDay(): GeneratedElement {\n  // const identifier = generateIdentifier('i');\n  const element = document.createElement('div');\n  element.classList.add('css_route_details_calendar_day');\n  // element.id = identifier;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nfunction generateElementOfEventGroup(): GeneratedElement {\n  // const identifier = generateIdentifier('i');\n  const element = document.createElement('div');\n  element.classList.add('css_route_details_calendar_event_group');\n  element.innerHTML = `<canvas class=\"css_route_details_calendar_event_group_canvas\"></canvas>`;\n  // element.id = identifier;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nexport function setUpCalendarGroupSkeletonScreen() {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const defaultEventQuantity = {\n    d_0: 47,\n    d_1: 47,\n    d_2: 47,\n    d_3: 47,\n    d_4: 47,\n    d_5: 47,\n    d_6: 47\n  };\n  const defaultDayQuantity = 7;\n  let calendarEventGroups = {};\n  let calendarDays = {};\n  for (let i = 0; i < defaultDayQuantity; i++) {\n    const eventGroupKey = `d_${i}`;\n    calendarEventGroups[eventGroupKey] = [];\n    calendarDays[eventGroupKey] = {\n      day: i,\n      code: `d_{i}`,\n      name: ''\n    };\n    for (let j = 0; j < defaultEventQuantity[eventGroupKey]; j++) {\n      const date = new Date();\n      date.setHours(0);\n      date.setMinutes(j * 30);\n      date.setSeconds(0);\n      date.setMilliseconds(0);\n      calendarEventGroups[eventGroupKey].push({\n        date: date,\n        dateString: '',\n        duration: 15\n      });\n    }\n  }\n  updateCalendarGroup(\n    {\n      calendarEventGroups: calendarEventGroups,\n      calendarDays: calendarDays,\n      calendarDayQuantity: defaultDayQuantity,\n      calendarEventQuantity: defaultEventQuantity\n    },\n    true,\n    playing_animation\n  );\n}\n\nfunction updateDay(thisDayElement: HTMLElement, thisDay: CalendarDay, currentDay: number, skeletonScreen: boolean, animation: boolean, index: number): void {\n  thisDayElement.innerText = thisDay.name;\n  thisDayElement.setAttribute('day', index.toString());\n  thisDayElement.setAttribute('onclick', `bus.route.switchCalendarDay(${index})`);\n  thisDayElement.setAttribute('highlighted', currentDay === index ? 'true' : 'false');\n  thisDayElement.setAttribute('animation', booleanToString(animation));\n  thisDayElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n}\n\nfunction updateEventGroup(thisCalendarEventGroupElement: HTMLElement, thisCalendarEventGroup: CalendarEventGroup, currentDay: number, mainColor: string, mainColorR: string, mainColorG: string, mainColorB: string, mainColorA: string, gridColor: string, index: number): void {\n  function drawGridline(thisContext: CanvasRenderingContext2D, hours: number, gridColor: string): void {\n    const boxX = 0;\n    const boxY = hours * calendar_ratio;\n\n    // Cache the color value once\n    thisContext.fillStyle = gridColor;\n\n    // Draw line\n    thisContext.fillRect(boxX + gridlineLabelWidthLimit, boxY + 5, canvasWidth - gridlineLabelWidthLimit, gridlineWidth);\n\n    // Draw label\n    thisContext.font = `400 ${12}px ${fontFamily}`;\n    thisContext.textBaseline = 'top';\n    const labelText = `${String(hours).padStart(2, '0')}:00`;\n    const labelMeasurement = thisContext.measureText(labelText);\n    const labelWidth = labelMeasurement.width;\n    const labelHeight = labelMeasurement.actualBoundingBoxDescent;\n    thisContext.fillText(labelText, (gridlineLabelWidthLimit - labelWidth) / 2, boxY + (gridlineBoxHeight - labelHeight) / 2, labelWidth);\n  }\n\n  function drawEvent(thisContext: CanvasRenderingContext2D, thisCalendarEvent: CalendarEvent, mainColor: string, mainColorR: string, mainColorG: string, mainColorB: string, mainColorA: string): void {\n    // Calculate the start of the day for this event only once.\n    const thisDayStart = new Date();\n    thisDayStart.setDate(1);\n    thisDayStart.setMonth(0);\n    thisDayStart.setFullYear(thisCalendarEvent.date.getFullYear());\n    thisDayStart.setMonth(thisCalendarEvent.date.getMonth());\n    thisDayStart.setDate(thisCalendarEvent.date.getDate());\n    thisDayStart.setHours(0);\n    thisDayStart.setMinutes(0);\n    thisDayStart.setSeconds(0);\n    thisDayStart.setMilliseconds(0);\n\n    const boxX = gridlineLabelWidthLimit;\n    const boxY = ((thisCalendarEvent.date.getTime() - thisDayStart.getTime()) / (24 * 60 * 60 * 1000)) * 24 * calendar_ratio;\n    const boxWidth = canvasWidth - gridlineLabelWidthLimit;\n    const boxHeight = ((thisCalendarEvent.duration * 60 * 1000) / (24 * 60 * 60 * 1000)) * 24 * calendar_ratio;\n\n    // Draw background with rounded rectangle\n    drawRoundedRect(thisContext, boxX, boxY, boxWidth, boxHeight, 3, `rgba(${mainColorR}, ${mainColorG}, ${mainColorB}, ${mainColorA})`);\n\n    // Draw decoration (a thin rounded rectangle)\n    drawRoundedRect(thisContext, boxX, boxY, 3, boxHeight, { tl: 3, tr: 0, bl: 3, br: 0 }, mainColor);\n\n    // Draw event text\n    thisContext.font = `400 ${14}px ${fontFamily}`;\n    thisContext.textBaseline = 'top';\n    thisContext.fillStyle = mainColor;\n    const text = thisCalendarEvent.dateString;\n    const textMeasurement = thisContext.measureText(text);\n    const textWidth = textMeasurement.width;\n    const textHeight = textMeasurement.actualBoundingBoxDescent;\n    thisContext.fillText(text, boxX + 8, boxY + (boxHeight - textHeight) / 2, textWidth);\n  }\n\n  function updateDisplayed(thisCalendarEventGroupElement: HTMLElement, currentDay: number, index: number): void {\n    // Set the displayed attribute based on whether it is the current day.\n    const isDisplayed = currentDay === index;\n    thisCalendarEventGroupElement.setAttribute('displayed', booleanToString(isDisplayed));\n  }\n\n  // Get the canvas and its 2D context.\n  const thisCalendarEventGroupCanvas = elementQuerySelector(thisCalendarEventGroupElement, '.css_route_details_calendar_event_group_canvas') as HTMLCanvasElement;\n  const thisCalendarEventGroupCanvasContext = thisCalendarEventGroupCanvas.getContext('2d');\n\n  // Update the displayed attribute\n  updateDisplayed(thisCalendarEventGroupElement, currentDay, index);\n\n  // Always resize the canvas to ensure proper dimensions.\n  resizeRouteDetailsCalendarCanvas(thisCalendarEventGroupCanvas);\n\n  const isDisplayed = currentDay === index;\n  if (isDisplayed) {\n    // Clear the canvas and redraw the content when displayed.\n    thisCalendarEventGroupCanvasContext.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    // Draw the gridlines.\n    for (let hours = 0; hours < 24; hours++) {\n      drawGridline(thisCalendarEventGroupCanvasContext, hours, gridColor);\n    }\n\n    // Draw all events for this group.\n    for (const thisCalendarEvent of thisCalendarEventGroup) {\n      drawEvent(thisCalendarEventGroupCanvasContext, thisCalendarEvent, mainColor, mainColorR, mainColorG, mainColorB, mainColorA);\n    }\n  } else {\n    // When not displayed, clear the canvas.\n    thisCalendarEventGroupCanvasContext.clearRect(0, 0, canvasWidth, canvasHeight);\n  }\n}\n\nexport function updateCalendarGroup(calendar: Calendar, skeletonScreen: boolean, animation: boolean): void {\n  // The default day to display.\n  const currentDay = new Date().getDay();\n\n  // Retrieve the CSS variable values just once\n  const mainColorR = getCSSVariableValue('--b-cssvar-main-color-r');\n  const mainColorG = getCSSVariableValue('--b-cssvar-main-color-g');\n  const mainColorB = getCSSVariableValue('--b-cssvar-main-color-b');\n  const mainColorA = getCSSVariableValue('--b-cssvar-main-color-opacity-e');\n  const mainColor = getCSSVariableValue('--b-cssvar-main-color');\n  const gridColor = getCSSVariableValue('--b-cssvar-ededf2');\n\n  const eventGroups = calendar.calendarDays;\n  const eventGroupQuantity = calendar.calendarDayQuantity;\n  const calendarEventGroups = calendar.calendarEventGroups;\n  const eventQuantity = calendar.calendarEventQuantity;\n\n  const currentEventGroupSeatQuantity = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group').length;\n  if (eventGroupQuantity !== currentEventGroupSeatQuantity) {\n    const capacity = currentEventGroupSeatQuantity - eventGroupQuantity;\n    if (capacity < 0) {\n      // Add missing day and event group elements.\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const newDayElement = generateElementOfDay();\n        CalendarDaysElement.appendChild(newDayElement.element);\n        const newEventGroupElement = generateElementOfEventGroup();\n        CalendarEventGroupsElement.appendChild(newEventGroupElement.element);\n      }\n    } else {\n      // Remove extra elements.\n      const CalendarDayElements = elementQuerySelectorAll(CalendarDaysElement, '.css_route_details_calendar_day');\n      const CalendarEventGroupElements = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group');\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const eventGroupIndex = currentEventGroupSeatQuantity - 1 - o;\n        CalendarDayElements[eventGroupIndex].remove();\n        CalendarEventGroupElements[eventGroupIndex].remove();\n      }\n    }\n  }\n\n  // Update each day and its corresponding event group.\n  const CalendarDayElements = elementQuerySelectorAll(CalendarDaysElement, '.css_route_details_calendar_day');\n  const CalendarEventGroupElements = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group');\n  for (let i = 0; i < eventGroupQuantity; i++) {\n    const eventGroupKey = `d_${i}`;\n    const thisDay = eventGroups[eventGroupKey];\n    const thisEventGroup = calendarEventGroups[eventGroupKey];\n\n    const thisDayElement = CalendarDayElements[i];\n    const thisEventGroupElement = CalendarEventGroupElements[i];\n\n    updateDay(thisDayElement, thisDay, currentDay, skeletonScreen, animation, i);\n    updateEventGroup(thisEventGroupElement, thisEventGroup, currentDay, mainColor, mainColorR, mainColorG, mainColorB, mainColorA, gridColor, i);\n  }\n\n  previousCalendar = calendar;\n  previousAnimation = animation;\n  previousSkeletonScreen = skeletonScreen;\n}\n\nexport function switchCalendarDay(day: number): void {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const calendarDayElements = elementQuerySelectorAll(CalendarDaysElement, '.css_route_details_calendar_day');\n  const CalendarEventGroupElements = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group');\n  for (let i = 0; i < 7; i++) {\n    const thisCalendarDayElement = calendarDayElements[i];\n    // const thisCalendarDayElementDay = parseInt(thisCalendarDayElement.getAttribute('day'));\n    const thisEventGroupElement = CalendarEventGroupElements[i];\n    // if (thisCalendarDayElementDay === day) {\n    /*\n      thisCalendarDayElement.setAttribute('highlighted', 'true');\n      thisEventGroupElement.setAttribute('displayed', 'true');\n      */\n    const eventGroupKey = `d_${i}`;\n    const calendarEventGroup = previousCalendar?.calendarEventGroups[eventGroupKey];\n    const calendarDay = previousCalendar?.calendarDays[eventGroupKey];\n    if (calendarEventGroup && calendarDay) {\n      // Retrieve the CSS variable values just once\n      const mainColorR = getCSSVariableValue('--b-cssvar-main-color-r');\n      const mainColorG = getCSSVariableValue('--b-cssvar-main-color-g');\n      const mainColorB = getCSSVariableValue('--b-cssvar-main-color-b');\n      const mainColorA = getCSSVariableValue('--b-cssvar-main-color-opacity-e');\n      const mainColor = getCSSVariableValue('--b-cssvar-main-color');\n      const gridColor = getCSSVariableValue('--b-cssvar-ededf2');\n\n      // Reuse the drawing logic from updateEventGroup and updateDay for the visible event group.\n      updateDay(thisCalendarDayElement, calendarDay, day, false, playing_animation, i);\n      updateEventGroup(thisEventGroupElement, calendarEventGroup, day, mainColor, mainColorR, mainColorG, mainColorB, mainColorA, gridColor, i);\n    }\n    /*} else {\n      thisCalendarDayElement.setAttribute('highlighted', 'false');\n      thisEventGroupElement.setAttribute('displayed', 'false');\n\n      // Clear the canvas for non-displayed elements.\n      const canvas = elementQuerySelector(thisEventGroupElement, '.css_route_details_calendar_event_group_canvas') as HTMLCanvasElement;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n    }*/\n  }\n}\n"],"names":["previousProperties","previousAnimation","previousSkeletonScreen","setUppropertiesGroupSkeletonScreen","Field","playing_animation","getSettingOptionValue","properties","i","push","key","icon","value","updatePropertiesField","skeletonScreen","animation","updateProperty","thisElement","thisProperty","previousProperty","updateIcon","elementQuerySelector","innerHTML","getIconHTML","updateValue","innerText","updateAnimation","setAttribute","booleanToString","updateSkeletonScreen","compareThings","propertyQuantity","length","element","currentPropertySeatQuantity","elementQuerySelectorAll","capacity","o","Math","abs","newPropertyElement","document","createElement","classList","add","id","appendChild","propertyIndex","remove","thisPropertyElement","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_createForOfIteratorHelper","Array","isArray","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_n","F","asyncGeneratorStep","RouteDetailsField","documentQuerySelector","RouteDetailsBodyElement","RouteDetailsGroupsElement","CalendarGroupElement","CalendarGroupBodyElement","CalendarDaysElement","CalendarEventGroupsElement","ActionsGroupElememt","svaeToFolderActionButtonElement","getPermalinkActionButton","PropertiesGroupElement","_initializeRouteDetailsField","_callee","RouteID","PathAttributeId","existence","requestID","integration","_context","isFolderContentSaved","concat","setUpCalendarGroupSkeletonScreen","generateIdentifier","integrateRouteDetails","updateCalendarGroup","calendar","arguments","apply","_next","_throw","openRouteDetails","pushPageHistory","_x","_x2","initializeRouteDetailsField","closeRouteDetails","revokePageHistory","_step","_iterator","err","_step2","_iterator2","RegisterNotificationField","RegisterNotificationBodyElement","RegisterNotificationGroupsElement","ProviderInputElement","RgistrationKeyInputElement","openRegisterNotification","getNotificationProvider","closePreviousPage","closeRegisterNotification","openPreviousPage","saveFormulatedRegisterNotification","_saveFormulatedRegisterNotification","provider","registrationKey","promptMessage","isValidURL","setNotificationProvider","registerNotificationClient","shareRoutePermalink","_shareRoutePermalink","thisRoute","link","searchRouteByRouteID","getPermalink","navigator","share","title","url","console","error","calendar_ratio","scaleLimit","floor","gridlineBoxHeight","gridlineWidth","gridlineLabelWidthLimit","fontFamily","canvasSize","querySize","canvasWidth","width","canvasHeight","height","canvasScale","min","window","devicePixelRatio","previousCalendar","generateElementOfEventGroup","defaultEventQuantity","d_0","d_1","d_2","d_3","d_4","d_5","d_6","calendarEventGroups","calendarDays","eventGroupKey","day","code","j","date","Date","setHours","setMinutes","setSeconds","setMilliseconds","dateString","duration","calendarDayQuantity","calendarEventQuantity","updateDay","thisDayElement","thisDay","currentDay","index","updateEventGroup","thisCalendarEventGroupElement","thisCalendarEventGroup","mainColor","mainColorR","mainColorG","mainColorB","mainColorA","gridColor","drawGridline","thisContext","hours","boxY","fillStyle","fillRect","font","textBaseline","labelText","String","padStart","labelMeasurement","measureText","labelWidth","labelHeight","actualBoundingBoxDescent","fillText","drawEvent","thisCalendarEvent","thisDayStart","setDate","setMonth","setFullYear","getFullYear","getMonth","getDate","boxX","getTime","boxWidth","boxHeight","drawRoundedRect","tl","tr","bl","br","text","textMeasurement","textWidth","textHeight","thisCalendarEventGroupCanvas","thisCalendarEventGroupCanvasContext","getContext","isDisplayed","updateDisplayed","canvas","context","setTransform","scale","resizeRouteDetailsCalendarCanvas","clearRect","getDay","getCSSVariableValue","eventGroups","eventGroupQuantity","currentEventGroupSeatQuantity","newDayElement","newEventGroupElement","CalendarDayElements","CalendarEventGroupElements","eventGroupIndex","thisEventGroup","thisEventGroupElement","switchCalendarDay","calendarDayElements","_previousCalendar","_previousCalendar2","thisCalendarDayElement","calendarEventGroup","calendarDay"],"sourceRoot":""}