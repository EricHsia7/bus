{"version":3,"file":"3791f56aefe739c6fccf.js","mappings":"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","sources":["webpack://bus/./src/interface/register-notification/index.ts","webpack://bus/./src/interface/route/details/actions.ts","webpack://bus/./src/interface/route/details/calendar.ts","webpack://bus/./src/interface/route/details/properties.ts","webpack://bus/./src/interface/route/details/index.ts"],"sourcesContent":["import { registerNotificationClient } from '../../data/notification/apis/registerNotificationClient/index';\nimport { getNotificationProvider, setNotificationProvider } from '../../data/notification/index';\nimport { isValidURL } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { closePreviousPage, openPreviousPage, pushPageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst RegisterNotificationField = documentQuerySelector('.css_register_notification_field');\nconst RegisterNotificationBodyElement = elementQuerySelector(RegisterNotificationField, '.css_register_notification_body');\nconst RegisterNotificationGroupsElement = elementQuerySelector(RegisterNotificationBodyElement, '.css_register_notification_groups');\n\nconst ProviderInputElement = elementQuerySelector(RegisterNotificationGroupsElement, '.css_register_notification_group[group=\"provider\"] .css_register_notification_group_body input');\nconst RgistrationKeyInputElement = elementQuerySelector(RegisterNotificationGroupsElement, '.css_register_notification_group[group=\"registration-key\"] .css_register_notification_group_body input');\n\nfunction initializeRegisterNotificationField() {\n  ProviderInputElement.value = getNotificationProvider();\n  RgistrationKeyInputElement.value = '';\n}\n\nexport function openRegisterNotification(): void {\n  pushPageHistory('RegisterNotification');\n  RegisterNotificationField.setAttribute('displayed', 'true');\n  initializeRegisterNotificationField();\n  closePreviousPage();\n}\n\nexport function closeRegisterNotification(): void {\n  // revokePageHistory('RegisterNotification');\n  RegisterNotificationField.setAttribute('displayed', 'false');\n  openPreviousPage();\n}\n\nexport async function saveFormulatedRegisterNotification() {\n  promptMessage('處理中', 'manufacturing');\n  const provider = ProviderInputElement.value;\n  const registrationKey = RgistrationKeyInputElement.value;\n  if (!isValidURL(provider)) {\n    promptMessage('無效的提供者', 'error');\n    return;\n  }\n  // register\n  setNotificationProvider(provider);\n  const registering = await registerNotificationClient(registrationKey);\n  if (registering) {\n    promptMessage('註冊成功', 'check_circle');\n    return;\n  } else {\n    promptMessage('註冊失敗', 'error');\n    return;\n  }\n}\n","import { searchRouteByRouteID } from '../../../data/search/index';\nimport { getPermalink } from '../../../tools/permalink';\nimport { promptMessage } from '../../prompt/index';\n\n\nexport async function shareRoutePermalink(RouteID: number) {\n  var search = await searchRouteByRouteID(RouteID);\n  if (search.length > 0) {\n    var link = getPermalink(0, {\n      id: RouteID,\n      name: search[0].n\n    });\n    if (navigator.share) {\n      navigator\n        .share({\n          title: search[0].n,\n          url: link\n        })\n        .then(() => {\n          promptMessage('已分享路線連結', 'link');\n        })\n        .catch((e) => {\n          promptMessage('已取消分享連結', 'cancel');\n          console.error(e);\n        });\n    }\n  }\n}\n","import { GeneratedElement, querySize } from '../../index';\nimport { elementQuerySelector, elementQuerySelectorAll } from '../../../tools/query-selector';\nimport { getSettingOptionValue } from '../../../data/settings/index';\nimport { getCSSVariableValue } from '../../../tools/style';\nimport { drawRoundedRect } from '../../../tools/graphic';\nimport { Calendar, CalendarDay, CalendarEvent, CalendarEventGroup } from '../../../data/route/details';\nimport { booleanToString } from '../../../tools/index';\nimport { CalendarDaysElement, CalendarEventGroupsElement } from './index';\n\n/*\nconst RouteDetailsField = documentQuerySelector('.css_route_details_field');\nconst RouteDetailsBodyElement = elementQuerySelector(RouteDetailsField, '.css_route_details_body');\nconst RouteDetailsGroupsElement = elementQuerySelector(RouteDetailsBodyElement, '.css_route_details_groups');\nconst CalendarGroupElement = elementQuerySelector(RouteDetailsGroupsElement, '.css_route_details_group[group=\"calendar\"]');\nconst CalendarGroupBodyElement = elementQuerySelector(CalendarGroupElement, '.css_route_details_group_body');\nconst CalendarDaysElement = elementQuerySelector(CalendarGroupBodyElement, '.css_route_details_calendar_days');\nconst CalendarEventGroupsElement = elementQuerySelector(CalendarGroupBodyElement, '.css_route_details_calendar_event_groups');\n*/\n\nconst calendar_ratio = 60;\nconst scaleLimit = Math.floor(4096 / (calendar_ratio * 24));\nconst gridlineBoxHeight = 10;\nconst gridlineWidth = 1.2;\nconst gridlineLabelWidthLimit = 45;\nconst fontFamily: string = '\"Noto Sans TC\", sans-serif';\n\nlet canvasSize = querySize('route-details-canvas');\nlet canvasWidth = canvasSize.width;\nlet canvasHeight = canvasSize.height;\nlet canvasScale = Math.min(window.devicePixelRatio, scaleLimit) || 1;\n\nlet previousCalendar = {} as Calendar;\nlet previousAnimation: boolean = true;\nlet previousSkeletonScreen: boolean = false;\n\nfunction resizeRouteDetailsCalendarCanvas(canvas: HTMLCanvasElement): void {\n  canvasSize = querySize('route-details-canvas');\n  canvasWidth = canvasSize.width;\n  canvasHeight = canvasSize.height;\n  canvasScale = Math.min(window.devicePixelRatio, scaleLimit) || 1;\n\n  // Set the new size\n  canvas.width = canvasWidth * canvasScale;\n  canvas.height = canvasHeight * canvasScale;\n\n  // Reset transformations before scaling\n  const context = canvas.getContext('2d');\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.scale(canvasScale, canvasScale);\n}\n\nfunction generateElementOfDay(): GeneratedElement {\n  // const identifier = generateIdentifier('i');\n  const element = document.createElement('div');\n  element.classList.add('css_route_details_calendar_day');\n  // element.id = identifier;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nfunction generateElementOfEventGroup(): GeneratedElement {\n  // const identifier = generateIdentifier('i');\n  const element = document.createElement('div');\n  element.classList.add('css_route_details_calendar_event_group');\n  element.innerHTML = `<canvas class=\"css_route_details_calendar_event_group_canvas\"></canvas>`;\n  // element.id = identifier;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nexport function setUpCalendarGroupSkeletonScreen() {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const defaultEventQuantity = {\n    d_0: 47,\n    d_1: 47,\n    d_2: 47,\n    d_3: 47,\n    d_4: 47,\n    d_5: 47,\n    d_6: 47\n  };\n  const defaultDayQuantity = 7;\n  let calendarEventGroups = {};\n  let calendarDays = {};\n  for (let i = 0; i < defaultDayQuantity; i++) {\n    const eventGroupKey = `d_${i}`;\n    calendarEventGroups[eventGroupKey] = [];\n    calendarDays[eventGroupKey] = {\n      day: i,\n      code: `d_{i}`,\n      name: ''\n    };\n    for (let j = 0; j < defaultEventQuantity[eventGroupKey]; j++) {\n      const date = new Date();\n      date.setHours(0);\n      date.setMinutes(j * 30);\n      date.setSeconds(0);\n      date.setMilliseconds(0);\n      calendarEventGroups[eventGroupKey].push({\n        date: date,\n        dateString: '',\n        duration: 15\n      });\n    }\n  }\n  updateCalendarGroup(\n    {\n      calendarEventGroups: calendarEventGroups,\n      calendarDays: calendarDays,\n      calendarDayQuantity: defaultDayQuantity,\n      calendarEventQuantity: defaultEventQuantity\n    },\n    true,\n    playing_animation\n  );\n}\n\nfunction updateDay(thisDayElement: HTMLElement, thisDay: CalendarDay, currentDay: number, skeletonScreen: boolean, animation: boolean, index: number): void {\n  thisDayElement.innerText = thisDay.name;\n  thisDayElement.setAttribute('day', index.toString());\n  thisDayElement.setAttribute('onclick', `bus.route.switchCalendarDay(${index})`);\n  thisDayElement.setAttribute('highlighted', currentDay === index ? 'true' : 'false');\n  thisDayElement.setAttribute('animation', booleanToString(animation));\n  thisDayElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n}\n\nfunction updateEventGroup(thisCalendarEventGroupElement: HTMLElement, thisCalendarEventGroup: CalendarEventGroup, currentDay: number, mainColor: string, mainColorR: string, mainColorG: string, mainColorB: string, mainColorA: string, gridColor: string, index: number): void {\n  function drawGridline(thisContext: CanvasRenderingContext2D, hours: number, gridColor: string): void {\n    const boxX = 0;\n    const boxY = hours * calendar_ratio;\n\n    // Cache the color value once\n    thisContext.fillStyle = gridColor;\n\n    // Draw line\n    thisContext.fillRect(boxX + gridlineLabelWidthLimit, boxY + 5, canvasWidth - gridlineLabelWidthLimit, gridlineWidth);\n\n    // Draw label\n    thisContext.font = `400 ${12}px ${fontFamily}`;\n    thisContext.textBaseline = 'top';\n    const labelText = `${String(hours).padStart(2, '0')}:00`;\n    const labelMeasurement = thisContext.measureText(labelText);\n    const labelWidth = labelMeasurement.width;\n    const labelHeight = labelMeasurement.actualBoundingBoxDescent;\n    thisContext.fillText(labelText, (gridlineLabelWidthLimit - labelWidth) / 2, boxY + (gridlineBoxHeight - labelHeight) / 2, labelWidth);\n  }\n\n  function drawEvent(thisContext: CanvasRenderingContext2D, thisCalendarEvent: CalendarEvent, mainColor: string, mainColorR: string, mainColorG: string, mainColorB: string, mainColorA: string): void {\n    // Calculate the start of the day for this event only once.\n    const thisDayStart = new Date();\n    thisDayStart.setDate(1);\n    thisDayStart.setMonth(0);\n    thisDayStart.setFullYear(thisCalendarEvent.date.getFullYear());\n    thisDayStart.setMonth(thisCalendarEvent.date.getMonth());\n    thisDayStart.setDate(thisCalendarEvent.date.getDate());\n    thisDayStart.setHours(0);\n    thisDayStart.setMinutes(0);\n    thisDayStart.setSeconds(0);\n    thisDayStart.setMilliseconds(0);\n\n    const boxX = gridlineLabelWidthLimit;\n    const boxY = ((thisCalendarEvent.date.getTime() - thisDayStart.getTime()) / (24 * 60 * 60 * 1000)) * 24 * calendar_ratio;\n    const boxWidth = canvasWidth - gridlineLabelWidthLimit;\n    const boxHeight = ((thisCalendarEvent.duration * 60 * 1000) / (24 * 60 * 60 * 1000)) * 24 * calendar_ratio;\n\n    // Draw background with rounded rectangle\n    drawRoundedRect(thisContext, boxX, boxY, boxWidth, boxHeight, 3, `rgba(${mainColorR}, ${mainColorG}, ${mainColorB}, ${mainColorA})`);\n\n    // Draw decoration (a thin rounded rectangle)\n    drawRoundedRect(thisContext, boxX, boxY, 3, boxHeight, { tl: 3, tr: 0, bl: 3, br: 0 }, mainColor);\n\n    // Draw event text\n    thisContext.font = `400 ${14}px ${fontFamily}`;\n    thisContext.textBaseline = 'top';\n    thisContext.fillStyle = mainColor;\n    const text = thisCalendarEvent.dateString;\n    const textMeasurement = thisContext.measureText(text);\n    const textWidth = textMeasurement.width;\n    const textHeight = textMeasurement.actualBoundingBoxDescent;\n    thisContext.fillText(text, boxX + 8, boxY + (boxHeight - textHeight) / 2, textWidth);\n  }\n\n  function updateDisplayed(thisCalendarEventGroupElement: HTMLElement, currentDay: number, index: number): void {\n    // Set the displayed attribute based on whether it is the current day.\n    const isDisplayed = currentDay === index;\n    thisCalendarEventGroupElement.setAttribute('displayed', booleanToString(isDisplayed));\n  }\n\n  // Get the canvas and its 2D context.\n  const thisCalendarEventGroupCanvas = elementQuerySelector(thisCalendarEventGroupElement, '.css_route_details_calendar_event_group_canvas') as HTMLCanvasElement;\n  const thisCalendarEventGroupCanvasContext = thisCalendarEventGroupCanvas.getContext('2d');\n\n  // Update the displayed attribute\n  updateDisplayed(thisCalendarEventGroupElement, currentDay, index);\n\n  // Always resize the canvas to ensure proper dimensions.\n  resizeRouteDetailsCalendarCanvas(thisCalendarEventGroupCanvas);\n\n  const isDisplayed = currentDay === index;\n  if (isDisplayed) {\n    // Clear the canvas and redraw the content when displayed.\n    thisCalendarEventGroupCanvasContext.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    // Draw the gridlines.\n    for (let hours = 0; hours < 24; hours++) {\n      drawGridline(thisCalendarEventGroupCanvasContext, hours, gridColor);\n    }\n\n    // Draw all events for this group.\n    for (const thisCalendarEvent of thisCalendarEventGroup) {\n      drawEvent(thisCalendarEventGroupCanvasContext, thisCalendarEvent, mainColor, mainColorR, mainColorG, mainColorB, mainColorA);\n    }\n  } else {\n    // When not displayed, clear the canvas.\n    thisCalendarEventGroupCanvasContext.clearRect(0, 0, canvasWidth, canvasHeight);\n  }\n}\n\nexport function updateCalendarGroup(calendar: Calendar, skeletonScreen: boolean, animation: boolean): void {\n  // The default day to display.\n  const currentDay = new Date().getDay();\n\n  // Retrieve the CSS variable values just once\n  const mainColorR = getCSSVariableValue('--b-cssvar-main-color-r');\n  const mainColorG = getCSSVariableValue('--b-cssvar-main-color-g');\n  const mainColorB = getCSSVariableValue('--b-cssvar-main-color-b');\n  const mainColorA = getCSSVariableValue('--b-cssvar-main-color-opacity-e');\n  const mainColor = getCSSVariableValue('--b-cssvar-main-color');\n  const gridColor = getCSSVariableValue('--b-cssvar-ededf2');\n\n  const eventGroups = calendar.calendarDays;\n  const eventGroupQuantity = calendar.calendarDayQuantity;\n  const calendarEventGroups = calendar.calendarEventGroups;\n  const eventQuantity = calendar.calendarEventQuantity;\n\n  const currentEventGroupSeatQuantity = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group').length;\n  if (eventGroupQuantity !== currentEventGroupSeatQuantity) {\n    const capacity = currentEventGroupSeatQuantity - eventGroupQuantity;\n    if (capacity < 0) {\n      // Add missing day and event group elements.\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const newDayElement = generateElementOfDay();\n        CalendarDaysElement.appendChild(newDayElement.element);\n        const newEventGroupElement = generateElementOfEventGroup();\n        CalendarEventGroupsElement.appendChild(newEventGroupElement.element);\n      }\n    } else {\n      // Remove extra elements.\n      const CalendarDayElements = elementQuerySelectorAll(CalendarDaysElement, '.css_route_details_calendar_day');\n      const CalendarEventGroupElements = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group');\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const eventGroupIndex = currentEventGroupSeatQuantity - 1 - o;\n        CalendarDayElements[eventGroupIndex].remove();\n        CalendarEventGroupElements[eventGroupIndex].remove();\n      }\n    }\n  }\n\n  // Update each day and its corresponding event group.\n  const CalendarDayElements = elementQuerySelectorAll(CalendarDaysElement, '.css_route_details_calendar_day');\n  const CalendarEventGroupElements = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group');\n  for (let i = 0; i < eventGroupQuantity; i++) {\n    const eventGroupKey = `d_${i}`;\n    const thisDay = eventGroups[eventGroupKey];\n    const thisEventGroup = calendarEventGroups[eventGroupKey];\n\n    const thisDayElement = CalendarDayElements[i];\n    const thisEventGroupElement = CalendarEventGroupElements[i];\n\n    updateDay(thisDayElement, thisDay, currentDay, skeletonScreen, animation, i);\n    updateEventGroup(thisEventGroupElement, thisEventGroup, currentDay, mainColor, mainColorR, mainColorG, mainColorB, mainColorA, gridColor, i);\n  }\n\n  previousCalendar = calendar;\n  previousAnimation = animation;\n  previousSkeletonScreen = skeletonScreen;\n}\n\nexport function switchCalendarDay(day: number): void {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const calendarDayElements = elementQuerySelectorAll(CalendarDaysElement, '.css_route_details_calendar_day');\n  const CalendarEventGroupElements = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group');\n  for (let i = 0; i < 7; i++) {\n    const thisCalendarDayElement = calendarDayElements[i];\n    // const thisCalendarDayElementDay = parseInt(thisCalendarDayElement.getAttribute('day'));\n    const thisEventGroupElement = CalendarEventGroupElements[i];\n    // if (thisCalendarDayElementDay === day) {\n    /*\n      thisCalendarDayElement.setAttribute('highlighted', 'true');\n      thisEventGroupElement.setAttribute('displayed', 'true');\n      */\n    const eventGroupKey = `d_${i}`;\n    const calendarEventGroup = previousCalendar?.calendarEventGroups[eventGroupKey];\n    const calendarDay = previousCalendar?.calendarDays[eventGroupKey];\n    if (calendarEventGroup && calendarDay) {\n      // Retrieve the CSS variable values just once\n      const mainColorR = getCSSVariableValue('--b-cssvar-main-color-r');\n      const mainColorG = getCSSVariableValue('--b-cssvar-main-color-g');\n      const mainColorB = getCSSVariableValue('--b-cssvar-main-color-b');\n      const mainColorA = getCSSVariableValue('--b-cssvar-main-color-opacity-e');\n      const mainColor = getCSSVariableValue('--b-cssvar-main-color');\n      const gridColor = getCSSVariableValue('--b-cssvar-ededf2');\n\n      // Reuse the drawing logic from updateEventGroup and updateDay for the visible event group.\n      updateDay(thisCalendarDayElement, calendarDay, day, false, playing_animation, i);\n      updateEventGroup(thisEventGroupElement, calendarEventGroup, day, mainColor, mainColorR, mainColorG, mainColorB, mainColorA, gridColor, i);\n    }\n    /*} else {\n      thisCalendarDayElement.setAttribute('highlighted', 'false');\n      thisEventGroupElement.setAttribute('displayed', 'false');\n\n      // Clear the canvas for non-displayed elements.\n      const canvas = elementQuerySelector(thisEventGroupElement, '.css_route_details_calendar_event_group_canvas') as HTMLCanvasElement;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n    }*/\n  }\n}\n","import { GeneratedElement } from '../../index';\nimport { booleanToString, compareThings } from '../../../tools/index';\nimport { getIconHTML } from '../../icons/index';\nimport { elementQuerySelector, elementQuerySelectorAll } from '../../../tools/query-selector';\nimport { getSettingOptionValue } from '../../../data/settings/index';\n\nlet previousProperties = [];\nlet previousAnimation: boolean = true;\nlet previousSkeletonScreen: boolean = false;\n\nfunction generateElementOfProperty(): GeneratedElement {\n  var element = document.createElement('div');\n  element.classList.add('css_route_details_property');\n  element.innerHTML = /*html*/ `<div class=\"css_route_details_property_icon\"></div><div class=\"css_route_details_property_value\"></div>`;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nexport function setUppropertiesGroupSkeletonScreen(Field: HTMLElement): void {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  var defaultPropertyQuantity = 5;\n  var properties = [];\n  for (let i = 0; i < defaultPropertyQuantity; i++) {\n    properties.push({\n      key: i,\n      icon: 'none',\n      value: ''\n    });\n  }\n  updatePropertiesField(Field, properties, true, playing_animation);\n}\n\nexport function updatePropertiesField(Field: HTMLElement, properties: Array, skeletonScreen: boolean, animation: boolean): void {\n  function updateProperty(thisElement: HTMLElement, thisProperty: object, previousProperty: object): void {\n    function updateIcon(thisElement: HTMLElement, thisProperty: object): void {\n      elementQuerySelector(thisElement, '.css_route_details_property_icon').innerHTML = getIconHTML(thisProperty.icon);\n    }\n\n    function updateValue(thisElement: HTMLElement, thisProperty: object): void {\n      elementQuerySelector(thisElement, '.css_route_details_property_value').innerText = thisProperty.value;\n    }\n\n    function updateAnimation(thisElement: HTMLElement, animation: boolean): void {\n      thisElement.setAttribute('animation', booleanToString(animation));\n    }\n\n    function updateSkeletonScreen(thisElement: HTMLElement, skeletonScreen: boolean): void {\n      thisElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    }\n\n    if (previousProperty === null) {\n      updateIcon(thisElement, thisProperty);\n      updateValue(thisElement, thisProperty);\n      updateAnimation(thisElement, animation);\n      updateSkeletonScreen(thisElement, skeletonScreen);\n    } else {\n      if (!compareThings(previousProperty, thisProperty)) {\n        updateIcon(thisElement, thisProperty);\n      }\n      if (!compareThings(previousProperty, thisProperty)) {\n        updateValue(thisElement, thisProperty);\n      }\n      if (!(previousAnimation === animation)) {\n        updateAnimation(thisElement, animation);\n      }\n      if (!(previousSkeletonScreen === skeletonScreen)) {\n        updateSkeletonScreen(thisElement, skeletonScreen);\n      }\n    }\n  }\n\n  var propertyQuantity = properties.length;\n\n  Field.setAttribute('skeleton-screen', skeletonScreen);\n\n  const currentPropertySeatQuantity = elementQuerySelectorAll(Field, `.css_route_details_group_body .css_route_details_property`).length;\n  if (!(propertyQuantity === currentPropertySeatQuantity)) {\n    const capacity = currentPropertySeatQuantity - propertyQuantity;\n    if (capacity < 0) {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        // const propertyIndex = currentPropertySeatQuantity + o;\n        const newPropertyElement = generateElementOfProperty(skeletonScreen);\n        elementQuerySelector(Field, '.css_route_details_group_body').appendChild(newPropertyElement.element);\n      }\n    } else {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const propertyIndex = currentPropertySeatQuantity - 1 - o;\n        elementQuerySelectorAll(Field, `.css_route_details_group_body .css_route_details_property`)[propertyIndex].remove();\n      }\n    }\n  }\n\n  for (let i = 0; i < propertyQuantity; i++) {\n    const thisPropertyElement = elementQuerySelectorAll(Field, `.css_route_details_group_body .css_route_details_property`)[i];\n    const thisProperty = properties[i];\n    if (previousProperties.length === 0) {\n      updateProperty(thisPropertyElement, thisProperty, null);\n    } else {\n      updateProperty(thisPropertyElement, thisProperty, previousProperties[i]);\n    }\n  }\n\n  previousProperties = properties;\n  previousAnimation = animation;\n  previousSkeletonScreen = skeletonScreen;\n}\n","import { integrateRouteDetails } from '../../../data/route/details';\nimport { setUpCalendarGroupSkeletonScreen, updateCalendarGroup } from './calendar';\nimport { setUppropertiesGroupSkeletonScreen, updatePropertiesField } from './properties';\nimport { booleanToString, generateIdentifier } from '../../../tools/index';\nimport { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../../tools/query-selector';\nimport { isSaved } from '../../../data/folder/index';\nimport { pushPageHistory, revokePageHistory } from '../../index';\nimport { getSettingOptionValue } from '../../../data/settings/index';\n\nexport const RouteDetailsField = documentQuerySelector('.css_route_details_field');\nexport const RouteDetailsBodyElement = elementQuerySelector(RouteDetailsField, '.css_route_details_body');\nexport const RouteDetailsGroupsElement = elementQuerySelector(RouteDetailsBodyElement, '.css_route_details_groups');\n\nexport const CalendarGroupElement = elementQuerySelector(RouteDetailsGroupsElement, '.css_route_details_group[group=\"calendar\"]');\nexport const CalendarGroupBodyElement = elementQuerySelector(CalendarGroupElement, '.css_route_details_group_body');\nexport const CalendarDaysElement = elementQuerySelector(CalendarGroupBodyElement, '.css_route_details_calendar_days');\nexport const CalendarEventGroupsElement = elementQuerySelector(CalendarGroupBodyElement, '.css_route_details_calendar_event_groups');\n\nexport const ActionsGroupElememt = elementQuerySelector(RouteDetailsField, '.css_route_details_body .css_route_details_groups .css_route_details_group[group=\"actions\"]');\nexport const svaeToFolderActionButtonElement = elementQuerySelector(ActionsGroupElememt, '.css_route_details_group_body .css_route_details_action_button[action=\"save-to-folder\"]');\nexport const getPermalinkActionButton = elementQuerySelector(ActionsGroupElememt, '.css_route_details_group_body .css_route_details_action_button[action=\"get-permalink\"]');\n\nexport const PropertiesGroupElement = elementQuerySelector(RouteDetailsField, '.css_route_details_body .css_route_details_groups .css_route_details_group[group=\"properties\"]');\n\nasync function initializeRouteDetailsField(RouteID: number, PathAttributeId: Array<number>) {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const existence = await isSaved('route', RouteID);\n  svaeToFolderActionButtonElement.setAttribute('animation', booleanToString(playing_animation));\n  svaeToFolderActionButtonElement.setAttribute('highlighted', booleanToString(existence));\n  svaeToFolderActionButtonElement.setAttribute('onclick', `bus.folder.openSaveToFolder('route', [${RouteID}])`);\n  getPermalinkActionButton.setAttribute('animation', booleanToString(playing_animation));\n  getPermalinkActionButton.setAttribute('onclick', `bus.route.shareRoutePermalink(${RouteID})`);\n  setUppropertiesGroupSkeletonScreen(PropertiesGroupElement);\n  setUpCalendarGroupSkeletonScreen();\n  const requestID = generateIdentifier('r');\n  const integration = await integrateRouteDetails(RouteID, PathAttributeId, requestID);\n  updatePropertiesField(PropertiesGroupElement, integration.properties, false, playing_animation);\n  updateCalendarGroup(integration.calendar, false, playing_animation);\n}\n\nexport function openRouteDetails(RouteID: number, PathAttributeId: Array<number>): void {\n  pushPageHistory('RouteDetails');\n  RouteDetailsField.setAttribute('displayed', 'true');\n  initializeRouteDetailsField(RouteID, PathAttributeId);\n}\n\nexport function closeRouteDetails(): void {\n  revokePageHistory('RouteDetails');\n  RouteDetailsField.setAttribute('displayed', 'false');\n  const CalendarEventGroupElements = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group');\n  for (const CalendarEventGroupElement of CalendarEventGroupElements) {\n    CalendarEventGroupElement.remove();\n  }\n  const CalendarDayElements = elementQuerySelectorAll(CalendarDaysElement, '.css_route_details_calendar_day');\n  for (const CalendarDayElement of CalendarDayElements) {\n    CalendarDayElement.remove();\n  }\n}\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","RegisterNotificationField","documentQuerySelector","RegisterNotificationBodyElement","elementQuerySelector","RegisterNotificationGroupsElement","ProviderInputElement","RgistrationKeyInputElement","openRegisterNotification","pushPageHistory","setAttribute","getNotificationProvider","closePreviousPage","closeRegisterNotification","openPreviousPage","saveFormulatedRegisterNotification","_saveFormulatedRegisterNotification","apply","arguments","_callee","provider","registrationKey","_context","promptMessage","isValidURL","setNotificationProvider","registerNotificationClient","_next","_throw","shareRoutePermalink","_x","_shareRoutePermalink","RouteID","search","link","searchRouteByRouteID","getPermalink","id","navigator","share","title","url","console","error","calendar_ratio","scaleLimit","Math","floor","gridlineBoxHeight","gridlineWidth","gridlineLabelWidthLimit","fontFamily","canvasSize","querySize","canvasWidth","width","canvasHeight","height","canvasScale","min","window","devicePixelRatio","previousCalendar","generateElementOfEventGroup","element","document","createElement","classList","add","innerHTML","setUpCalendarGroupSkeletonScreen","playing_animation","getSettingOptionValue","defaultEventQuantity","d_0","d_1","d_2","d_3","d_4","d_5","d_6","calendarEventGroups","calendarDays","eventGroupKey","concat","day","code","j","date","Date","setHours","setMinutes","setSeconds","setMilliseconds","dateString","duration","updateCalendarGroup","calendarDayQuantity","calendarEventQuantity","updateDay","thisDayElement","thisDay","currentDay","skeletonScreen","animation","index","innerText","toString","booleanToString","updateEventGroup","thisCalendarEventGroupElement","thisCalendarEventGroup","mainColor","mainColorR","mainColorG","mainColorB","mainColorA","gridColor","drawGridline","thisContext","hours","boxY","fillStyle","fillRect","font","textBaseline","labelText","String","padStart","labelMeasurement","measureText","labelWidth","labelHeight","actualBoundingBoxDescent","fillText","drawEvent","thisCalendarEvent","thisDayStart","setDate","setMonth","setFullYear","getFullYear","getMonth","getDate","boxX","getTime","boxWidth","boxHeight","drawRoundedRect","tl","tr","bl","br","text","textMeasurement","textWidth","textHeight","thisCalendarEventGroupCanvas","thisCalendarEventGroupCanvasContext","getContext","isDisplayed","updateDisplayed","canvas","context","setTransform","scale","resizeRouteDetailsCalendarCanvas","clearRect","_step","_iterator","_createForOfIteratorHelper","err","calendar","getDay","getCSSVariableValue","eventGroups","eventGroupQuantity","currentEventGroupSeatQuantity","elementQuerySelectorAll","CalendarEventGroupsElement","capacity","abs","newDayElement","CalendarDaysElement","appendChild","newEventGroupElement","CalendarDayElements","CalendarEventGroupElements","eventGroupIndex","remove","thisEventGroup","thisEventGroupElement","switchCalendarDay","calendarDayElements","_previousCalendar","_previousCalendar2","thisCalendarDayElement","calendarEventGroup","calendarDay","previousProperties","previousAnimation","previousSkeletonScreen","setUppropertiesGroupSkeletonScreen","Field","properties","key","icon","updatePropertiesField","updateProperty","thisElement","thisProperty","previousProperty","updateIcon","getIconHTML","updateValue","updateAnimation","updateSkeletonScreen","compareThings","propertyQuantity","currentPropertySeatQuantity","newPropertyElement","propertyIndex","thisPropertyElement","Array","isArray","_arrayLikeToArray","from","test","_unsupportedIterableToArray","_n","F","RouteDetailsField","RouteDetailsBodyElement","RouteDetailsGroupsElement","CalendarGroupElement","CalendarGroupBodyElement","ActionsGroupElememt","svaeToFolderActionButtonElement","getPermalinkActionButton","PropertiesGroupElement","_initializeRouteDetailsField","PathAttributeId","existence","requestID","integration","isSaved","generateIdentifier","integrateRouteDetails","openRouteDetails","_x2","initializeRouteDetailsField","closeRouteDetails","revokePageHistory","_step2","_iterator2"],"sourceRoot":""}