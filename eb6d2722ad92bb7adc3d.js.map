{"version":3,"file":"eb6d2722ad92bb7adc3d.js","mappings":";4WACAA,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAA8E,QAAA,KAAAvE,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAA8E,QAAA,GAAAzE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAgF,oBAAA,SAAA/E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAgF,YAAA,QAAAjF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAoC,IAAApC,EAAAoF,UAAAhD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAgF,oBAAA9E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAyF,KAAA,SAAAxF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAwF,UAAA,SAAAzB,IAAA,KAAA/D,EAAA4E,QAAA,KAAA7E,EAAAC,EAAAyF,MAAA,GAAA1F,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA4F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA2F,OAAA,IAAAxF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA4F,MAAA,WAAA5F,GAAAD,EAAA,EAAA8F,KAAA,gBAAAxC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAmE,IAAA,EAAAnC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA+F,EAAA5F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAAM,OAAA,EAAAvE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,UAAAvF,EAAA0D,QAAA,KAAAwB,KAAA,KAAA9E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA4E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,WAAAuB,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA8E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,YAAArD,EAAA,MAAAsC,MAAA,kDAAAsC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAwB,MAAAvF,EAAAyB,KAAAvB,EAAA,oBAAAqF,KAAArF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA+D,SAAAtF,EAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAoE,KAAA,KAAAnE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAAgE,OAAA,SAAAlG,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAiG,SAAAhG,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,QAAA+C,MAAA,0BAAA8C,cAAA,SAAApG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAqG,EAAAhG,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,QAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,OAAAJ,GAAA,YAAAL,EAAAK,EAAA,CAAAK,EAAA6C,KAAAtD,EAAAe,GAAAwE,QAAAtC,QAAAlC,GAAAoC,KAAAlD,EAAAK,EAAA,CAMA,IAAM+F,EAA6C,CACjD,CACEC,UAAW,2BACXC,OAAQ,MAEV,CACED,UAAW,2BACXC,OAAQ,OAkDNC,EAA2BH,EAAkBxB,OAE5C,SAAe4B,IAAkB,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAyCvC,SAAAF,IA1GD,IAAAtG,EA0GC,OA1GDA,EA0GCN,IAAAoF,MAzCM,SAAA2B,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1G,EAAA2G,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA3H,IAAAuB,MAAA,SAAAqG,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA1D,MAAA,OAIuB,OAHtB8C,EAAM,IAAIa,KACVZ,EAAUD,EAAIc,UAEdZ,EAAgB,GAAHa,OADP,gBACgB,cAAAH,EAAA1D,KAAA,GACgB8D,EAAAA,EAAAA,IAAU,EAAGd,GAAc,OAApC,KAA7BC,EAA6BS,EAAAhE,MACA,CAAFgE,EAAA1D,KAAA,SACzBkD,EAA2B,IAAIS,KAAKV,GAA+BW,UACrET,GAAc,EACT1G,EAAI+F,EAA2B,EAAC,aAAE/F,GAAK,GAAC,CAAAiH,EAAA1D,KAAA,SAEiC,GAA1EoD,EAAwB,IAAIO,KADLtB,EAAkB5F,GACa6F,WAAWsB,YACnEV,EAA2BE,GAAqB,CAAAM,EAAA1D,KAAA,SAC/B,OAAnBmD,EAAa1G,EAAI,EAAEiH,EAAA7D,OAAA,oBAJ4BpD,IAAGiH,EAAA1D,KAAA,qBAQlC,IAAhBmD,EAAiB,CAAAO,EAAA1D,KAAA,SACVqD,EAAIF,EAAU,aAAEE,EAAIb,GAAwB,CAAAkB,EAAA1D,KAAA,SAIW,GAFxDuD,GADAQ,EAAuB1B,EAAkBgB,IACYf,UACrDkB,EAA2B,IAAIG,KAAKJ,GAA+BK,UACnEH,EAA6BM,EAAqBxB,SACpDiB,EAA2BT,GAAO,CAAAW,EAAA1D,KAAA,gBAAA0D,EAAA7D,OAAA,uBAGI,mBAA/B4D,EAAyC,CAAAC,EAAA1D,KAAA,YACE,kBAAhDyD,EAA2BzC,YAAYC,KAAwB,CAAAyC,EAAA1D,KAAA,gBAAA0D,EAAA1D,KAAA,GAC3DyD,IAA4B,QAAAC,EAAA1D,KAAA,iBAElCyD,IAA6B,QAZoBJ,IAAGK,EAAA1D,KAAA,wBAAA0D,EAAA1D,KAAA,IAiBtDgE,EAAAA,EAAAA,IAAU,EAAGhB,EAAeF,EAAImB,eAAc,eAAAP,EAAA7D,OAAA,UAC7C,GAAI,eAAA6D,EAAA1D,KAAA,IAELgE,EAAAA,EAAAA,IAAU,EAAGhB,EAAeF,EAAImB,eAAc,eAAAP,EAAA7D,OAAA,UAC7C,GAAI,yBAAA6D,EAAA5B,OAAA,GAAAe,EAAA,IAEdH,EA1GD,eAAA1G,EAAA,KAAAD,EAAA6G,UAAA,WAAArB,SAAA,SAAAtF,EAAAK,GAAA,IAAAK,EAAAP,EAAAuG,MAAA3G,EAAAD,GAAA,SAAAmI,EAAA9H,GAAAgG,EAAAzF,EAAAV,EAAAK,EAAA4H,EAAAC,EAAA,OAAA/H,EAAA,UAAA+H,EAAA/H,GAAAgG,EAAAzF,EAAAV,EAAAK,EAAA4H,EAAAC,EAAA,QAAA/H,EAAA,CAAA8H,OAAA,OA0GCxB,EAAAC,MAAA,KAAAC,UAAA,8WC1GD9G,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAA8E,QAAA,KAAAvE,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAA8E,QAAA,GAAAzE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAgF,oBAAA,SAAA/E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAgF,YAAA,QAAAjF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAoC,IAAApC,EAAAoF,UAAAhD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAgF,oBAAA9E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAyF,KAAA,SAAAxF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAwF,UAAA,SAAAzB,IAAA,KAAA/D,EAAA4E,QAAA,KAAA7E,EAAAC,EAAAyF,MAAA,GAAA1F,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA4F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA2F,OAAA,IAAAxF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA4F,MAAA,WAAA5F,GAAAD,EAAA,EAAA8F,KAAA,gBAAAxC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAmE,IAAA,EAAAnC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA+F,EAAA5F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAAM,OAAA,EAAAvE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,UAAAvF,EAAA0D,QAAA,KAAAwB,KAAA,KAAA9E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA4E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,WAAAuB,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA8E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,YAAArD,EAAA,MAAAsC,MAAA,kDAAAsC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAwB,MAAAvF,EAAAyB,KAAAvB,EAAA,oBAAAqF,KAAArF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA+D,SAAAtF,EAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAoE,KAAA,KAAAnE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAAgE,OAAA,SAAAlG,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAiG,SAAAhG,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,QAAA+C,MAAA,0BAAA8C,cAAA,SAAApG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAqI,EAAAnI,EAAAF,GAAA,IAAAC,EAAA,oBAAAU,QAAAT,EAAAS,OAAAE,WAAAX,EAAA,kBAAAD,EAAA,IAAAqI,MAAAC,QAAArI,KAAAD,EAAA,SAAAC,EAAAU,GAAA,GAAAV,EAAA,qBAAAA,EAAA,OAAAsI,EAAAtI,EAAAU,GAAA,IAAAX,EAAA,GAAAwI,SAAA3G,KAAA5B,GAAA4F,MAAA,uBAAA7F,GAAAC,EAAA+E,cAAAhF,EAAAC,EAAA+E,YAAAC,MAAA,QAAAjF,GAAA,QAAAA,EAAAqI,MAAAI,KAAAxI,GAAA,cAAAD,GAAA,2CAAA0I,KAAA1I,GAAAuI,EAAAtI,EAAAU,QAAA,GAAAgI,CAAA1I,KAAAF,GAAAE,GAAA,iBAAAA,EAAA4E,OAAA,CAAA7E,IAAAC,EAAAD,GAAA,IAAA4I,EAAA,EAAAC,EAAA,oBAAA5G,EAAA4G,EAAAzI,EAAA,kBAAAwI,GAAA3I,EAAA4E,OAAA,CAAAvB,MAAA,IAAAA,MAAA,EAAA9C,MAAAP,EAAA2I,KAAA,EAAA7I,EAAA,SAAAE,GAAA,MAAAA,CAAA,EAAA+B,EAAA6G,EAAA,WAAA/E,UAAA,6IAAAxD,EAAAK,GAAA,EAAAI,GAAA,SAAAkB,EAAA,WAAAjC,EAAAA,EAAA6B,KAAA5B,EAAA,EAAAG,EAAA,eAAAH,EAAAD,EAAAgE,OAAA,OAAArD,EAAAV,EAAAqD,KAAArD,CAAA,EAAAF,EAAA,SAAAE,GAAAc,GAAA,EAAAT,EAAAL,CAAA,EAAA+B,EAAA,eAAArB,GAAA,MAAAX,EAAA,QAAAA,EAAA,oBAAAe,EAAA,MAAAT,CAAA,aAAAiI,EAAAtI,EAAAU,IAAA,MAAAA,GAAAA,EAAAV,EAAA4E,UAAAlE,EAAAV,EAAA4E,QAAA,QAAA9E,EAAA,EAAAK,EAAAiI,MAAA1H,GAAAZ,EAAAY,EAAAZ,IAAAK,EAAAL,GAAAE,EAAAF,GAAA,OAAAK,CAAA,UAAAgG,EAAAhG,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,QAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,OAAAJ,GAAA,YAAAL,EAAAK,EAAA,CAAAK,EAAA6C,KAAAtD,EAAAe,GAAAwE,QAAAtC,QAAAlC,GAAAoC,KAAAlD,EAAAK,EAAA,UAAAwI,EAAA1I,GAAA,sBAAAJ,EAAA,KAAAD,EAAA6G,UAAA,WAAArB,SAAA,SAAAtF,EAAAK,GAAA,IAAAK,EAAAP,EAAAuG,MAAA3G,EAAAD,GAAA,SAAAmI,EAAA9H,GAAAgG,EAAAzF,EAAAV,EAAAK,EAAA4H,EAAAC,EAAA,OAAA/H,EAAA,UAAA+H,EAAA/H,GAAAgG,EAAAzF,EAAAV,EAAAK,EAAA4H,EAAAC,EAAA,QAAA/H,EAAA,CAAA8H,OAAA,OA+FA,IAAMa,EAA6B,CAAC,uBAAwB,mBAAoB,wBAAyB,kBAAmB,QAAS,SAAU,oBAAqB,eAAgB,oBAAqB,eAAgB,aAAc,UAAW,qBAAsB,SAAU,SAAU,UAAW,SAAU,mBAAoB,UAEjUC,EAA2B,CAC7BC,qBAAsB,CACpBC,IAAK,uBACLjE,KAAM,SACNkE,KAAM,SACNC,OAAQ,GACRC,OAAQ,2DACR1H,KAAM,SACN2H,eAAgB,EAChBC,OAAQ,EACRC,QAAS,CACP,CACEvE,KAAM,GAAF4C,QAAK4B,EAAAA,EAAAA,IAAW,GAAI,GAAE,KAAA5B,QAAI4B,EAAAA,EAAAA,IAAW,GAAI,GAAE,KAAA5B,QAAI4B,EAAAA,EAAAA,IAAW,KAAa,IAC3EjJ,MAAO,CACLmB,KAAM,EACN+H,OAAQ,GAEVC,mBAAmB,EACnBC,wBAAyB,GAE3B,CACE3E,KAAM,GAAF4C,QAAK4B,EAAAA,EAAAA,IAAW,GAAI,GAAE,KAAA5B,QAAI4B,EAAAA,EAAAA,IAAW,GAAI,GAAE,KAAA5B,QAAI4B,EAAAA,EAAAA,IAAW,KAAa,IAC3EjJ,MAAO,CACLmB,KAAM,EACN+H,OAAQ,GAEVC,mBAAmB,EACnBC,wBAAyB,GAE3B,CACE3E,KAAM,GAAF4C,QAAK4B,EAAAA,EAAAA,IAAW,GAAI,GAAE,KAAA5B,QAAI4B,EAAAA,EAAAA,IAAW,GAAI,GAAE,KAAA5B,QAAI4B,EAAAA,EAAAA,IAAW,KAAa,IAC3EjJ,MAAO,CACLmB,KAAM,EACN+H,OAAQ,GAEVC,mBAAmB,EACnBC,wBAAyB,GAE3B,CACE3E,KAAM,GAAF4C,QAAK4B,EAAAA,EAAAA,IAAW,GAAI,GAAE,KAAA5B,QAAI4B,EAAAA,EAAAA,IAAW,GAAI,GAAE,KAAA5B,QAAI4B,EAAAA,EAAAA,IAAW,KAAa,IAC3EjJ,MAAO,CACLmB,KAAM,EACN+H,OAAQ,GAEVC,mBAAmB,EACnBC,wBAAyB,IAG7BC,YAAa,iCAEfC,iBAAkB,CAChBZ,IAAK,mBACLjE,KAAM,WACNkE,KAAM,OACNC,OAAQ,GACRC,OAAQ,uDACR1H,KAAM,SACN2H,eAAgB,EAChBC,OAAQ,EACRC,QAAS,CACP,CACEvE,KAAM,KACNzE,MAAO,CACLuJ,aAAc,KACdC,SAAS,EACTrI,KAAM,GAERgI,mBAAmB,EACnBC,uBAAwB,GAE1B,CACE3E,KAAM,MACNzE,MAAO,CACLuJ,aAAc,IACdC,SAAS,EACTrI,KAAM,GAERgI,mBAAmB,EACnBC,uBAAwB,GAE1B,CACE3E,KAAM,MACNzE,MAAO,CACLuJ,aAAc,IACdC,SAAS,EACTrI,KAAM,GAERgI,mBAAmB,EACnBC,uBAAwB,GAE1B,CACE3E,KAAM,MACNzE,MAAO,CACLuJ,aAAc,IACdC,SAAS,EACTrI,KAAM,GAERgI,mBAAmB,EACnBC,uBAAwB,GAE1B,CACE3E,KAAM,MACNzE,MAAO,CACLuJ,aAAc,IACdC,SAAS,EACTrI,KAAM,GAERgI,mBAAmB,EACnBC,uBAAwB,GAE1B,CACE3E,KAAM,MACNzE,MAAO,CACLuJ,aAAc,IACdC,SAAS,EACTrI,KAAM,GAERgI,mBAAmB,EACnBC,uBAAwB,GAE1B,CACE3E,KAAM,MACNzE,MAAO,CACLuJ,aAAc,IACdC,SAAS,EACTrI,KAAM,GAERgI,mBAAmB,EACnBC,uBAAwB,IAG5BC,YAAa,yCAEfI,sBAAuB,CACrBf,IAAK,wBACLjE,KAAM,SACNkE,KAAM,UACNC,OAAQ,GACRC,OAAQ,4DACR1H,KAAM,SACN2H,eAAgB,EAChBC,OAAQ,EACRC,QAAS,CACP,CACEvE,KAAM,KACNzE,MAAO,CACLmB,KAAM,EACNuI,SAAS,GAEXP,mBAAmB,EACnBC,uBAAwB,GAE1B,CACE3E,KAAM,KACNzE,MAAO,CACLmB,KAAM,EACNuI,SAAS,GAEXP,mBAAmB,EACnBC,wBAAyB,IAG7BC,YAAa,0CAEfM,gBAAiB,CACfjB,IAAK,kBACLjE,KAAM,SACNkE,KAAM,MACNC,OAAQ,GACRC,OAAQ,sDACR1H,KAAM,SACN2H,eAAgB,EAChBC,OAAQ,EACRC,QAAS,CACP,CACEvE,KAAM,OACNzE,MAAO,CACLmB,KAAM,EACNyI,OAAQ,cAEVT,mBAAmB,EACnBC,wBAAyB,GAE3B,CACE3E,KAAM,OACNzE,MAAO,CACLmB,KAAM,EACNyI,OAAQ,WAEVT,mBAAmB,EACnBC,wBAAyB,GAE3B,CACE3E,KAAM,OACNzE,MAAO,CACLmB,KAAM,EACNyI,OAAQ,WAEVT,mBAAmB,EACnBC,wBAAyB,IAG7BC,YAAa,2EAEfQ,MAAO,CACLnB,IAAK,QACLjE,KAAM,OACNkE,KAAM,SACNC,OAAQ,GACRC,OAAQ,4CACR1H,KAAM,SACN2H,eAAgB,EAChBC,OAAQ,EACRC,QAAS,CACP,CACEvE,KAAM,KACNzE,MAAO,CACLmB,KAAM,EACNuI,SAAS,GAEXP,mBAAmB,EACnBC,wBAAyB,GAE3B,CACE3E,KAAM,KACNzE,MAAO,CACLmB,KAAM,EACNuI,SAAS,GAEXP,mBAAmB,EACnBC,wBAAyB,IAG7BC,YAAa,gBAEfS,OAAQ,CACNpB,IAAK,SACLjE,KAAM,MACNkE,KAAM,SACNC,OAAQ,GACRzH,KAAM,OACN0H,OAAQ,iCACRQ,YAAa,IAEfU,kBAAmB,CACjBrB,IAAK,oBACLjE,KAAM,QACNkE,KAAM,oBACNC,OAAQ,GACRC,OAAQ,qDACR1H,KAAM,OACNkI,YAAa,IAEfW,aAAc,CACZtB,IAAK,eACLjE,KAAM,KACNkE,KAAM,gBACNC,OAAQ,GACRC,OAAQ,qDACR1H,KAAM,OACNkI,YAAa,IAEfY,kBAAmB,CACjBvB,IAAK,oBACLjE,KAAM,KACNkE,KAAM,YACNU,YAAa,cACbT,OAAQ,GACRzH,KAAM,SACN0H,OAAQ,wDACRC,eAAgB,EAChBC,OAAQ,EACRC,QAAS,CACP,CACEvE,KAAM,KACNzE,MAAO,CACLmB,KAAM,EACNuI,SAAS,GAEXP,mBAAmB,EACnBC,uBAAwB,GAE1B,CACE3E,KAAM,KACNzE,MAAO,CACLmB,KAAM,EACNuI,SAAS,GAEXP,mBAAmB,EACnBC,wBAAyB,KAI/Bc,aAAc,CACZxB,IAAK,eACLjE,KAAM,OACNkE,KAAM,cACNU,YAAa,iBACbT,OAAQ,GACRzH,KAAM,SACN0H,OAAQ,mDACRC,eAAgB,EAChBC,OAAQ,EACRC,QAAS,CACP,CACEvE,KAAM,KACNzE,MAAO,CACLmB,KAAM,EACNuI,SAAS,GAEXP,mBAAmB,EACnBC,wBAAyB,GAE3B,CACE3E,KAAM,KACNzE,MAAO,CACLmB,KAAM,EACNuI,SAAS,GAEXP,mBAAmB,EACnBC,wBAAyB,KAI/Be,WAAY,CACVzB,IAAK,aACLjE,KAAM,QACNkE,KAAM,iBACNC,OAAQ,GACRzH,KAAM,OACN0H,OAAQ,gCACRQ,YAAa,IAEfe,QAAS,CACP1B,IAAK,UACLjE,KAAM,OACNkE,KAAM,WACNC,OAAQ,GACRzH,KAAM,OACN0H,OAAQ,4BACRQ,YAAa,IAEfgB,mBAAoB,CAClB3B,IAAK,qBACLjE,KAAM,OACNkE,KAAM,UACNC,OAAQ,GACRC,OAAQ,qDACR1H,KAAM,SACNkI,YAAa,wBAEfiB,OAAQ,CACN5B,IAAK,SACLjE,KAAM,OACNkE,KAAM,SACNC,OAAQ,GACRzH,KAAM,SACN0H,OAAQ,oCACRQ,YAAa,IAEfkB,OAAQ,CACN7B,IAAK,SACLjE,KAAM,OACNkE,KAAM,WACNC,OAAQ,GACRzH,KAAM,SACN0H,OAAQ,sCACRQ,YAAa,IAEfmB,QAAS,CACP9B,IAAK,UACLjE,KAAM,KACNkE,KAAM,SACNC,OAAQ,GACRzH,KAAM,OACN0H,OAAQ,4CACRQ,YAAa,IAEfoB,OAAQ,CACN/B,IAAK,SACLjE,KAAM,KACNkE,KAAM,SACNC,OAAQ,GACRzH,KAAM,OACN0H,OAAQ,GACRQ,YAAa,IAEfqB,iBAAkB,CAChBhC,IAAK,mBACLjE,KAAM,OACNkE,KAAM,SACNC,OAAQ,GACRzH,KAAM,OACN0H,OAAQ,GACRQ,YAAa,IAEfsB,OAAQ,CACNjC,IAAK,SACLjE,KAAM,SACNkE,KAAM,SACNC,OAAQ,iBACRzH,KAAM,OACN0H,OAAQ,GACRQ,YAAa,KAIV,SAAeuB,IAAkB,OAAAC,EAAA1E,MAAC,KAADC,UAAA,CAkBvC,SAAAyE,IAAA,OAAAA,EAAAvC,EAAAhJ,IAAAoF,MAlBM,SAAA2B,IAAA,IAAAyE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA7L,IAAAuB,MAAA,SAAAqG,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA1D,MAAA,cAAA0D,EAAA1D,KAAA,GACsB4H,EAAAA,EAAAA,IAAe,GAAE,OAAtCN,EAAY5D,EAAAhE,KAAA6H,EAAAnD,EACAkD,GAAY5D,EAAA/B,KAAA,EAAA4F,EAAAtJ,IAAA,WAAAuJ,EAAAD,EAAAnL,KAAAkD,KAAE,CAAFoE,EAAA1D,KAAA,SAAhB,GAAHkF,EAAGsC,EAAAhL,QACRuI,EAAY8C,QAAQ3C,IAAQ,GAAC,CAAAxB,EAAA1D,KAAA,gBAAA0D,EAAA1D,KAAA,IACL8D,EAAAA,EAAAA,IAAU,EAAGoB,GAAI,QACrB,QADhBwC,EAAWhE,EAAAhE,MAEY,WAAvBsF,EAASE,GAAKvH,OACZgK,EAAoBG,SAASJ,GACjC1C,EAASE,GAAKK,OAASoC,GAGE,WAAvB3C,EAASE,GAAKvH,OAChBqH,EAASE,GAAKK,OAASP,EAASE,GAAKI,gBAExC,QAAA5B,EAAA1D,KAAA,gBAAA0D,EAAA1D,KAAA,iBAAA0D,EAAA/B,KAAA,GAAA+B,EAAAqE,GAAArE,EAAA,SAAA6D,EAAAxL,EAAA2H,EAAAqE,IAAA,eAAArE,EAAA/B,KAAA,GAAA4F,EAAAvJ,IAAA0F,EAAAxB,OAAA,mBAAAwB,EAAA7D,OAAA,UAGE,GAAI,yBAAA6D,EAAA5B,OAAA,GAAAe,EAAA,0BACZF,MAAA,KAAAC,UAAA,CAEM,SAAeoF,IAAY,OAAAC,EAAAtF,MAAC,KAADC,UAAA,CA0CjC,SAAAqF,IAAA,OAAAA,EAAAnD,EAAAhJ,IAAAoF,MA1CM,SAAAgH,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAxM,IAAAuB,MAAA,SAAAkL,GAAA,cAAAA,EAAA5G,KAAA4G,EAAAvI,MAAA,OACDmI,EAAwB,GAAEI,EAAAR,GAAAjM,IAAA0F,KACZwD,GAAQ,WAAAuD,EAAAC,GAAAD,EAAAR,MAAAzI,KAAE,CAAFiJ,EAAAvI,KAAA,SAAfkF,EAAGqD,EAAAC,GAAAhM,MACR6L,EAAOrD,EAASE,GAAIqD,EAAAE,GAChBJ,EAAK1K,KAAI4K,EAAAvI,KACV,WADUuI,EAAAE,GACF,EAGR,SAHQF,EAAAE,GAGF,GAUN,WAVMF,EAAAE,GAUE,GAMR,SANQF,EAAAE,GAMF,mBAlBoC,OAA7CJ,EAAKjD,OAASiD,EAAK7C,QAAQ6C,EAAK9C,QAAQtE,KAAKsH,EAAA1I,OAAA,oBAAA0I,EAAAG,GAGrCxD,EAAGqD,EAAAvI,KACJ,iBADIuI,EAAAG,GACU,oBAC2C,OAA5DL,EAAKjD,QAASuD,EAAAA,EAAAA,MAAgC,MAAQ,MAAMJ,EAAA1I,OAAA,oBAG3C,OAAjBwI,EAAKjD,OAAS,GAAGmD,EAAA1I,OAAA,2BAAA0I,EAAA1I,OAAA,oBAKJ,GAAjBwI,EAAKjD,OAAS,GACF,uBAARF,EAA4B,CAAAqD,EAAAvI,KAAA,gBAAAuI,EAAAvI,KAAA,IACT4I,EAAAA,EAAAA,MAAqB,YAAAL,EAAA7I,KAAE,CAAF6I,EAAAvI,KAAA,SAAAuI,EAAAM,GAAI,KAAIN,EAAAvI,KAAA,iBAAAuI,EAAAM,GAAG,KAAI,QAAzDR,EAAKjD,OAAMmD,EAAAM,GAAA,eAAAN,EAAA1I,OAAA,oBAaZ,MATW,YAARqF,IACFmD,EAAKjD,QAAS0D,EAAAA,EAAAA,OAEJ,WAAR5D,IACFmD,EAAKjD,QAAS2D,EAAAA,EAAAA,OAEJ,qBAAR7D,IACIoD,EAAO,IAAI3E,MAAKqF,EAAAA,EAAAA,OACtBX,EAAKjD,QAAS6D,EAAAA,EAAAA,IAAmBX,IAClCC,EAAA1I,OAAA,2BAAA0I,EAAA1I,OAAA,oBAKLsI,EAAO3H,KAAK6H,GAAME,EAAAvI,KAAA,uBAAAuI,EAAA1I,OAAA,SAEbsI,GAAM,yBAAAI,EAAAzG,OAAA,GAAAoG,EAAA,MACdvF,MAAA,KAAAC,UAAA,CAEM,SAASsG,IACd,IAAIf,EAAmC,GACvC,IAAK,IAAMjD,KAAOF,EAChB,GAAID,EAAY8C,QAAQ3C,IAAQ,GAC1BF,EAAS3I,eAAe6I,IACC,WAAvBF,EAASE,GAAKvH,KAAmB,CACnC,IAAM0K,EAA0B,CAC9BnD,IAAKA,EACLK,OAAQP,EAASE,GAAKK,QAExB4C,EAAO3H,KAAK6H,EACd,CAIN,OAAOF,CACT,CAEO,SAAegB,EAAmBC,EAAAC,GAAA,OAAAC,EAAA3G,MAAC,KAADC,UAAA,CAaxC,SAAA0G,IAAA,OAAAA,EAAAxE,EAAAhJ,IAAAoF,MAbM,SAAAqI,EAAmCrE,EAAaK,GAAc,OAAAzJ,IAAAuB,MAAA,SAAAmM,GAAA,cAAAA,EAAA7H,KAAA6H,EAAAxJ,MAAA,YAC/D+E,EAAY8C,QAAQ3C,IAAQ,GAAC,CAAAsE,EAAAxJ,KAAA,YAC3BgF,EAAS3I,eAAe6I,GAAM,CAAFsE,EAAAxJ,KAAA,WACH,WAAvBgF,EAASE,GAAKvH,KAAiB,CAAA6L,EAAAxJ,KAAA,gBACOyJ,IAAlCzE,EAASE,GAAKM,QAAQD,IAA8D,OAAlCP,EAASE,GAAKM,QAAQD,GAAiB,CAAAiE,EAAAxJ,KAAA,eAAAwJ,EAAAxJ,KAAA,GACvFgE,EAAAA,EAAAA,IAAU,EAAGkB,EAAKK,GAAO,OACD,OAA9BP,EAASE,GAAKK,OAASA,EAAOiE,EAAA3J,OAAA,UACvB,GAAI,cAAA2J,EAAA3J,OAAA,UAKZ,GAAK,wBAAA2J,EAAA1H,OAAA,GAAAyH,EAAA,MACb5G,MAAA,KAAAC,UAAA,CAEM,SAAS8G,EAAWxE,GACzB,GAAIH,EAAY8C,QAAQ3C,IAAQ,GAC1BF,EAAS3I,eAAe6I,GAC1B,OAAOF,EAASE,EAGtB,CAEO,SAASyE,EAAsBzE,GACpC,GAAIH,EAAY8C,QAAQ3C,IAAQ,GAC1BF,EAAS3I,eAAe6I,GAAM,CAChC,IAAM0E,EAAqB5E,EAAuB,aAE5C6E,EAD0BD,EAAmBpE,QAAQoE,EAAmBrE,QAAQ/I,MACxB,QACxDsN,EAAc9E,EAASE,GACzB6E,EAAoBD,EAAYtE,QAAQsE,EAAYvE,QACpDsE,GACEE,EAAkBpE,oBACpBoE,EAAoBD,EAAYtE,QAAQuE,EAAkBnE,yBAG9D,IAAMoE,EAAmBD,EAAkBvN,MAC3C,OAAQwN,EAAiBrM,MACvB,KAAK,EACH,OAAOqM,EAAiB5D,OAE1B,KAAK,EACH,OAAO4D,EAAiBtE,OAE1B,KAAK,EACH,OAAOsE,EAAgB,QAEzB,KAAK,EACH,OAAOA,EAET,QACE,MAAO,GAGb,CAEF,MAAO,EACT","sources":["webpack://bus/./src/data/settings/compatibility.ts","webpack://bus/./src/data/settings/index.ts"],"sourcesContent":["import { lfGetItem, lfSetItem } from '../storage/index';\n\ninterface CompatibilityTag {\n  timestamp: string; // timestamp in ISO format (the date after which changes will take effect)\n  script: Function | null;\n}\n\nconst compatibilityTags: Array<CompatibilityTag> = [\n  {\n    timestamp: '2025-02-08T00:00:00.000Z',\n    script: null\n  },\n  {\n    timestamp: '2025-02-09T00:00:00.000Z',\n    script: null\n    /* async function () {\n      const savedStopFolderID = await createFolder('已收藏站牌', 'location_on');\n      const savedStopFolderKeys = await lfListItemKeys(12);\n      for (const key of savedStopFolderKeys) {\n        const contentJSON = await lfGetItem(12, key);\n        const contentObject = JSON.parse(contentJSON) as Folder;\n        contentObject.timestamp = new Date(contentObject.time).getTime();\n        delete contentObject.default;\n        delete contentObject.index;\n        delete contentObject.storeIndex;\n        delete contentObject.contentType;\n        delete contentObject.time;\n        await saveToFolder(savedStopFolderID, contentObject);\n      }\n\n      const savedRouteFolderID = await createFolder('已收藏路線', 'route');\n      const savedRouteFolderKeys = await lfListItemKeys(12);\n      for (const key of savedRouteFolderKeys) {\n        const contentJSON = await lfGetItem(12, key);\n        const contentObject = JSON.parse(contentJSON) as Folder;\n        contentObject.timestamp = new Date(contentObject.time).getTime();\n        delete contentObject.default;\n        delete contentObject.index;\n        delete contentObject.storeIndex;\n        delete contentObject.contentType;\n        delete contentObject.time;\n        await saveToFolder(savedRouteFolderID, contentObject);\n      }\n\n      const customFolderKeys = await lfListItemKeys(9);\n      for (const folderKey of customFolderKeys) {\n        const thisFolderJSON = await lfGetItem(9, folderKey);\n        const thisFolderObject = JSON.parse(thisFolderJSON) as Folder;\n        const storeIndex = await registerStore(thisFolderObject.id);\n        const contentKeys = await lfListItemKeys(storeIndex);\n        await lfSetItem(10, folderKey, JSON.stringify(contentKeys));\n        for (const contentKey of contentKeys) {\n          const contentJSON = await lfGetItem(storeIndex, contentKey);\n          const contentObject = JSON.parse(contentJSON) as FolderContentStop | FolderContentRoute | FolderContentBus;\n          contentObject.timestamp = new Date(contentObject.time).getTime();\n          delete contentObject.time;\n          delete contentObject.index;\n          await lfSetItem(11, contentKey, JSON.stringify(contentObject));\n        }\n      }\n    } */\n  }\n];\n\nconst compatibilityTagQuantity = compatibilityTags.length;\n\nexport async function checkCompatibility(): Promise<boolean> {\n  const now = new Date();\n  const nowTime = now.getTime();\n  const key = 'compatibility';\n  const timestamp_key = `${key}_timestamp`;\n  const currentCompatibilityTimestamp = await lfGetItem(1, timestamp_key);\n  if (currentCompatibilityTimestamp) {\n    const currentCompatibilityTime = new Date(currentCompatibilityTimestamp).getTime();\n    let startIndex = -1;\n    for (let i = compatibilityTagQuantity - 1; i >= 0; i--) {\n      const thisCompatibilityTag = compatibilityTags[i];\n      const thisCompatibilityTime = new Date(thisCompatibilityTag.timestamp).getTime();\n      if (currentCompatibilityTime > thisCompatibilityTime) {\n        startIndex = i + 1;\n        break;\n      }\n    }\n    if (startIndex !== -1) {\n      for (let j = startIndex; j < compatibilityTagQuantity; j++) {\n        const thisCompatibilityTag = compatibilityTags[j];\n        const thisCompatibilityTagTimestamp = thisCompatibilityTag.timestamp;\n        const thisCompatibilityTagTime = new Date(thisCompatibilityTagTimestamp).getTime();\n        const thisCompatibilityTagScript = thisCompatibilityTag.script;\n        if (thisCompatibilityTagTime > nowTime) {\n          break;\n        }\n        if (typeof thisCompatibilityTagScript === 'function') {\n          if (thisCompatibilityTagScript.constructor.name === 'AsyncFunction') {\n            await thisCompatibilityTagScript();\n          } else {\n            thisCompatibilityTagScript();\n          }\n        }\n      }\n    }\n    await lfSetItem(1, timestamp_key, now.toISOString());\n    return true;\n  } else {\n    await lfSetItem(1, timestamp_key, now.toISOString());\n    return true;\n  }\n}\n","import { lfSetItem, lfGetItem, lfListItemKeys, isStoragePersistent } from '../storage/index';\nimport { dateToRelativeTime, formatTime } from '../../tools/time';\nimport { getHTMLVersionBranchName, getHTMLVersionHash, getHTMLVersionTimeStamp } from './version';\nimport { MaterialSymbols } from '../../interface/icons/material-symbols-type';\nimport { getNotificationClientStatus } from '../notification/index';\n\ntype SettingType = 'select' | 'page' | 'info' | 'action';\n\nexport interface SettingSelectOptionStringValue {\n  type: 0;\n  string: string;\n}\n\nexport interface SettingSelectOptionNumberValue {\n  type: 1;\n  number: number;\n}\n\nexport interface SettingSelectOptionBooleanValue {\n  type: 2;\n  boolean: boolean;\n}\n\nexport interface SettingSelectOptionRefreshIntervalValue {\n  type: 3;\n  baseInterval: number;\n  dynamic: boolean;\n}\n\nexport type SettingSelectOptionValue = SettingSelectOptionStringValue | SettingSelectOptionNumberValue | SettingSelectOptionBooleanValue | SettingSelectOptionRefreshIntervalValue;\n\nexport interface SettingSelectOption {\n  name: string;\n  value: SettingSelectOptionValue;\n  resourceIntensive: boolean;\n  powerSavingAlternative: -1 | number; // index of an option\n}\n\nexport type SettingSelectOptions = Array<SettingSelectOption>;\n\nexport interface SettingSelect {\n  key: string;\n  name: string;\n  icon: MaterialSymbols;\n  status: string;\n  action: string;\n  type: 'select';\n  default_option: number;\n  option: number;\n  options: SettingSelectOptions;\n  description: string;\n}\n\nexport interface SettingPage {\n  key: string;\n  name: string;\n  icon: MaterialSymbols;\n  status: string;\n  type: 'page';\n  action: string;\n  description: string;\n}\n\nexport interface SettingInfo {\n  key: string;\n  name: string;\n  icon: MaterialSymbols;\n  status: string;\n  type: 'info';\n  action: string;\n  description: string;\n}\n\nexport interface SettingAction {\n  key: string;\n  name: string;\n  icon: MaterialSymbols;\n  status: string;\n  type: 'action';\n  action: string;\n  description: string;\n}\n\nexport type Setting = SettingSelect | SettingPage | SettingInfo | SettingAction;\n\nexport type SettingsObject = { [key: string]: Setting };\n\nexport type SettingsArray = Array<Setting>;\n\nexport interface SettingWithOption {\n  key: string;\n  option: number;\n}\n\nexport type SettingsWithOptionsArray = Array<SettingWithOption>;\n\nconst SettingKeys: Array<string> = ['time_formatting_mode', 'refresh_interval', 'display_user_location', 'location_labels', 'proxy', 'folder', 'personal_schedule', 'notification', 'playing_animation', 'power_saving', 'data_usage', 'storage', 'persistent_storage', 'export', 'import', 'version', 'branch', 'last_update_date', 'github'];\n\nlet Settings: SettingsObject = {\n  time_formatting_mode: {\n    key: 'time_formatting_mode',\n    name: '預估時間格式',\n    icon: 'glyphs',\n    status: '',\n    action: `bus.settings.openSettingsOptions('time_formatting_mode')`,\n    type: 'select',\n    default_option: 0,\n    option: 0,\n    options: [\n      {\n        name: `${formatTime(11, 3)}/${formatTime(61, 3)}/${formatTime(60 * 61 + 1, 3)}`,\n        value: {\n          type: 1,\n          number: 3\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: `${formatTime(11, 2)}/${formatTime(61, 2)}/${formatTime(60 * 61 + 1, 2)}`,\n        value: {\n          type: 1,\n          number: 2\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: `${formatTime(11, 1)}/${formatTime(61, 1)}/${formatTime(60 * 61 + 1, 1)}`,\n        value: {\n          type: 1,\n          number: 1\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: `${formatTime(11, 0)}/${formatTime(61, 0)}/${formatTime(60 * 61 + 1, 0)}`,\n        value: {\n          type: 1,\n          number: 0\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ],\n    description: '在首頁、路線頁面、地點頁面上的預估公車到站時間的顯示格式。'\n  },\n  refresh_interval: {\n    key: 'refresh_interval',\n    name: '預估時間更新頻率',\n    icon: 'pace',\n    status: '',\n    action: `bus.settings.openSettingsOptions('refresh_interval')`,\n    type: 'select',\n    default_option: 3,\n    option: 3,\n    options: [\n      {\n        name: '自動',\n        value: {\n          baseInterval: 15 * 1000,\n          dynamic: true,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 2\n      },\n      {\n        name: '10秒',\n        value: {\n          baseInterval: 10 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 2\n      },\n      {\n        name: '20秒',\n        value: {\n          baseInterval: 20 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 3\n      },\n      {\n        name: '30秒',\n        value: {\n          baseInterval: 30 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 4\n      },\n      {\n        name: '40秒',\n        value: {\n          baseInterval: 40 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 5\n      },\n      {\n        name: '50秒',\n        value: {\n          baseInterval: 50 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 6\n      },\n      {\n        name: '60秒',\n        value: {\n          baseInterval: 60 * 1000,\n          dynamic: false,\n          type: 3\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 6\n      }\n    ],\n    description: '在首頁、路線頁面、地點頁面上的預估公車到站時間、公車等即時資料更新的頻率。'\n  },\n  display_user_location: {\n    key: 'display_user_location',\n    name: '顯示所在位置',\n    icon: 'near_me',\n    status: '',\n    action: `bus.settings.openSettingsOptions('display_user_location')`,\n    type: 'select',\n    default_option: 1,\n    option: 1,\n    options: [\n      {\n        name: '開啟',\n        value: {\n          type: 2,\n          boolean: true\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 1\n      },\n      {\n        name: '關閉',\n        value: {\n          type: 2,\n          boolean: false\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ],\n    description: '是否在路線頁面上標註目前所在位置。若設為開啟，本應用程式將要求位置存取權限。'\n  },\n  location_labels: {\n    key: 'location_labels',\n    name: '站牌位置標籤',\n    icon: 'tag',\n    status: '',\n    action: `bus.settings.openSettingsOptions('location_labels')`,\n    type: 'select',\n    default_option: 0,\n    option: 0,\n    options: [\n      {\n        name: '行徑方向',\n        value: {\n          type: 0,\n          string: 'directions'\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: '地址特徵',\n        value: {\n          type: 0,\n          string: 'address'\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: '英文字母',\n        value: {\n          type: 0,\n          string: 'letters'\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ],\n    description: '用於區分位於同個地點的不同站牌。行徑方向表示可搭乘路線從本站到下一站的方向；地址特徵表示不同站牌的地址差異處；英文字母表示按照順序以字母編號。'\n  },\n  proxy: {\n    key: 'proxy',\n    name: '網路代理',\n    icon: 'router',\n    status: '',\n    action: `bus.settings.openSettingsOptions('proxy')`,\n    type: 'select',\n    default_option: 1,\n    option: 1,\n    options: [\n      {\n        name: '開啟',\n        value: {\n          type: 2,\n          boolean: true\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: '關閉',\n        value: {\n          type: 2,\n          boolean: false\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ],\n    description: '使用網路代理來擷取資料。'\n  },\n  folder: {\n    key: 'folder',\n    name: '資料夾',\n    icon: 'folder',\n    status: '',\n    type: 'page',\n    action: 'bus.folder.openFolderManager()',\n    description: ''\n  },\n  personal_schedule: {\n    key: 'personal_schedule',\n    name: '個人化行程',\n    icon: 'calendar_view_day',\n    status: '',\n    action: `bus.personalSchedule.openPersonalScheduleManager()`,\n    type: 'page',\n    description: ''\n  },\n  notification: {\n    key: 'notification',\n    name: '通知',\n    icon: 'notifications',\n    status: '',\n    action: `bus.notification.openNotificationScheduleManager()`,\n    type: 'page',\n    description: ''\n  },\n  playing_animation: {\n    key: 'playing_animation',\n    name: '動畫',\n    icon: 'animation',\n    description: '是否在介面中播放動畫。',\n    status: '',\n    type: 'select',\n    action: `bus.settings.openSettingsOptions('playing_animation')`,\n    default_option: 0,\n    option: 0,\n    options: [\n      {\n        name: '開啟',\n        value: {\n          type: 2,\n          boolean: true\n        },\n        resourceIntensive: true,\n        powerSavingAlternative: 1\n      },\n      {\n        name: '關閉',\n        value: {\n          type: 2,\n          boolean: false\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ]\n  },\n  power_saving: {\n    key: 'power_saving',\n    name: '省電模式',\n    icon: 'battery_low',\n    description: '暫停使用耗電功能來節省電力。',\n    status: '',\n    type: 'select',\n    action: `bus.settings.openSettingsOptions('power_saving')`,\n    default_option: 1,\n    option: 1,\n    options: [\n      {\n        name: '開啟',\n        value: {\n          type: 2,\n          boolean: true\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      },\n      {\n        name: '關閉',\n        value: {\n          type: 2,\n          boolean: false\n        },\n        resourceIntensive: false,\n        powerSavingAlternative: -1\n      }\n    ]\n  },\n  data_usage: {\n    key: 'data_usage',\n    name: '網路使用量',\n    icon: 'bigtop_updates',\n    status: '',\n    type: 'page',\n    action: 'bus.dataUsage.openDataUsage()',\n    description: ''\n  },\n  storage: {\n    key: 'storage',\n    name: '儲存空間',\n    icon: 'database',\n    status: '',\n    type: 'page',\n    action: 'bus.storage.openStorage()',\n    description: ''\n  },\n  persistent_storage: {\n    key: 'persistent_storage',\n    name: '永久儲存',\n    icon: 'storage',\n    status: '',\n    action: `bus.settings.showPromptToAskForPersistentStorage()`,\n    type: 'action',\n    description: '開啟此選項以避免瀏覽器自動刪除重要資料。'\n  },\n  export: {\n    key: 'export',\n    name: '匯出資料',\n    icon: 'upload',\n    status: '',\n    type: 'action',\n    action: 'bus.settings.downloadExportFile()',\n    description: ''\n  },\n  import: {\n    key: 'import',\n    name: '匯入資料',\n    icon: 'download',\n    status: '',\n    type: 'action',\n    action: 'bus.settings.openFileToImportData()',\n    description: ''\n  },\n  version: {\n    key: 'version',\n    name: '版本',\n    icon: 'commit',\n    status: '',\n    type: 'info',\n    action: 'bus.settings.viewCommitOfCurrentVersion()',\n    description: ''\n  },\n  branch: {\n    key: 'branch',\n    name: '分支',\n    icon: 'rebase',\n    status: '',\n    type: 'info',\n    action: '',\n    description: ''\n  },\n  last_update_date: {\n    key: 'last_update_date',\n    name: '更新時間',\n    icon: 'update',\n    status: '',\n    type: 'info',\n    action: '',\n    description: ''\n  },\n  github: {\n    key: 'github',\n    name: 'GitHub',\n    icon: 'book_2',\n    status: '@EricHsia7/bus',\n    type: 'info',\n    action: '',\n    description: ''\n  }\n};\n\nexport async function initializeSettings(): Promise<boolean> {\n  const userSettings = await lfListItemKeys(1);\n  for (const key of userSettings) {\n    if (SettingKeys.indexOf(key) > -1) {\n      const userSetting = await lfGetItem(1, key);\n      if (!(userSetting === null)) {\n        if (Settings[key].type === 'select') {\n          var userSettingOption = parseInt(userSetting);\n          Settings[key].option = userSettingOption;\n        }\n      } else {\n        if (Settings[key].type === 'select') {\n          Settings[key].option = Settings[key].default_option;\n        }\n      }\n    }\n  }\n  return true;\n}\n\nexport async function listSettings(): Promise<SettingsArray> {\n  let result: SettingsArray = [];\n  for (const key in Settings) {\n    let item = Settings[key];\n    switch (item.type) {\n      case 'select':\n        item.status = item.options[item.option].name;\n        break;\n      case 'page':\n        switch (key) {\n          case 'notification':\n            item.status = getNotificationClientStatus() ? '已註冊' : '未註冊';\n            break;\n          default:\n            item.status = '';\n            break;\n        }\n        break;\n      case 'action':\n        item.status = '';\n        if (key === 'persistent_storage') {\n          item.status = (await isStoragePersistent()) ? '開啟' : '關閉';\n        }\n        break;\n      case 'info':\n        if (key === 'version') {\n          item.status = getHTMLVersionHash();\n        }\n        if (key === 'branch') {\n          item.status = getHTMLVersionBranchName();\n        }\n        if (key === 'last_update_date') {\n          const date = new Date(getHTMLVersionTimeStamp());\n          item.status = dateToRelativeTime(date);\n        }\n        break;\n      default:\n        break;\n    }\n    result.push(item);\n  }\n  return result;\n}\n\nexport function listSettingsWithOptions(): SettingsWithOptionsArray {\n  let result: SettingsWithOptionsArray = [];\n  for (const key in Settings) {\n    if (SettingKeys.indexOf(key) > -1) {\n      if (Settings.hasOwnProperty(key)) {\n        if (Settings[key].type === 'select') {\n          const item: SettingWithOption = {\n            key: key,\n            option: Settings[key].option\n          };\n          result.push(item);\n        }\n      }\n    }\n  }\n  return result;\n}\n\nexport async function changeSettingOption(key: string, option: number): Promise<boolean> {\n  if (SettingKeys.indexOf(key) > -1) {\n    if (Settings.hasOwnProperty(key)) {\n      if (Settings[key].type === 'select') {\n        if (!(Settings[key].options[option] === undefined) && !(Settings[key].options[option] === null)) {\n          await lfSetItem(1, key, option);\n          Settings[key].option = option;\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\nexport function getSetting(key: string): Setting | undefined {\n  if (SettingKeys.indexOf(key) > -1) {\n    if (Settings.hasOwnProperty(key)) {\n      return Settings[key];\n    }\n  }\n}\n\nexport function getSettingOptionValue(key: string): SettingSelectOptionStringValue['string'] | SettingSelectOptionNumberValue['number'] | SettingSelectOptionBooleanValue['boolean'] | SettingSelectOptionRefreshIntervalValue {\n  if (SettingKeys.indexOf(key) > -1) {\n    if (Settings.hasOwnProperty(key)) {\n      const powerSavingSetting = Settings['power_saving'] as SettingSelect;\n      const powerSavingSettingValue = powerSavingSetting.options[powerSavingSetting.option].value as SettingSelectOptionBooleanValue;\n      const powerSavingSettingValueBoolean = powerSavingSettingValue.boolean;\n      const thisSetting = Settings[key] as SettingSelect;\n      let thisSettingOption = thisSetting.options[thisSetting.option];\n      if (powerSavingSettingValueBoolean) {\n        if (thisSettingOption.resourceIntensive) {\n          thisSettingOption = thisSetting.options[thisSettingOption.powerSavingAlternative];\n        }\n      }\n      const thisSettingValue = thisSettingOption.value;\n      switch (thisSettingValue.type) {\n        case 0:\n          return thisSettingValue.string as string;\n          break;\n        case 1:\n          return thisSettingValue.number as number;\n          break;\n        case 2:\n          return thisSettingValue.boolean as boolean;\n          break;\n        case 3:\n          return thisSettingValue as SettingSelectOptionRefreshIntervalValue;\n          break;\n        default:\n          return '' as string;\n          break;\n      }\n    }\n  }\n  return '';\n}\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","compatibilityTags","timestamp","script","compatibilityTagQuantity","checkCompatibility","_checkCompatibility","apply","arguments","_callee","now","nowTime","timestamp_key","currentCompatibilityTimestamp","currentCompatibilityTime","startIndex","thisCompatibilityTime","j","_thisCompatibilityTag","thisCompatibilityTagTimestamp","thisCompatibilityTagTime","thisCompatibilityTagScript","_context","Date","getTime","concat","lfGetItem","thisCompatibilityTag","lfSetItem","toISOString","_next","_throw","_createForOfIteratorHelper","Array","isArray","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_n","F","_asyncToGenerator","SettingKeys","Settings","time_formatting_mode","key","icon","status","action","default_option","option","options","formatTime","number","resourceIntensive","powerSavingAlternative","description","refresh_interval","baseInterval","dynamic","display_user_location","boolean","location_labels","string","proxy","folder","personal_schedule","notification","playing_animation","power_saving","data_usage","storage","persistent_storage","export","import","version","branch","last_update_date","github","initializeSettings","_initializeSettings","userSettings","_iterator","_step","_key2","userSetting","userSettingOption","lfListItemKeys","indexOf","parseInt","t0","listSettings","_listSettings","_callee2","result","_key3","item","date","_context2","t1","t2","t3","getNotificationClientStatus","isStoragePersistent","t4","getHTMLVersionHash","getHTMLVersionBranchName","getHTMLVersionTimeStamp","dateToRelativeTime","listSettingsWithOptions","changeSettingOption","_x","_x2","_changeSettingOption","_callee3","_context3","undefined","getSetting","getSettingOptionValue","powerSavingSetting","powerSavingSettingValueBoolean","thisSetting","thisSettingOption","thisSettingValue"],"sourceRoot":""}