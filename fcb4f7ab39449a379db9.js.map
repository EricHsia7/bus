{"version":3,"file":"fcb4f7ab39449a379db9.js","mappings":";ydACAA,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAA8E,QAAA,KAAAvE,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAA8E,QAAA,GAAAzE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAgF,oBAAA,SAAA/E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAgF,YAAA,QAAAjF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAoC,IAAApC,EAAAoF,UAAAhD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAgF,oBAAA9E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAyF,KAAA,SAAAxF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAwF,UAAA,SAAAzB,IAAA,KAAA/D,EAAA4E,QAAA,KAAA7E,EAAAC,EAAAyF,MAAA,GAAA1F,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA4F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA2F,OAAA,IAAAxF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA4F,MAAA,WAAA5F,GAAAD,EAAA,EAAA8F,KAAA,gBAAAxC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAmE,IAAA,EAAAnC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA+F,EAAA5F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAAM,OAAA,EAAAvE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,UAAAvF,EAAA0D,QAAA,KAAAwB,KAAA,KAAA9E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA4E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,WAAAuB,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA8E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,YAAArD,EAAA,MAAAsC,MAAA,kDAAAsC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAwB,MAAAvF,EAAAyB,KAAAvB,EAAA,oBAAAqF,KAAArF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA+D,SAAAtF,EAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAoE,KAAA,KAAAnE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAAgE,OAAA,SAAAlG,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAiG,SAAAhG,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,QAAA+C,MAAA,0BAAA8C,cAAA,SAAApG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAqG,EAAAnG,EAAAF,GAAA,IAAAC,EAAA,oBAAAU,QAAAT,EAAAS,OAAAE,WAAAX,EAAA,kBAAAD,EAAA,IAAAqG,MAAAC,QAAArG,KAAAD,EAAA,SAAAC,EAAAU,GAAA,GAAAV,EAAA,qBAAAA,EAAA,OAAAsG,EAAAtG,EAAAU,GAAA,IAAAX,EAAA,GAAAwG,SAAA3E,KAAA5B,GAAA4F,MAAA,uBAAA7F,GAAAC,EAAA+E,cAAAhF,EAAAC,EAAA+E,YAAAC,MAAA,QAAAjF,GAAA,QAAAA,EAAAqG,MAAAI,KAAAxG,GAAA,cAAAD,GAAA,2CAAA0G,KAAA1G,GAAAuG,EAAAtG,EAAAU,QAAA,GAAAgG,CAAA1G,KAAAF,GAAAE,GAAA,iBAAAA,EAAA4E,OAAA,CAAA7E,IAAAC,EAAAD,GAAA,IAAA4G,EAAA,EAAAC,EAAA,oBAAA5E,EAAA4E,EAAAzG,EAAA,kBAAAwG,GAAA3G,EAAA4E,OAAA,CAAAvB,MAAA,IAAAA,MAAA,EAAA9C,MAAAP,EAAA2G,KAAA,EAAA7G,EAAA,SAAAE,GAAA,MAAAA,CAAA,EAAA+B,EAAA6E,EAAA,WAAA/C,UAAA,6IAAAxD,EAAAK,GAAA,EAAAI,GAAA,SAAAkB,EAAA,WAAAjC,EAAAA,EAAA6B,KAAA5B,EAAA,EAAAG,EAAA,eAAAH,EAAAD,EAAAgE,OAAA,OAAArD,EAAAV,EAAAqD,KAAArD,CAAA,EAAAF,EAAA,SAAAE,GAAAc,GAAA,EAAAT,EAAAL,CAAA,EAAA+B,EAAA,eAAArB,GAAA,MAAAX,EAAA,QAAAA,EAAA,oBAAAe,EAAA,MAAAT,CAAA,aAAAiG,EAAAtG,EAAAU,IAAA,MAAAA,GAAAA,EAAAV,EAAA4E,UAAAlE,EAAAV,EAAA4E,QAAA,QAAA9E,EAAA,EAAAK,EAAAiG,MAAA1F,GAAAZ,EAAAY,EAAAZ,IAAAK,EAAAL,GAAAE,EAAAF,GAAA,OAAAK,CAAA,UAAA0G,EAAA1G,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,QAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,OAAAJ,GAAA,YAAAL,EAAAK,EAAA,CAAAK,EAAA6C,KAAAtD,EAAAe,GAAAwE,QAAAtC,QAAAlC,GAAAoC,KAAAlD,EAAAK,EAAA,UAAAyG,EAAA3G,GAAA,sBAAAJ,EAAA,KAAAD,EAAAiH,UAAA,WAAAzB,SAAA,SAAAtF,EAAAK,GAAA,IAAAK,EAAAP,EAAA6G,MAAAjH,EAAAD,GAAA,SAAAmH,EAAA9G,GAAA0G,EAAAnG,EAAAV,EAAAK,EAAA4G,EAAAC,EAAA,OAAA/G,EAAA,UAAA+G,EAAA/G,GAAA0G,EAAAnG,EAAAV,EAAAK,EAAA4G,EAAAC,EAAA,QAAA/G,EAAA,CAAA8G,OAAA,OAW6F,SAsD9EE,EAAgBC,EAAAC,GAAA,OAAAC,EAAAN,MAAC,KAADD,UAAA,UAAAO,IAuB9B,OAvB8BA,EAAAR,EAAAjH,IAAAoF,MAA/B,SAAAsC,EAAgCC,EAAoBC,GAAsB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAApI,IAAAuB,MAAA,SAAA8G,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAnE,MAAA,OACpE2D,EAA6B,CAAC,EAACC,EAAAxB,EAClBqB,GAAQU,EAAAxC,KAAA,EAAAiC,EAAA3F,IAAA,WAAA4F,EAAAD,EAAAxH,KAAAkD,KAAE,CAAF6E,EAAAnE,KAAA,SAEiB,GAFjC8D,EAAID,EAAArH,MACPuH,EAAaK,SAASN,EAAKO,QAC3BL,EAAcI,SAASN,EAAKQ,WAC5BZ,EAAQa,QAAQR,IAAe,GAAC,CAAAI,EAAAnE,KAAA,SAE+B,OADjE8D,EAAKU,aAAc,EACnBV,EAAKW,MAAQC,OAAOZ,EAAKa,OAAOC,WAAW,GAAKC,KAAKC,IAAI,IAAK,GAAGX,EAAAnE,KAAA,IACnC+E,EAAAA,EAAAA,IAA6Bf,GAAY,QAAnEC,EAAiBE,EAAAzE,KACrBoE,EAAKkB,UAAYf,EAAkBpD,OAAS,EAAIoD,EAAkB,GAAG7H,EAAI,GACpEuH,EAAOtH,eAAe,KAAOyH,EAAKO,QAGrCV,EAAO,KAAOG,EAAKO,QAAQ7D,KAAKsD,GAFhCH,EAAO,KAAOG,EAAKO,QAAU,CAACP,GAG/B,QAAAK,EAAAnE,KAAA,gBAAAmE,EAAAnE,KAAA,iBAAAmE,EAAAxC,KAAA,GAAAwC,EAAAc,GAAAd,EAAA,SAAAP,EAAA7H,EAAAoI,EAAAc,IAAA,eAAAd,EAAAxC,KAAA,GAAAiC,EAAA5F,IAAAmG,EAAAjC,OAAA,YAGL,IAASgC,KAAOP,EACdA,EAAOO,GAAOP,EAAOO,GAAKgB,MAAK,SAAUvI,EAAGwI,GAC1C,OAAOxI,EAAE8H,MAAQU,EAAEV,KACrB,IACD,OAAAN,EAAAtE,OAAA,SACM8D,GAAM,yBAAAQ,EAAArC,OAAA,GAAA0B,EAAA,0BACdP,MAAA,KAAAD,UAAA,CAQD,SAASoC,EAAsBC,EAA4BC,GACzD,IAC+BC,EAD3B5B,EAAS,CAAC,EAAE6B,EAAApD,EACGiD,GAAY,IAA/B,IAAAG,EAAAvH,MAAAsH,EAAAC,EAAApJ,KAAAkD,MAAiC,KAAtBwE,EAAIyB,EAAA/I,MACb,GAAI8I,EAAWf,QAAQT,EAAKO,SAAW,EAErCV,EAD4B,KAAH8B,OAAQ3B,EAAKO,SAChBP,CAE1B,CAAC,OAAA4B,GAAAF,EAAAzJ,EAAA2J,EAAA,SAAAF,EAAAxH,GAAA,CACD,OAAO2F,CACT,CAMA,SAASgC,EAA2BC,EAAgDN,GAElF,IAAI3B,EAAwC,CAAC,EACzCkC,EAAwC,GAC5C,IAAK,IAAMC,KAAeF,EAAwB,CAChD,IAAMG,EAAiCH,EAAuBE,GACxD/B,EAAagC,EAA+B1B,OAC5C2B,EAAmB5B,SAAS2B,EAA+BV,cAC7DW,GAAoB,GAAKV,EAAWf,QAAQR,IAAe,GAC7D8B,EAAarF,KAAK,CAACuD,EAAYiC,GAEnC,CACA,IAAMC,EAAqBJ,EAAahF,OACxCgF,EAAaX,MAAK,SAAUvI,EAAGwI,GAC7B,OAAOxI,EAAE,GAAKwI,EAAE,EAClB,IAEA,IADA,IAAIV,EAAQ,EACZyB,EAAA,EAAAC,EAA0BN,EAAYK,EAAAC,EAAAtF,OAAAqF,IAAE,CAAnC,IAEGE,EAAe3B,EAAQwB,EACvBI,GAAeD,EAAgBA,EAAe,KAAS,IACvDrC,EAJcoC,EAAAD,GAIW,GAE/BvC,EADoB,KAAH8B,OAAQ1B,IACH,CACpBuC,OAAQ7B,EACR8B,KAAMF,GAER5B,GAAS,CACX,CACA,OAAOd,CACT,CAEO,SAAe6C,EAAiBC,EAAAC,GAAA,OAAAC,EAAA1D,MAAC,KAADD,UAAA,CAsLtC,SAAA2D,IAAA,OAAAA,EAAA5D,EAAAjH,IAAAoF,MAtLM,SAAA0F,EAAiCC,EAAcC,GAAiB,IAAAzB,EAAA0B,EAAAC,EAAAC,EAAAxD,EAAAyD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlE,EAAAmE,EAAAC,EAAArL,EAAAmJ,EAAAmC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/L,EAAAgM,EAAAvE,EAAA+B,EAAAyC,EAAAC,EAAAxE,EAAAyE,EAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAtF,GAAA,OAAA7H,IAAAuB,MAAA,SAAA6L,GAAA,cAAAA,EAAAvH,KAAAuH,EAAAlJ,MAAA,OAUN,OAT/DmJ,EAAAA,EAAAA,IAAyBrC,EAAW,gBAAiB,GAAG,IACxDqC,EAAAA,EAAAA,IAAyBrC,EAAW,gBAAiB,GAAG,IACxDqC,EAAAA,EAAAA,IAAyBrC,EAAW,aAAc,GAAG,IACrDqC,EAAAA,EAAAA,IAAyBrC,EAAW,aAAc,GAAG,IACrDqC,EAAAA,EAAAA,IAAyBrC,EAAW,YAAa,GAAG,IACpDqC,EAAAA,EAAAA,IAAyBrC,EAAW,YAAa,GAAG,IACpDqC,EAAAA,EAAAA,IAAyBrC,EAAW,oBAAqB,GAAG,IAC5DqC,EAAAA,EAAAA,IAAyBrC,EAAW,oBAAqB,GAAG,IAC5DqC,EAAAA,EAAAA,IAAyBrC,EAAW,gBAAiB,GAAG,IACxDqC,EAAAA,EAAAA,IAAyBrC,EAAW,gBAAiB,GAAG,GAAOoC,EAAAlJ,KAAA,IACpCoJ,EAAAA,EAAAA,GAAgBtC,GAAU,QAAnC,OAAZzB,EAAY6D,EAAAxJ,KAAAwJ,EAAAlJ,KAAG,IACEqJ,EAAAA,EAAAA,GAAYvC,GAAW,GAAK,QAArC,OAARC,EAAQmC,EAAAxJ,KAAAwJ,EAAAlJ,KAAG,IACGsJ,EAAAA,EAAAA,GAASxC,GAAW,GAAK,QAAlC,OAALE,EAAKkC,EAAAxJ,KAAAwJ,EAAAlJ,KAAG,IACKuJ,EAAAA,EAAAA,GAAQzC,GAAU,QAA3B,OAAJG,EAAIiC,EAAAxJ,KAAAwJ,EAAAlJ,KAAG,IACUwJ,EAAAA,EAAAA,GAAY1C,GAAU,QAA/B,OAARrD,EAAQyF,EAAAxJ,KAAAwJ,EAAAlJ,KAAG,IACayJ,EAAAA,EAAAA,MAAoB,QAmBlD,IAnBMvC,EAAegC,EAAAxJ,KAEfyH,GAAuBuC,EAAAA,EAAAA,IAAsB,wBAC7CtC,GAAkBsC,EAAAA,EAAAA,IAAsB,mBAE1CrC,EAAe,CAAC,EAChBC,EAAe,CAAC,EAChBC,EAAS,CAAC,EAERC,EAAkB,MAAH/B,OAASoB,GACxBY,EAAeV,EAASS,GACxBE,EAAmBD,EAAarL,EAChCuL,EAAkBF,EAAakC,GAC/B/B,EAAgBH,EAAajJ,EAE/BkF,EAAU,GACVmE,EAAW,GACTC,EAAuBH,EAAgB9G,OAEpCpE,EAAI,EAAGA,EAAIqL,EAAsBrL,IACxCiH,EAAUA,EAAQ+B,OAAOgC,EAAaxJ,EAAExB,IACxCoL,EAAWA,EAASpC,OAAOgC,EAAaxL,EAAEQ,IAG+B,OAArEmJ,EAAyBR,EAAsBC,EAAc3B,GAAQwF,EAAAlJ,KAAA,GAC3CoD,EAAiBK,EAAUC,GAAQ,QAA7DqE,EAAiBmB,EAAAxJ,KAEnBsI,EAAS,GAAEkB,EAAAjE,GACPmC,EAAe8B,EAAAlJ,KAChB,YADgBkJ,EAAAjE,GACP,GAGT,YAHSiE,EAAAjE,GAGA,GAGT,eAHSiE,EAAAjE,GAGG,oBALqC,OAApD+C,GAAS4B,EAAAA,EAAAA,IAA2BnC,EAAa9K,GAAGuM,EAAArJ,OAAA,oBAGA,OAApDmI,GAAS6B,EAAAA,EAAAA,GAAqB/B,GAAsBoB,EAAArJ,OAAA,oBAGJ,OAAhDmI,GAAS8B,EAAAA,EAAAA,GAAwBlC,GAAesB,EAAArJ,OAAA,2BAAAqJ,EAAArJ,OAAA,oBAM3CpD,EAAI,EAAC,aAAEA,EAAIqL,GAAoB,CAAAoB,EAAAlJ,KAAA,UAChCkI,EAAW,KAAHzC,OAAQhJ,GACtB4K,EAAaa,GAAY,GACzBZ,EAAaY,GAAY,EACzBX,EAAOW,GAAY,CACjBjH,KAAM+G,EAAOvL,GACbsN,WAAY,CACV,CACE7F,IAAK,UACL8F,KAAM,kBACNxN,OAAOyN,EAAAA,EAAAA,IAAgBxC,EAAa9K,EAAEF,KAExC,CACEyH,IAAK,iBACL8F,KAAM,cACNxN,MAAO,GAAFiJ,OAAKgC,EAAayC,GAAGzN,GAAG0N,QAAQ,GAAE,MAAA1E,OAAKgC,EAAa2C,GAAG3N,GAAG0N,QAAQ,OAKvEhC,EAAiBV,EAAaxJ,EAAExB,GAChC2L,EAAeD,EAAetH,OAC9BwH,EAAmB1C,EAA2BC,EAAwBuC,GAEnE7L,EAAI,EAAC,aAAEA,EAAI8L,GAAY,CAAAc,EAAAlJ,KAAA,UAKO,GAJjCsI,EAAiB,CAAC,EAEhBvE,EAAa0D,EAAaxJ,EAAExB,GAAGH,GAC/BwJ,EAAc,KAAHL,OAAQ1B,GACrBwE,EAA+B,CAAC,GAChCtB,EAAK5K,eAAeyJ,GAAc,CAAFoD,EAAAlJ,KAAA,SAClCuI,EAAWtB,EAAKnB,GAAaoD,EAAAlJ,KAAA,wBAAAkJ,EAAArJ,OAAA,wBAgBQ,GAZvCyI,EAAe+B,OAAStG,EAGpByE,EAAkB,CAAElC,OAAQ,EAAGC,MAAO,GACtC8B,EAAiBhM,eAAeyJ,KAClC0C,EAAkBH,EAAiBvC,IAErCwC,EAAegC,QAAU9B,EAGnBxE,EAAsByD,EAAaxL,EAAEQ,GAAGH,GACxCmM,EAAe,KAAHhD,OAAQzB,GACtB0E,GAAiC,CAAC,GAClC1B,EAAM3K,eAAeoM,GAAe,CAAFS,EAAAlJ,KAAA,SACpC0I,GAAY1B,EAAMyB,GAAcS,EAAAlJ,KAAA,wBAAAkJ,EAAArJ,OAAA,wBASkB,GALpDyI,EAAeiC,WAAa7B,GAAUtM,EACtCkM,EAAekC,gBAAkB,IAAH/E,OAAO,CAACiD,GAAU+B,IAAK/B,GAAUgC,IAAK,IAAItG,SAASmE,EAASoC,UAC1FrC,EAAesC,QAAU5G,EAGrB2E,GAA8C,CAAC,GAC/C/C,EAAuBvJ,eAAeyJ,GAAc,CAAFoD,EAAAlJ,KAAA,SACpD2I,GAA4B/C,EAAuBE,GAAaoD,EAAAlJ,KAAA,wBAAAkJ,EAAArJ,OAAA,wBAoBlE,IAAWmJ,MAhBLJ,IAAqBiC,EAAAA,EAAAA,IAAkBlC,GAA0BtD,aAAc8B,GACrFmB,EAAewC,OAASlC,GAGpBC,GAAwB,GACxBd,EAAkB1L,eAAeyJ,KACnC+C,GAAwBd,EAAkBjC,IAE5CwC,EAAeyC,OAAQC,EAAAA,EAAAA,IAAenC,IAGlCC,GAAsB,CAAC,EACvB5B,EAAgB7K,eAAeyJ,KACjCgD,GAAsB5B,EAAgBpB,IAEpCiD,GAAyB,GACID,GAC/BC,GAAyBA,GAAuBtD,OAAOqD,GAAoBE,IAAoBiC,iBAEjG3C,EAAe2C,gBAAkBlC,GAEjC1B,EAAaa,GAAU1H,KAAK8H,GAC5BhB,EAAaY,IAAa,EAAE,SA9DI5L,IAAG4M,EAAAlJ,KAAA,kBAxBGvD,IAAGyM,EAAAlJ,KAAA,kBA0F7C,IAAWkE,MAAOmD,EAChBA,EAAanD,IAAKgB,MAAK,SAAUvI,EAAGwI,GAClC,OAAOxI,EAAEiO,QAAUzF,EAAEyF,OACvB,IA6BF,OAVMjH,GAA6B,CACjC0D,aAAcA,EACdE,OAAQA,EACR2D,cAAepD,EACfR,aAAcA,EACd6D,aAAczD,EACd0D,gBAAgBC,EAAAA,EAAAA,IAAkBvE,KAEpCwE,EAAAA,EAAAA,IAA4BxE,IAC5ByE,EAAAA,EAAAA,IAAqBzE,GACrBoC,EAAArJ,OAAA,SACO8D,IAAM,0BAAAuF,EAAApH,OAAA,GAAA8E,EAAA,MACd3D,MAAA,KAAAD,UAAA","sources":["webpack://bus/./src/data/location/index.ts"],"sourcesContent":["import { deleteDataReceivingProgress, deleteDataUpdateTime, getDataUpdateTime, setDataReceivingProgress } from '../apis/loader';\nimport { EstimateTime, EstimateTimeItem, getEstimateTime } from '../apis/getEstimateTime/index';\nimport { getLocation } from '../apis/getLocation/index';\nimport { BusEvent, BusEventItem, getBusEvent } from '../apis/getBusEvent/index';\nimport { getRoute } from '../apis/getRoute/index';\nimport { getStop } from '../apis/getStop/index';\nimport { getSettingOptionValue } from '../settings/index';\nimport { searchRouteByPathAttributeId } from '../search/index';\nimport { addressToString, generateLabelFromAddresses } from '../../tools/address';\nimport { generateDirectionLabels, generateLetterLabels } from '../../tools/labels';\nimport { parseEstimateTime, formatBusEvent, FormattedBus, EstimateTimeStatus } from '../apis/index';\nimport { MaterialSymbols } from '../../interface/icons/material-symbols-type';\nimport { AggregatedBusArrivalTime, getBusArrivalTimes } from '../analytics/bus-arrival-time';\n\ninterface processedBusEventItem2 extends BusEventItem {\n  onThisRoute: boolean;\n  index: number;\n  RouteName: string;\n}\n\ntype processedBusEvent2 = {\n  [key: string]: processedBusEventItem2;\n};\n\nexport interface LocationGroupProperty {\n  key: string;\n  icon: MaterialSymbols;\n  value: string;\n}\n\nexport interface LocationGroup {\n  name: string;\n  properties: Array<LocationGroupProperty>;\n}\n\nexport interface IntegratedLocationItemRanking {\n  number: number;\n  code: -1 | 0 | 1 | 2 | 3; // -1: not applicable, 0: 0-25%, 1: 25-50%, 2: 50-75%, 3: 75-100%\n}\n\nexport interface IntegratedLocationItem {\n  route_name: string;\n  route_direction: string;\n  routeId: number;\n  stopId: number;\n  status: EstimateTimeStatus;\n  ranking: IntegratedLocationItemRanking;\n  buses: Array<FormattedBus>;\n  busArrivalTimes: Array<AggregatedBusArrivalTime>;\n}\n\nexport interface IntegratedLocation {\n  groupedItems: {\n    [key: string]: Array<IntegratedLocationItem>;\n  };\n  groups: {\n    [key: string]: LocationGroup;\n  };\n  groupQuantity: number;\n  itemQuantity: {\n    [key: string]: number;\n  };\n  LocationName: string;\n  dataUpdateTime: number;\n}\n\nasync function processBusEvent2(BusEvent: BusEvent, StopIDs: Array<number>): Promise<processedBusEvent2> {\n  let result: processedBusEvent2 = {};\n  for (var item of BusEvent) {\n    var thisStopID = parseInt(item.StopID);\n    var thisRouteID = parseInt(item.RouteID);\n    if (StopIDs.indexOf(thisStopID) > -1) {\n      item.onThisRoute = true;\n      item.index = String(item.BusID).charCodeAt(0) * Math.pow(10, -5);\n      var searchRouteResult = await searchRouteByPathAttributeId(thisRouteID);\n      item.RouteName = searchRouteResult.length > 0 ? searchRouteResult[0].n : '';\n      if (!result.hasOwnProperty('s_' + item.StopID)) {\n        result['s_' + item.StopID] = [item];\n      } else {\n        result['s_' + item.StopID].push(item);\n      }\n    }\n  }\n  for (var key in result) {\n    result[key] = result[key].sort(function (a, b) {\n      return a.index - b.index;\n    });\n  }\n  return result;\n}\n\ninterface BatchFoundEstimateTimeItem extends EstimateTimeItem {}\n\ntype BatchFoundEstimateTime = {\n  [key: string]: BatchFoundEstimateTimeItem;\n};\n\nfunction batchFindEstimateTime(EstimateTime: EstimateTime, StopIDList: Array<number>): BatchFoundEstimateTime {\n  let result = {};\n  for (const item of EstimateTime) {\n    if (StopIDList.indexOf(item.StopID) > -1) {\n      const thisStopKey: string = `s_${item.StopID}`;\n      result[thisStopKey] = item;\n    }\n  }\n  return result;\n}\n\ntype BatchFoundEstimateTimeRanking = {\n  [key: string]: IntegratedLocationItemRanking;\n};\n\nfunction rankBatchFoundEstimateTime(batchFoundEstimateTime: BatchFoundEstimateTime, StopIDList: Array<number>): BatchFoundEstimateTimeRanking {\n  // StopIDList act as a secondary filter\n  let result: BatchFoundEstimateTimeRanking = {};\n  let rankingArray: Array<[number, number]> = []; // StopID, EstimateTime\n  for (const thisStopKey in batchFoundEstimateTime) {\n    const thisBatchFoundEstimateTimeItem = batchFoundEstimateTime[thisStopKey];\n    const thisStopID = thisBatchFoundEstimateTimeItem.StopID;\n    const thisEstimateTime = parseInt(thisBatchFoundEstimateTimeItem.EstimateTime);\n    if (thisEstimateTime >= 0 && StopIDList.indexOf(thisStopID) > -1) {\n      rankingArray.push([thisStopID, thisEstimateTime]);\n    }\n  }\n  const rankingArrayLength = rankingArray.length;\n  rankingArray.sort(function (a, b) {\n    return a[1] - b[1];\n  });\n  let index = 1;\n  for (const rankingItem of rankingArray) {\n    // Classify into 4 groups and give a code\n    const rankingRatio = index / rankingArrayLength;\n    const rankingCode = (rankingRatio - (rankingRatio % 0.25)) / 0.25;\n    const thisStopID = rankingItem[0];\n    const thisStopKey = `s_${thisStopID}`;\n    result[thisStopKey] = {\n      number: index,\n      code: rankingCode\n    };\n    index += 1;\n  }\n  return result;\n}\n\nexport async function integrateLocation(hash: string, requestID: string): Promise<IntegratedLocation> {\n  setDataReceivingProgress(requestID, 'getLocation_0', 0, false);\n  setDataReceivingProgress(requestID, 'getLocation_1', 0, false);\n  setDataReceivingProgress(requestID, 'getRoute_0', 0, false);\n  setDataReceivingProgress(requestID, 'getRoute_1', 0, false);\n  setDataReceivingProgress(requestID, 'getStop_0', 0, false);\n  setDataReceivingProgress(requestID, 'getStop_1', 0, false);\n  setDataReceivingProgress(requestID, 'getEstimateTime_0', 0, false);\n  setDataReceivingProgress(requestID, 'getEstimateTime_1', 0, false);\n  setDataReceivingProgress(requestID, 'getBusEvent_0', 0, false);\n  setDataReceivingProgress(requestID, 'getBusEvent_1', 0, false);\n  const EstimateTime = await getEstimateTime(requestID);\n  const Location = await getLocation(requestID, true);\n  const Route = await getRoute(requestID, true);\n  const Stop = await getStop(requestID);\n  const BusEvent = await getBusEvent(requestID);\n  const BusArrivalTimes = await getBusArrivalTimes();\n\n  const time_formatting_mode = getSettingOptionValue('time_formatting_mode');\n  const location_labels = getSettingOptionValue('location_labels');\n\n  let groupedItems = {} as IntegratedLocation['groupedItems'];\n  let itemQuantity = {} as IntegratedLocation['itemQuantity'];\n  let groups = {} as IntegratedLocation['groups'];\n\n  const thisLocationKey = `ml_${hash}`;\n  const thisLocation = Location[thisLocationKey];\n  const thisLocationName = thisLocation.n;\n  const stopLocationIds = thisLocation.id;\n  const setsOfVectors = thisLocation.v;\n\n  let StopIDs = [];\n  let RouteIDs = [];\n  const stopLocationQuantity = stopLocationIds.length;\n\n  for (let i = 0; i < stopLocationQuantity; i++) {\n    StopIDs = StopIDs.concat(thisLocation.s[i]);\n    RouteIDs = RouteIDs.concat(thisLocation.r[i]);\n  }\n\n  const batchFoundEstimateTime = batchFindEstimateTime(EstimateTime, StopIDs);\n  const processedBusEvent = await processBusEvent2(BusEvent, StopIDs);\n\n  let labels = [];\n  switch (location_labels) {\n    case 'address':\n      labels = generateLabelFromAddresses(thisLocation.a);\n      break;\n    case 'letters':\n      labels = generateLetterLabels(stopLocationQuantity);\n      break;\n    case 'directions':\n      labels = generateDirectionLabels(setsOfVectors);\n      break;\n    default:\n      break;\n  }\n\n  for (let i = 0; i < stopLocationQuantity; i++) {\n    const groupKey = `g_${i}`;\n    groupedItems[groupKey] = [];\n    itemQuantity[groupKey] = 0;\n    groups[groupKey] = {\n      name: labels[i],\n      properties: [\n        {\n          key: 'address',\n          icon: 'personal_places',\n          value: addressToString(thisLocation.a[i])\n        },\n        {\n          key: 'exact_position',\n          icon: 'location_on',\n          value: `${thisLocation.la[i].toFixed(5)}, ${thisLocation.lo[i].toFixed(5)}`\n        }\n      ]\n    };\n\n    const thisGroupStops = thisLocation.s[i];\n    const stopQuantity = thisGroupStops.length;\n    const thisGroupRanking = rankBatchFoundEstimateTime(batchFoundEstimateTime, thisGroupStops);\n\n    for (let o = 0; o < stopQuantity; o++) {\n      let integratedItem = {} as IntegratedLocationItem;\n      // Collect data from 'Stop'\n      const thisStopID = thisLocation.s[i][o];\n      const thisStopKey = `s_${thisStopID}`;\n      let thisStop: SimplifiedStopItem = {};\n      if (Stop.hasOwnProperty(thisStopKey)) {\n        thisStop = Stop[thisStopKey];\n      } else {\n        continue;\n      }\n      integratedItem.stopId = thisStopID;\n\n      // Collect data from 'thisGroupRanking'\n      let thisItemRanking = { number: 0, code: -1 } as IntegratedLocationItemRanking;\n      if (thisGroupRanking.hasOwnProperty(thisStopKey)) {\n        thisItemRanking = thisGroupRanking[thisStopKey];\n      }\n      integratedItem.ranking = thisItemRanking;\n\n      // Collect data from 'Route'\n      const thisRouteID: number = thisLocation.r[i][o];\n      const thisRouteKey = `r_${thisRouteID}`;\n      let thisRoute: SimplifiedRouteItem = {};\n      if (Route.hasOwnProperty(thisRouteKey)) {\n        thisRoute = Route[thisRouteKey];\n      } else {\n        continue;\n      }\n      integratedItem.route_name = thisRoute.n;\n      integratedItem.route_direction = `往${[thisRoute.des, thisRoute.dep, ''][parseInt(thisStop.goBack)]}`;\n      integratedItem.routeId = thisRouteID;\n\n      // Collect data from 'processedEstimateTime'\n      let thisProcessedEstimateTime: EstimateTimeItem = {};\n      if (batchFoundEstimateTime.hasOwnProperty(thisStopKey)) {\n        thisProcessedEstimateTime = batchFoundEstimateTime[thisStopKey];\n      } else {\n        continue;\n      }\n      const parsedEstimateTime = parseEstimateTime(thisProcessedEstimateTime.EstimateTime, time_formatting_mode);\n      integratedItem.status = parsedEstimateTime;\n\n      // Collect data from 'processedBusEvent'\n      let thisProcessedBusEvent = [];\n      if (processedBusEvent.hasOwnProperty(thisStopKey)) {\n        thisProcessedBusEvent = processedBusEvent[thisStopKey];\n      }\n      integratedItem.buses = formatBusEvent(thisProcessedBusEvent);\n\n      // Collect data from 'BusArrivalTimes'\n      let thisBusArrivalTimes = {};\n      if (BusArrivalTimes.hasOwnProperty(thisStopKey)) {\n        thisBusArrivalTimes = BusArrivalTimes[thisStopKey];\n      }\n      let flattenBusArrivalTimes = [];\n      for (const personalScheduleID in thisBusArrivalTimes) {\n        flattenBusArrivalTimes = flattenBusArrivalTimes.concat(thisBusArrivalTimes[personalScheduleID].busArrivalTimes);\n      }\n      integratedItem.busArrivalTimes = flattenBusArrivalTimes;\n\n      groupedItems[groupKey].push(integratedItem);\n      itemQuantity[groupKey] += 1;\n    }\n  }\n\n  for (const key in groupedItems) {\n    groupedItems[key].sort(function (a, b) {\n      return a.routeId - b.routeId;\n    });\n    /*\n      .map((item: IntegratedLocationItem) => {\n        // accessing ranking[key] inside map callback will cause constant violations any way\n        return {\n          route_name: item.route_name,\n          route_direction: item.route_direction,\n          routeId: item.routeId,\n          stopId: item.stopId,\n          status: item.status,\n          rank: {\n            number: thisRankingIndex + 1,\n            code: 0\n          },\n          buses: item.buses,\n          busArrivalTimes: item.busArrivalTimes\n        };\n      })*/\n  }\n  const result: IntegratedLocation = {\n    groupedItems: groupedItems,\n    groups: groups,\n    groupQuantity: stopLocationQuantity,\n    itemQuantity: itemQuantity,\n    LocationName: thisLocationName,\n    dataUpdateTime: getDataUpdateTime(requestID)\n  };\n  deleteDataReceivingProgress(requestID);\n  deleteDataUpdateTime(requestID);\n  //await recordEstimateTimeForUpdateRate(EstimateTime);\n  return result;\n}\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_createForOfIteratorHelper","Array","isArray","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_n","F","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","processBusEvent2","_x","_x2","_processBusEvent","_callee","BusEvent","StopIDs","result","_iterator2","_step2","item","thisStopID","thisRouteID","searchRouteResult","key","_context","parseInt","StopID","RouteID","indexOf","onThisRoute","index","String","BusID","charCodeAt","Math","pow","searchRouteByPathAttributeId","RouteName","t0","sort","b","batchFindEstimateTime","EstimateTime","StopIDList","_step","_iterator","concat","err","rankBatchFoundEstimateTime","batchFoundEstimateTime","rankingArray","thisStopKey","thisBatchFoundEstimateTimeItem","thisEstimateTime","rankingArrayLength","_i","_rankingArray","rankingRatio","rankingCode","number","code","integrateLocation","_x3","_x4","_integrateLocation","_callee2","hash","requestID","Location","Route","Stop","BusArrivalTimes","time_formatting_mode","location_labels","groupedItems","itemQuantity","groups","thisLocationKey","thisLocation","thisLocationName","stopLocationIds","setsOfVectors","RouteIDs","stopLocationQuantity","processedBusEvent","labels","_i2","groupKey","thisGroupStops","stopQuantity","thisGroupRanking","integratedItem","thisStop","thisItemRanking","thisRouteKey","thisRoute","thisProcessedEstimateTime","parsedEstimateTime","thisProcessedBusEvent","thisBusArrivalTimes","flattenBusArrivalTimes","personalScheduleID","_key","_context2","setDataReceivingProgress","getEstimateTime","getLocation","getRoute","getStop","getBusEvent","getBusArrivalTimes","getSettingOptionValue","id","generateLabelFromAddresses","generateLetterLabels","generateDirectionLabels","properties","icon","addressToString","la","toFixed","lo","stopId","ranking","route_name","route_direction","des","dep","goBack","routeId","parseEstimateTime","status","buses","formatBusEvent","busArrivalTimes","groupQuantity","LocationName","dataUpdateTime","getDataUpdateTime","deleteDataReceivingProgress","deleteDataUpdateTime"],"sourceRoot":""}