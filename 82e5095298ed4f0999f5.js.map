{"version":3,"file":"82e5095298ed4f0999f5.js","mappings":"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","sources":["webpack://bus/./node_modules/localforage/dist/localforage.js"],"sourcesContent":["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n"],"names":["module","exports","e","t","n","r","s","o","u","i","f","Error","code","l","call","length","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","immediate","task","push","this","g","self","window","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","value","returnValue","reject","resolve","getThen","obj","then","apply","arguments","thenable","onError","onSuccess","tryToUnwrap","result","tryCatch","status","out","reason","all","iterable","Object","prototype","toString","values","Array","resolved","allResolver","resolveFromAll","outValue","error","race","response","constructor","_typeof","Symbol","iterator","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","open","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","indexOf","IDBKeyRange","createBlob","parts","properties","Blob","name","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","db","close","dbArgs","version","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","onerror","onsuccess","onversionchange","target","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","mode","retries","undefined","tx","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","getItem","req","get","iterate","openCursor","iterationNumber","cursor","setItem","blobSupport","store","removeItem","clear","count","advanced","openKeyCursor","advance","keys","dropInstance","currentConfig","config","dbPromise","newVersion","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","getItem$1","item","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","c","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","isNaN","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js"],"sourceRoot":""}