{"version":3,"file":"36bd7ca61701916c034b.js","mappings":"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","sources":["webpack://bus/./src/interface/route/index.ts"],"sourcesContent":["import { IntegratedRoute, integratedStopItem, integrateRoute } from '../../data/route/index';\nimport { getIconHTML } from '../icons/index';\nimport { getDataReceivingProgress } from '../../data/apis/loader';\nimport { getSettingOptionValue, SettingSelectOptionRefreshIntervalValue } from '../../data/settings/index';\nimport { booleanToString, compareThings, generateIdentifier } from '../../tools/index';\nimport { getTextWidth } from '../../tools/graphic';\nimport { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../tools/query-selector';\nimport { getUpdateRate } from '../../data/analytics/update-rate/index';\nimport { isSaved } from '../../data/folder/index';\nimport { GeneratedElement, pushPageHistory, closePreviousPage, openPreviousPage, GroupStyles, querySize } from '../index';\nimport { promptMessage } from '../prompt/index';\nimport { indexToDay, timeObjectToString } from '../../tools/time';\nimport { logRecentView } from '../../data/recent-views/index';\nimport { stopHasNotifcationSchedules } from '../../data/notification/index';\n\nconst RouteField = documentQuerySelector('.css_route_field');\nconst RouteHeadElement = elementQuerySelector(RouteField, '.css_route_head');\nconst RouteNameElement = elementQuerySelector(RouteHeadElement, '.css_route_name');\nconst RouteButtonRightElement = elementQuerySelector(RouteHeadElement, '.css_route_button_right');\nconst RouteUpdateTimerElement = elementQuerySelector(RouteHeadElement, '.css_route_update_timer_box .css_route_update_timer');\nconst RouteGroupTabsElement = elementQuerySelector(RouteHeadElement, '.css_route_group_tabs');\nconst RouteGroupTabsTrayElement = elementQuerySelector(RouteGroupTabsElement, '.css_route_group_tabs_tray');\nconst RouteGroupTabLineTrackElement = elementQuerySelector(RouteHeadElement, '.css_route_group_tab_line_track');\nconst RouteGroupTabLineElement = elementQuerySelector(RouteGroupTabLineTrackElement, '.css_route_group_tab_line');\nconst RouteGroupsElement = elementQuerySelector(RouteField, '.css_route_groups');\n\nlet previousIntegration = {} as IntegratedRoute;\nlet previousAnimation: boolean = true;\nlet previousSkeletonScreen: boolean = false;\n\nlet routeSliding_initialIndex: number = 0;\nlet routeSliding_targetIndex: number = 0;\nlet routeSliding_groupQuantity: number = 0;\nlet routeSliding_groupStyles: GroupStyles = {};\nlet routeSliding_fieldWidth: number = 0;\nlet routeSliding_fieldHeight: number = 0;\nlet routeSliding_sliding: boolean = false;\n\nlet routeRefreshTimer_retryInterval: number = 10 * 1000;\nlet routeRefreshTimer_baseInterval: number = 15 * 1000;\nlet routeRefreshTimer_minInterval: number = 5 * 1000;\nlet routeRefreshTimer_dynamicInterval: number = 15 * 1000;\nlet routeRefreshTimer_dynamic: boolean = true;\nlet routeRefreshTimer_streaming: boolean = false;\nlet routeRefreshTimer_lastUpdate: number = 0;\nlet routeRefreshTimer_nextUpdate: number = 0;\nlet routeRefreshTimer_refreshing: boolean = false;\nlet routeRefreshTimer_currentRequestID: string = '';\nlet routeRefreshTimer_currentProgress: number = -1;\nlet routeRefreshTimer_targetProgress: number = -1;\nlet routeRefreshTimer_streamStarted: boolean = false;\nvar routeRefreshTimer_timer: ReturnType<typeof setTimeout>;\n\nlet currentRouteIDSet_RouteID: number = 0;\nlet currentRouteIDSet_PathAttributeId: Array<number> = [];\n\nlet tabPadding: number = 20;\n\nexport function initializeRouteSliding(): void {\n  RouteGroupsElement.addEventListener('touchstart', function () {\n    routeSliding_initialIndex = Math.round(RouteGroupsElement.scrollLeft / routeSliding_fieldWidth);\n  });\n\n  RouteGroupsElement.addEventListener(\n    'scroll',\n    function (event: Event) {\n      routeSliding_sliding = true;\n      const target = event.target as HTMLElement;\n      const currentIndex = target.scrollLeft / routeSliding_fieldWidth;\n      if (currentIndex > routeSliding_initialIndex) {\n        routeSliding_targetIndex = routeSliding_initialIndex + 1;\n      } else {\n        routeSliding_targetIndex = routeSliding_initialIndex - 1;\n      }\n      const initialSize = routeSliding_groupStyles[`g_${routeSliding_initialIndex}`] || { width: 0, offset: 0 };\n      const targetSize = routeSliding_groupStyles[`g_${routeSliding_targetIndex}`] || { width: 0, offset: 0 };\n      const tabWidth = initialSize.width + (targetSize.width - initialSize.width) * Math.abs(currentIndex - routeSliding_initialIndex);\n      const offset = (initialSize.offset + (targetSize.offset - initialSize.offset) * Math.abs(currentIndex - routeSliding_initialIndex)) * -1 + routeSliding_fieldWidth * 0.5 - tabWidth * 0.5;\n\n      updateRouteCSS(routeSliding_groupQuantity, offset, tabWidth - tabPadding, currentIndex);\n\n      if (currentIndex === routeSliding_targetIndex) {\n        routeSliding_initialIndex = Math.round(RouteGroupsElement.scrollLeft / routeSliding_fieldWidth);\n        routeSliding_sliding = false;\n      }\n    },\n    { passive: true }\n  );\n}\n\nexport function ResizeRouteField(): void {\n  const WindowSize = querySize('window');\n  const FieldWidth = WindowSize.width;\n  const FieldHeight = WindowSize.height;\n  RouteField.style.setProperty('--b-cssvar-route-field-width', `${FieldWidth}px`);\n  RouteField.style.setProperty('--b-cssvar-route-field-height', `${FieldHeight}px`);\n}\n\nexport function updateRouteCSS(groupQuantity: number, offset: number, tabLineWidth: number, percentage: number): void {\n  RouteField.style.setProperty('--b-cssvar-route-group-quantity', groupQuantity.toString());\n  RouteGroupTabLineElement.style.setProperty('--b-cssvar-route-tab-line-width-scale', (tabLineWidth / 30).toFixed(5));\n  RouteGroupTabsTrayElement.style.setProperty('--b-cssvar-route-tabs-tray-offset', `${offset.toFixed(5)}px`);\n  RouteGroupTabsTrayElement.style.setProperty('--b-cssvar-route-percentage', percentage.toFixed(5));\n}\n\nfunction updateUpdateTimer(): void {\n  const smoothingFactor = 0.1;\n  const time = new Date().getTime();\n  if (routeRefreshTimer_refreshing) {\n    routeRefreshTimer_targetProgress = -1 + getDataReceivingProgress(routeRefreshTimer_currentRequestID);\n    routeRefreshTimer_currentProgress += (routeRefreshTimer_targetProgress - routeRefreshTimer_currentProgress) * smoothingFactor;\n  } else {\n    routeRefreshTimer_targetProgress = -1 * Math.min(1, Math.max(0, Math.abs(time - routeRefreshTimer_lastUpdate) / routeRefreshTimer_dynamicInterval));\n    routeRefreshTimer_currentProgress = routeRefreshTimer_targetProgress;\n  }\n  RouteUpdateTimerElement.style.setProperty('--b-cssvar-update-timer', routeRefreshTimer_currentProgress.toString());\n  window.requestAnimationFrame(function () {\n    if (routeRefreshTimer_streaming) {\n      updateUpdateTimer();\n    }\n  });\n}\n\nfunction generateElementOfThreadBox(): GeneratedElement {\n  var identifier = generateIdentifier('i');\n  var element = document.createElement('div');\n  element.classList.add('css_route_group_thread_box');\n  element.id = identifier;\n  element.setAttribute('stretched', 'false');\n  element.innerHTML = /*html*/ `<div class=\"css_route_group_thread\"></div><div class=\"css_route_group_thread_status\"><div class=\"css_next_slide\" code=\"0\"></div><div class=\"css_current_slide\" code=\"0\"></div></div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction generateElementOfItem(threadBoxIdentifier: string): GeneratedElement {\n  var identifier = generateIdentifier('i');\n  var element = document.createElement('div');\n  element.classList.add('css_route_group_item');\n  element.id = identifier;\n  element.setAttribute('stretched', 'false');\n  element.innerHTML = /*html*/ `<div class=\"css_route_group_item_head\"><div class=\"css_route_group_item_name\"></div><div class=\"css_route_group_item_capsule\"><div class=\"css_route_group_item_status\"><div class=\"css_next_slide\" code=\"0\"></div><div class=\"css_current_slide\" code=\"0\"></div></div><div class=\"css_route_group_item_stretch\" onclick=\"bus.route.stretchRouteItemBody('${identifier}', '${threadBoxIdentifier}')\">${getIconHTML('keyboard_arrow_down')}</div><div class=\"css_route_group_item_capsule_separator\"></div></div></div><div class=\"css_route_group_item_body\" displayed=\"false\"><div class=\"css_route_group_item_buttons\"><div class=\"css_route_group_item_button\" highlighted=\"true\" type=\"tab\" onclick=\"bus.route.switchRouteBodyTab('${identifier}', 0)\" code=\"0\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('directions_bus')}</div>公車</div><div class=\"css_route_group_item_button\" highlighted=\"false\" type=\"tab\" onclick=\"bus.route.switchRouteBodyTab('${identifier}', 1)\" code=\"1\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('departure_board')}</div>抵達時間</div><div class=\"css_route_group_item_button\" highlighted=\"false\" type=\"tab\" onclick=\"bus.route.switchRouteBodyTab('${identifier}', 2)\" code=\"2\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('route')}</div>路線</div><div class=\"css_route_group_item_button\" highlighted=\"false\" type=\"save-to-folder\" onclick=\"bus.folder.openSaveToFolder('stop', ['${identifier}', null, null])\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('folder')}</div>儲存至資料夾</div><div class=\"css_route_group_item_button\" highlighted=\"false\" type=\"schedule-notification\" onclick=\"bus.notification.openScheduleNotification('stop', ['${identifier}', null, null, null])\" enabled=\"true\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('notifications')}</div>設定到站通知</div></div><div class=\"css_route_group_item_buses\" displayed=\"true\"></div><div class=\"css_route_group_item_overlapping_routes\" displayed=\"false\"></div><div class=\"css_route_group_item_bus_arrival_times\" displayed=\"false\"></div></div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction generateElementOfGroup(): GeneratedElement {\n  var identifier = generateIdentifier('g');\n  var element = document.createElement('div');\n  element.classList.add('css_route_group');\n  element.id = identifier;\n  var tracksElement = document.createElement('div');\n  tracksElement.classList.add('css_route_group_tracks');\n  var threadTrackElement = document.createElement('div');\n  threadTrackElement.classList.add('css_route_group_threads_track');\n  var itemsTrackElement = document.createElement('div');\n  itemsTrackElement.classList.add('css_route_group_items_track');\n  tracksElement.appendChild(threadTrackElement);\n  tracksElement.appendChild(itemsTrackElement);\n  element.appendChild(tracksElement);\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction generateElementOfTab(): GeneratedElement {\n  var identifier = generateIdentifier('t');\n  var element = document.createElement('div');\n  element.classList.add('css_route_group_tab');\n  element.id = identifier;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction setUpRouteFieldSkeletonScreen(Field: HTMLElement): void {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const WindowSize = querySize('window');\n  const FieldWidth = WindowSize.width;\n  const FieldHeight = WindowSize.height;\n  const defaultItemQuantity: number = Math.floor(FieldHeight / 50) + 5;\n  const defaultGroupQuantity = 2;\n  let groupedItems: IntegratedRoute['groupedItems'] = {};\n  for (let i = 0; i < defaultGroupQuantity; i++) {\n    const groupKey: string = `g_${i}`;\n    groupedItems[groupKey] = [];\n    for (let j = 0; j < defaultItemQuantity; j++) {\n      groupedItems[groupKey].push({\n        name: '',\n        goBack: '0',\n        status: { code: 8, text: '', time: -6 },\n        buses: [],\n        overlappingRoutes: [],\n        busArrivalTimes: [],\n        sequence: j,\n        position: {\n          longitude: 0,\n          latitude: 0\n        },\n        nearest: false,\n        progress: 0,\n        segmentBuffer: {\n          isSegmentBuffer: false,\n          isStartingPoint: false,\n          isEndingPoint: false\n        },\n        id: 0\n      });\n    }\n  }\n  updateRouteField(\n    Field,\n    {\n      groupedItems: groupedItems,\n      groupQuantity: defaultGroupQuantity,\n      itemQuantity: {\n        g_0: defaultItemQuantity,\n        g_1: defaultItemQuantity\n      },\n      RouteName: '載入中',\n      RouteEndPoints: {\n        RouteDeparture: '載入中',\n        RouteDestination: '載入中'\n      },\n      RouteID: 0,\n      PathAttributeId: [],\n      dataUpdateTime: 0\n    },\n    true,\n    playing_animation\n  );\n}\n\nfunction updateRouteField(Field: HTMLElement, integration: IntegratedRoute, skeletonScreen: boolean, animation: boolean) {\n  function updateItem(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem, previousItem: integratedStopItem | null): void {\n    function updateStatus(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem, animation: boolean): void {\n      const thisItemElementRect = thisItemElement.getBoundingClientRect();\n      const top = thisItemElementRect.top;\n      const left = thisItemElementRect.left;\n      const bottom = thisItemElementRect.bottom;\n      const right = thisItemElementRect.right;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n\n      const thisThreadStatusElement = elementQuerySelector(thisThreadBoxElement, '.css_route_group_thread_status');\n      const currentThreadSlideElement = elementQuerySelector(thisThreadStatusElement, '.css_current_slide');\n      const nextThreadSlideElement = elementQuerySelector(thisThreadStatusElement, '.css_next_slide');\n\n      const thisItemStatusElement = elementQuerySelector(thisItemElement, '.css_route_group_item_status');\n      const currentItemSlideElement = elementQuerySelector(thisItemStatusElement, '.css_current_slide');\n      const nextItemSlideElememt = elementQuerySelector(thisItemStatusElement, '.css_next_slide');\n\n      nextThreadSlideElement.setAttribute('code', thisItem.status.code.toString());\n\n      nextItemSlideElememt.setAttribute('code', thisItem.status.code.toString());\n      nextItemSlideElememt.innerText = thisItem.status.text;\n\n      if (animation && bottom > 0 && top < windowHeight && right > 0 && left < windowWidth) {\n        currentThreadSlideElement.addEventListener(\n          'animationend',\n          function () {\n            currentThreadSlideElement.setAttribute('code', thisItem.status.code.toString());\n            currentThreadSlideElement.classList.remove('css_slide_fade_out');\n          },\n          { once: true }\n        );\n        currentItemSlideElement.addEventListener(\n          'animationend',\n          function () {\n            currentItemSlideElement.setAttribute('code', thisItem.status.code.toString());\n            currentItemSlideElement.innerText = thisItem.status.text;\n            currentItemSlideElement.classList.remove('css_slide_fade_out');\n          },\n          { once: true }\n        );\n        currentThreadSlideElement.classList.add('css_slide_fade_out');\n        currentItemSlideElement.classList.add('css_slide_fade_out');\n      } else {\n        currentThreadSlideElement.setAttribute('code', thisItem.status.code.toString());\n\n        currentItemSlideElement.setAttribute('code', thisItem.status.code.toString());\n        currentItemSlideElement.innerText = thisItem.status.text;\n      }\n    }\n\n    function updateSegmentBuffer(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem): void {\n      thisItemElement.setAttribute('segment-buffer', booleanToString(thisItem.segmentBuffer.isSegmentBuffer));\n      thisThreadBoxElement.setAttribute('segment-buffer', booleanToString(thisItem.segmentBuffer.isSegmentBuffer));\n    }\n\n    function updateName(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_name').innerText = thisItem.name;\n    }\n\n    function updateBuses(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_buses').innerHTML = thisItem.buses.length === 0 ? '<div class=\"css_route_group_item_buses_message\">目前沒有公車可顯示</div>' : thisItem.buses.map((bus) => `<div class=\"css_route_group_item_bus\" on-this-route=\"${bus.onThisRoute}\"><div class=\"css_route_group_item_bus_title\"><div class=\"css_route_group_item_bus_icon\">${getIconHTML('directions_bus')}</div><div class=\"css_route_group_item_bus_car_number\">${bus.carNumber}</div></div><div class=\"css_route_group_item_bus_attributes\"><div class=\"css_route_group_item_bus_route\">路線：${bus.RouteName}</div><div class=\"css_route_group_item_bus_car_status\">狀態：${bus.status.text}</div><div class=\"css_route_group_item_bus_car_type\">類型：${bus.type}</div></div></div>`).join('');\n    }\n\n    function updateOverlappingRoutes(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_overlapping_routes').innerHTML = thisItem.overlappingRoutes.length === 0 ? '<div class=\"css_route_group_item_overlapping_route_message\">目前沒有路線可顯示</div>' : thisItem.overlappingRoutes.map((route) => `<div class=\"css_route_group_item_overlapping_route\"><div class=\"css_route_group_item_overlapping_route_title\"><div class=\"css_route_group_item_overlapping_route_icon\">${getIconHTML('route')}</div><div class=\"css_route_group_item_overlapping_route_name\">${route.name}</div></div><div class=\"css_route_group_item_overlapping_route_endpoints\">${route.RouteEndPoints.html}</div><div class=\"css_route_group_item_overlapping_route_actions\"><div class=\"css_route_group_item_overlapping_route_action_button\" onclick=\"bus.route.switchRoute(${route.RouteID}, [${route.PathAttributeId.join(',')}])\">查看路線</div><div class=\"css_route_group_item_overlapping_route_action_button\" onclick=\"bus.folder.openSaveToFolder('route', [${route.RouteID}])\">收藏路線</div></div></div>`).join('');\n    }\n\n    function updateBusArrivalTimes(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_bus_arrival_times').innerHTML = thisItem.busArrivalTimes.length === 0 ? '<div class=\"css_route_group_item_bus_arrival_message\">目前沒有抵達時間可顯示</div>' : thisItem.busArrivalTimes.map((busArrivalTime) => `<div class=\"css_route_group_item_bus_arrival_time\"><div class=\"css_route_group_item_bus_arrival_time_title\"><div class=\"css_route_group_item_bus_arrival_time_icon\">${getIconHTML('schedule')}</div><div class=\"css_route_group_item_bus_arrival_time_time\">${busArrivalTime.time}</div></div><div class=\"css_route_group_item_bus_arrival_time_attributes\"><div class=\"css_route_group_item_bus_arrival_time_personal_schedule_name\">個人化行程：${busArrivalTime.personalSchedule.name}</div><div class=\"css_route_group_item_bus_arrival_time_personal_schedule_period\">時段：${timeObjectToString(busArrivalTime.personalSchedule.period.start)} - ${timeObjectToString(busArrivalTime.personalSchedule.period.end)}</div><div class=\"css_route_group_item_bus_arrival_time_personal_schedule_days\">重複：${busArrivalTime.personalSchedule.days.map((day) => indexToDay(day).name).join('、')}</div></div></div>`).join('');\n    }\n\n    function updateNearest(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem): void {\n      thisItemElement.setAttribute('nearest', booleanToString(thisItem.nearest));\n      thisThreadBoxElement.setAttribute('nearest', booleanToString(thisItem.nearest));\n    }\n\n    function updateThread(thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem, previousItem: integratedStopItem | null, animation: boolean): void {\n      const previousProgress = previousItem?.progress || 0;\n      const thisProgress = thisItem?.progress || 0;\n      const thisThreadElement = elementQuerySelector(thisThreadBoxElement, '.css_route_group_thread');\n      if (animation && !(previousProgress === 0) && thisProgress === 0 && Math.abs(thisProgress - previousProgress) > 0) {\n        thisThreadElement.style.setProperty('--b-cssvar-thread-progress-a', `${100}%`);\n        thisThreadElement.style.setProperty('--b-cssvar-thread-progress-b', `${100}%`);\n        thisThreadElement.addEventListener(\n          'transitionend',\n          function () {\n            thisThreadElement.style.setProperty('--b-cssvar-thread-progress-a', `${0}%`);\n            thisThreadElement.style.setProperty('--b-cssvar-thread-progress-b', `${0}%`);\n          },\n          { once: true }\n        );\n      } else {\n        thisThreadElement.style.setProperty('--b-cssvar-thread-progress-a', `${0}%`);\n        thisThreadElement.style.setProperty('--b-cssvar-thread-progress-b', `${thisProgress * 100}%`);\n      }\n    }\n\n    function updateStretch(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, skeletonScreen: boolean): void {\n      if (skeletonScreen) {\n        const thisItemBodyElement = elementQuerySelector(thisItemElement, '.css_route_group_item_body');\n        thisItemBodyElement.setAttribute('displayed', 'false');\n        thisItemElement.setAttribute('stretched', 'false');\n        thisThreadBoxElement.setAttribute('stretched', 'false');\n      }\n    }\n\n    function updateAnimation(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, animation: boolean): void {\n      thisItemElement.setAttribute('animation', booleanToString(animation));\n      thisThreadBoxElement.setAttribute('animation', booleanToString(animation));\n    }\n\n    function updateSkeletonScreen(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, skeletonScreen: boolean): void {\n      thisItemElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n      thisThreadBoxElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    }\n\n    function updateSaveToFolderButton(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      const saveToFolderButtonElement = elementQuerySelector(thisItemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"save-to-folder\"]');\n      saveToFolderButtonElement.setAttribute('onclick', `bus.folder.openSaveToFolder('stop', ['${thisItemElement.id}', ${thisItem.id}, ${integration.RouteID}])`);\n      isSaved('stop', thisItem.id).then((e) => {\n        saveToFolderButtonElement.setAttribute('highlighted', booleanToString(e));\n      });\n    }\n\n    function updateScheduleNotificationButton(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      const scheduleNotificationButtonElement = elementQuerySelector(thisItemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"schedule-notification\"]');\n      scheduleNotificationButtonElement.setAttribute('onclick', `bus.notification.openScheduleNotification('stop', ['${thisItemElement.id}', ${thisItem.id}, ${integration.RouteID}, ${thisItem.status.time}])`);\n      const havingNotifcationSchedules = stopHasNotifcationSchedules(thisItem.id);\n      scheduleNotificationButtonElement.setAttribute('highlighted', booleanToString(havingNotifcationSchedules));\n    }\n\n    if (previousItem === null) {\n      updateStatus(thisItemElement, thisThreadBoxElement, thisItem, animation);\n      updateName(thisItemElement, thisItem);\n      updateBuses(thisItemElement, thisItem);\n      updateOverlappingRoutes(thisItemElement, thisItem);\n      updateBusArrivalTimes(thisItemElement, thisItem);\n      updateSegmentBuffer(thisItemElement, thisThreadBoxElement, thisItem);\n      updateNearest(thisItemElement, thisThreadBoxElement, thisItem);\n      updateThread(thisThreadBoxElement, thisItem, previousItem, animation);\n      updateStretch(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      updateAnimation(thisItemElement, thisThreadBoxElement, animation);\n      updateSkeletonScreen(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      updateSaveToFolderButton(thisItemElement, thisItem);\n      updateScheduleNotificationButton(thisItemElement, thisItem);\n    } else {\n      if (!(thisItem.status.time === previousItem.status.time)) {\n        updateStatus(thisItemElement, thisThreadBoxElement, thisItem, animation);\n        updateScheduleNotificationButton(thisItemElement, thisItem);\n      }\n      if (!compareThings(previousItem.buses, thisItem.buses)) {\n        updateBuses(thisItemElement, thisItem);\n      }\n      if (!compareThings(previousItem.busArrivalTimes, thisItem.busArrivalTimes)) {\n        updateBusArrivalTimes(thisItemElement, thisItem);\n      }\n      if (!compareThings(previousItem.segmentBuffer, thisItem.segmentBuffer)) {\n        updateSegmentBuffer(thisItemElement, thisThreadBoxElement, thisItem);\n      }\n      if (!(previousItem.nearest === thisItem.nearest)) {\n        updateNearest(thisItemElement, thisThreadBoxElement, thisItem);\n      }\n      if (!(previousItem.progress === thisItem.progress)) {\n        updateThread(thisThreadBoxElement, thisItem, previousItem, animation);\n      }\n      if (!(previousItem.id === thisItem.id)) {\n        updateName(thisItemElement, thisItem);\n        updateOverlappingRoutes(thisItemElement, thisItem);\n        updateSaveToFolderButton(thisItemElement, thisItem);\n        updateScheduleNotificationButton(thisItemElement, thisItem);\n      }\n      if (!(animation === previousAnimation)) {\n        updateAnimation(thisItemElement, thisThreadBoxElement, animation);\n      }\n      if (!(skeletonScreen === previousSkeletonScreen)) {\n        updateStretch(thisItemElement, thisThreadBoxElement, skeletonScreen);\n        updateSkeletonScreen(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      }\n    }\n  }\n\n  const WindowSize = querySize('window');\n  const FieldWidth = WindowSize.width;\n  const FieldHeight = WindowSize.height;\n\n  const groupQuantity = integration.groupQuantity;\n  const itemQuantity = integration.itemQuantity;\n  const groupedItems = integration.groupedItems;\n\n  routeSliding_groupQuantity = groupQuantity;\n  routeSliding_fieldWidth = FieldWidth;\n  routeSliding_fieldHeight = FieldHeight;\n\n  let cumulativeOffset = 0;\n  for (let i = 0; i < groupQuantity; i++) {\n    const width = getTextWidth([integration.RouteEndPoints.RouteDestination, integration.RouteEndPoints.RouteDeparture, ''].map((e) => `往${e}`)[i], 500, '17px', `\"Noto Sans TC\", sans-serif`) + tabPadding;\n    routeSliding_groupStyles[`g_${i}`] = {\n      width: width,\n      offset: cumulativeOffset\n    };\n    cumulativeOffset += width;\n  }\n  const offset = routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].offset * -1 + routeSliding_fieldWidth * 0.5 - routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].width * 0.5;\n  if (!routeSliding_sliding) {\n    updateRouteCSS(routeSliding_groupQuantity, offset, routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].width - tabPadding, routeSliding_initialIndex);\n  }\n\n  RouteNameElement.innerHTML = /*html*/ `<span>${integration.RouteName}</span>`;\n  RouteNameElement.setAttribute('animation', booleanToString(animation));\n  RouteNameElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n  RouteGroupTabsElement.setAttribute('animation', booleanToString(animation));\n  RouteGroupTabsElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n  RouteGroupTabLineTrackElement.setAttribute('animation', booleanToString(animation));\n  RouteGroupTabLineTrackElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n\n  RouteButtonRightElement.setAttribute('onclick', `bus.route.openRouteDetails(${integration.RouteID}, [${integration.PathAttributeId.join(',')}])`);\n\n  const currentGroupSeatQuantity = elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`).length;\n  if (!(groupQuantity === currentGroupSeatQuantity)) {\n    const capacity = currentGroupSeatQuantity - groupQuantity;\n    if (capacity < 0) {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const newGroupElement = generateElementOfGroup();\n        RouteGroupsElement.appendChild(newGroupElement.element);\n        const newTabElement = generateElementOfTab();\n        RouteGroupTabsTrayElement.appendChild(newTabElement.element);\n      }\n    } else {\n      const GroupElements = elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`);\n      const TabElements = elementQuerySelectorAll(Field, `.css_route_head .css_route_group_tabs .css_route_group_tabs_tray .css_route_group_tab`);\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const groupIndex = currentGroupSeatQuantity - 1 - o;\n        GroupElements[groupIndex].remove();\n        TabElements[groupIndex].remove();\n      }\n    }\n  }\n\n  for (let i = 0; i < groupQuantity; i++) {\n    const groupKey = `g_${i}`;\n    const currentItemSeatQuantity = elementQuerySelectorAll(elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_items_track'), `.css_route_group_item`).length;\n    if (!(itemQuantity[groupKey] === currentItemSeatQuantity)) {\n      const capacity = currentItemSeatQuantity - itemQuantity[groupKey];\n      if (capacity < 0) {\n        const RouteGroupItemsTrackElement = elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_items_track');\n        const RouteGroupThreadsTrackElement = elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_threads_track');\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const newThreadBoxElement = generateElementOfThreadBox();\n          const newItemElement = generateElementOfItem(newThreadBoxElement.id);\n          RouteGroupItemsTrackElement.appendChild(newItemElement.element);\n          RouteGroupThreadsTrackElement.appendChild(newThreadBoxElement.element);\n        }\n      } else {\n        const RouteGroupItemElements = elementQuerySelectorAll(elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_items_track'), `.css_route_group_item`);\n        const RouteGroupThreadElements = elementQuerySelectorAll(elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_threads_track'), `.css_route_group_thread_box`);\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const itemIndex = currentItemSeatQuantity - 1 - o;\n          RouteGroupItemElements[itemIndex].remove();\n          RouteGroupThreadElements[itemIndex].remove();\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < groupQuantity; i++) {\n    const groupKey = `g_${i}`;\n    const thisTabElement = elementQuerySelectorAll(Field, `.css_route_head .css_route_group_tabs .css_route_group_tabs_tray .css_route_group_tab`)[i];\n    thisTabElement.innerHTML = [integration.RouteEndPoints.RouteDestination, integration.RouteEndPoints.RouteDeparture, ''].map((e) => `<span>往${e}</span>`)[i];\n    thisTabElement.style.setProperty('--b-cssvar-route-tab-width', `${routeSliding_groupStyles[groupKey].width}px`);\n    thisTabElement.style.setProperty('--b-cssvar-route-tab-index', `${i}`);\n\n    const RouteGroupItemElements = elementQuerySelectorAll(elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_items_track'), `.css_route_group_item`);\n    const RouteGroupThreadElements = elementQuerySelectorAll(elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_threads_track'), `.css_route_group_thread_box`);\n    for (let j = 0; j < itemQuantity[groupKey]; j++) {\n      const thisItemElement = RouteGroupItemElements[j];\n      const thisThreadBoxElement = RouteGroupThreadElements[j];\n      const thisItem = groupedItems[groupKey][j];\n      if (previousIntegration.hasOwnProperty('groupedItems')) {\n        if (previousIntegration.groupedItems.hasOwnProperty(groupKey)) {\n          if (previousIntegration.groupedItems[groupKey][j]) {\n            const previousItem = previousIntegration.groupedItems[groupKey][j];\n            updateItem(thisItemElement, thisThreadBoxElement, thisItem, previousItem);\n          } else {\n            updateItem(thisItemElement, thisThreadBoxElement, thisItem, null);\n          }\n        } else {\n          updateItem(thisItemElement, thisThreadBoxElement, thisItem, null);\n        }\n      } else {\n        updateItem(thisItemElement, thisThreadBoxElement, thisItem, null);\n      }\n    }\n  }\n\n  previousIntegration = integration;\n  previousAnimation = animation;\n  previousSkeletonScreen = skeletonScreen;\n}\n\nasync function refreshRoute(): Promise<object> {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const refresh_interval_setting = getSettingOptionValue('refresh_interval') as SettingSelectOptionRefreshIntervalValue;\n  routeRefreshTimer_dynamic = refresh_interval_setting.dynamic;\n  routeRefreshTimer_baseInterval = refresh_interval_setting.baseInterval;\n  routeRefreshTimer_refreshing = true;\n  routeRefreshTimer_currentRequestID = generateIdentifier('r');\n  RouteUpdateTimerElement.setAttribute('refreshing', 'true');\n  const integration = await integrateRoute(currentRouteIDSet_RouteID, currentRouteIDSet_PathAttributeId, routeRefreshTimer_currentRequestID);\n  updateRouteField(RouteField, integration, false, playing_animation);\n  routeRefreshTimer_lastUpdate = new Date().getTime();\n  if (routeRefreshTimer_dynamic) {\n    const updateRate = await getUpdateRate();\n    routeRefreshTimer_nextUpdate = Math.max(new Date().getTime() + routeRefreshTimer_minInterval, integration.dataUpdateTime + routeRefreshTimer_baseInterval / updateRate);\n  } else {\n    routeRefreshTimer_nextUpdate = new Date().getTime() + routeRefreshTimer_baseInterval;\n  }\n  routeRefreshTimer_dynamicInterval = Math.max(routeRefreshTimer_minInterval, routeRefreshTimer_nextUpdate - new Date().getTime());\n  routeRefreshTimer_refreshing = false;\n  RouteUpdateTimerElement.setAttribute('refreshing', 'false');\n  return { status: 'Successfully refreshed the route.' };\n}\n\nexport function streamRoute(): void {\n  refreshRoute()\n    .then((result) => {\n      if (routeRefreshTimer_streaming) {\n        routeRefreshTimer_timer = setTimeout(function () {\n          streamRoute();\n        }, Math.max(routeRefreshTimer_minInterval, routeRefreshTimer_nextUpdate - new Date().getTime()));\n      } else {\n        routeRefreshTimer_streamStarted = false;\n      }\n    })\n    .catch((err) => {\n      console.error(err);\n      if (routeRefreshTimer_streaming) {\n        promptMessage(`（路線）發生網路錯誤，將在${routeRefreshTimer_retryInterval / 1000}秒後重試。`, 'error');\n        routeRefreshTimer_timer = setTimeout(function () {\n          streamRoute();\n        }, routeRefreshTimer_retryInterval);\n      } else {\n        routeRefreshTimer_streamStarted = false;\n      }\n    });\n}\n\nexport function openRoute(RouteID: number, PathAttributeId: Array<number>): void {\n  pushPageHistory('Route');\n  logRecentView('route', RouteID);\n  currentRouteIDSet_RouteID = RouteID;\n  currentRouteIDSet_PathAttributeId = PathAttributeId;\n  routeSliding_initialIndex = 0;\n  RouteField.setAttribute('displayed', 'true');\n  elementQuerySelector(RouteField, '.css_route_groups').scrollLeft = 0;\n  setUpRouteFieldSkeletonScreen(RouteField);\n  if (!routeRefreshTimer_streaming) {\n    routeRefreshTimer_streaming = true;\n    if (!routeRefreshTimer_streamStarted) {\n      routeRefreshTimer_streamStarted = true;\n      streamRoute();\n    } else {\n      refreshRoute();\n    }\n    routeRefreshTimer_currentProgress = -1;\n    routeRefreshTimer_targetProgress = -1;\n    updateUpdateTimer();\n  }\n  closePreviousPage();\n}\n\nexport function closeRoute(): void {\n  // revokePageHistory('Route');\n  RouteField.setAttribute('displayed', 'false');\n  routeRefreshTimer_streaming = false;\n  routeRefreshTimer_currentProgress = -1;\n  routeRefreshTimer_targetProgress = -1;\n  openPreviousPage();\n}\n\nexport function switchRoute(RouteID: number, PathAttributeId: Array<number>): void {\n  routeRefreshTimer_streaming = false;\n  routeRefreshTimer_currentProgress = -1;\n  routeRefreshTimer_targetProgress = -1;\n  openRoute(RouteID, PathAttributeId);\n}\n\nexport function stretchRouteItemBody(itemElementID: string, threadBoxElementID: string): void {\n  const itemElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  const itemBodyElement = elementQuerySelector(itemElement, '.css_route_group_item_body');\n  const threadBoxElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_threads_track .css_route_group_thread_box#${threadBoxElementID}`);\n  if (itemElement.getAttribute('stretched') === 'true') {\n    if (itemElement.getAttribute('animation') === 'true') {\n      itemBodyElement.addEventListener(\n        'transitionend',\n        function () {\n          itemBodyElement.setAttribute('displayed', 'false');\n        },\n        { once: true }\n      );\n    } else {\n      itemBodyElement.setAttribute('displayed', 'false');\n    }\n    itemElement.setAttribute('stretched', 'false');\n    threadBoxElement.setAttribute('stretched', 'false');\n  } else {\n    itemBodyElement.setAttribute('displayed', 'true');\n    itemElement.setAttribute('stretched', 'true');\n    threadBoxElement.setAttribute('stretched', 'true');\n  }\n}\n\nexport function switchRouteBodyTab(itemID: string, tabCode: number): void {\n  const itemElement = elementQuerySelector(RouteGroupsElement, `.css_route_group_item#${itemID}`);\n  const buttons = elementQuerySelector(itemElement, '.css_route_group_item_buttons');\n  const button = elementQuerySelectorAll(buttons, '.css_route_group_item_button[highlighted=\"true\"][type=\"tab\"]');\n  for (const t of button) {\n    t.setAttribute('highlighted', 'false');\n  }\n  elementQuerySelector(buttons, `.css_route_group_item_button[code=\"${tabCode}\"]`).setAttribute('highlighted', 'true');\n  switch (tabCode) {\n    case 0:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'true');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'false');\n      break;\n    case 1:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'true');\n      break;\n    case 2:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'true');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'false');\n      break;\n    default:\n      break;\n  }\n}\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_createForOfIteratorHelper","Array","isArray","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_n","F","asyncGeneratorStep","RouteField","documentQuerySelector","RouteHeadElement","elementQuerySelector","RouteNameElement","RouteButtonRightElement","RouteUpdateTimerElement","RouteGroupTabsElement","RouteGroupTabsTrayElement","RouteGroupTabLineTrackElement","RouteGroupTabLineElement","RouteGroupsElement","previousIntegration","previousAnimation","previousSkeletonScreen","routeSliding_initialIndex","routeSliding_targetIndex","routeSliding_groupQuantity","routeSliding_groupStyles","routeSliding_fieldWidth","routeSliding_sliding","routeRefreshTimer_retryInterval","routeRefreshTimer_baseInterval","routeRefreshTimer_minInterval","routeRefreshTimer_dynamicInterval","routeRefreshTimer_dynamic","routeRefreshTimer_streaming","routeRefreshTimer_lastUpdate","routeRefreshTimer_nextUpdate","routeRefreshTimer_refreshing","routeRefreshTimer_currentRequestID","routeRefreshTimer_currentProgress","routeRefreshTimer_targetProgress","routeRefreshTimer_streamStarted","currentRouteIDSet_RouteID","currentRouteIDSet_PathAttributeId","tabPadding","initializeRouteSliding","addEventListener","Math","round","scrollLeft","event","currentIndex","target","initialSize","concat","width","offset","targetSize","tabWidth","abs","updateRouteCSS","passive","ResizeRouteField","WindowSize","querySize","FieldWidth","FieldHeight","height","style","setProperty","groupQuantity","tabLineWidth","percentage","toFixed","updateUpdateTimer","time","Date","getTime","getDataReceivingProgress","min","max","window","requestAnimationFrame","generateElementOfThreadBox","identifier","generateIdentifier","element","document","createElement","classList","add","id","setAttribute","innerHTML","generateElementOfItem","threadBoxIdentifier","getIconHTML","generateElementOfGroup","tracksElement","threadTrackElement","itemsTrackElement","appendChild","updateRouteField","Field","integration","skeletonScreen","animation","updateItem","thisItemElement","thisThreadBoxElement","thisItem","previousItem","updateStatus","thisItemElementRect","getBoundingClientRect","top","left","bottom","right","windowWidth","innerWidth","windowHeight","innerHeight","thisThreadStatusElement","currentThreadSlideElement","nextThreadSlideElement","thisItemStatusElement","currentItemSlideElement","nextItemSlideElememt","status","code","innerText","text","remove","once","updateSegmentBuffer","booleanToString","segmentBuffer","isSegmentBuffer","updateName","updateBuses","buses","map","bus","onThisRoute","carNumber","RouteName","join","updateOverlappingRoutes","overlappingRoutes","route","RouteEndPoints","html","RouteID","PathAttributeId","updateBusArrivalTimes","busArrivalTimes","busArrivalTime","personalSchedule","timeObjectToString","period","start","end","days","day","indexToDay","updateNearest","nearest","updateThread","previousProgress","progress","thisProgress","thisThreadElement","updateStretch","updateAnimation","updateSkeletonScreen","updateSaveToFolderButton","saveToFolderButtonElement","isSaved","updateScheduleNotificationButton","scheduleNotificationButtonElement","havingNotifcationSchedules","stopHasNotifcationSchedules","compareThings","itemQuantity","groupedItems","cumulativeOffset","getTextWidth","RouteDestination","RouteDeparture","currentGroupSeatQuantity","elementQuerySelectorAll","capacity","newGroupElement","newTabElement","GroupElements","TabElements","groupIndex","groupKey","currentItemSeatQuantity","RouteGroupItemsTrackElement","RouteGroupThreadsTrackElement","newThreadBoxElement","newItemElement","RouteGroupItemElements","RouteGroupThreadElements","itemIndex","thisTabElement","j","refreshRoute","_refreshRoute","apply","arguments","_callee","playing_animation","refresh_interval_setting","updateRate","_context","getSettingOptionValue","dynamic","baseInterval","integrateRoute","getUpdateRate","dataUpdateTime","_next","_throw","streamRoute","result","setTimeout","err","console","error","promptMessage","openRoute","pushPageHistory","logRecentView","defaultItemQuantity","floor","goBack","sequence","position","longitude","latitude","isStartingPoint","isEndingPoint","g_0","g_1","setUpRouteFieldSkeletonScreen","closePreviousPage","closeRoute","openPreviousPage","switchRoute","stretchRouteItemBody","itemElementID","threadBoxElementID","itemElement","itemBodyElement","threadBoxElement","getAttribute","switchRouteBodyTab","itemID","tabCode","_step","buttons","_iterator"],"sourceRoot":""}