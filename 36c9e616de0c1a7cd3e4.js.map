{"version":3,"file":"36c9e616de0c1a7cd3e4.js","mappings":"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","sources":["webpack://bus/./src/interface/schedule-notification/index.ts","webpack://bus/./src/interface/storage/index.ts","webpack://bus/./src/interface/save-to-folder/index.ts","webpack://bus/./src/interface/search/index.ts","webpack://bus/./src/interface/settings/index.ts","webpack://bus/./src/interface/settings/options.ts","webpack://bus/./src/interface/search/keyboard.ts"],"sourcesContent":["import { scheduleNotificationForStop, ScheduleNotificationOption, scheduleNotificationOptions } from '../../data/notification/index';\nimport { documentGetElementByID, documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst ScheduleNotificationField = documentQuerySelector('.css_schedule_notification_field');\nconst ScheduleNotificationBodyElement = elementQuerySelector(ScheduleNotificationField, '.css_schedule_notification_body');\nconst ScheduleNotificationListElement = elementQuerySelector(ScheduleNotificationBodyElement, '.css_schedule_notification_list');\n\ntype ScheduleNotificationType = 'stop-on-route' | 'stop-on-location';\n\nfunction generateElementOfItem(item: ScheduleNotificationOption, type: ScheduleNotificationType, parameters: Array): GeneratedElement {\n  // const identifier = generateIdentifier('i');\n  const element = document.createElement('div');\n  element.classList.add('css_schedule_notification_list_item');\n  // element.id = identifier;\n  switch (type) {\n    case 'stop-on-route':\n      element.setAttribute('onclick', `bus.notification.scheduleNotificationForStopItemOnRoute('${parameters[0]}', ${parameters[1]}, ${parameters[2]}, ${parameters[3]}, ${item.index})`);\n      break;\n    case 'stop-on-location':\n      element.setAttribute('onclick', `bus.notification.scheduleNotificationForStopItemOnLocation('${parameters[0]}', ${parameters[1]}, ${parameters[2]}, ${parameters[3]}, ${item.index})`);\n      break;\n    default:\n      break;\n  }\n  element.innerHTML = /*html*/ `<div class=\"css_schedule_notification_item_icon\">${getIconHTML(item.icon)}</div><div class=\"css_schedule_notification_item_name\">${item.name}</div>`;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nasync function initializeScheduleNotificationField(type: ScheduleNotificationType, parameters: Array<any>) {\n  ScheduleNotificationListElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  for (const item of scheduleNotificationOptions) {\n    const newElement = generateElementOfItem(item, type, parameters);\n    fragment.append(newElement.element);\n  }\n  ScheduleNotificationListElement.append(fragment);\n}\n\nexport function openScheduleNotification(type: ScheduleNotificationType, parameters: Array<any>): void {\n  pushPageHistory('ScheduleNotification');\n  ScheduleNotificationField.setAttribute('displayed', 'true');\n  initializeScheduleNotificationField(type, parameters);\n}\n\nexport function closeScheduleNotification(): void {\n  revokePageHistory('ScheduleNotification');\n  ScheduleNotificationField.setAttribute('displayed', 'false');\n}\n\nexport function scheduleNotificationForStopItemOnRoute(itemElementID: string, StopID: number, RouteID: number, EstimateTime: number, index: number): void {\n  // const itemElement = documentGetElementByID(itemElementID);\n  const itemElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  const scheduleNotificationButtonElement = elementQuerySelector(itemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"schedule-notification\"]');\n  promptMessage('處理中', 'manufacturing');\n  scheduleNotificationButtonElement.setAttribute('enabled', 'false');\n  closeScheduleNotification();\n  scheduleNotificationForStop(StopID, RouteID, EstimateTime, index).then((result) => {\n    switch (result) {\n      case 0:\n        promptMessage('設定失敗', 'error');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      case 1:\n        promptMessage('設定成功', 'check_circle');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        scheduleNotificationButtonElement.setAttribute('highlighted', 'true');\n        break;\n      case 2:\n        promptMessage('在設定中註冊後才可設定到站通知', 'warning');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      default:\n        break;\n    }\n  });\n}\n\nexport function scheduleNotificationForStopItemOnLocation(itemElementID: string, StopID: number, RouteID: number, EstimateTime: number, index: number): void {\n  // const itemElement = documentGetElementByID(itemElementID);\n  const itemElement = documentQuerySelector(`.css_location_field .css_location_groups .css_location_group .css_location_group_items .css_location_group_item#${itemElementID}`);\n  const scheduleNotificationButtonElement = elementQuerySelector(itemElement, '.css_location_group_item_body .css_location_group_item_buttons .css_location_group_item_button[type=\"schedule-notification\"]');\n  promptMessage('處理中', 'manufacturing');\n  scheduleNotificationButtonElement.setAttribute('enabled', 'false');\n  closeScheduleNotification();\n  scheduleNotificationForStop(StopID, RouteID, EstimateTime, index).then((result) => {\n    switch (result) {\n      case 0:\n        promptMessage('設定失敗', 'error');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      case 1:\n        promptMessage('設定成功', 'check_circle');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        scheduleNotificationButtonElement.setAttribute('highlighted', 'true');\n        break;\n      case 2:\n        promptMessage('在設定中註冊後才可設定到站通知', 'warning');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      default:\n        break;\n    }\n  });\n}\n","import { getStoresSizeStatistics, StoreSize } from '../../data/analytics/storage-size';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { GeneratedElement } from '../index';\n\nconst StorageField = documentQuerySelector('.css_storage_field');\nconst StorageBodyElement = elementQuerySelector(StorageField, '.css_storage_body');\nconst StatisticsElement = elementQuerySelector(StorageBodyElement, '.css_storage_statistics');\n\nfunction generateElementOfItem(item: StoreSize): GeneratedElement {\n  const element = document.createElement('div');\n  element.classList.add('css_storage_statistics_item');\n  element.innerHTML = /*html*/ `<div class=\"css_storage_statistics_item_name\">${item.category.name}</div><div class=\"css_storage_statistics_item_value\">${item.size}</div>`;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nasync function initializeStorageStatistics() {\n  const statistics = await getStoresSizeStatistics();\n  StatisticsElement.innerHTML = '';\n  for (const key in statistics.categorizedSizes) {\n    const item = statistics.categorizedSizes[key];\n    const itemElement = generateElementOfItem(item);\n    StatisticsElement.appendChild(itemElement.element);\n  }\n}\n\nexport function openStorage(): void {\n  StorageField.setAttribute('displayed', 'true');\n  initializeStorageStatistics();\n}\n\nexport function closeStorage(): void {\n  StorageField.setAttribute('displayed', 'false');\n}\n","import { documentGetElementByID, documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { booleanToString } from '../../tools/index';\nimport { listFoldersWithContent, FolderWithContent, saveStop, isFolderContentSaved, saveRoute } from '../../data/folder/index';\nimport { getIconHTML } from '../icons/index';\nimport { promptMessage } from '../prompt/index';\n\ntype SaveToFolderType = 'stop-on-route' | 'stop-on-location' | 'route' | 'bus';\n\nconst SaveToFolderField = documentQuerySelector('.css_save_to_folder_field');\nconst SaveToFolderBodyElement = elementQuerySelector(SaveToFolderField, '.css_save_to_folder_body');\nconst SaveToFolderListElement = elementQuerySelector(SaveToFolderBodyElement, '.css_save_to_folder_list');\n\nfunction generateElementOfItem(item: FolderWithContent, type: SaveToFolderType, parameters: Array<any>): GeneratedElement {\n  // const identifier = generateIdentifier('i');\n  const element = document.createElement('div');\n  element.classList.add('css_save_to_folder_list_item');\n  // element.id = identifier;\n  switch (type) {\n    case 'stop-on-route':\n      element.setAttribute('onclick', `bus.folder.saveStopItemOnRoute('${parameters[0]}', '${item.id}', ${parameters[1]}, ${parameters[2]})`);\n      break;\n    case 'stop-on-location':\n      element.setAttribute('onclick', `bus.folder.saveStopItemOnLocation('${parameters[0]}', '${item.id}', ${parameters[1]}, ${parameters[2]})`);\n      break;\n    case 'route':\n      element.setAttribute('onclick', `bus.folder.saveRouteOnDetailsPage('${item.id}', ${parameters[0]})`);\n      break;\n    case 'route-on-route':\n      element.setAttribute('onclick', `bus.folder.saveRouteOnRoute('${item.id}', ${parameters[0]})`);\n      break;\n    case 'bus':\n      break;\n    default:\n      break;\n  }\n  element.innerHTML = /*html*/ `<div class=\"css_save_to_folder_item_icon\">${getIconHTML(item.icon)}</div><div class=\"css_save_to_folder_item_name\">${item.name}</div>`;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nasync function initializeSaveToFolderField(type: SaveToFolderType, parameters: Array<any>) {\n  SaveToFolderListElement.innerHTML = '';\n  const foldersWithContent = await listFoldersWithContent();\n  for (const item of foldersWithContent) {\n    const newItemElement = generateElementOfItem(item, type, parameters);\n    SaveToFolderListElement.appendChild(newItemElement.element);\n  }\n}\n\nexport function openSaveToFolder(type: SaveToFolderType, parameters: Array<any>): void {\n  pushPageHistory('SaveToFolder');\n  SaveToFolderField.setAttribute('displayed', 'true');\n  initializeSaveToFolderField(type, parameters);\n}\n\nexport function closeSaveToFolder(): void {\n  revokePageHistory('SaveToFolder');\n  SaveToFolderField.setAttribute('displayed', 'false');\n}\n\nexport function saveStopItemOnRoute(itemElementID: string, folderID: string, StopID: number, RouteID: number): void {\n  // const itemElement = documentGetElementByID(itemElementID);\n  const itemElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  const saveToFolderButtonElement = elementQuerySelector(itemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"save-to-folder\"]');\n  saveStop(folderID, StopID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('stop', StopID).then((k) => {\n        if (k) {\n          saveToFolderButtonElement.setAttribute('highlighted', booleanToString(k));\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nexport function saveStopItemOnLocation(itemElementID: string, folderID: string, StopID: number, RouteID: number): void {\n  // const itemElement = documentGetElementByID(itemElementID);\n  const itemElement = documentQuerySelector(`.css_location_field .css_location_groups .css_location_group .css_location_group_items .css_location_group_item#${itemElementID}`);\n  const saveToFolderButtonElement = elementQuerySelector(itemElement, '.css_location_group_item_body .css_location_group_item_buttons .css_location_group_item_button[type=\"save-to-folder\"]');\n  saveStop(folderID, StopID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('stop', StopID).then((k) => {\n        if (k) {\n          saveToFolderButtonElement.setAttribute('highlighted', booleanToString(k));\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nexport function saveRouteOnDetailsPage(folderID: string, RouteID: number): void {\n  const actionButtonElement = documentQuerySelector('.css_route_details_field .css_route_details_body .css_route_details_groups .css_route_details_group[group=\"actions\"] .css_route_details_group_body .css_route_details_action_button[action=\"save-to-folder\"]');\n  saveRoute(folderID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('route', RouteID).then((k) => {\n        if (k) {\n          actionButtonElement.setAttribute('highlighted', 'true');\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nexport function saveRouteOnRoute(folderID: string, RouteID: number): void {\n  saveRoute(folderID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('route', RouteID).then((k) => {\n        if (k) {\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n","import { openKeyboard, closeKeyboard } from './keyboard';\nimport { getSearchTypeFilter, prepareForSearch, searchFor } from '../../data/search/index';\nimport { getIconHTML } from '../icons/index';\nimport { dataDownloadCompleted } from '../home/index';\nimport { promptMessage } from '../prompt/index';\nimport { documentQuerySelector } from '../../tools/query-selector';\nimport { containPhoneticSymbols } from '../../tools/text';\nimport { pushPageHistory, revokePageHistory } from '../index';\n\nconst searchField = documentQuerySelector('.css_search_field');\nconst searchInputElement = documentQuerySelector('.css_search_field .css_search_head .css_search_search_input #search_input');\nconst searchResultsElement = documentQuerySelector('.css_search_field .css_search_body .css_search_results');\n\nexport function openSearch(): void {\n  if (dataDownloadCompleted) {\n    pushPageHistory('Search');\n    searchField.setAttribute('displayed', 'true');\n    openKeyboard();\n    prepareForSearch();\n  } else {\n    promptMessage('資料還在下載中', 'download_for_offline');\n  }\n}\n\nexport function closeSearch(): void {\n  revokePageHistory('Search');\n  closeKeyboard();\n  searchField.setAttribute('displayed', 'false');\n}\n\nexport async function updateSearchResult(query: string) {\n  if (!containPhoneticSymbols(query)) {\n    const typeToIcon = ['route', 'location_on', 'directions_bus'];\n    let html = [];\n    const searchTypeFilter = getSearchTypeFilter(query);\n    let type = false;\n    if (typeof searchTypeFilter !== 'boolean') {\n      if (searchTypeFilter.complete) {\n        type = searchTypeFilter.type;\n      }\n    }\n    const searchResults = searchFor(query, type, 30);\n    for (const result of searchResults) {\n      const name = result.item.n;\n      const typeIcon = getIconHTML(typeToIcon[result.item.type]);\n      let onclickScript = '';\n      switch (result.item.type) {\n        case 0:\n          onclickScript = `bus.route.openRoute(${result.item.id}, [${result.item.pid.join(',')}])`;\n          break;\n        case 1:\n          onclickScript = `bus.location.openLocation('${result.item.hash}')`;\n          break;\n        case 2:\n          onclickScript = `bus.bus.openBus(${result.item.id})`;\n          break;\n        default:\n          break;\n      }\n      html.push(`<div class=\"css_search_search_result\" onclick=\"${onclickScript}\"><div class=\"css_search_search_result_type\">${typeIcon}</div><div class=\"css_search_search_result_route_name\">${name}</div></div>`);\n    }\n    searchResultsElement.innerHTML = html.join('');\n  }\n}\n","import { releaseFile, generateIdentifier } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { listSettings } from '../../data/settings/index';\nimport { exportData } from '../../data/export/index';\nimport { importData } from '../../data/import/index';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\nimport { getCommitURLOfCurrentVersion } from '../../data/settings/version';\nimport { askForPersistentStorage } from '../../data/storage/index';\n\nfunction generateElementOfItem(item: object): GeneratedElement {\n  var identifier = generateIdentifier('i');\n  var element = document.createElement('div');\n  element.classList.add('css_setting');\n  element.id = identifier;\n  element.setAttribute('onclick', item.action);\n  element.setAttribute('type', item.type);\n  element.innerHTML = /*html*/ `<div class=\"css_setting_icon\">${getIconHTML(item.icon)}</div><div class=\"css_setting_name\">${item.name}</div><div class=\"css_setting_status\">${item.status}</div><div class=\"css_setting_arrow\">${getIconHTML('arrow_forward_ios')}</div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nasync function initializeSettingsField(Field: HTMLElement) {\n  const list = await listSettings();\n  elementQuerySelector(Field, '.css_settings_page_body .css_settings_page_settings').innerHTML = '';\n  for (const item of list) {\n    const thisElement = generateElementOfItem(item);\n    elementQuerySelector(Field, '.css_settings_page_body .css_settings_page_settings').appendChild(thisElement.element);\n  }\n}\n\nexport function openSettings(): void {\n  pushPageHistory('Settings');\n  var Field: HTMLElement = documentQuerySelector('.css_settings_page_field');\n  Field.setAttribute('displayed', 'true');\n  initializeSettingsField(Field);\n}\n\nexport function closeSettings(): void {\n  revokePageHistory('Settings');\n  var Field: HTMLElement = documentQuerySelector('.css_settings_page_field');\n  Field.setAttribute('displayed', 'false');\n}\n\nexport async function downloadExportFile() {\n  const exportedData = await exportData();\n  releaseFile(exportedData, 'application/json', 'bus-export.json');\n}\n\nexport function openFileToImportData(): void {\n  const identifier = generateIdentifier('i');\n  const fileInput = document.createElement('input');\n  fileInput.setAttribute('type', 'file');\n  fileInput.setAttribute('accept', 'application/json');\n  fileInput.setAttribute('name', identifier);\n  fileInput.id = identifier;\n  fileInput.classList.add('css_import_file_input');\n  fileInput.addEventListener(\n    'change',\n    function (event) {\n      // Check if a file is selected\n      if (event.target.files.length === 0) {\n        documentQuerySelector(`body #${identifier}`).remove();\n      } else {\n        // Get the first file selected by the user\n        const file = event.target.files[0];\n        const reader = new FileReader();\n\n        // When the file is successfully read\n        reader.onload = function (e) {\n          // Get the file content as text\n          const fileTextContent = e.target.result;\n\n          // Import the data\n          importData(fileTextContent).then((f) => {\n            if (f) {\n              promptMessage('已匯入資料', 'check_circle');\n            } else {\n              promptMessage('無法匯入資料', 'error');\n            }\n            documentQuerySelector(`body #${identifier}`).remove();\n          });\n        };\n\n        // Read the file as text\n        reader.readAsText(file);\n      }\n    },\n    { once: true }\n  );\n  fileInput.addEventListener(\n    'cancel',\n    function (event) {\n      documentQuerySelector(`body #${identifier}`).remove();\n    },\n    { once: true }\n  );\n\n  document.body.append(fileInput);\n  documentQuerySelector(`body #${identifier}`).click();\n}\n\nexport function viewCommitOfCurrentVersion(): void {\n  const url = getCommitURLOfCurrentVersion();\n  window.open(url);\n}\n\nexport function showPromptToAskForPersistentStorage(): void {\n  askForPersistentStorage().then((e) => {\n    switch (e) {\n      case 'granted':\n        promptMessage('已開啟永久儲存', 'check_circle');\n        break;\n      case 'denied':\n        promptMessage('永久儲存權限已被拒絕', 'cancel');\n        break;\n      case 'unsupported':\n        promptMessage('此瀏覽器不支援永久儲存', 'warning');\n        break;\n      default:\n        promptMessage('發生錯誤', 'error');\n        break;\n    }\n  });\n}\n","import { generateIdentifier } from '../../tools/index';\nimport { documentQuerySelector, documentQuerySelectorAll, elementQuerySelector } from '../../tools/query-selector';\nimport { getSetting, changeSettingOption } from '../../data/settings/index';\nimport { closePreviousPage, GeneratedElement, openPreviousPage, pushPageHistory } from '../index';\n\nfunction generateElementOfItem(setting: object, item: object, index: number): GeneratedElement {\n  var identifier = generateIdentifier('i');\n  var element = document.createElement('div');\n  element.classList.add('css_option');\n  element.id = identifier;\n  element.innerHTML = /*html*/ `<div class=\"css_option_name\">${item.name}</div><div class=\"css_option_checkbox\"><input type=\"checkbox\" onclick=\"bus.settings.settingsOptionsHandler(event, '${setting.key}', ${index})\" ${setting.option === index ? 'checked' : ''}/></div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction initializeSettingsOptionsField(Field: HTMLElement, settingKey: string): void {\n  const setting = getSetting(settingKey);\n  const bodyElement = elementQuerySelector(Field, '.css_settings_options_page_body');\n  const optionsElement = elementQuerySelector(bodyElement, '.css_settings_options_page_options');\n  const descriptionElement = elementQuerySelector(bodyElement, '.css_options_description');\n  descriptionElement.innerText = setting.description;\n  optionsElement.innerHTML = '';\n  let index = 0;\n  for (const item of setting.options) {\n    const thisElement = generateElementOfItem(setting, item, index);\n    optionsElement.appendChild(thisElement.element);\n    index += 1;\n  }\n}\n\nexport function openSettingsOptions(settingKey: string): void {\n  pushPageHistory('SettingsOptions');\n  var setting = getSetting(settingKey);\n  var Field: HTMLElement = documentQuerySelector('.css_settings_options_page_field');\n  Field.setAttribute('displayed', 'true');\n  elementQuerySelector(Field, '.css_settings_options_page_head .css_settings_options_page_title').innerText = setting.name;\n  initializeSettingsOptionsField(Field, settingKey);\n  closePreviousPage();\n}\n\nexport function closeSettingsOptions(): void {\n  // revokePageHistory('SettingsOptions');\n  var Field = documentQuerySelector('.css_settings_options_page_field');\n  Field.setAttribute('displayed', 'false');\n  openPreviousPage();\n}\n\nexport function settingsOptionsHandler(event: Event, settingKey: string, index: number): void {\n  var checkboxes = documentQuerySelectorAll('.css_settings_options_page_field .css_settings_options_page_body .css_settings_options_page_options .css_option .css_option_checkbox input[type=\"checkbox\"]');\n  for (var checkbox of checkboxes) {\n    checkbox.checked = false;\n  }\n  event.target.checked = true;\n  changeSettingOption(settingKey, index).then((e) => {});\n}\n","import { updateSearchResult } from './index';\nimport { supportTouch } from '../../tools/index';\nimport { drawRoundedRect } from '../../tools/graphic';\nimport { documentQuerySelector } from '../../tools/query-selector';\nimport { getIconHTML } from '../icons/index';\nimport { querySize } from '../index';\nimport { getCSSVariableValue } from '../../tools/style';\nimport { getSearchTypeFilter } from '../../data/search/index';\n\nlet keyboard_keys: Array<[string, string, string, string, string]> = [\n  ['紅', '藍', '1', '2', '3'],\n  ['綠', '棕', '4', '5', '6'],\n  ['橘', '小', '7', '8', '9'],\n  ['鍵盤', '幹線', '清空', '0', '刪除']\n];\n\nconst searchInputElement = documentQuerySelector('.css_search_field .css_search_head .css_search_search_input #search_input');\nconst keyboardElement = documentQuerySelector('.css_search_field .css_search_body .css_search_keyboard');\nconst searchInputCanvasElement = documentQuerySelector('.css_search_field .css_search_head .css_search_search_input canvas');\n\nconst searchInputCanvasContext = searchInputCanvasElement.getContext('2d');\nconst searchInputPlaceholder = '搜尋路線、地點、公車';\nconst searchInputCanvasScale = window.devicePixelRatio;\n\nconst padding: number = 15 * searchInputCanvasScale;\nconst cursorWidth: number = 1.8 * searchInputCanvasScale;\nconst cursorBorderRadius: number = 0.9 * searchInputCanvasScale;\nconst selectionHighlightBorderRadius: number = 4 * searchInputCanvasScale;\nconst lineHeight: number = 25 * searchInputCanvasScale;\nconst fontSize: number = 20 * searchInputCanvasScale;\nconst fontFamily: string = '\"Noto Sans TC\", sans-serif';\n\nlet textColor: string = getCSSVariableValue('--b-cssvar-333333');\nlet placeholderTextColor: string = getCSSVariableValue('--b-cssvar-aeaeb2');\nlet cursorColor: string = getCSSVariableValue('--b-cssvar-main-color');\nlet textWidth: number = 0;\nlet textWidthToCursorStart: number = 0;\nlet selectedTextWidth: number = 0;\nlet selection: boolean = false;\nlet cursorOffset: number = 0;\nlet size = querySize('head-one-button');\nlet width = size.width * searchInputCanvasScale;\nlet height = size.height * searchInputCanvasScale;\nlet playingCursorAnimation: boolean = false;\n\nexport function ResizeSearchInputCanvasSize(): void {\n  size = querySize('head-one-button');\n  width = size.width;\n  height = size.height;\n  searchInputCanvasElement.width = width * searchInputCanvasScale;\n  searchInputCanvasElement.height = height * searchInputCanvasScale;\n  updateSearchInput(searchInputElement.value, -1, -1);\n}\n\nfunction initializeKeyboard(): void {\n  let result = [];\n  for (const row of keyboard_keys) {\n    for (const column of row) {\n      let eventScript = '';\n      let eventType = 'onmousedown';\n      let html = '';\n      switch (column) {\n        case '刪除':\n          eventScript = 'bus.search.deleteCharFromInout()';\n          html = getIconHTML('backspace');\n          break;\n        case '清空':\n          eventScript = 'bus.search.emptyInput()';\n          html = column;\n          break;\n        case '鍵盤':\n          eventScript = 'bus.search.openSystemKeyboard(event)';\n          html = getIconHTML('keyboard');\n          break;\n        default:\n          eventScript = `bus.search.typeTextIntoInput('${column}')`;\n          html = column;\n          break;\n      }\n\n      if (supportTouch()) {\n        eventType = 'ontouchstart';\n      }\n      result.push(`<button class=\"css_search_keyboard_key\" ${eventType}=\"${eventScript}\">${html}</button>`);\n    }\n  }\n  keyboardElement.innerHTML = result.join('');\n}\n\nexport function openKeyboard() {\n  initializeKeyboard();\n  keyboardElement.setAttribute('displayed', 'true');\n\n  playingCursorAnimation = true;\n  animateCursor();\n\n  const value = searchInputElement.value;\n  updateSearchInput(value, -1, -1);\n}\n\nexport function closeKeyboard() {\n  keyboardElement.setAttribute('displayed', 'false');\n  playingCursorAnimation = false;\n}\n\nexport function openSystemKeyboard(event: Event) {\n  event.preventDefault();\n  searchInputElement.focus();\n}\n\nexport function typeTextIntoInput(value): void {\n  const currentValue = String(searchInputElement.value);\n  const newValue = `${currentValue}${value}`;\n  searchInputElement.value = newValue;\n  updateSearchResult(newValue);\n  updateSearchInput(newValue, -1, -1);\n}\n\nexport function deleteCharFromInout(): void {\n  const currentValue = String(searchInputElement.value);\n  const newValue = currentValue.substring(0, currentValue.length - 1);\n  searchInputElement.value = newValue;\n  updateSearchResult(newValue);\n  updateSearchInput(newValue, -1, -1);\n}\n\nexport function emptyInput(): void {\n  searchInputElement.value = '';\n  updateSearchResult('');\n  updateSearchInput('', -1, -1);\n}\n\nexport function updateSearchInput(value: string = '', cursorStart: number, cursorEnd: number): void {\n  let empty = false;\n  if (value.length === 0) {\n    value = searchInputPlaceholder;\n    empty = true;\n    cursorStart = 0;\n    cursorEnd = 0;\n  } else {\n    if (cursorStart === -1 && cursorEnd === -1) {\n      cursorStart = value.length;\n      cursorEnd = cursorStart * 1;\n    }\n\n    const searchTypeFilter = getSearchTypeFilter(value);\n    if (typeof searchTypeFilter !== 'boolean') {\n      if (cursorStart === cursorEnd && cursorStart >= searchTypeFilter.selectionStart && cursorEnd <= searchTypeFilter.selectionEnd) {\n        cursorStart = searchTypeFilter.selectionStart;\n        cursorEnd = searchTypeFilter.selectionEnd;\n      }\n    }\n  }\n\n  size = querySize('head-one-button');\n  width = size.width * searchInputCanvasScale;\n  height = size.height * searchInputCanvasScale;\n  textColor = getCSSVariableValue('--b-cssvar-333333');\n  placeholderTextColor = getCSSVariableValue('--b-cssvar-aeaeb2');\n  cursorColor = getCSSVariableValue('--b-cssvar-main-color');\n\n  searchInputCanvasContext.font = `500 ${fontSize}px ${fontFamily}`;\n  searchInputCanvasContext.textAlign = 'center';\n  searchInputCanvasContext.textBaseline = 'middle';\n\n  textWidth = searchInputCanvasContext.measureText(value).width;\n  textWidthToCursorStart = searchInputCanvasContext.measureText(value.substring(0, cursorStart)).width;\n  selectedTextWidth = searchInputCanvasContext.measureText(value.substring(cursorStart, cursorEnd)).width;\n  cursorOffset = empty ? 1 : Math.max(1, textWidthToCursorStart);\n\n  searchInputCanvasContext.clearRect(0, 0, width, height);\n\n  if (cursorStart === cursorEnd) {\n    selection = true;\n    searchInputCanvasContext.globalAlpha = 1;\n    searchInputCanvasContext.fillStyle = empty ? placeholderTextColor : textColor;\n    searchInputCanvasContext.fillText(value, textWidth / 2 + (Math.min(cursorOffset, width - padding) - cursorOffset), height / 2);\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, cursorWidth, lineHeight, cursorBorderRadius, cursorColor);\n  } else {\n    selection = false;\n    searchInputCanvasContext.globalAlpha = 0.27;\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, selectedTextWidth, lineHeight, selectionHighlightBorderRadius, cursorColor);\n    searchInputCanvasContext.globalAlpha = 1;\n    searchInputCanvasContext.fillStyle = empty ? placeholderTextColor : textColor;\n    searchInputCanvasContext.fillText(value, textWidth / 2 + (Math.min(cursorOffset, width - padding) - cursorOffset), height / 2);\n    searchInputCanvasContext.globalAlpha = 0.08;\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, selectedTextWidth, lineHeight, selectionHighlightBorderRadius, cursorColor);\n  }\n}\n\nfunction animateCursor(): void {\n  const x = new Date().getTime() / 400;\n  const alpha = Math.abs(Math.sin(x));\n  if (selection) {\n    searchInputCanvasContext.globalAlpha = alpha;\n    searchInputCanvasContext.clearRect(Math.min(cursorOffset, width - padding) - 1, 0, cursorWidth + 2, height);\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, cursorWidth, lineHeight, cursorBorderRadius, cursorColor);\n  }\n  if (playingCursorAnimation) {\n    window.requestAnimationFrame(animateCursor);\n  }\n}\n"],"names":["ScheduleNotificationField","documentQuerySelector","ScheduleNotificationBodyElement","elementQuerySelector","ScheduleNotificationListElement","generateElementOfItem","item","type","parameters","element","document","createElement","classList","add","setAttribute","index","innerHTML","getIconHTML","icon","name","id","_initializeScheduleNotificationField","_step","fragment","DocumentFragment","_iterator","_createForOfIteratorHelper","scheduleNotificationOptions","s","n","done","newElement","value","append","err","e","f","apply","arguments","openScheduleNotification","pushPageHistory","_x","_x2","initializeScheduleNotificationField","closeScheduleNotification","revokePageHistory","scheduleNotificationForStopItemOnRoute","itemElementID","StopID","RouteID","EstimateTime","itemElement","scheduleNotificationButtonElement","promptMessage","scheduleNotificationForStop","then","result","scheduleNotificationForStopItemOnLocation","StorageField","StorageBodyElement","StatisticsElement","category","size","_initializeStorageStatistics","statistics","getStoresSizeStatistics","key","categorizedSizes","appendChild","openStorage","initializeStorageStatistics","closeStorage","SaveToFolderField","SaveToFolderBodyElement","SaveToFolderListElement","_initializeSaveToFolderField","listFoldersWithContent","newItemElement","openSaveToFolder","initializeSaveToFolderField","closeSaveToFolder","saveStopItemOnRoute","folderID","saveToFolderButtonElement","saveStop","isFolderContentSaved","k","booleanToString","saveStopItemOnLocation","saveRouteOnDetailsPage","actionButtonElement","saveRoute","saveRouteOnRoute","searchField","searchResultsElement","openSearch","dataDownloadCompleted","openKeyboard","prepareForSearch","closeSearch","closeKeyboard","updateSearchResult","_updateSearchResult","query","containPhoneticSymbols","typeToIcon","html","searchTypeFilter","getSearchTypeFilter","complete","searchFor","typeIcon","onclickScript","pid","join","hash","push","identifier","generateIdentifier","action","status","_initializeSettingsField","_asyncToGenerator","Field","list","listSettings","thisElement","openSettings","initializeSettingsField","closeSettings","downloadExportFile","_downloadExportFile","exportedData","exportData","releaseFile","openFileToImportData","fileInput","addEventListener","event","target","files","length","remove","file","reader","FileReader","onload","fileTextContent","importData","readAsText","once","body","click","viewCommitOfCurrentVersion","url","getCommitURLOfCurrentVersion","window","open","showPromptToAskForPersistentStorage","askForPersistentStorage","setting","option","openSettingsOptions","settingKey","getSetting","innerText","bodyElement","optionsElement","description","options","initializeSettingsOptionsField","closePreviousPage","closeSettingsOptions","openPreviousPage","settingsOptionsHandler","_step2","_iterator2","documentQuerySelectorAll","checked","changeSettingOption","keyboard_keys","searchInputElement","keyboardElement","searchInputCanvasElement","searchInputCanvasContext","getContext","searchInputPlaceholder","searchInputCanvasScale","devicePixelRatio","padding","cursorWidth","cursorBorderRadius","selectionHighlightBorderRadius","lineHeight","fontSize","fontFamily","textColor","getCSSVariableValue","placeholderTextColor","cursorColor","textWidth","textWidthToCursorStart","selectedTextWidth","selection","cursorOffset","querySize","width","height","playingCursorAnimation","ResizeSearchInputCanvasSize","updateSearchInput","column","eventScript","eventType","supportTouch","initializeKeyboard","animateCursor","openSystemKeyboard","preventDefault","focus","typeTextIntoInput","newValue","String","deleteCharFromInout","currentValue","substring","emptyInput","undefined","cursorStart","cursorEnd","empty","selectionStart","selectionEnd","font","textAlign","textBaseline","measureText","Math","max","clearRect","globalAlpha","fillStyle","fillText","min","drawRoundedRect","x","Date","getTime","alpha","abs","sin","requestAnimationFrame"],"sourceRoot":""}