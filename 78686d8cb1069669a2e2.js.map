{"version":3,"file":"78686d8cb1069669a2e2.js","mappings":"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","sources":["webpack://bus/./src/interface/schedule-notification/index.ts","webpack://bus/./src/interface/storage/index.ts","webpack://bus/./src/interface/save-to-folder/index.ts","webpack://bus/./src/interface/search/index.ts","webpack://bus/./src/interface/settings/index.ts","webpack://bus/./src/interface/settings/options.ts"],"sourcesContent":["import { scheduleNotificationForStop, ScheduleNotificationOption, scheduleNotificationOptions } from '../../data/notification/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst ScheduleNotificationField = documentQuerySelector('.css_schedule_notification_field');\nconst ScheduleNotificationBodyElement = elementQuerySelector(ScheduleNotificationField, '.css_schedule_notification_body');\nconst ScheduleNotificationListElement = elementQuerySelector(ScheduleNotificationBodyElement, '.css_schedule_notification_list');\n\ntype ScheduleNotificationType = 'stop-on-route' | 'stop-on-location';\n\nfunction generateElementOfItem(item: ScheduleNotificationOption, type: ScheduleNotificationType, parameters: Array<any>): GeneratedElement {\n  const itemElement = document.createElement('div');\n  itemElement.classList.add('css_schedule_notification_list_item');\n\n  // Icon element\n  const iconElement = document.createElement('div');\n  iconElement.classList.add('css_schedule_notification_item_icon');\n  const iconSpanElement = document.createElement('span');\n  iconSpanElement.innerHTML = getIconHTML(item.icon);\n  iconElement.appendChild(iconSpanElement);\n\n  // Name element\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_schedule_notification_item_name');\n  nameElement.appendChild(document.createTextNode(item.name));\n\n  // Event handler\n  switch (type) {\n    case 'stop-on-route':\n      itemElement.onclick = function () {\n        scheduleNotificationForStopItemOnRoute(parameters[0], parameters[1], parameters[2], parameters[3], item.index);\n      };\n      break;\n    case 'stop-on-location':\n      itemElement.onclick = function () {\n        scheduleNotificationForStopItemOnLocation(parameters[0], parameters[1], parameters[2], parameters[3], item.index);\n      };\n      break;\n    default:\n      break;\n  }\n\n  itemElement.appendChild(iconElement);\n  itemElement.appendChild(nameElement);\n\n  return {\n    element: itemElement,\n    id: ''\n  };\n}\n\nfunction initializeScheduleNotificationField(type: ScheduleNotificationType, parameters: Array<any>): void {\n  ScheduleNotificationListElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  for (const item of scheduleNotificationOptions) {\n    const newElement = generateElementOfItem(item, type, parameters);\n    fragment.append(newElement.element);\n  }\n  ScheduleNotificationListElement.append(fragment);\n}\n\nexport function openScheduleNotification(type: ScheduleNotificationType, parameters: Array<any>): void {\n  pushPageHistory('ScheduleNotification');\n  ScheduleNotificationField.setAttribute('displayed', 'true');\n  initializeScheduleNotificationField(type, parameters);\n}\n\nexport function closeScheduleNotification(): void {\n  revokePageHistory('ScheduleNotification');\n  ScheduleNotificationField.setAttribute('displayed', 'false');\n}\n\nexport function scheduleNotificationForStopItemOnRoute(itemElementID: string, StopID: number, RouteID: number, EstimateTime: number, index: number): void {\n  const itemElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  const scheduleNotificationButtonElement = elementQuerySelector(itemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"schedule-notification\"]');\n  promptMessage('處理中', 'manufacturing');\n  scheduleNotificationButtonElement.setAttribute('enabled', 'false');\n  closeScheduleNotification();\n  scheduleNotificationForStop(StopID, RouteID, EstimateTime, index).then((result) => {\n    switch (result) {\n      case 0:\n        promptMessage('設定失敗', 'error');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      case 1:\n        promptMessage('設定成功', 'check_circle');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        scheduleNotificationButtonElement.setAttribute('highlighted', 'true');\n        break;\n      case 2:\n        promptMessage('在設定中註冊後才可設定到站通知', 'warning');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      default:\n        break;\n    }\n  });\n}\n\nexport function scheduleNotificationForStopItemOnLocation(itemElementID: string, StopID: number, RouteID: number, EstimateTime: number, index: number): void {\n  const itemElement = documentQuerySelector(`.css_location_field .css_location_groups .css_location_group .css_location_group_items .css_location_group_item#${itemElementID}`);\n  const scheduleNotificationButtonElement = elementQuerySelector(itemElement, '.css_location_group_item_body .css_location_group_item_buttons .css_location_group_item_button[type=\"schedule-notification\"]');\n  promptMessage('處理中', 'manufacturing');\n  scheduleNotificationButtonElement.setAttribute('enabled', 'false');\n  closeScheduleNotification();\n  scheduleNotificationForStop(StopID, RouteID, EstimateTime, index).then((result) => {\n    switch (result) {\n      case 0:\n        promptMessage('設定失敗', 'error');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      case 1:\n        promptMessage('設定成功', 'check_circle');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        scheduleNotificationButtonElement.setAttribute('highlighted', 'true');\n        break;\n      case 2:\n        promptMessage('在設定中註冊後才可設定到站通知', 'warning');\n        scheduleNotificationButtonElement.setAttribute('enabled', 'true');\n        break;\n      default:\n        break;\n    }\n  });\n}\n","import { getStoresSizeStatistics, StoreSize } from '../../data/analytics/storage-size';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { GeneratedElement } from '../index';\n\nconst StorageField = documentQuerySelector('.css_storage_field');\nconst StorageBodyElement = elementQuerySelector(StorageField, '.css_storage_body');\nconst StatisticsElement = elementQuerySelector(StorageBodyElement, '.css_storage_statistics');\n\nfunction generateElementOfItem(item: StoreSize): GeneratedElement {\n  // Create root element\n  const statisticsItemElement = document.createElement('div');\n  statisticsItemElement.classList.add('css_storage_statistics_item');\n\n  // Create name element\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_storage_statistics_item_name');\n  nameElement.appendChild(document.createTextNode(item.category.name));\n\n  // Create value element\n  const valueElement = document.createElement('div');\n  valueElement.classList.add('css_storage_statistics_item_value');\n  valueElement.appendChild(document.createTextNode(String(item.size)));\n\n  // Append children\n  statisticsItemElement.appendChild(nameElement);\n  statisticsItemElement.appendChild(valueElement);\n\n  return {\n    element: statisticsItemElement,\n    id: ''\n  };\n}\n\nasync function initializeStorageStatistics() {\n  const statistics = await getStoresSizeStatistics();\n  StatisticsElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  for (const key in statistics.categorizedSizes) {\n    const item = statistics.categorizedSizes[key];\n    const newItemElement = generateElementOfItem(item);\n    fragment.appendChild(newItemElement.element);\n  }\n  StatisticsElement.append(fragment);\n}\n\nexport function openStorage(): void {\n  StorageField.setAttribute('displayed', 'true');\n  initializeStorageStatistics();\n}\n\nexport function closeStorage(): void {\n  StorageField.setAttribute('displayed', 'false');\n}\n","import { FolderWithContent, isFolderContentSaved, listFoldersWithContent, saveLocation, saveRoute, saveStop } from '../../data/folder/index';\nimport { booleanToString } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\ntype SaveToFolderType = 'stop-on-route' | 'stop-on-location' | 'route' | 'route-on-route' | 'bus' | 'location' | 'location-on-route';\n\nconst SaveToFolderField = documentQuerySelector('.css_save_to_folder_field');\nconst SaveToFolderBodyElement = elementQuerySelector(SaveToFolderField, '.css_save_to_folder_body');\nconst SaveToFolderListElement = elementQuerySelector(SaveToFolderBodyElement, '.css_save_to_folder_list');\n\nfunction generateElementOfItem(item: FolderWithContent, type: SaveToFolderType, parameters: Array<any>): GeneratedElement {\n  const itemElement = document.createElement('div');\n  itemElement.classList.add('css_save_to_folder_list_item');\n\n  // Icon element\n  const iconElement = document.createElement('div');\n  iconElement.classList.add('css_save_to_folder_item_icon');\n  const iconSpanElement = document.createElement('span');\n  iconSpanElement.innerHTML = getIconHTML(item.icon);\n  iconElement.appendChild(iconSpanElement);\n\n  // Name element\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_save_to_folder_item_name');\n  nameElement.appendChild(document.createTextNode(item.name));\n\n  // Event handler\n  switch (type) {\n    case 'stop-on-route':\n      itemElement.onclick = function () {\n        saveStopItemOnRoute(parameters[0], item.id, parameters[1], parameters[2]);\n      };\n      break;\n    case 'stop-on-location':\n      itemElement.onclick = function () {\n        saveStopItemOnLocation(parameters[0], item.id, parameters[1], parameters[2]);\n      };\n      break;\n    case 'route':\n      itemElement.onclick = function () {\n        saveRouteOnDetailsPage(item.id, parameters[0]);\n      };\n      break;\n    case 'route-on-route':\n      itemElement.onclick = function () {\n        saveRouteOnRoute(item.id, parameters[0]);\n      };\n      break;\n    case 'location':\n      itemElement.onclick = function () {\n        saveLocationOnDetailsPage(item.id, parameters[0]);\n      };\n      break;\n    case 'location-on-route':\n      itemElement.onclick = function () {\n        saveLocationOnRoute(item.id, parameters[0]);\n      };\n      break;\n    case 'bus':\n      // No action\n      break;\n    default:\n      break;\n  }\n\n  itemElement.appendChild(iconElement);\n  itemElement.appendChild(nameElement);\n\n  return {\n    element: itemElement,\n    id: ''\n  };\n}\n\nasync function initializeSaveToFolderField(type: SaveToFolderType, parameters: Array<any>) {\n  const foldersWithContent = await listFoldersWithContent();\n  SaveToFolderListElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  for (const item of foldersWithContent) {\n    const newItemElement = generateElementOfItem(item, type, parameters);\n    fragment.appendChild(newItemElement.element);\n  }\n  SaveToFolderListElement.append(fragment);\n}\n\nexport function openSaveToFolder(type: SaveToFolderType, parameters: Array<any>): void {\n  pushPageHistory('SaveToFolder');\n  SaveToFolderField.setAttribute('displayed', 'true');\n  initializeSaveToFolderField(type, parameters);\n}\n\nexport function closeSaveToFolder(): void {\n  revokePageHistory('SaveToFolder');\n  SaveToFolderField.setAttribute('displayed', 'false');\n}\n\nfunction saveStopItemOnRoute(itemElementID: string, folderID: string, StopID: number, RouteID: number): void {\n  const itemElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  const saveToFolderButtonElement = elementQuerySelector(itemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"save-to-folder\"]');\n  saveStop(folderID, StopID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('stop', StopID).then((k) => {\n        if (k) {\n          saveToFolderButtonElement.setAttribute('highlighted', booleanToString(k));\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nfunction saveStopItemOnLocation(itemElementID: string, folderID: string, StopID: number, RouteID: number): void {\n  const itemElement = documentQuerySelector(`.css_location_field .css_location_groups .css_location_group .css_location_group_items .css_location_group_item#${itemElementID}`);\n  const saveToFolderButtonElement = elementQuerySelector(itemElement, '.css_location_group_item_body .css_location_group_item_buttons .css_location_group_item_button[type=\"save-to-folder\"]');\n  saveStop(folderID, StopID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('stop', StopID).then((k) => {\n        if (k) {\n          saveToFolderButtonElement.setAttribute('highlighted', booleanToString(k));\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nfunction saveRouteOnDetailsPage(folderID: string, RouteID: number): void {\n  const actionButtonElement = documentQuerySelector('.css_route_details_field .css_route_details_body .css_route_details_groups .css_route_details_group[group=\"actions\"] .css_route_details_group_body .css_route_details_action_button[action=\"save-to-folder\"]');\n  saveRoute(folderID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('route', RouteID).then((k) => {\n        if (k) {\n          actionButtonElement.setAttribute('highlighted', 'true');\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nfunction saveRouteOnRoute(folderID: string, RouteID: number): void {\n  saveRoute(folderID, RouteID).then((e) => {\n    if (e) {\n      isFolderContentSaved('route', RouteID).then((k) => {\n        if (k) {\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nfunction saveLocationOnDetailsPage(folderID: string, hash: string): void {\n  saveLocation(folderID, hash).then((e) => {\n    if (e) {\n      isFolderContentSaved('location', hash).then((k) => {\n        if (k) {\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n\nfunction saveLocationOnRoute(folderID: string, hash: string): void {\n  saveLocation(folderID, hash).then((e) => {\n    if (e) {\n      isFolderContentSaved('location', hash).then((k) => {\n        if (k) {\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('無法儲存', 'warning');\n    }\n  });\n}\n","import { prepareForSearch, searchFor, SearchItem, SearchResult } from '../../data/search/index';\nimport { drawRoundedRect } from '../../tools/graphic';\nimport { supportTouch } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../tools/query-selector';\nimport { getCSSVariableValue } from '../../tools/style';\nimport { containPhoneticSymbols } from '../../tools/text';\nimport { openBus } from '../bus/index';\nimport { dataDownloadCompleted } from '../home/index';\nimport { getIconHTML } from '../icons/index';\nimport { MaterialSymbols } from '../icons/material-symbols-type';\nimport { GeneratedElement, pushPageHistory, querySize, revokePageHistory, scrollDocumentToTop } from '../index';\nimport { openLocation } from '../location/index';\nimport { promptMessage } from '../prompt/index';\nimport { openRoute } from '../route/index';\n\nlet previousSearchResults: Array<SearchResult> = [];\n\nconst searchField = documentQuerySelector('.css_search_field');\nconst searchHeadElement = elementQuerySelector(searchField, '.css_search_head');\nconst searchBodyElement = elementQuerySelector(searchField, '.css_search_body');\nconst searchInputElement = elementQuerySelector(searchHeadElement, '.css_search_search_input #search_input') as HTMLInputElement;\nconst searchInputCanvasElement = elementQuerySelector(searchHeadElement, '.css_search_search_input canvas') as HTMLCanvasElement;\nconst searchTypeFilterButtonElement = elementQuerySelector(searchHeadElement, '.css_search_button_right');\nconst searchResultsElement = elementQuerySelector(searchBodyElement, '.css_search_results');\nconst searchKeyboardElement = elementQuerySelector(searchBodyElement, '.css_search_keyboard');\n\nconst searchInputCanvasContext = searchInputCanvasElement.getContext('2d');\nconst searchInputPlaceholder = '搜尋路線、地點、公車';\nconst searchInputCanvasScale = window.devicePixelRatio;\n\nconst padding: number = 15 * searchInputCanvasScale;\nconst cursorWidth: number = 1.8 * searchInputCanvasScale;\nconst cursorBorderRadius: number = 0.9 * searchInputCanvasScale;\nconst selectionHighlightBorderRadius: number = 4 * searchInputCanvasScale;\nconst lineHeight: number = 25 * searchInputCanvasScale;\nconst fontWeight: string = '400';\nconst fontSize: number = 20 * searchInputCanvasScale;\nconst fontFamily: string = '\"Noto Sans TC\", sans-serif';\n\nconst keyboardRows: Array<[string, string, string, string, string]> = [\n  ['紅', '藍', '1', '2', '3'],\n  ['綠', '棕', '4', '5', '6'],\n  ['橘', '小', '7', '8', '9'],\n  ['鍵盤', '幹線', '清空', '0', '刪除']\n];\n\nlet textColor: string = getCSSVariableValue('--b-cssvar-333333');\nlet placeholderTextColor: string = getCSSVariableValue('--b-cssvar-aeaeb2');\nlet cursorColor: string = getCSSVariableValue('--b-cssvar-main-color');\nlet textWidth: number = 0;\nlet textWidthToCursorStart: number = 0;\nlet selectedTextWidth: number = 0;\nlet selection: boolean = false;\nlet cursorOffset: number = 0;\nlet size = querySize('head-two-button');\nlet width = size.width * searchInputCanvasScale;\nlet height = size.height * searchInputCanvasScale;\nlet playingCursorAnimation: boolean = false;\nlet keyboardInitialized = false;\n\nexport function typeTextIntoInput(value): void {\n  const currentValue = getSearchInputValue();\n  const newValue = `${currentValue}${value}`;\n  searchInputElement.value = newValue;\n  updateSearchResult();\n  updateSearchInput(-1, -1);\n  scrollDocumentToTop();\n}\n\nexport function deleteCharFromInput(): void {\n  const currentValue = getSearchInputValue();\n  const newValue = currentValue.substring(0, currentValue.length - 1);\n  searchInputElement.value = newValue;\n  updateSearchResult();\n  updateSearchInput(-1, -1);\n  scrollDocumentToTop();\n}\n\nexport function emptyInput(): void {\n  searchInputElement.value = '';\n  updateSearchResult();\n  updateSearchInput(-1, -1);\n  scrollDocumentToTop();\n}\n\nexport function openSystemKeyboard(event: Event): void {\n  event.preventDefault();\n  searchInputElement.focus();\n  scrollDocumentToTop();\n}\n\nfunction initializeKeyboard(): void {\n  if (!keyboardInitialized) {\n    keyboardInitialized = true;\n    const fragment = new DocumentFragment();\n    for (const row of keyboardRows) {\n      for (const item of row) {\n        const newButtonElement = document.createElement('button');\n        newButtonElement.classList.add('css_search_keyboard_key');\n        const eventName = supportTouch() ? 'touchstart' : 'mousedown';\n        switch (item) {\n          case '刪除':\n            newButtonElement.addEventListener(eventName, deleteCharFromInput);\n            newButtonElement.innerHTML = getIconHTML('backspace');\n            break;\n          case '清空':\n            newButtonElement.addEventListener(eventName, emptyInput);\n            newButtonElement.appendChild(document.createTextNode(item));\n            break;\n          case '鍵盤':\n            newButtonElement.addEventListener(eventName, openSystemKeyboard);\n            newButtonElement.innerHTML = getIconHTML('keyboard');\n            break;\n          default:\n            // Use an IIFE (Immediately Invoked Function Expression) to create a new scope for each item value. This ensures that the item variable is captured by value rather than by reference.\n            newButtonElement.addEventListener(\n              eventName,\n              (function (currentItem) {\n                return function () {\n                  typeTextIntoInput(currentItem);\n                };\n              })(item)\n            );\n            newButtonElement.appendChild(document.createTextNode(item));\n            break;\n        }\n\n        fragment.appendChild(newButtonElement);\n      }\n    }\n    searchKeyboardElement.append(fragment);\n  }\n}\n\nexport function openKeyboard(): void {\n  initializeKeyboard();\n  searchKeyboardElement.setAttribute('displayed', 'true');\n  playingCursorAnimation = true;\n  animateCursor();\n  updateSearchInput(-1, -1);\n}\n\nexport function closeKeyboard(): void {\n  searchKeyboardElement.setAttribute('displayed', 'false');\n  playingCursorAnimation = false;\n}\n\nexport function getSearchTypeFilterValue(): SearchItem['type'] | -1 {\n  return parseInt(searchTypeFilterButtonElement.getAttribute('type'));\n}\n\nexport function getSearchInputValue(): string {\n  return String(searchInputElement.value);\n}\n\nexport function updateSearchInput(cursorStart: number, cursorEnd: number): void {\n  let value = getSearchInputValue();\n  let empty = false;\n  if (value.length === 0) {\n    value = searchInputPlaceholder;\n    empty = true;\n    cursorStart = 0;\n    cursorEnd = 0;\n  } else {\n    if (cursorStart === -1 && cursorEnd === -1) {\n      cursorStart = value.length;\n      cursorEnd = cursorStart * 1;\n    }\n  }\n\n  size = querySize('head-two-button');\n  width = size.width * searchInputCanvasScale;\n  height = size.height * searchInputCanvasScale;\n  textColor = getCSSVariableValue('--b-cssvar-333333');\n  placeholderTextColor = getCSSVariableValue('--b-cssvar-aeaeb2');\n  cursorColor = getCSSVariableValue('--b-cssvar-main-color');\n\n  searchInputCanvasContext.font = `${fontWeight} ${fontSize}px ${fontFamily}`;\n  searchInputCanvasContext.textAlign = 'center';\n  searchInputCanvasContext.textBaseline = 'middle';\n\n  textWidth = searchInputCanvasContext.measureText(value).width;\n  textWidthToCursorStart = searchInputCanvasContext.measureText(value.substring(0, cursorStart)).width;\n  selectedTextWidth = searchInputCanvasContext.measureText(value.substring(cursorStart, cursorEnd)).width;\n  cursorOffset = empty ? 1 : Math.max(1, textWidthToCursorStart);\n\n  searchInputCanvasContext.clearRect(0, 0, width, height);\n\n  if (cursorStart === cursorEnd) {\n    selection = true;\n    searchInputCanvasContext.globalAlpha = 1;\n    searchInputCanvasContext.fillStyle = empty ? placeholderTextColor : textColor;\n    searchInputCanvasContext.fillText(value, textWidth / 2 + (Math.min(cursorOffset, width - padding) - cursorOffset), height / 2);\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, cursorWidth, lineHeight, cursorBorderRadius, cursorColor);\n  } else {\n    selection = false;\n    searchInputCanvasContext.globalAlpha = 0.27;\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, selectedTextWidth, lineHeight, selectionHighlightBorderRadius, cursorColor);\n    searchInputCanvasContext.globalAlpha = 1;\n    searchInputCanvasContext.fillStyle = empty ? placeholderTextColor : textColor;\n    searchInputCanvasContext.fillText(value, textWidth / 2 + (Math.min(cursorOffset, width - padding) - cursorOffset), height / 2);\n    searchInputCanvasContext.globalAlpha = 0.08;\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, selectedTextWidth, lineHeight, selectionHighlightBorderRadius, cursorColor);\n  }\n}\n\nexport function resizeSearchInputCanvas(): void {\n  size = querySize('head-two-button');\n  width = size.width;\n  height = size.height;\n  searchInputCanvasElement.width = width * searchInputCanvasScale;\n  searchInputCanvasElement.height = height * searchInputCanvasScale;\n  updateSearchInput(-1, -1);\n}\n\nfunction animateCursor(): void {\n  const x = performance.now();\n  const alpha = 1 - Math.pow(Math.sin((Math.PI * x) / 960), 4);\n  if (selection) {\n    searchInputCanvasContext.globalAlpha = alpha;\n    searchInputCanvasContext.clearRect(Math.min(cursorOffset, width - padding) - 1, 0, cursorWidth + 2, height);\n    drawRoundedRect(searchInputCanvasContext, Math.min(cursorOffset, width - padding), (height - lineHeight) / 2, cursorWidth, lineHeight, cursorBorderRadius, cursorColor);\n  }\n  if (playingCursorAnimation) {\n    window.requestAnimationFrame(animateCursor);\n  }\n}\n\nfunction generateElementOfSearchResultItem(): GeneratedElement {\n  const searchResultItemElement = document.createElement('div');\n  searchResultItemElement.classList.add('css_search_search_result');\n\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_search_search_result_name');\n\n  const typeElement = document.createElement('div');\n  typeElement.classList.add('css_search_search_result_type');\n\n  searchResultItemElement.appendChild(typeElement);\n  searchResultItemElement.appendChild(nameElement);\n  return {\n    element: searchResultItemElement,\n    id: ''\n  };\n}\n\nexport function updateSearchResult(): void {\n  const typeToIcon: Array<MaterialSymbols> = ['route', 'location_on', 'directions_bus'];\n\n  function updateItem(element: HTMLElement, currentItem: SearchResult, previousItem: SearchResult | null): void {\n    function updateTypeIcon(item: SearchResult, element: HTMLElement): void {\n      const typeElement = elementQuerySelector(element, '.css_search_search_result_type');\n      typeElement.innerHTML = getIconHTML(typeToIcon[item.item.type]);\n    }\n\n    function updateName(item: SearchResult, element: HTMLElement): void {\n      const nameElement = elementQuerySelector(element, '.css_search_search_result_name');\n      nameElement.innerText = item.item.n;\n    }\n\n    function updateClickHandler(item: SearchResult, element: HTMLElement): void {\n      switch (item.item.type) {\n        case 0:\n          element.onclick = function () {\n            openRoute(item.item.id as number, item.item.pid);\n          };\n          break;\n        case 1:\n          element.onclick = function () {\n            openLocation(item.item.hash);\n          };\n          break;\n        case 2:\n          element.onclick = function () {\n            openBus(item.item.id as number);\n          };\n          break;\n        default:\n          break;\n      }\n    }\n    // compare the current item with the previous item\n    if (previousItem) {\n      if (currentItem.item.type !== previousItem.item.type) {\n        updateTypeIcon(currentItem, element);\n      }\n      if (currentItem.item.id !== previousItem.item.id) {\n        updateName(currentItem, element);\n        updateClickHandler(currentItem, element);\n      }\n    }\n    // if the previous item is null, it means this is a new item\n    else {\n      updateTypeIcon(currentItem, element);\n      updateName(currentItem, element);\n      updateClickHandler(currentItem, element);\n    }\n  }\n\n  const currentType = getSearchTypeFilterValue();\n  const currentValue = getSearchInputValue();\n  if (!containPhoneticSymbols(currentValue)) {\n    const searchResults = searchFor(currentValue, currentType, 30);\n    const searchResultLength = searchResults.length;\n    const currentItemSeatQuantity = elementQuerySelectorAll(searchResultsElement, '.css_search_search_result').length;\n    if (searchResultLength !== currentItemSeatQuantity) {\n      const capacity = currentItemSeatQuantity - searchResultLength;\n      if (capacity < 0) {\n        const fragment = new DocumentFragment();\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const newElement = generateElementOfSearchResultItem();\n          fragment.appendChild(newElement.element);\n        }\n        searchResultsElement.appendChild(fragment);\n      } else {\n        const searchResultElements2 = elementQuerySelectorAll(searchResultsElement, '.css_search_search_result');\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const itemIndex = currentItemSeatQuantity - 1 - o;\n          searchResultElements2[itemIndex].remove();\n        }\n      }\n    }\n\n    const searchResultElements = elementQuerySelectorAll(searchResultsElement, '.css_search_search_result');\n    for (let i = 0; i < searchResultLength; i++) {\n      const previousItem = previousSearchResults[i];\n      const currentItem = searchResults[i];\n      const thisItemElement = searchResultElements[i];\n      if (previousItem) {\n        updateItem(thisItemElement, currentItem, previousItem);\n      } else {\n        updateItem(thisItemElement, currentItem, null);\n      }\n    }\n    previousSearchResults = searchResults;\n  }\n}\n\nexport function switchSearchTypeFilter(): void {\n  const currentType = getSearchTypeFilterValue();\n  let newType: number = -1;\n  if (currentType >= -1 && currentType < 2) {\n    newType = currentType + 1;\n  } else {\n    newType = -1;\n  }\n  const icons: Array<MaterialSymbols> = ['filter_list', 'route', 'location_on', 'directions_bus'];\n  searchTypeFilterButtonElement.innerHTML = getIconHTML(icons[newType + 1]);\n  searchTypeFilterButtonElement.setAttribute('type', newType.toString());\n  updateSearchResult();\n}\n\nexport function openSearch(): void {\n  if (dataDownloadCompleted) {\n    pushPageHistory('Search');\n    searchField.setAttribute('displayed', 'true');\n    openKeyboard();\n    prepareForSearch();\n  } else {\n    promptMessage('資料還在下載中', 'download_for_offline');\n  }\n}\n\nexport function closeSearch(): void {\n  revokePageHistory('Search');\n  closeKeyboard();\n  searchField.setAttribute('displayed', 'false');\n}\n","import { exportData } from '../../data/export/index';\nimport { importData } from '../../data/import/index';\nimport { listSettings, Setting } from '../../data/settings/index';\nimport { getCommitURLOfCurrentVersion } from '../../data/settings/version';\nimport { askForPersistentStorage } from '../../data/storage/index';\nimport { generateIdentifier, releaseFile } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst SettingsField = documentQuerySelector('.css_settings_field');\nconst SettingsBodyElement = elementQuerySelector(SettingsField, '.css_settings_body');\nconst SettingsElement = elementQuerySelector(SettingsBodyElement, '.css_settings');\n\nfunction generateElementOfItem(item: Setting): GeneratedElement {\n  const settingElement = document.createElement('div');\n  settingElement.classList.add('css_setting');\n  settingElement.setAttribute('type', item.type);\n\n  // Icon\n  const iconElement = document.createElement('div');\n  iconElement.classList.add('css_setting_icon');\n  const iconSpanElement = document.createElement('span');\n  iconSpanElement.innerHTML = getIconHTML(item.icon);\n  iconElement.appendChild(iconSpanElement);\n\n  // Name\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_setting_name');\n  nameElement.appendChild(document.createTextNode(item.name));\n\n  // Status\n  const statusElement = document.createElement('div');\n  statusElement.classList.add('css_setting_status');\n  statusElement.appendChild(document.createTextNode(item.status));\n\n  // Arrow\n  const arrowElement = document.createElement('div');\n  arrowElement.classList.add('css_setting_arrow');\n  const arrowSpanElement = document.createElement('span');\n  arrowSpanElement.innerHTML = getIconHTML('arrow_forward_ios');\n  arrowElement.appendChild(arrowSpanElement);\n\n  // Event handler (lambda)\n  if (typeof item.action === 'function') {\n    settingElement.onclick = function () {\n      item.action();\n    };\n  } else if (typeof item.action === 'string') {\n    settingElement.setAttribute('onclick', item.action);\n  }\n\n  // Assemble\n  settingElement.appendChild(iconElement);\n  settingElement.appendChild(nameElement);\n  settingElement.appendChild(statusElement);\n  settingElement.appendChild(arrowElement);\n\n  return {\n    element: settingElement,\n    id: ''\n  };\n}\n\nasync function initializeSettingsField() {\n  const list = await listSettings();\n  SettingsElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  for (const item of list) {\n    const thisElement = generateElementOfItem(item);\n    fragment.appendChild(thisElement.element);\n  }\n  SettingsElement.append(fragment);\n}\n\nexport function openSettings(): void {\n  pushPageHistory('Settings');\n  SettingsField.setAttribute('displayed', 'true');\n  initializeSettingsField();\n}\n\nexport function closeSettings(): void {\n  revokePageHistory('Settings');\n  SettingsField.setAttribute('displayed', 'false');\n}\n\nexport async function downloadExportFile() {\n  const exportedData = await exportData();\n  releaseFile(exportedData, 'application/json', 'bus-export.json');\n}\n\nexport function openFileToImportData(): void {\n  const identifier = generateIdentifier();\n  const fileInput = document.createElement('input');\n  fileInput.setAttribute('type', 'file');\n  fileInput.setAttribute('accept', 'application/json');\n  fileInput.setAttribute('name', identifier);\n  fileInput.id = identifier;\n  fileInput.classList.add('css_import_file_input');\n  fileInput.addEventListener(\n    'change',\n    function (event) {\n      // Check if a file is selected\n      if (event.target.files.length === 0) {\n        documentQuerySelector(`body #${identifier}`).remove();\n      } else {\n        // Get the first file selected by the user\n        const file = event.target.files[0];\n        const reader = new FileReader();\n\n        // When the file is successfully read\n        reader.onload = function (e) {\n          // Get the file content as text\n          const fileTextContent = e.target.result;\n\n          // Import the data\n          importData(fileTextContent).then((f) => {\n            if (f) {\n              promptMessage('已匯入資料', 'check_circle');\n            } else {\n              promptMessage('無法匯入資料', 'error');\n            }\n            documentQuerySelector(`body #${identifier}`).remove();\n          });\n        };\n\n        // Read the file as text\n        reader.readAsText(file);\n      }\n    },\n    { once: true }\n  );\n  fileInput.addEventListener(\n    'cancel',\n    function () {\n      documentQuerySelector(`body #${identifier}`).remove();\n    },\n    { once: true }\n  );\n\n  document.body.append(fileInput);\n  documentQuerySelector(`body #${identifier}`).click();\n}\n\nexport function viewCommitOfCurrentVersion(): void {\n  const url = getCommitURLOfCurrentVersion();\n  window.open(url);\n}\n\nexport function viewGitHubRepository(): void {\n  const url = 'https://github.com/EricHsia7/bus';\n  window.open(url);\n}\n\nexport function showPromptToAskForPersistentStorage(): void {\n  askForPersistentStorage().then((e) => {\n    switch (e) {\n      case 'granted':\n        promptMessage('已開啟永久儲存', 'check_circle');\n        break;\n      case 'denied':\n        promptMessage('永久儲存權限已被拒絕', 'cancel');\n        break;\n      case 'unsupported':\n        promptMessage('此瀏覽器不支援永久儲存', 'warning');\n        break;\n      default:\n        promptMessage('發生錯誤', 'error');\n        break;\n    }\n  });\n}\n","import { changeSettingOption, getSetting, SettingSelect, SettingSelectOption } from '../../data/settings/index';\nimport { documentQuerySelector, documentQuerySelectorAll, elementQuerySelector } from '../../tools/query-selector';\nimport { closePreviousPage, GeneratedElement, openPreviousPage, pushPageHistory } from '../index';\n\nconst SettingsOptionsField = documentQuerySelector('.css_settings_options_field');\nconst SettingsOptionsBodyElement = elementQuerySelector(SettingsOptionsField, '.css_settings_options_body');\nconst SettingsOptionsOptionsElement = elementQuerySelector(SettingsOptionsBodyElement, '.css_settings_options');\nconst SettingsOptionsDescriptionElement = elementQuerySelector(SettingsOptionsBodyElement, '.css_options_description');\nconst SettingsOptionsHeadElement = elementQuerySelector(SettingsOptionsField, '.css_settings_options_head');\nconst SettingsOptionsTitleElement = elementQuerySelector(SettingsOptionsHeadElement, '.css_settings_options_title');\n\nfunction generateElementOfItem(setting: SettingSelect, item: SettingSelectOption, index: number): GeneratedElement {\n  const optionElement = document.createElement('div');\n  optionElement.classList.add('css_option');\n\n  const nameElement = document.createElement('div');\n  nameElement.classList.add('css_option_name');\n  nameElement.appendChild(document.createTextNode(item.name));\n\n  const checkboxContainerElement = document.createElement('div');\n  checkboxContainerElement.classList.add('css_option_checkbox');\n\n  const checkboxElement = document.createElement('input');\n  checkboxElement.type = 'checkbox';\n  checkboxElement.checked = setting.option === index;\n  checkboxElement.onclick = (event) => {\n    settingsOptionsHandler(event, setting.key, index);\n  };\n\n  checkboxContainerElement.appendChild(checkboxElement);\n  optionElement.appendChild(nameElement);\n  optionElement.appendChild(checkboxContainerElement);\n\n  return {\n    element: optionElement,\n    id: ''\n  };\n}\n\nfunction initializeSettingsOptionsField(settingKey: string): void {\n  const setting = getSetting(settingKey) as SettingSelect;\n  SettingsOptionsTitleElement.innerText = setting.name;\n  SettingsOptionsDescriptionElement.innerText = setting.description;\n  SettingsOptionsOptionsElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  let index: number = 0;\n  for (const item of setting.options) {\n    const thisElement = generateElementOfItem(setting, item, index);\n    fragment.appendChild(thisElement.element);\n    index += 1;\n  }\n  SettingsOptionsOptionsElement.append(fragment);\n}\n\nexport function openSettingsOptions(settingKey: string): void {\n  pushPageHistory('SettingsOptions');\n  SettingsOptionsField.setAttribute('displayed', 'true');\n  initializeSettingsOptionsField(settingKey);\n  closePreviousPage();\n}\n\nexport function closeSettingsOptions(): void {\n  // revokePageHistory('SettingsOptions');\n  SettingsOptionsField.setAttribute('displayed', 'false');\n  openPreviousPage();\n}\n\nexport function settingsOptionsHandler(event: Event, settingKey: string, index: number): void {\n  const checkboxes = documentQuerySelectorAll('.css_settings_options_field .css_settings_options_body .css_settings_options .css_option .css_option_checkbox input[type=\"checkbox\"]') as NodeListOf<HTMLInputElement>;\n  for (const checkbox of checkboxes) {\n    checkbox.checked = false;\n  }\n  const target = event.target as HTMLInputElement;\n  target.checked = true;\n  changeSettingOption(settingKey, index);\n}\n"],"names":["ScheduleNotificationField","documentQuerySelector","ScheduleNotificationBodyElement","elementQuerySelector","ScheduleNotificationListElement","generateElementOfItem","item","type","parameters","itemElement","document","createElement","classList","add","iconElement","iconSpanElement","innerHTML","getIconHTML","icon","appendChild","nameElement","createTextNode","name","onclick","scheduleNotificationForStopItemOnRoute","index","scheduleNotificationForStopItemOnLocation","element","id","openScheduleNotification","pushPageHistory","setAttribute","_step","fragment","DocumentFragment","_iterator","_createForOfIteratorHelper","scheduleNotificationOptions","s","n","done","newElement","value","append","err","e","f","initializeScheduleNotificationField","closeScheduleNotification","revokePageHistory","itemElementID","StopID","RouteID","EstimateTime","scheduleNotificationButtonElement","promptMessage","scheduleNotificationForStop","then","result","StorageField","StorageBodyElement","StatisticsElement","statisticsItemElement","category","valueElement","String","size","_initializeStorageStatistics","statistics","getStoresSizeStatistics","key","categorizedSizes","newItemElement","apply","arguments","openStorage","initializeStorageStatistics","closeStorage","SaveToFolderField","SaveToFolderBodyElement","SaveToFolderListElement","folderID","saveToFolderButtonElement","saveStop","isFolderContentSaved","k","booleanToString","closeSaveToFolder","saveStopItemOnRoute","saveStopItemOnLocation","actionButtonElement","saveRoute","hash","saveLocation","_initializeSaveToFolderField","foldersWithContent","listFoldersWithContent","openSaveToFolder","_x","_x2","initializeSaveToFolderField","previousSearchResults","searchField","searchHeadElement","searchBodyElement","searchInputElement","searchInputCanvasElement","searchTypeFilterButtonElement","searchResultsElement","searchKeyboardElement","searchInputCanvasContext","getContext","searchInputPlaceholder","searchInputCanvasScale","window","devicePixelRatio","padding","cursorWidth","cursorBorderRadius","selectionHighlightBorderRadius","lineHeight","fontWeight","fontSize","fontFamily","keyboardRows","textColor","getCSSVariableValue","placeholderTextColor","cursorColor","textWidth","textWidthToCursorStart","selectedTextWidth","selection","cursorOffset","querySize","width","height","playingCursorAnimation","keyboardInitialized","deleteCharFromInput","currentValue","getSearchInputValue","newValue","substring","length","updateSearchResult","updateSearchInput","scrollDocumentToTop","emptyInput","openSystemKeyboard","event","preventDefault","focus","openKeyboard","_step2","_iterator2","newButtonElement","eventName","supportTouch","addEventListener","currentItem","initializeKeyboard","animateCursor","getSearchTypeFilterValue","parseInt","getAttribute","cursorStart","cursorEnd","empty","font","textAlign","textBaseline","measureText","Math","max","clearRect","globalAlpha","fillStyle","fillText","min","drawRoundedRect","resizeSearchInputCanvas","x","performance","now","alpha","pow","sin","PI","requestAnimationFrame","generateElementOfSearchResultItem","searchResultItemElement","typeElement","typeToIcon","updateItem","previousItem","updateTypeIcon","updateName","innerText","updateClickHandler","openRoute","pid","openLocation","openBus","currentType","containPhoneticSymbols","searchResults","searchFor","searchResultLength","currentItemSeatQuantity","elementQuerySelectorAll","capacity","o","abs","searchResultElements2","remove","searchResultElements","i","thisItemElement","switchSearchTypeFilter","newType","toString","openSearch","dataDownloadCompleted","prepareForSearch","closeSearch","SettingsField","SettingsBodyElement","SettingsElement","settingElement","statusElement","status","arrowElement","arrowSpanElement","action","_initializeSettingsField","_asyncToGenerator","list","listSettings","thisElement","openSettings","initializeSettingsField","closeSettings","downloadExportFile","_downloadExportFile","exportedData","exportData","releaseFile","openFileToImportData","identifier","generateIdentifier","fileInput","target","files","file","reader","FileReader","onload","fileTextContent","importData","readAsText","once","body","click","viewCommitOfCurrentVersion","url","getCommitURLOfCurrentVersion","open","viewGitHubRepository","showPromptToAskForPersistentStorage","askForPersistentStorage","SettingsOptionsField","SettingsOptionsBodyElement","SettingsOptionsOptionsElement","SettingsOptionsDescriptionElement","SettingsOptionsHeadElement","SettingsOptionsTitleElement","setting","optionElement","checkboxContainerElement","checkboxElement","checked","option","settingsOptionsHandler","openSettingsOptions","settingKey","getSetting","description","options","initializeSettingsOptionsField","closePreviousPage","closeSettingsOptions","openPreviousPage","documentQuerySelectorAll","changeSettingOption"],"sourceRoot":""}