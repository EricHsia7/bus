{"version":3,"file":"5c32df719efd24ad1eed.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,MAAO,GAAIH,GACQ,iBAAZC,QACdA,QAAa,IAAID,IAEjBD,EAAU,IAAIC,GACf,CATD,CASGK,MAAM,I,mBCRT,IAAIC,EAAsB,CCA1BA,EAAyBL,IACH,oBAAXM,QAA0BA,OAAOC,aAC1CC,OAAOC,eAAeT,EAASM,OAAOC,YAAa,CAAEG,MAAO,WAE7DF,OAAOC,eAAeT,EAAS,aAAc,CAAEU,OAAO,GAAO,G,wgCCH9DN,KAAKO,UAAY,SAAUC,GACzB,IAAMC,EAIR,SAAsCC,GACpC,IAQIC,EAEoBC,EAVlBC,EAAmB,oBACnBC,EAAiB,sBACjBC,EAAc,yCAEdC,EAAQN,EAAIO,MAAM,OAEpBR,EAAS,GACTS,EAAiB,GACJC,EAAAC,EAEEJ,GAAK,IAAxB,IAAAG,EAAAE,MAAAT,EAAAO,EAAAG,KAAAC,MAA0B,KAAfC,EAAIZ,EAAAN,MACPmB,EAAkBZ,EAAiBa,KAAKF,GACxCG,EAAgBb,EAAeY,KAAKF,GACpCI,EAAab,EAAYW,KAAKF,GACpC,GAAIC,IAAoBG,IAAeD,EAIrC,OAFAT,EAAiBM,EAAKK,MAAMhB,GAAkB,GAC9CF,EAAe,KACPO,GAMN,IAAK,YACHT,EAAOqB,KAAK,CAAC,GACb,MACF,IAAK,cACErB,EAAOA,EAAOsB,OAAS,GAAGC,eAAe,iBAC5CvB,EAAOA,EAAOsB,OAAS,GAAgB,YAAI,IAE7C,MACF,IAAK,aACHtB,EAAOA,EAAOsB,OAAS,GAAgB,YAAED,KAAK,CAAC,GAOrD,GAAIL,GAAmBG,IAAeD,EAIpC,OAFAT,EAAiBM,EAAKK,MAAMd,GAAa,GACzCJ,EAAea,EAAKK,MAAMd,GAAa,GAC/BG,GACN,IAAK,UACHT,EAAOA,EAAOsB,OAAS,GAAY,QAAIE,SAAST,EAAKK,MAAMd,GAAa,IACxE,MACF,IAAK,eACHN,EAAOA,EAAOsB,OAAS,GAAgB,YAAEtB,EAAOA,EAAOsB,OAAS,GAAgB,YAAEA,OAAS,GAAiB,aAAIE,SAAStB,GACzH,MACF,IAAK,oBACHF,EAAOA,EAAOsB,OAAS,GAAgB,YAAEtB,EAAOA,EAAOsB,OAAS,GAAgB,YAAEA,OAAS,GAAsB,kBAAIE,SAAStB,GAC9H,MACF,IAAK,YACHF,EAAOA,EAAOsB,OAAS,GAAgB,YAAEtB,EAAOA,EAAOsB,OAAS,GAAgB,YAAEA,OAAS,GAAc,UAAIE,SAAStB,GAc9H,CAAC,OAAAuB,GAAAf,EAAAX,EAAA0B,EAAA,SAAAf,EAAAgB,GAAA,CAED,OAAO1B,CACT,CA7EiB2B,CAA6B5B,EAAE6B,MAC9CrC,KAAKsC,YAAY7B,EACnB,E","sources":["webpack://bus/webpack/universalModuleDefinition","webpack://bus/webpack/bootstrap","webpack://bus/webpack/runtime/make namespace object","webpack://bus/./src/data/apis/getSegmentBuffers/extractSegmentBuffers-worker.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bus\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bus\"] = factory();\n\telse\n\t\troot[\"bus\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { SegmentBuffers } from './index';\n\nself.onmessage = function (e) {\n  const result = extractSegmentBuffers_worker(e.data);\n  self.postMessage(result); // Send the result back to the main thread\n};\n\nfunction extractSegmentBuffers_worker(xml: string): SegmentBuffers {\n  const startingTagRegex = /^\\s*<([a-z_]*)>/im;\n  const endingTagRegex = /^\\s*<\\/([a-z_]*)>/im;\n  const inlineRegex = /^\\s*<([a-z_]*)>([^<>]*)<\\/([a-z_]*)>/im;\n\n  const lines = xml.split(/\\n/m);\n\n  let result = [];\n  let currentTagName = '';\n  var currentValue;\n\n  for (const line of lines) {\n    const startingTagTest = startingTagRegex.test(line);\n    const endingTagTest = endingTagRegex.test(line);\n    const inlineTest = inlineRegex.test(line);\n    if (startingTagTest && !inlineTest && !endingTagTest) {\n      //starting tag\n      currentTagName = line.match(startingTagRegex)[1];\n      currentValue = null;\n      switch (currentTagName) {\n        /*\n        case 'RouteFares':\n          result = [];\n          break;\n        */\n        case 'RouteFare':\n          result.push({});\n          break;\n        case 'BufferZones':\n          if (!result[result.length - 1].hasOwnProperty('BufferZones')) {\n            result[result.length - 1]['BufferZones'] = [];\n          }\n          break;\n        case 'BufferZone':\n          result[result.length - 1]['BufferZones'].push({});\n          break;\n        default:\n          break;\n      }\n    }\n\n    if (startingTagTest && inlineTest && !endingTagTest) {\n      //inline tag\n      currentTagName = line.match(inlineRegex)[1];\n      currentValue = line.match(inlineRegex)[2];\n      switch (currentTagName) {\n        case 'RouteID':\n          result[result.length - 1]['RouteID'] = parseInt(line.match(inlineRegex)[2]);\n          break;\n        case 'OriginStopID':\n          result[result.length - 1]['BufferZones'][result[result.length - 1]['BufferZones'].length - 1]['OriginStopID'] = parseInt(currentValue);\n          break;\n        case 'DestinationStopID':\n          result[result.length - 1]['BufferZones'][result[result.length - 1]['BufferZones'].length - 1]['DestinationStopID'] = parseInt(currentValue);\n          break;\n        case 'Direction':\n          result[result.length - 1]['BufferZones'][result[result.length - 1]['BufferZones'].length - 1]['Direction'] = parseInt(currentValue);\n          break;\n        default:\n          break;\n      }\n    }\n\n    /*\n    if (!startingTagTest && !inlineTest && endingTagTest) {\n      //ending tag\n      currentTagName = line.match(endingTagRegex)[1];\n      currentValue = null\n    }\n    */\n  }\n\n  return result;\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","Symbol","toStringTag","Object","defineProperty","value","onmessage","e","result","xml","currentValue","_step","startingTagRegex","endingTagRegex","inlineRegex","lines","split","currentTagName","_iterator","_createForOfIteratorHelper","s","n","done","line","startingTagTest","test","endingTagTest","inlineTest","match","push","length","hasOwnProperty","parseInt","err","f","extractSegmentBuffers_worker","data","postMessage"],"sourceRoot":""}