{"version":3,"file":"607b315738c4af984a02.min.js","mappings":"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","sources":["webpack://bus/./src/data/storage/index.ts","webpack://bus/./src/data/user-position/index.ts"],"sourcesContent":["const localforage = require('localforage');\n\nlet storage = {\n  cacheStore: false,\n  settingsStore: false,\n  dataUsageRecordsStore: false,\n  updateRateRecordsStore: false,\n  busArrivalTimeRecordsStore: false,\n  personalScheduleStore: false,\n  recentViewsStore: false,\n  folderListStore: false,\n  savedStopFolderStore: false,\n  savedRouteFolderStore: false\n};\n\nlet stores = ['cacheStore', 'settingsStore', 'dataUsageRecordsStore', 'updateRateRecordsStore', 'busArrivalTimeRecordsStore', 'personalScheduleStore', 'recentViewsStore', 'folderListStore', 'savedStopFolderStore', 'savedRouteFolderStore'];\n\nasync function dropInstance(store: number): Promise<any> {\n  const storeKey = stores[store];\n  if (storage[storeKey] === false) {\n    storage[storeKey] = await localforage.createInstance({\n      name: storeKey\n    });\n  }\n  const operation = await storage[storeKey].dropInstance();\n  return operation;\n}\n\nexport async function lfSetItem(store: number, key: string, value: any): Promise<any> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const operation = await storage[storeKey].setItem(key, value);\n    return operation;\n  } catch (err) {\n    console.error(err);\n    await dropInstance(store);\n    return null;\n  }\n}\n\nexport async function lfGetItem(store: number, key: string): Promise<any> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const operation = await storage[storeKey].getItem(key);\n    return operation;\n  } catch (err) {\n    console.error(err);\n    await dropInstance(store);\n    return null;\n  }\n}\n\nexport async function lfRemoveItem(store: number, key: string): Promise<any> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const operation = await storage[storeKey].removeItem(key);\n    return operation;\n  } catch (err) {\n    console.error(err);\n    await dropInstance(store);\n    return null;\n  }\n}\n\nexport async function lfListItemKeys(store: number): Promise<Array<string>> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const keys = await storage[storeKey].keys();\n    return keys;\n  } catch (err) {\n    console.error(err);\n    return [];\n  }\n}\n\nexport function getStoreKey(store: number): string {\n  return stores[store];\n}\n\nexport function getStoresLength(): number {\n  return stores.length;\n}\n\nexport async function registerStore(id: string): Promise<number> {\n  const storeKey = `F${id}Store`;\n  if (!storage.hasOwnProperty(storeKey) && stores.indexOf(storeKey) < 0) {\n    storage[storeKey] = await localforage.createInstance({\n      name: storeKey\n    });\n    stores.push(storeKey);\n    return stores.length - 1;\n  } else {\n    return stores.indexOf(storeKey);\n  }\n}\n\nexport async function isStoragePersistent(): Promise<boolean> {\n  // Check if site's storage has been marked as persistent\n  if (navigator.storage) {\n    if (navigator.storage.persist) {\n      const isPersisted = await navigator.storage.persisted();\n      return isPersisted;\n    }\n  }\n  return false;\n}\n\nexport async function askForPersistentStorage(): Promise<'granted' | 'denied' | 'unsupported'> {\n  // Request persistent storage for site\n  if (navigator.storage) {\n    if (navigator.storage.persist) {\n      const isPersisted = await navigator.storage.persist();\n      return isPersisted ? 'granted' : 'denied';\n    }\n  }\n  return 'unsupported';\n}\n","import { getSettingOptionValue } from '../settings/index';\nimport { convertPositionsToDistance } from '../../tools/convert';\n\ninterface position {\n  latitude: number;\n  longitude: number;\n}\n\nvar user_position = {\n  current: {\n    latitude: 0,\n    longitude: 0\n  },\n  permission: {\n    gained: false,\n    asked: false\n  },\n  id: 0\n};\n\nexport function askForPositioningPermission(): void {\n  function successHandler(position: any): void {\n    user_position.permission.gained = true;\n    user_position.current.latitude = position.coords.latitude;\n    user_position.current.longitude = position.coords.longitude;\n  }\n  function errorHandler(error: any): void {\n    var message = '';\n    // Check for known errors\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        message = 'This website does not have permission to use the Geolocation API';\n        break;\n      case error.POSITION_UNAVAILABLE:\n        message = 'The current position could not be determined.';\n        break;\n      case error.PERMISSION_DENIED_TIMEOUT:\n        message = 'The current position could not be determined ' + 'within the specified timeout period.';\n        break;\n    }\n    if (message == '') {\n      var strErrorCode = error.code.toString();\n      message = 'The position could not be determined due to ' + 'an unknown error (Code: ' + strErrorCode + ').';\n    }\n    console.log(message);\n  }\n  if (user_position.permission.asked === false && getSettingOptionValue('display_user_location')) {\n    user_position.permission.asked = true;\n    user_position.id = navigator.geolocation.watchPosition(successHandler, errorHandler, {\n      enableHighAccuracy: true,\n      timeout: 30000,\n      maximumAge: 0\n    });\n  }\n}\n\nexport function getUserPosition(): position {\n  if (user_position.permission.asked && user_position.permission.gained) {\n    return user_position.current;\n  }\n  if (!user_position.permission.asked && !user_position.permission.gained) {\n    askForPositioningPermission();\n    return user_position.current;\n  }\n  if (user_position.permission.asked && !user_position.permission.gained) {\n    return user_position.current;\n  }\n}\n\nexport function isNearUserPosition(latitude: number, longitude: number, radius: number = 450): boolean {\n  var currentUserPosition: position = getUserPosition();\n  var distance: number = convertPositionsToDistance(latitude, longitude, currentUserPosition.latitude, currentUserPosition.longitude);\n  if (distance <= radius) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function getNearestPosition(positions: Array<position>, radius: number = 450): position | null {\n  var currentUserPosition: position = getUserPosition();\n  var result = [];\n  for (var position of positions) {\n    var distance: number = convertPositionsToDistance(currentUserPosition.latitude, currentUserPosition.longitude, position.latitude, position.longitude);\n    if (distance <= radius) {\n      result.push({ position, distance });\n    }\n  }\n\n  if (result.length > 0) {\n    result = result.sort(function (a, b) {\n      return a.distance - b.distance;\n    });\n    return result[0].position\n  } else {\n    return null;\n  }\n}\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","localforage","require","storage","cacheStore","settingsStore","dataUsageRecordsStore","updateRateRecordsStore","busArrivalTimeRecordsStore","personalScheduleStore","recentViewsStore","folderListStore","savedStopFolderStore","savedRouteFolderStore","stores","dropInstance","_x","_dropInstance","_callee","store","storeKey","operation","_context","createInstance","lfSetItem","_x2","_x3","_x4","_lfSetItem","_callee2","key","_context2","setItem","t0","console","error","lfGetItem","_x5","_x6","_lfGetItem","_callee3","_context3","getItem","lfRemoveItem","_x7","_x8","_lfRemoveItem","_callee4","_context4","removeItem","lfListItemKeys","_x9","_lfListItemKeys","_callee5","_context5","getStoreKey","getStoresLength","registerStore","_x10","_registerStore","_callee6","id","_context6","concat","indexOf","isStoragePersistent","_isStoragePersistent","_callee7","isPersisted","_context7","navigator","persist","persisted","askForPersistentStorage","_askForPersistentStorage","_callee8","_context8","user_position","current","latitude","longitude","permission","gained","asked","askForPositioningPermission","getSettingOptionValue","geolocation","watchPosition","position","coords","message","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","PERMISSION_DENIED_TIMEOUT","toString","log","enableHighAccuracy","timeout","maximumAge","getUserPosition","getNearestPosition","positions","_step","radius","undefined","currentUserPosition","result","_iterator","_createForOfIteratorHelper","distance","convertPositionsToDistance","err","sort","b"],"sourceRoot":""}