{"version":3,"file":"d3c1cd2d5153a4c8225f.js","mappings":";ibACAA,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAA8E,QAAA,KAAAvE,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAA8E,QAAA,GAAAzE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAgF,oBAAA,SAAA/E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAgF,YAAA,QAAAjF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAoC,IAAApC,EAAAoF,UAAAhD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAgF,oBAAA9E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAyF,KAAA,SAAAxF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAwF,UAAA,SAAAzB,IAAA,KAAA/D,EAAA4E,QAAA,KAAA7E,EAAAC,EAAAyF,MAAA,GAAA1F,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA4F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA2F,OAAA,IAAAxF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA4F,MAAA,WAAA5F,GAAAD,EAAA,EAAA8F,KAAA,gBAAAxC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAmE,IAAA,EAAAnC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA+F,EAAA5F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAAM,OAAA,EAAAvE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,UAAAvF,EAAA0D,QAAA,KAAAwB,KAAA,KAAA9E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA4E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,WAAAuB,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA8E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,YAAArD,EAAA,MAAAsC,MAAA,kDAAAsC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAwB,MAAAvF,EAAAyB,KAAAvB,EAAA,oBAAAqF,KAAArF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA+D,SAAAtF,EAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAoE,KAAA,KAAAnE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAAgE,OAAA,SAAAlG,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAiG,SAAAhG,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,QAAA+C,MAAA,0BAAA8C,cAAA,SAAApG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAqG,EAAAnG,EAAAF,GAAA,IAAAC,EAAA,oBAAAU,QAAAT,EAAAS,OAAAE,WAAAX,EAAA,kBAAAD,EAAA,IAAAqG,MAAAC,QAAArG,KAAAD,EAAA,SAAAC,EAAAU,GAAA,GAAAV,EAAA,qBAAAA,EAAA,OAAAsG,EAAAtG,EAAAU,GAAA,IAAAX,EAAA,GAAAwG,SAAA3E,KAAA5B,GAAA4F,MAAA,uBAAA7F,GAAAC,EAAA+E,cAAAhF,EAAAC,EAAA+E,YAAAC,MAAA,QAAAjF,GAAA,QAAAA,EAAAqG,MAAAI,KAAAxG,GAAA,cAAAD,GAAA,2CAAA0G,KAAA1G,GAAAuG,EAAAtG,EAAAU,QAAA,GAAAgG,CAAA1G,KAAAF,GAAAE,GAAA,iBAAAA,EAAA4E,OAAA,CAAA7E,IAAAC,EAAAD,GAAA,IAAA4G,EAAA,EAAAC,EAAA,oBAAA5E,EAAA4E,EAAAzG,EAAA,kBAAAwG,GAAA3G,EAAA4E,OAAA,CAAAvB,MAAA,IAAAA,MAAA,EAAA9C,MAAAP,EAAA2G,KAAA,EAAA7G,EAAA,SAAAE,GAAA,MAAAA,CAAA,EAAA+B,EAAA6E,EAAA,WAAA/C,UAAA,6IAAAxD,EAAAK,GAAA,EAAAI,GAAA,SAAAkB,EAAA,WAAAjC,EAAAA,EAAA6B,KAAA5B,EAAA,EAAAG,EAAA,eAAAH,EAAAD,EAAAgE,OAAA,OAAArD,EAAAV,EAAAqD,KAAArD,CAAA,EAAAF,EAAA,SAAAE,GAAAc,GAAA,EAAAT,EAAAL,CAAA,EAAA+B,EAAA,eAAArB,GAAA,MAAAX,EAAA,QAAAA,EAAA,oBAAAe,EAAA,MAAAT,CAAA,aAAAiG,EAAAtG,EAAAU,IAAA,MAAAA,GAAAA,EAAAV,EAAA4E,UAAAlE,EAAAV,EAAA4E,QAAA,QAAA9E,EAAA,EAAAK,EAAAiG,MAAA1F,GAAAZ,EAAAY,EAAAZ,IAAAK,EAAAL,GAAAE,EAAAF,GAAA,OAAAK,CAAA,UAAA0G,EAAA1G,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,QAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,OAAAJ,GAAA,YAAAL,EAAAK,EAAA,CAAAK,EAAA6C,KAAAtD,EAAAe,GAAAwE,QAAAtC,QAAAlC,GAAAoC,KAAAlD,EAAAK,EAAA,UAAAyG,EAAA3G,GAAA,sBAAAJ,EAAA,KAAAD,EAAAiH,UAAA,WAAAzB,SAAA,SAAAtF,EAAAK,GAAA,IAAAK,EAAAP,EAAA6G,MAAAjH,EAAAD,GAAA,SAAAmH,EAAA9G,GAAA0G,EAAAnG,EAAAV,EAAAK,EAAA4G,EAAAC,EAAA,OAAA/G,EAAA,UAAA+G,EAAA/G,GAAA0G,EAAAnG,EAAAV,EAAAK,EAAA4G,EAAAC,EAAA,QAAA/G,EAAA,CAAA8G,OAAA,OAOA,IACIE,EAA4C,GAC5CC,GAA2C,EAC3CC,EAA6C,GAC7CC,EAA2C,CAAC,EAC5CC,EAAmD,EAoChD,SAAeC,EAAmCC,GAAA,OAAAC,EAAAV,MAAC,KAADD,UAAA,CA+CxD,SAAAW,IAAA,OAAAA,EAAAZ,EAAAjH,IAAAoF,MA/CM,SAAA0C,EAAmDC,GAA0B,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA3I,IAAAuB,MAAA,SAAAqH,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA1E,MAAA,OAG3D,GAFjB8D,EAAM,IAAIa,KACVZ,EAA2BD,EAAIc,UACjCZ,GAAc,EACbX,EAAiC,CAAFqB,EAAA1E,KAAA,SASW,OAR7CqD,GAAkC,EAClCD,GAAoCyB,EAAAA,EAAAA,IAAmB,KACvDvB,EAAsC,GACtCC,EAA2C,CACzCuB,WAAY1B,EACZ2B,UAAWhB,EACXiB,KAAM,CAAC,GAETxB,EAA2C,EAAEkB,EAAA1E,KAAA,IACZiF,EAAAA,EAAAA,MAAwB,QAAnDhB,EAAkBS,EAAAhF,KAAAwE,EAAA9B,EACS6B,GAAkB,IAAnD,IAAAC,EAAAjG,MAAAkG,EAAAD,EAAA9H,KAAAkD,MAAW8E,EAAkBD,EAAA3H,MAC3B8G,EAAsCA,EAAoC4B,OACxEd,EAAmBe,QAChBC,QAAO,SAACC,GACP,MAAkB,SAAXA,EAAE1H,IACX,IACC2H,KAAI,SAACvJ,GAAC,OAAKA,EAAEwJ,EAAE,IAErB,OAAAC,GAAAtB,EAAAnI,EAAAyJ,EAAA,SAAAtB,EAAAlG,GAAA,cAECyH,EAAAA,EAAAA,IAAqB3B,GAAM,CAAFY,EAAA1E,KAAA,SAAAqE,EAAAjC,EACRyB,GAAY,IAA/B,IAAAQ,EAAApG,MAAAqG,EAAAD,EAAAjI,KAAAkD,MAAWiF,EAAID,EAAA9H,MACPgI,EAASD,EAAKmB,OACdC,EAAU,KAAHT,OAAQV,GACjBlB,EAAoCsC,QAAQpB,IAAW,IACpDjB,EAAyCyB,KAAK3I,eAAesJ,KAChEpC,EAAyCyB,KAAKW,GAAW,IAE3DpC,EAAyCyB,KAAKW,GAASnF,KAAK,CAAEqD,aAAcgC,SAAStB,EAAKV,cAAekB,UAAWhB,KACpHP,GAA4C,GA3EA,KA6E1CQ,GAAc,GAGnB,OAAAwB,GAAAnB,EAAAtI,EAAAyJ,EAAA,SAAAnB,EAAArG,GAAA,KACGgG,GAAeR,EAA2C,GAAM,EAAC,CAAAkB,EAAA1E,KAAA,gBAAA0E,EAAA1E,KAAA,IAC7D8F,EAAAA,EAAAA,IAAU,EAAG1C,EAAmC2C,KAAKC,UAAUzC,IAA0C,QAE7GS,IACFX,GAAkC,GACnC,yBAAAqB,EAAA5C,OAAA,GAAA8B,EAAA,MAEJX,MAAA,KAAAD,UAAA,CAEM,SAAeiD,IAAkD,OAAAC,EAAAjD,MAAC,KAADD,UAAA,CASvE,SAAAkD,IAAA,OAAAA,EAAAnD,EAAAjH,IAAAoF,MATM,SAAAiF,IAAA,IAAA3E,EAAA4E,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1K,IAAAuB,MAAA,SAAAoJ,GAAA,cAAAA,EAAA9E,KAAA8E,EAAAzG,MAAA,cAAAyG,EAAAzG,KAAA,GACc0G,EAAAA,EAAAA,IAAe,GAAE,OAA9BlF,EAAIiF,EAAA/G,KAAA0G,EAAAhE,EACQZ,GAAIiF,EAAA9E,KAAA,EAAAyE,EAAAnI,IAAA,WAAAoI,EAAAD,EAAAhK,KAAAkD,KAAE,CAAFmH,EAAAzG,KAAA,SAAR,OAAHsG,EAAGD,EAAA7J,MAAAiK,EAAAzG,KAAA,IACO2G,EAAAA,EAAAA,IAAU,EAAGL,GAAI,QACG,GADjCC,EAAIE,EAAA/G,KACJ8G,EAAiBT,KAAKa,MAAML,MAC9B,IAAI5B,MAAOC,UAAY4B,EAAOzB,UAAY,QAAwB,CAAA0B,EAAAzG,KAAA,gBAAAyG,EAAAzG,KAAA,IAC9D6G,EAAAA,EAAAA,IAAa,EAAGP,GAAI,QAAAG,EAAAzG,KAAA,gBAAAyG,EAAAzG,KAAA,iBAAAyG,EAAA9E,KAAA,GAAA8E,EAAAK,GAAAL,EAAA,SAAAL,EAAArK,EAAA0K,EAAAK,IAAA,eAAAL,EAAA9E,KAAA,GAAAyE,EAAApI,IAAAyI,EAAAvE,OAAA,6BAAAuE,EAAA3E,OAAA,GAAAqE,EAAA,0BAG/BlD,MAAA,KAAAD,UAAA,CAEM,SAAe+D,IAAkB,OAAAC,EAAA/D,MAAC,KAADD,UAAA,CAmHvC,SAAAgE,IAAA,OAAAA,EAAAjE,EAAAjH,IAAAoF,MAnHM,SAAA+F,IAAA,IAAAC,EAAA1F,EAAA2F,EAAAC,EAAAd,EAAAe,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApL,EAAAqL,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA9N,IAAAuB,MAAA,SAAAwM,GAAA,cAAAA,EAAAlI,KAAAkI,EAAA7J,MAAA,OAEyB,OAA1BkH,EAAwB,CAAC,EAAC2C,EAAA7J,KAAA,GACX0G,EAAAA,EAAAA,IAAe,GAAE,OAA9BlF,EAAIqI,EAAAnK,KAAAyH,EAAA/E,EACQZ,GAAIqI,EAAAlI,KAAA,EAAAwF,EAAAlJ,IAAA,WAAAmJ,EAAAD,EAAA/K,KAAAkD,KAAE,CAAFuK,EAAA7J,KAAA,SAAR,OAAHsG,EAAGc,EAAA5K,MAAAqN,EAAA7J,KAAA,IACiB2G,EAAAA,EAAAA,IAAU,EAAGL,GAAI,QAE9C,IAAWiB,KAFLF,EAAcwC,EAAAnK,MACd4H,EAAkEvB,KAAKa,MAAMS,IACvCrC,KACrCkC,EAAsB7K,eAAekL,KACxCL,EAAsBK,GAAY,IAEpCL,EAAsBK,GAAYL,EAAsBK,GAAUrC,OAAOoC,EAAqBtC,KAAKuC,IACpG,QAAAsC,EAAA7J,KAAA,gBAAA6J,EAAA7J,KAAA,iBAAA6J,EAAAlI,KAAA,GAAAkI,EAAA/C,GAAA+C,EAAA,SAAA1C,EAAApL,EAAA8N,EAAA/C,IAAA,eAAA+C,EAAAlI,KAAA,GAAAwF,EAAAnJ,IAAA6L,EAAA3H,OAAA,YAKH,IAAWuF,KADPD,EAAgC,CAAC,EACdN,EAAuB,CAQ5C,KAPIQ,EAAoBR,EAAsBO,IAC5BqC,MAAK,SAAUnN,EAAGoN,GAClC,OAAOpN,EAAEoI,UAAYgF,EAAEhF,SACzB,IACM4C,EAA0BD,EAAkB7G,OAC9C+G,EAA2B,GAC3BC,EAA6B,GACxBpL,EAAI,EAAGA,EAAIkL,EAAyBlL,IACrCqL,EAAgBJ,EAAkBjL,GAClCsL,EAAaL,EAAkBjL,EAAI,IAAMiL,EAAkBjL,GAE3DuL,EAA4BF,EAAcjE,aAC1CoE,EAAyBF,EAAWlE,aAE5BoE,EAAyBD,EAC3B,GAAKA,GAA6B,EAE5CJ,EAAyBpH,KAAKsH,IAE9BF,EAAyBkC,MAAK,SAAUnN,EAAGoN,GACzC,OAAOpN,EAAEkH,aAAekG,EAAElG,YAC5B,IACI+D,EAAyB/G,OAAS,IAC9BqH,EAAgBN,EAAyB,GAC/CC,EAA2BrH,KAAK,IAAImE,KAAKuD,EAAcnD,UAAyC,IAA7BmD,EAAcrE,gBAEnF+D,EAA2B,IAG/BJ,EAA8BC,GAAYI,CAC5C,CAEA,OAAAgC,EAAA7J,KAAA,IACgCgK,EAAAA,EAAAA,MAAuB,QAAjD7B,EAAiB0B,EAAAnK,KACnB0I,EAAS,CAAC,EAACC,EAAAjG,EACgB+F,GAAiB,IAAhD,IAAAE,EAAApK,MAAAqK,EAAAD,EAAAjM,KAAAkD,MAKE,IAAWoJ,KALFH,EAAgBD,EAAA9L,MACnBgM,EAAqBD,EAAiBhD,GACtCkD,EAAuBF,EAAiBtH,KAGvBuG,EAA+B,CAE/CY,EAAO/L,eAAeqM,KACzBN,EAAOM,GAAY,CAAC,GAGjBN,EAAOM,GAAUrM,eAAemM,KACnCJ,EAAOM,GAAUF,GAAsB,CACrCvH,KAAMwH,EACNlD,GAAIiD,EACJG,gBAAiB,KAIjBA,EAAkB,GAAEC,EAAAxG,EACKoF,EAA8BkB,IAAS,IAApE,IAAAE,EAAA3K,MAAA4K,EAAAD,EAAAxM,KAAAkD,MAAWwJ,EAAcD,EAAArM,MACjBuM,EAAoBD,EAAemB,SACnCjB,EAAsBF,EAAeoB,WACrCjB,EAAwBH,EAAeqB,aAGzC5B,EAAiB6B,KAAKxE,QAAQmD,IAAsB,IAChDG,EAAqC,GAAtBF,EAA2BC,EAC1CE,EAAkE,GAAtCZ,EAAiB8B,OAAOC,MAAMC,MAAahC,EAAiB8B,OAAOC,MAAMX,QACrGP,EAA8D,GAApCb,EAAiB8B,OAAOG,IAAID,MAAahC,EAAiB8B,OAAOG,IAAIb,QAGjGT,GAAgBC,GAA6BD,GAAgBE,GAE/DT,EAAgBnI,KAAK0I,GAK3B,OAAA1D,GAAAoD,EAAA7M,EAAAyJ,EAAA,SAAAoD,EAAA5K,GAAA,CACMqL,GAA4BoB,EAAAA,EAAAA,KAAiBA,EAAAA,EAAAA,IAAiB9B,EAAiB,OAAQ,MAEzFW,EAAkC,GAAEC,EAAAnH,EACDiH,GAAyB,IAAhE,IAAAE,EAAAtL,MAAAuL,EAAAD,EAAAnN,KAAAkD,MAAWmK,EAAwBD,EAAAhN,MAC3B0M,EAAewB,KAAKC,MAAMlB,GAG1BG,EAAyB,CAC7BW,OAFarB,GADTS,EAAUT,EAAe,KACU,GAGvCS,QAASA,GAEXL,EAAgC9I,KAAK,CACnCoK,MAAMC,EAAAA,EAAAA,IAAmBjB,GACzBrB,iBAAkBA,GAErB,OAAA/C,GAAA+D,EAAAxN,EAAAyJ,EAAA,SAAA+D,EAAAvL,GAAA,CAEDoK,EAAOM,GAAUF,GAAoBG,gBAAkBW,CACzD,CACD,OAAA9D,GAAA6C,EAAAtM,EAAAyJ,EAAA,SAAA6C,EAAArK,GAAA,QAAA6L,EAAAhK,OAAA,SAEMuI,GAAM,yBAAAyB,EAAA/H,OAAA,GAAAmF,EAAA,0BACdhE,MAAA,KAAAD,UAAA,2MCpNK8H,EAAmC,IACnCC,GAA6B,IAAIpG,MAAOC,UAI1CoG,EAA2B,CAAC,QAEzB,SAASC,EAAgBC,GAC9B,IAAMC,EAAoBH,EAAYnK,OACrBmK,EAAYG,EAAoB,KAC9BD,GACjBF,EAAYxK,KAAK0K,EAErB,CAEO,SAASE,EAAkBF,GAChC,GAAIF,EAAYpF,QAAQsF,IAAS,EAAG,CAClC,IAAMC,EAAoBH,EAAYnK,OAClCmK,EAAYG,EAAoB,KAAOD,GACzCF,EAAYtJ,KAEhB,CACF,CAEO,SAAS2J,IACd,IAAMF,EAAoBH,EAAYnK,OACtC,GAAIsK,EAAoB,EAEtB,OADqBH,EAAYG,EAAoB,IAEnD,IAAK,OAQL,IAAK,qBAKL,IAAK,WAEL,IAAK,QAEL,IAAK,eAEL,IAAK,eAQL,IAAK,kBAEL,IAAK,YAKL,IAAK,0BAWL,IAAK,uBAEL,IAAK,8BAEL,QACE,MAhDF,IAAK,iBACHG,EAAAA,EAAAA,MACA,MACF,IAAK,gBACHC,EAAAA,EAAAA,MACA,MAGF,IAAK,iBACHC,EAAAA,EAAAA,KACA,MASF,IAAK,UACHC,EAAAA,EAAAA,MACA,MACF,IAAK,YACHC,EAAAA,EAAAA,MACA,MAKF,IAAK,2BACHC,EAAAA,EAAAA,KACA,MAGF,IAAK,0BACHC,EAAAA,EAAAA,MACA,MACF,IAAK,OACHC,EAAAA,EAAAA,KACA,MACF,IAAK,wBACHC,EAAAA,EAAAA,MAUR,CAEO,SAASC,IACd,IAAMZ,EAAoBH,EAAYnK,OACtC,GAAIsK,EAAoB,EAAG,CACzB,IAAMa,EAAehB,EAAYG,EAAoB,GAErD,OADAH,EAAYtJ,MACJsK,GACN,IAAK,OAQL,IAAK,qBAKL,IAAK,WAEL,IAAK,QAEL,IAAK,eAEL,IAAK,eAQL,IAAK,kBAEL,IAAK,YAKL,IAAK,0BAWL,IAAK,uBAEL,IAAK,8BAEL,QACE,MAhDF,IAAK,iBACHC,EAAAA,EAAAA,MACA,MACF,IAAK,gBACHC,EAAAA,EAAAA,MACA,MAGF,IAAK,iBACHC,EAAAA,EAAAA,KACA,MASF,IAAK,UACHC,EAAAA,EAAAA,MACA,MACF,IAAK,YACHC,EAAAA,EAAAA,MACA,MAKF,IAAK,2BACHC,EAAAA,EAAAA,KACA,MAGF,IAAK,0BACHC,EAAAA,EAAAA,MACA,MACF,IAAK,OACHC,EAAAA,EAAAA,KACA,MACF,IAAK,wBACHC,EAAAA,EAAAA,MASN,CACF,CAEO,SAASC,IACd,IAAIC,EAAS,GACTC,EAAAA,EAAAA,QACFD,GAAW,GAAKE,OAAOC,YAAcD,OAAOE,aAAgB,IAE9DC,EAAAA,EAAAA,IAAsB,YAAiDC,MAAMC,YAAY,MAA0C,GAAFhI,OAAKyH,EAAM,MAC9I,CAEO,SAASQ,EAAoBC,GAClC,SAASC,IACP,IAAIC,GAAuBN,EAAAA,EAAAA,IAAsB,MACjDM,EAAQC,UAAUC,IAAI,KACtBF,EAAQG,iBACN,gBACA,WACEH,EAAQI,aAAa,YAAa,SAClCJ,EAAQC,UAAUI,OAAO,KACD,mBAAbP,GACTA,GAEJ,GACA,CAAEQ,MAAM,GAEZ,CACA,IAAMC,GAAc,IAAIlJ,MAAOC,UAC3BiJ,EAAc9C,EAA6BD,EAC7CgD,WAAWT,EAAS3C,KAAKqD,IAAI,EAAGF,EAAc9C,IAE9CsC,GAEJ,CAqBO,SAASW,EAAUrQ,GACxB,IAAIsQ,EAAgB,EAChBC,EAAiB,EACfC,EAActB,OAAOuB,WACrBC,EAAexB,OAAOE,YAC5B,OAAQpP,GACN,IAAK,SACHsQ,EAAQE,EACRD,EAASG,EACT,MACF,IAAK,OACHJ,EAAQE,EACRD,EAAS,GACT,MACF,IAAK,kBACHD,EAAQE,EAAc,GACtBD,EAAS,GACT,MACF,IAAK,kBACHD,EAAQE,EAAc,IACtBD,EAAS,GACT,MACF,IAAK,uBACHD,EAAQE,EAAc,GAAS,GAC/BD,EAAS,KACT,MACF,QACED,EAAQ,EACRC,EAAS,EAGb,MAAO,CACLD,MAAAA,EACAC,OAAAA,EAEJ,mCCjPA,IAAII,EAAU,CACZC,cAAc,EACdC,kBAAkB,GAGb,SAASC,EAAQC,EAAaC,GACnC,IAA4B,IAAxBL,EAAQK,GAAuB,CACjC,IAAMC,EAAOC,SAASC,cAAc,QACpCF,EAAKlB,aAAa,OAAQgB,GAC1BE,EAAKlB,aAAa,MAAO,cACzBmB,SAASE,KAAKC,YAAYJ,GAC1BN,EAAQK,IAAc,CACxB,CACF,udCdA7S,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAA8E,QAAA,KAAAvE,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAA8E,QAAA,GAAAzE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAgF,oBAAA,SAAA/E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAgF,YAAA,QAAAjF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAoC,IAAApC,EAAAoF,UAAAhD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAgF,oBAAA9E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAyF,KAAA,SAAAxF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAwF,UAAA,SAAAzB,IAAA,KAAA/D,EAAA4E,QAAA,KAAA7E,EAAAC,EAAAyF,MAAA,GAAA1F,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA4F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA2F,OAAA,IAAAxF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA4F,MAAA,WAAA5F,GAAAD,EAAA,EAAA8F,KAAA,gBAAAxC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAmE,IAAA,EAAAnC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA+F,EAAA5F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAAM,OAAA,EAAAvE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,UAAAvF,EAAA0D,QAAA,KAAAwB,KAAA,KAAA9E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA4E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,WAAAuB,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA8E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,YAAArD,EAAA,MAAAsC,MAAA,kDAAAsC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAwB,MAAAvF,EAAAyB,KAAAvB,EAAA,oBAAAqF,KAAArF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA+D,SAAAtF,EAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAoE,KAAA,KAAAnE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAAgE,OAAA,SAAAlG,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAiG,SAAAhG,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,QAAA+C,MAAA,0BAAA8C,cAAA,SAAApG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAqG,EAAAnG,EAAAF,GAAA,IAAAC,EAAA,oBAAAU,QAAAT,EAAAS,OAAAE,WAAAX,EAAA,kBAAAD,EAAA,IAAAqG,MAAAC,QAAArG,KAAAD,EAAA,SAAAC,EAAAU,GAAA,GAAAV,EAAA,qBAAAA,EAAA,OAAAsG,EAAAtG,EAAAU,GAAA,IAAAX,EAAA,GAAAwG,SAAA3E,KAAA5B,GAAA4F,MAAA,uBAAA7F,GAAAC,EAAA+E,cAAAhF,EAAAC,EAAA+E,YAAAC,MAAA,QAAAjF,GAAA,QAAAA,EAAAqG,MAAAI,KAAAxG,GAAA,cAAAD,GAAA,2CAAA0G,KAAA1G,GAAAuG,EAAAtG,EAAAU,QAAA,GAAAgG,CAAA1G,KAAAF,GAAAE,GAAA,iBAAAA,EAAA4E,OAAA,CAAA7E,IAAAC,EAAAD,GAAA,IAAA4G,EAAA,EAAAC,EAAA,oBAAA5E,EAAA4E,EAAAzG,EAAA,kBAAAwG,GAAA3G,EAAA4E,OAAA,CAAAvB,MAAA,IAAAA,MAAA,EAAA9C,MAAAP,EAAA2G,KAAA,EAAA7G,EAAA,SAAAE,GAAA,MAAAA,CAAA,EAAA+B,EAAA6E,EAAA,WAAA/C,UAAA,6IAAAxD,EAAAK,GAAA,EAAAI,GAAA,SAAAkB,EAAA,WAAAjC,EAAAA,EAAA6B,KAAA5B,EAAA,EAAAG,EAAA,eAAAH,EAAAD,EAAAgE,OAAA,OAAArD,EAAAV,EAAAqD,KAAArD,CAAA,EAAAF,EAAA,SAAAE,GAAAc,GAAA,EAAAT,EAAAL,CAAA,EAAA+B,EAAA,eAAArB,GAAA,MAAAX,EAAA,QAAAA,EAAA,oBAAAe,EAAA,MAAAT,CAAA,aAAAiG,EAAAtG,EAAAU,IAAA,MAAAA,GAAAA,EAAAV,EAAA4E,UAAAlE,EAAAV,EAAA4E,QAAA,QAAA9E,EAAA,EAAAK,EAAAiG,MAAA1F,GAAAZ,EAAAY,EAAAZ,IAAAK,EAAAL,GAAAE,EAAAF,GAAA,OAAAK,CAAA,UAAA0G,EAAA1G,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,QAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,OAAAJ,GAAA,YAAAL,EAAAK,EAAA,CAAAK,EAAA6C,KAAAtD,EAAAe,GAAAwE,QAAAtC,QAAAlC,GAAAoC,KAAAlD,EAAAK,EAAA,CAcA,IAAM2S,GAAgBjC,EAAAA,EAAAA,IAAsB,MACtCkC,GAAsBC,EAAAA,EAAAA,IAAqBF,EAAe,MAC1DG,GAAsBD,EAAAA,EAAAA,IAAqBD,EAAqB,MAChEG,GAAwBF,EAAAA,EAAAA,IAAqBF,EAAe,MAC5DK,GAA2BH,EAAAA,EAAAA,IAAqBD,EAAqB,MACrEK,GAA+BJ,EAAAA,EAAAA,IAAqBG,EAA0B,MAC9EE,GAAmCL,EAAAA,EAAAA,IAAqBD,EAAqB,MAC7EO,GAA8BN,EAAAA,EAAAA,IAAqBK,EAAkC,MACrFE,GAA6BP,EAAAA,EAAAA,IAAqBD,EAAqB,SAEzES,EAAsB,CAAC,EACvBC,GAA6B,EAC7BC,GAAkC,EAElCC,EAAuC,EACvCC,EAAsC,EACtCC,EAAwC,EACxCC,EAA2C,CAAC,EAC5CC,EAAqC,EAErCC,GAAmC,EAEnCC,EAA6C,IAC7CC,EAA4C,KAC5CC,EAA2C,IAC3CC,EAA+C,KAC/CC,GAAwC,EACxCC,GAA0C,EAC1CC,EAA0C,EAC1CC,EAA0C,EAC1CC,GAA2C,EAC3CC,EAAgD,GAChDC,GAAgD,EAChDC,GAA+C,EAC/CC,GAA8C,EAG9CC,EAA8B,GAE9BC,GAAqB,GAElB,SAASC,KACd9B,EAAsB5B,iBAAiB,cAAc,WACnDqC,EAA+BpF,KAAK0G,MAAM/B,EAAsBgC,WAAanB,EAC/E,IAEAb,EAAsB5B,iBACpB,UACA,SAAU6D,GACRnB,GAA0B,EAC1B,IACMoB,EADSD,EAAME,OACOH,WAAanB,EAEvCH,EADEwB,EAAezB,EACaA,EAA+B,EAE/BA,EAA+B,EAE/D,IAAM2B,EAAcxB,EAA4B,KAAD/K,OAAM4K,KAAmC,CAAE7B,MAAO,EAAGtB,OAAQ,GACtG+E,EAAazB,EAA4B,KAAD/K,OAAM6K,KAAkC,CAAE9B,MAAO,EAAGtB,OAAQ,GACpGgF,EAAWF,EAAYxD,OAASyD,EAAWzD,MAAQwD,EAAYxD,OAASvD,KAAKkH,IAAIL,EAAezB,GAChGnD,GAAoI,GAA1H8E,EAAY9E,QAAU+E,EAAW/E,OAAS8E,EAAY9E,QAAUjC,KAAKkH,IAAIL,EAAezB,IAAmE,GAA7BI,EAA8C,GAAXyB,EACjLE,GAAkB7B,EAA+BrD,EAAQgF,EAAWT,GAAYK,GAC5EA,IAAiBxB,IACnBD,EAA+BpF,KAAK0G,MAAM/B,EAAsBgC,WAAanB,GAC7EC,GAA0B,EAE9B,GACA,CAAE2B,SAAS,GAEf,CAEO,SAASC,KACd,IAAMC,GAAahE,EAAAA,EAAAA,IAAU,UACvBiE,EAAaD,EAAW/D,MACxBiE,EAAcF,EAAW9D,OAC/Be,EAAchC,MAAMC,YAAY,MAAmC,GAAFhI,OAAK+M,EAAU,OAChFhD,EAAchC,MAAMC,YAAY,MAAoC,GAAFhI,OAAKgN,EAAW,MACpF,CAEO,SAASL,GAAkBM,EAAuBxF,EAAgByF,EAAsBC,GAC7F5C,EAA4BxC,MAAMC,YAAY,OAA6CkF,EAAe,IAAI5P,YAC9G6M,EAAsBpC,MAAMC,YAAY,MAAsCiF,EAAc3P,YAC5F+M,EAA6BtC,MAAMC,YAAY,MAAwC,GAAFhI,OAAKyH,EAAO2F,QAAQ,GAAE,OAC3G/C,EAA6BtC,MAAMC,YAAY,MAAkCmF,EAAWC,QAAQ,GACtG,CAEA,SAASC,KACP,IACM3H,GAAO,IAAIjG,MAAOC,UACpBgM,GACFG,GAAuC,GAAIyB,EAAAA,EAAAA,IAAyB3B,GACpEC,EAJsB,IAIkBC,EAAsCD,KAE9EC,GAAuC,EAAIrG,KAAK+H,IAAI,EAAG/H,KAAKqD,IAAI,EAAGrD,KAAKkH,IAAIhH,EAAO8F,GAAmCH,IACtHO,EAAuCC,GAEzCrB,EAA2BzC,MAAMC,YAAY,MAA2B4D,EAAqCtO,YAC7GqK,OAAO6F,uBAAsB,WACvBjC,GACF8B,IAEJ,GACF,CAEA,SAASI,KACP,IAAMhE,GAAa9J,EAAAA,EAAAA,IAAmB,KAChCyI,EAAUuB,SAASC,cAAc,OAKvC,OAJAxB,EAAQC,UAAUC,IAAI,KACtBF,EAAQ/H,GAAKoJ,EACbrB,EAAQI,aAAa,YAAa,SAClCJ,EAAQsF,UAAoB,oTAAR1N,OAAwnByJ,EAAU,SAAAzJ,QAAO2N,EAAAA,EAAAA,GAAY,uBAAsB,0LAAA3N,OAAkTyJ,EAAU,qCAAAzJ,QAAoE2N,EAAAA,EAAAA,GAAY,kBAAiB,+GAAA3N,OAAyIyJ,EAAU,qCAAAzJ,QAAoE2N,EAAAA,EAAAA,GAAY,mBAAkB,4IAAA3N,OAAoKyJ,EAAU,sCAAAzJ,QAAqE2N,EAAAA,EAAAA,GAAY,UAAS,mKAAA3N,OAA2LyJ,EAAU,2DAAAzJ,QAA0F2N,EAAAA,EAAAA,GAAY,iBAAgB,iHAC74D,CACLvF,QAASA,EACT/H,GAAIoJ,EAER,CAcA,SAASmE,KAEP,IAAMxF,EAAUuB,SAASC,cAAc,OAGvC,OADAxB,EAAQC,UAAUC,IAAI,MACf,CACLF,QAASA,EACT/H,GAAI,GAER,CAEA,SAASwN,KAEP,IAAMzF,EAAUuB,SAASC,cAAc,OAIvC,OAFAxB,EAAQC,UAAUC,IAAI,MACtBF,EAAQsF,UAAoB,+CACrB,CACLtF,QAASA,EACT/H,GAAI,GAER,CA+EA,SAASyN,GAAoBC,EAAiCC,EAAyBC,GACrF,SAASC,EAAWC,EAA0BC,EAAkCC,GAC9E,SAASC,EAAaH,EAA0BC,EAAkCH,GAChF,IAAMM,EAAkBJ,EAAYK,wBAC9BC,EAAMF,EAAgBE,IACtBC,EAAOH,EAAgBG,KACvBC,EAASJ,EAAgBI,OACzBC,EAAQL,EAAgBK,MACxB3F,EAActB,OAAOuB,WACrBC,EAAexB,OAAOE,YAEtBgH,GAAwB5E,EAAAA,EAAAA,IAAqBkE,EAAa,OAC1DW,GAAY7E,EAAAA,EAAAA,IAAqB4E,EAAuB,OACxDE,GAAe9E,EAAAA,EAAAA,IAAqB4E,EAAuB,OAEjEC,EAAUtG,aAAa,OAAQ4F,EAASY,OAAOC,KAAK3R,YACpDwR,EAAUI,UAAYd,EAASY,OAAOG,KAElClB,GAAaU,EAAS,GAAKF,EAAMtF,GAAgByF,EAAQ,GAAKF,EAAOzF,GACvE8F,EAAaxG,iBACX,gBACA,WACEwG,EAAavG,aAAa,OAAQ4F,EAASY,OAAOC,KAAK3R,YACvDyR,EAAaG,UAAYd,EAASY,OAAOG,KACzCJ,EAAa1G,UAAUI,OAAO,KAChC,GACA,CAAEC,MAAM,IAEVqG,EAAa1G,UAAUC,IAAI,QAE3ByG,EAAavG,aAAa,OAAQ4F,EAASY,OAAOC,KAAK3R,YACvDyR,EAAaG,UAAYd,EAASY,OAAOG,KAE7C,CAEA,SAASC,EAAWjB,EAA0BC,EAAkCH,GAC9E,IAAMM,EAAkBJ,EAAYK,wBAC9BC,EAAMF,EAAgBE,IACtBC,EAAOH,EAAgBG,KACvBC,EAASJ,EAAgBI,OACzBC,EAAQL,EAAgBK,MACxB3F,EAActB,OAAOuB,WACrBC,EAAexB,OAAOE,YAEtBwH,GAAkBpF,EAAAA,EAAAA,IAAqBkE,EAAa,MACpDW,GAAY7E,EAAAA,EAAAA,IAAqBoF,EAAiB,MAClDN,GAAe9E,EAAAA,EAAAA,IAAqBoF,EAAiB,MAE3DP,EAAUtG,aAAa,OAAQ4F,EAASkB,QAAQL,KAAK3R,YACrDwR,EAAUI,UAAYd,EAASkB,QAAQH,KAEnClB,GAAaU,EAAS,GAAKF,EAAMtF,GAAgByF,EAAQ,GAAKF,EAAOzF,GACvE8F,EAAaxG,iBACX,gBACA,WACEwG,EAAavG,aAAa,OAAQ4F,EAASkB,QAAQL,KAAK3R,YACxDyR,EAAaG,UAAYd,EAASkB,QAAQH,KAC1CJ,EAAa1G,UAAUI,OAAO,KAChC,GACA,CAAEC,MAAM,IAEVqG,EAAa1G,UAAUC,IAAI,QAE3ByG,EAAavG,aAAa,OAAQ4F,EAASkB,QAAQL,KAAK3R,YACxDyR,EAAaG,UAAYd,EAASkB,QAAQH,KAE9C,CAEA,SAASI,EAAqBpB,EAA0BC,IACpBnE,EAAAA,EAAAA,IAAqBkE,EAAa,MAC1Ce,UAAYd,EAASoB,eACjD,CAEA,SAASC,EAAgBtB,EAA0BC,IACpBnE,EAAAA,EAAAA,IAAqBkE,EAAa,OAC1Ce,UAAYd,EAASsB,UAE5C,CAEA,SAASC,EAAYxB,EAA0BC,IACpBnE,EAAAA,EAAAA,IAAqBkE,EAAa,OAC1CT,UAAsC,IAA1BU,EAASwB,MAAMjU,OAAe,kCAAuEyS,EAASwB,MAAMxP,KAAI,SAACyP,GAAG,wCAAA7P,OAAgE6P,EAAIC,YAAW,sCAAA9P,QAAkG2N,EAAAA,EAAAA,GAAY,kBAAiB,0BAAA3N,OAA6D6P,EAAIE,UAAS,mDAAA/P,OAAqH6P,EAAIG,UAAS,6BAAAhQ,OAAgE6P,EAAIb,OAAOG,KAAI,6BAAAnP,OAA8D6P,EAAIpX,KAAI,yBAAsBwX,KAAK,GACruB,CAEA,SAASC,EAAsBC,EAA8B/B,IACxBnE,EAAAA,EAAAA,IAAqBkG,EAAiB,OAC9CzC,UAAgD,IAApCU,EAAS3K,gBAAgB9H,OAAe,oCAA+EyS,EAAS3K,gBAAgBrD,KAAI,SAACwD,GAAc,yDAAA5D,QAAqL2N,EAAAA,EAAAA,GAAY,YAAW,0BAAA3N,OAAoE4D,EAAe8B,KAAI,sDAAA1F,OAAmK4D,EAAeP,iBAAiBtH,KAAI,6BAAAiE,QAA2F2F,EAAAA,EAAAA,IAAmB/B,EAAeP,iBAAiB8B,OAAOC,OAAM,OAAApF,QAAM2F,EAAAA,EAAAA,IAAmB/B,EAAeP,iBAAiB8B,OAAOG,KAAI,6BAAAtF,OAAyF4D,EAAeP,iBAAiB6B,KAAK9E,KAAI,SAACgQ,GAAG,OAAKC,EAAAA,EAAAA,IAAWD,GAAKrU,IAAI,IAAEkU,KAAK,KAAI,yBAAsBA,KAAK,GAC1lC,CAEA,SAASK,EAAcnC,EAA0BH,GAC3CA,GACFG,EAAY3F,aAAa,YAAa,QAE1C,CAEA,SAAS+H,EAAgBpC,EAA0BF,GACjDE,EAAY3F,aAAa,aAAagI,EAAAA,EAAAA,IAAgBvC,GACxD,CAEA,SAASwC,EAAqBtC,EAA0BH,GACtDG,EAAY3F,aAAa,mBAAmBgI,EAAAA,EAAAA,IAAgBxC,GAC9D,CAEA,SAAS0C,EAAyBP,EAA8B/B,GAC9D,IAAMuC,GAAsB1G,EAAAA,EAAAA,IAAqBkG,EAAiB,OAC5DS,GAAyB3G,EAAAA,EAAAA,IAAqB0G,EAAqB,OACnEE,GAA4B5G,EAAAA,EAAAA,IAAqB2G,EAAwB,8BAC/EC,EAA0BrI,aAAa,UAAW,qDAAFxI,OAAuDmQ,EAAgB9P,GAAE,OAAAL,OAAMoO,EAAS0C,OAAM,MAAA9Q,OAAKoO,EAAS2C,QAAO,QACnKC,EAAAA,EAAAA,IAAqB,OAAQ5C,EAAS0C,QAAQ7W,MAAK,SAACpD,GAClDga,EAA0BrI,aAAa,eAAegI,EAAAA,EAAAA,IAAgB3Z,GACxE,GACF,CAEA,SAASoa,EAAiCd,EAA8B/B,GACtE,IAAMuC,GAAsB1G,EAAAA,EAAAA,IAAqBkG,EAAiB,OAC5DS,GAAyB3G,EAAAA,EAAAA,IAAqB0G,EAAqB,OACnEO,GAAoCjH,EAAAA,EAAAA,IAAqB2G,EAAwB,qCACvFM,EAAkC1I,aAAa,UAAW,mEAAFxI,OAAqEmQ,EAAgB9P,GAAE,OAAAL,OAAMoO,EAAS0C,OAAM,MAAA9Q,OAAKoO,EAAS2C,QAAO,MAAA/Q,OAAKoO,EAASY,OAAOtJ,KAAI,OAClN,IAAMyL,GAA6BC,EAAAA,EAAAA,IAA4BhD,EAAS0C,QACxEI,EAAkC1I,aAAa,eAAegI,EAAAA,EAAAA,IAAgBW,GAChF,CAEqB,OAAjB9C,GACFC,EAAaH,EAAaC,EAAUH,GACpCmB,EAAWjB,EAAaC,EAAUH,GAClCsB,EAAqBpB,EAAaC,GAClCqB,EAAgBtB,EAAaC,GAC7BuB,EAAYxB,EAAaC,GACzB8B,EAAsB/B,EAAaC,GACnCkC,EAAcnC,EAAaH,GAC3BuC,EAAgBpC,EAAaF,GAC7BwC,EAAqBtC,EAAaH,GAClC0C,EAAyBvC,EAAaC,GACtC6C,EAAiC9C,EAAaC,KAE1CA,EAASY,OAAOtJ,OAAS2I,EAAaW,OAAOtJ,OAC/C4I,EAAaH,EAAaC,EAAUH,GACpCgD,EAAiC9C,EAAaC,IAE5CC,EAAaiB,QAAQ+B,SAAWjD,EAASkB,QAAQ+B,QAAUhD,EAAaiB,QAAQL,OAASb,EAASkB,QAAQL,MAC5GG,EAAWjB,EAAaC,EAAUH,GAEhCI,EAAayC,SAAW1C,EAAS0C,SACnCvB,EAAqBpB,EAAaC,GAClCqB,EAAgBtB,EAAaC,GAC7BsC,EAAyBvC,EAAaC,KAEnCkD,EAAAA,EAAAA,IAAcjD,EAAauB,MAAOxB,EAASwB,QAC9CD,EAAYxB,EAAaC,IAEtBkD,EAAAA,EAAAA,IAAcjD,EAAa5K,gBAAiB2K,EAAS3K,kBACxDyM,EAAsB/B,EAAaC,GAEjCH,IAAcvD,GAChB6F,EAAgBpC,EAAaF,GAE3BD,IAAmBrD,IACrB2F,EAAcnC,EAAaH,GAC3ByC,EAAqBtC,EAAaH,IAGxC,CAEA,SAASuD,EAAepD,EAA0BqD,EAAqCC,GACrF,SAASC,EAAWvD,EAA0BqD,IAC5CvH,EAAAA,EAAAA,IAAqBkE,EAAa,OAAuCT,WAAYC,EAAAA,EAAAA,GAAY6D,EAAaG,KAChH,CAEA,SAASC,EAAYzD,EAA0BqD,IAC7CvH,EAAAA,EAAAA,IAAqBkE,EAAa,OAAwCT,UAAY8D,EAAala,KACrG,CAEA,SAASiZ,EAAgBpC,EAA0BF,GACjDE,EAAY3F,aAAa,aAAagI,EAAAA,EAAAA,IAAgBvC,GACxD,CAEA,SAASwC,EAAqBtC,EAA0BH,GACtDG,EAAY3F,aAAa,mBAAmBgI,EAAAA,EAAAA,IAAgBxC,GAC9D,CAEyB,OAArByD,GACFC,EAAWvD,EAAaqD,GACxBI,EAAYzD,EAAaqD,GACzBjB,EAAgBpC,EAAaF,GAC7BwC,EAAqBtC,EAAaH,MAE7BsD,EAAAA,EAAAA,IAAcG,EAAiBE,KAAMH,EAAaG,OACrDD,EAAWvD,EAAaqD,IAErBF,EAAAA,EAAAA,IAAcG,EAAiBna,MAAOka,EAAala,QACtDsa,EAAYzD,EAAaqD,GAEvBvD,IAAcvD,GAChB6F,EAAgBpC,EAAaF,GAE3BD,IAAmBrD,GACrB8F,EAAqBtC,EAAaH,GAGxC,CAEA,IAAMlB,GAAahE,EAAAA,EAAAA,IAAU,UACvBiE,EAAaD,EAAW/D,MACxBiE,EAAcF,EAAW9D,OAEzBiE,EAAgBc,EAAYd,cAC5B4E,EAAe9D,EAAY8D,aAC3BC,EAAe/D,EAAY+D,aAC3BC,EAAShE,EAAYgE,OAE3BjH,EAAgCmC,EAChCjC,EAA6B+B,EAI7B,IADA,IAAIiF,EAAmB,EACdza,EAAI,EAAGA,EAAI0V,EAAe1V,IAAK,CACtC,IAAMwR,GAAQkJ,EAAAA,EAAAA,IAAaF,EAAO,KAAD/R,OAAMzI,IAAKwE,KAAM,IAAK,OAAQ,8BAAgCiQ,GAC/FjB,EAA4B,KAAD/K,OAAMzI,IAAO,CACtCwR,MAAOA,EACPtB,OAAQuK,GAEVA,GAAoBjJ,CACtB,CACA,IAAItB,GAAoF,EAA3EsD,EAA4B,KAAD/K,OAAM4K,IAAgCnD,OAA2C,GAA7BuD,EAA4G,GAAzED,EAA4B,KAAD/K,OAAM4K,IAAgC7B,MAC3LkC,GACH0B,GAAkB7B,EAA+BrD,EAAQsD,EAA4B,KAAD/K,OAAM4K,IAAgC7B,MAAQiD,GAAYpB,GAGhJV,EAAoBwD,UAAoB,SAAR1N,OAAkB+N,EAAYmE,aAAY,WAC1EhI,EAAoB1B,aAAa,aAAagI,EAAAA,EAAAA,IAAgBvC,IAC9D/D,EAAoB1B,aAAa,mBAAmBgI,EAAAA,EAAAA,IAAgBxC,IACpE5D,EAAyB5B,aAAa,aAAagI,EAAAA,EAAAA,IAAgBvC,IACnE7D,EAAyB5B,aAAa,mBAAmBgI,EAAAA,EAAAA,IAAgBxC,IACzE1D,EAAiC9B,aAAa,mBAAmBgI,EAAAA,EAAAA,IAAgBxC,IAGjF,IA1VM5F,EA0VA+J,GAA2BC,EAAAA,EAAAA,IAAwBjI,EAAuB,OAAuBxO,OACvG,GAAMsR,IAAkBkF,EAA2B,CACjD,IAAME,EAAWF,EAA2BlF,EAC5C,GAAIoF,EAAW,EACb,IAAK,IAAIjb,EAAI,EAAGA,EAAIoO,KAAKkH,IAAI2F,GAAWjb,IAAK,CAC3C,IAAMkb,GA/VNlK,YAAUuB,SAASC,cAAc,QAE/BvB,UAAUC,IAAI,MACtBF,EAAQsF,UAAoB,qEACrB,CACLtF,QAASA,EACT/H,GAAI,KA0VA8J,EAAsBL,YAAYwI,EAAgBlK,SAClD,IAAMmK,EAAgB3E,KACtBvD,EAA6BP,YAAYyI,EAAcnK,QACzD,MAIA,IAFA,IAAMoK,GAAwBJ,EAAAA,EAAAA,IAAwBjI,EAAuB,OACvEsI,GAA2BL,EAAAA,EAAAA,IAAwB/H,EAA8B,OAC9EjT,EAAI,EAAGA,EAAIoO,KAAKkH,IAAI2F,GAAWjb,IAAK,CAC3C,IAAMsb,EAAaP,EAA2B,EAAI/a,EAClDob,EAAsBE,GAAYjK,SAClCgK,EAAyBC,GAAYjK,QACvC,CAEJ,CAGA,IADA,IAAM+J,GAAwBJ,EAAAA,EAAAA,IAAwBjI,EAAuB,OACpE5S,EAAI,EAAGA,EAAI0V,EAAe1V,IAAK,CACtC,IAAMob,EAAW,KAAH3S,OAAQzI,GAChBqb,EAA2BJ,EAAsBjb,GACjDsb,GAA0BT,EAAAA,EAAAA,IAAwBQ,EAA0B,UAAsDjX,OACxI,GAAMkW,EAAac,KAAcE,EAA0B,CACzD,IAAMR,EAAWQ,EAA0BhB,EAAac,GACxD,GAAIN,EAAW,EAEb,IADA,IAAMS,GAA4B7I,EAAAA,EAAAA,IAAqB2I,EAA0B,OACxExb,GAAI,EAAGA,GAAIoO,KAAKkH,IAAI2F,GAAWjb,KAAK,CAC3C,IAAM2b,GAAiBtF,KACvBqF,EAA0BhJ,YAAYiJ,GAAe3K,QACvD,MAGA,IADA,IAAM4K,IAA4BZ,EAAAA,EAAAA,IAAwBQ,EAA0B,UAC3Exb,GAAI,EAAGA,GAAIoO,KAAKkH,IAAI2F,GAAWjb,KAAK,CAE3C4b,GADkBH,EAA0B,EAAIzb,IACXqR,QACvC,CAEJ,CAEA,IAAMwK,IAAmCb,EAAAA,EAAAA,KAAwBA,EAAAA,EAAAA,IAAwBjI,EAAuB,OAAuB5S,GAAI,eAAqGoE,OAC1OuX,GAAwBnB,EAAOY,GAAUQ,WAAWxX,OAC1D,GAAMuX,KAA0BD,GAAmC,CACjE,IAAMZ,GAAWY,GAAmCC,GACpD,GAAIb,GAAW,EAGb,IAFA,IAAMe,IAAkCnJ,EAAAA,EAAAA,IAAqB2I,EAA0B,OACjFS,IAAsCpJ,EAAAA,EAAAA,IAAqBmJ,GAAiC,OACzFhc,GAAI,EAAGA,GAAIoO,KAAKkH,IAAI2F,IAAWjb,KAAK,CAE3C,IAAMkc,GAAqBzF,KAC3BwF,GAAoCvJ,YAAYwJ,GAAmBlL,QACrE,MAIA,IAFA,IAAMgL,IAAkCnJ,EAAAA,EAAAA,IAAqB2I,EAA0B,OACjFS,IAAsCpJ,EAAAA,EAAAA,IAAqBmJ,GAAiC,OACzFhc,GAAI,EAAGA,GAAIoO,KAAKkH,IAAI2F,IAAWjb,KAAK,CAC3C,IAAMmc,GAAgBN,GAAmC,EAAI7b,IAC7Dgb,EAAAA,EAAAA,IAAwBiB,GAAqC,OAAwCE,IAAe9K,QACtH,CAEJ,CACF,CAEA,IAAK,IAAIlR,GAAI,EAAGA,GAAI0V,EAAe1V,KAAK,CACtC,IAAMob,GAAW,KAAH3S,OAAQzI,IAChBic,IAAiBpB,EAAAA,EAAAA,IAAwB/H,EAA8B,OAA2B9S,IACxGic,GAAe9F,UAAoB,SAAR1N,OAAkB+R,EAAOY,IAAU5W,KAAI,WAClEyX,GAAezL,MAAMC,YAAY,OAAiC,GAAFhI,OAAK+K,EAA4B4H,IAAU5J,MAAK,OAChHyK,GAAezL,MAAMC,YAAY,OAAiCzQ,GAAE+F,YAIpE,IAHA,IAAMmW,IAAmBrB,EAAAA,EAAAA,IAAwBjI,EAAuB,OAAuB5S,IACzF2b,GAAwBnB,EAAOY,IAAUQ,WAAWxX,OAEjD+X,GAAI,EAAGA,GAAIR,GAAuBQ,KAAK,CAC9C,IAAMlC,GAAeO,EAAOY,IAAUQ,WAAWO,IAC3CvF,IAAciE,EAAAA,EAAAA,IAAwBqB,GAAkB,eAAqGC,IACnK,GAAIjJ,EAAoBtT,eAAe,UACrC,GAAIsT,EAAoBsH,OAAO5a,eAAewb,IAC5C,GAAIlI,EAAoBsH,OAAOY,IAAUQ,WAAWO,IAElDnC,EAAepD,GAAaqD,GADH/G,EAAoBsH,OAAOY,IAAUQ,WAAWO,UAGzEnC,EAAepD,GAAaqD,GAAc,WAG5CD,EAAepD,GAAaqD,GAAc,WAG5CD,EAAepD,GAAaqD,GAAc,KAE9C,CAEA,IAAK,IAAImC,GAAI,EAAGA,GAAI9B,EAAac,IAAWgB,KAAK,CAC/C,IAAMxF,IAAciE,EAAAA,EAAAA,IAAwBqB,GAAkB,UAAsDE,IAC9GvF,GAAW0D,EAAaa,IAAUgB,IACxC,GAAIlJ,EAAoBtT,eAAe,gBACrC,GAAIsT,EAAoBqH,aAAa3a,eAAewb,IAClD,GAAIlI,EAAoBqH,aAAaa,IAAUgB,IAE7CzF,EAAWC,GAAaC,GADH3D,EAAoBqH,aAAaa,IAAUgB,UAGhEzF,EAAWC,GAAaC,GAAU,WAGpCF,EAAWC,GAAaC,GAAU,WAGpCF,EAAWC,GAAaC,GAAU,KAEtC,CACF,CAEA3D,EAAsBsD,EACtBrD,EAAoBuD,EACpBtD,EAAyBqD,CAC3B,CAAC,SAEc4F,KAAe,OAAAC,GAAA9V,MAAC,KAADD,UAAA,UAAA+V,KAtlB9B,IAAA3c,EA2mBC,OA3mBDA,EAslB8BN,IAAAoF,MAA9B,SAAA0C,IAAA,IAAAgH,EAAAoO,EAAAC,EAAAhG,EAAAiG,EAAA,OAAApd,IAAAuB,MAAA,SAAAqH,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA1E,MAAA,OAQgE,OAPxD4K,GAAO,IAAIjG,MAAOC,UAClBoU,GAAoBG,EAAAA,EAAAA,IAAsB,qBAC1CF,GAA2BE,EAAAA,EAAAA,IAAsB,oBACvD3I,EAA+ByI,EAAyBG,QACxD/I,EAAoC4I,EAAyBI,aAC7DzI,GAAkC,EAClCC,GAAwChM,EAAAA,EAAAA,IAAmB,KAC3D6K,EAA2BhC,aAAa,aAAc,QAAQhJ,EAAA1E,KAAA,IACpCsZ,EAAAA,EAAAA,GAAkBrI,EAAqBJ,GAAsC,QAEhE,GADvCmC,GADMC,EAAWvO,EAAAhF,MACgB,EAAOsZ,GACxCtI,EAAkC9F,GAC9B4F,EAA8B,CAAF9L,EAAA1E,KAAA,gBAAA0E,EAAA1E,KAAA,IACLuZ,EAAAA,EAAAA,MAAe,QAAlCL,EAAUxU,EAAAhF,KAChBiR,EAAkCjG,KAAKqD,IAAInD,EAAO0F,EAAkC2C,EAAYuG,eAAiBnJ,EAAoC6I,GAAYxU,EAAA1E,KAAA,iBAEjK2Q,EAAkC/F,EAAOyF,EAAkC,QAE7EE,EAAuC7F,KAAKqD,IAAIuC,EAAkCK,EAAkC/F,GACpHgG,GAAkC,EAClClB,EAA2BhC,aAAa,aAAc,SAAS,yBAAAhJ,EAAA5C,OAAA,GAAA8B,EAAA,IApBnCmV,GAtlB9B,eAAA/c,EAAA,KAAAD,EAAAiH,UAAA,WAAAzB,SAAA,SAAAtF,EAAAK,GAAA,IAAAK,EAAAP,EAAA6G,MAAAjH,EAAAD,GAAA,SAAAmH,EAAA9G,GAAA0G,EAAAnG,EAAAV,EAAAK,EAAA4G,EAAAC,EAAA,OAAA/G,EAAA,UAAA+G,EAAA/G,GAAA0G,EAAAnG,EAAAV,EAAAK,EAAA4G,EAAAC,EAAA,QAAA/G,EAAA,CAAA8G,OAAA,OA2mBC6V,GAAA9V,MAAA,KAAAD,UAAA,CAEM,SAASyW,KACdX,KACG3Z,MAAK,WACAsR,EAC2B3C,YAAW,WACtC2L,IACF,GAAG/O,KAAKqD,IAAIuC,EAAkCK,GAAkC,IAAIhM,MAAOC,YAE3FoM,GAAqC,CAEzC,IAAE,OACK,SAACxL,GACNkU,QAAQC,MAAMnU,GACViL,IACFmJ,EAAAA,EAAAA,GAAc,gBAAD1U,OAAiBkL,EAAqC,IAAI,SAAS,SACnDtC,YAAW,WACtC2L,IACF,GAAGrJ,IAEHY,GAAqC,CAEzC,GACJ,CAEO,SAAS6I,GAAaC,IAC3B7O,EAAAA,EAAAA,IAAgB,aAChB8O,EAAAA,EAAAA,IAAc,WAAYD,GAC1B7I,EAAsB6I,EACtBhK,EAA+B,EAC/Bb,EAAcvB,aAAa,YAAa,QACxC2B,EAAsBgC,WAAa,EArerC,WAQE,IAPA,IAAM2H,GAAoBG,EAAAA,EAAAA,IAAsB,qBAC1CnH,GAAahE,EAAAA,EAAAA,IAAU,UAEvBkE,GADaF,EAAW/D,MACV+D,EAAW9D,QACzB8L,EAA0D,CAAEC,IAAKvP,KAAKC,MAAMuH,EAAc,IAAM,EAAGgI,IAAKxP,KAAKC,MAAMuH,EAAc,IAAM,GAEzI8E,EAAmD,CAAC,EAC/Cva,EAAI,EAAGA,EAFa,EAEaA,IAAK,CAC7C,IAAMob,EAAW,KAAH3S,OAAQzI,GACtBua,EAAaa,GAAY,GACzB,IAAK,IAAIgB,EAAI,EAAGA,EAAImB,EAAoBnC,GAAWgB,IACjD7B,EAAaa,GAAUrX,KAAK,CAC1BoU,WAAY,GACZF,gBAAiB,GACjBuB,QAAS,EACTD,OAAQ,EACR9B,OAAQ,CACNC,KAAM,EACNE,KAAM,GACNzJ,MAAO,GAET4J,QAAS,CACP+B,OAAQ,EACRlC,KAAM,KACNF,MAAO,GAETW,MAAO,GACPnM,gBAAiB,IAGvB,CACAqK,GACE,CACEgE,aAAcA,EACd7E,cA7ByB,EA8BzB8E,OAAQ,CACNgD,IAAK,CACHhZ,KAAM,MACNoX,WAAY,CACV,CACE/R,IAAK,IACLuQ,KAAM,GACNra,MAAO,IAET,CACE8J,IAAK,IACLuQ,KAAM,GACNra,MAAO,MAIb0d,IAAK,CACHjZ,KAAM,MACNoX,WAAY,CACV,CACE/R,IAAK,IACLuQ,KAAM,GACNra,MAAO,IAET,CACE8J,IAAK,IACLuQ,KAAM,GACNra,MAAO,OAKfua,aAAciD,EACd5C,aAAc,MACdoC,eAAgB,IAElB,EACAR,EAEJ,CA2ZEmB,GACK1J,IACHA,GAAiC,EAC5BO,EAIH8H,MAHA9H,GAAqC,EACrCyI,MAIF3I,GAAwC,EACxCC,GAAuC,EACvCwB,OAEFlH,EAAAA,EAAAA,KACF,CAEO,SAAS+O,KAEdnL,EAAcvB,aAAa,YAAa,SACxC+C,GAAiC,EACjCK,GAAwC,EACxCC,GAAuC,GACvChF,EAAAA,EAAAA,KACF,CAEO,SAASsO,GAAwBC,GACtC,IAAMC,GAAcpL,EAAAA,EAAAA,IAAqBE,EAAuB,cAAFnK,OAA4EoV,IACpIE,GAAkBrL,EAAAA,EAAAA,IAAqBoL,EAAa,OACZ,SAA1CA,EAAYE,aAAa,cACmB,SAA1CF,EAAYE,aAAa,aAC3BD,EAAgB/M,iBACd,iBACA,WACE+M,EAAgB9M,aAAa,YAAa,QAC5C,GACA,CAAEE,MAAM,IAGV4M,EAAgB9M,aAAa,YAAa,SAE5C6M,EAAY7M,aAAa,YAAa,WAEtC8M,EAAgB9M,aAAa,YAAa,QAC1C6M,EAAY7M,aAAa,YAAa,QAE1C,CAEO,SAASgN,GAAsBJ,EAAgBK,GACpD,IAI8BxW,EAJxBoW,GAAcpL,EAAAA,EAAAA,IAAqBE,EAAuB,cAAFnK,OAA4EoV,IACpIE,GAAkBrL,EAAAA,EAAAA,IAAqBoL,EAAa,OACpDK,GAAiBzL,EAAAA,EAAAA,IAAqBqL,EAAiB,OACqEtW,EAAA9B,GAA3GkV,EAAAA,EAAAA,IAAwBsD,EAAgB,wCACjC,IAA9B,IAAA1W,EAAAjG,MAAAkG,EAAAD,EAAA9H,KAAAkD,MAAgC,CAApB6E,EAAA3H,MACRkR,aAAa,cAAe,QAChC,CAAC,OAAAlI,GAAAtB,EAAAnI,EAAAyJ,EAAA,SAAAtB,EAAAlG,GAAA,CAED,QADAmR,EAAAA,EAAAA,IAAqByL,EAAgB,aAAF1V,OAA2CyV,EAAO,OAAMjN,aAAa,cAAe,QAC/GiN,GACN,KAAK,GACHxL,EAAAA,EAAAA,IAAqBoL,EAAa,OAAkC7M,aAAa,YAAa,SAC9FyB,EAAAA,EAAAA,IAAqBoL,EAAa,OAA8C7M,aAAa,YAAa,SAC1G,MACF,KAAK,GACHyB,EAAAA,EAAAA,IAAqBoL,EAAa,OAAkC7M,aAAa,YAAa,UAC9FyB,EAAAA,EAAAA,IAAqBoL,EAAa,OAA8C7M,aAAa,YAAa,QAKhH","sources":["webpack://bus/./src/data/analytics/bus-arrival-time.ts","webpack://bus/./src/interface/index.ts","webpack://bus/./src/interface/lazy-css.ts","webpack://bus/./src/interface/location/index.ts"],"sourcesContent":["import { generateIdentifier } from '../../tools/index';\nimport { aggregateNumbers } from '../../tools/math';\nimport { TimeObject, timeObjectToString, WeekDayIndex } from '../../tools/time';\nimport { EstimateTime } from '../apis/getEstimateTime/index';\nimport { listFoldersWithContent } from '../folder/index';\nimport { isInPersonalSchedule, listPersonalSchedules } from '../personal-schedule/index';\nimport { lfGetItem, lfListItemKeys, lfSetItem, lfRemoveItem } from '../storage/index';\n\nconst trackingBusArrivalTime_monitorTimes: number = 32;\nlet trackingBusArrivalTime_trackingID: string = '';\nlet trackingBusArrivalTime_tracking: boolean = false;\nlet trackingBusArrivalTime_trackedStops: Array = [];\nlet trackingBusArrivalTime_incompleteRecords = {};\nlet trackingBusArrivalTime_currentDataLength: number = 0;\n\ninterface EstimateTimeRecordForBusArrivalTime {\n  EstimateTime: number;\n  timeStamp: number;\n}\n\ninterface EstimateTimeRecordForBusArrivalTimeObject {\n  trackingID: string;\n  timeStamp: number;\n  data: { [key: string]: Array<EstimateTimeRecordForBusArrivalTime> };\n}\n\nexport interface AggregatedBusArrivalTime {\n  time: string;\n  personalSchedule: {\n    id: string;\n    name: string;\n    days: Array<WeekDayIndex>;\n    period: {\n      start: TimeObject;\n      end: TimeObject;\n    };\n  };\n}\n\nexport interface BusArrivalTimes {\n  [stopKey: string]: {\n    [personalScheduleID: string]: {\n      name: string;\n      id: string;\n      busArrivalTimes: Array<AggregatedBusArrivalTime>;\n    };\n  };\n}\n\nexport async function recordEstimateTimeForBusArrivalTime(EstimateTime: EstimateTime) {\n  const now = new Date();\n  const currentTimeStamp: number = now.getTime();\n  let needToReset = false;\n  if (!trackingBusArrivalTime_tracking) {\n    trackingBusArrivalTime_tracking = true;\n    trackingBusArrivalTime_trackingID = generateIdentifier('b');\n    trackingBusArrivalTime_trackedStops = [];\n    trackingBusArrivalTime_incompleteRecords = {\n      trackingID: trackingBusArrivalTime_trackingID,\n      timeStamp: currentTimeStamp,\n      data: {}\n    };\n    trackingBusArrivalTime_currentDataLength = 0;\n    const foldersWithContent = await listFoldersWithContent();\n    for (const folderWithContent1 of foldersWithContent) {\n      trackingBusArrivalTime_trackedStops = trackingBusArrivalTime_trackedStops.concat(\n        folderWithContent1.content\n          .filter((m) => {\n            return m.type === 'stop' ? true : false;\n          })\n          .map((e) => e.id)\n      );\n    }\n  }\n  if (isInPersonalSchedule(now)) {\n    for (const item of EstimateTime) {\n      const stopID = item.StopID;\n      const stopKey = `s_${stopID}`;\n      if (trackingBusArrivalTime_trackedStops.indexOf(stopID) > -1) {\n        if (!trackingBusArrivalTime_incompleteRecords.data.hasOwnProperty(stopKey)) {\n          trackingBusArrivalTime_incompleteRecords.data[stopKey] = [];\n        }\n        trackingBusArrivalTime_incompleteRecords.data[stopKey].push({ EstimateTime: parseInt(item.EstimateTime), timeStamp: currentTimeStamp });\n        trackingBusArrivalTime_currentDataLength += 1;\n        if (trackingBusArrivalTime_currentDataLength > trackingBusArrivalTime_monitorTimes) {\n          needToReset = true;\n        }\n      }\n    }\n    if (needToReset || trackingBusArrivalTime_currentDataLength % 8 === 0) {\n      await lfSetItem(4, trackingBusArrivalTime_trackingID, JSON.stringify(trackingBusArrivalTime_incompleteRecords));\n    }\n    if (needToReset) {\n      trackingBusArrivalTime_tracking = false;\n    }\n  }\n}\n\nexport async function discardExpiredEstimateTimeRecordsForBusArrivalTime() {\n  const keys = await lfListItemKeys(4);\n  for (const key of keys) {\n    const json = await lfGetItem(4, key);\n    const object: object = JSON.parse(json);\n    if (new Date().getTime() - object.timeStamp > 60 * 60 * 24 * 30 * 1000) {\n      await lfRemoveItem(4, key);\n    }\n  }\n}\n\nexport async function getBusArrivalTimes(): Promise<BusArrivalTimes> {\n  // Merge data by stops\n  let recordsGroupedByStops = {};\n  const keys = await lfListItemKeys(4);\n  for (const key of keys) {\n    const existingRecord = await lfGetItem(4, key);\n    const existingRecordObject: EstimateTimeRecordForBusArrivalTimeObject = JSON.parse(existingRecord);\n    for (const stopKey1 in existingRecordObject.data) {\n      if (!recordsGroupedByStops.hasOwnProperty(stopKey1)) {\n        recordsGroupedByStops[stopKey1] = [];\n      }\n      recordsGroupedByStops[stopKey1] = recordsGroupedByStops[stopKey1].concat(existingRecordObject.data[stopKey1]);\n    }\n  }\n\n  // Extract Arrival Times\n  let busArrivalTimesGroupedByStops = {};\n  for (const stopKey2 in recordsGroupedByStops) {\n    let recordsOfThisStop = recordsGroupedByStops[stopKey2];\n    recordsOfThisStop.sort(function (a, b) {\n      return a.timeStamp - b.timeStamp;\n    });\n    const recordsOfThisStopLength = recordsOfThisStop.length;\n    let EstimateTimeInThisPeriod = [];\n    let busArrivalTimeInThisPeriod = [];\n    for (let i = 0; i < recordsOfThisStopLength; i++) {\n      const currentRecord = recordsOfThisStop[i];\n      const nextRecord = recordsOfThisStop[i + 1] || recordsOfThisStop[i];\n\n      const currentRecordEstimateTime = currentRecord.EstimateTime;\n      const nextRecordEstimateTime = nextRecord.EstimateTime;\n\n      const delta = nextRecordEstimateTime - currentRecordEstimateTime;\n      if (delta < 0 && currentRecordEstimateTime >= 0) {\n        // decreasing estimate time value\n        EstimateTimeInThisPeriod.push(currentRecord);\n      } else {\n        EstimateTimeInThisPeriod.sort(function (a, b) {\n          return a.EstimateTime - b.EstimateTime;\n        });\n        if (EstimateTimeInThisPeriod.length > 0) {\n          const closestRecord = EstimateTimeInThisPeriod[0];\n          busArrivalTimeInThisPeriod.push(new Date(closestRecord.timeStamp + closestRecord.EstimateTime * 1000));\n        }\n        EstimateTimeInThisPeriod = [];\n      }\n    }\n    busArrivalTimesGroupedByStops[stopKey2] = busArrivalTimeInThisPeriod;\n  }\n\n  // Group bus arrival times by stops and personal schedules\n  const personalSchedules = await listPersonalSchedules();\n  let result = {};\n  for (const personalSchedule of personalSchedules) {\n    const personalScheduleID = personalSchedule.id;\n    const personalScheduleName = personalSchedule.name;\n\n    // Iterate over each stop in busArrivalTimesGroupedByStops\n    for (const stopKey3 in busArrivalTimesGroupedByStops) {\n      // Initialize the structure for each stop in the result\n      if (!result.hasOwnProperty(stopKey3)) {\n        result[stopKey3] = {};\n      }\n\n      if (!result[stopKey3].hasOwnProperty(personalScheduleID)) {\n        result[stopKey3][personalScheduleID] = {\n          name: personalScheduleName,\n          id: personalScheduleID,\n          busArrivalTimes: []\n        };\n      }\n\n      let busArrivalTimes = [];\n      for (const busArrivalTime of busArrivalTimesGroupedByStops[stopKey3]) {\n        const busArrivalTimeDay = busArrivalTime.getDay();\n        const busArrivalTimeHours = busArrivalTime.getHours();\n        const busArrivalTimeMinutes = busArrivalTime.getMinutes();\n\n        // Check if the personal schedule covers this day\n        if (personalSchedule.days.indexOf(busArrivalTimeDay) > -1) {\n          const totalMinutes = busArrivalTimeHours * 60 + busArrivalTimeMinutes;\n          const scheduleTotalStartMinutes = personalSchedule.period.start.hours * 60 + personalSchedule.period.start.minutes;\n          const scheduleTotalEndMinutes = personalSchedule.period.end.hours * 60 + personalSchedule.period.end.minutes;\n\n          // Check if the bus time falls within the personal schedule's time period\n          if (totalMinutes >= scheduleTotalStartMinutes && totalMinutes <= scheduleTotalEndMinutes) {\n            // Add the bus arrival time to the result\n            busArrivalTimes.push(totalMinutes);\n          }\n        }\n      }\n\n      // Aggregate bus arrival times\n      const aggregatedBusArrivalTimes = aggregateNumbers(aggregateNumbers(busArrivalTimes, 1.355), 1.65);\n\n      let aggregatedBusArrivalTimeObjects = [];\n      for (const aggregatedBusArrivalTime of aggregatedBusArrivalTimes) {\n        const totalMinutes = Math.floor(aggregatedBusArrivalTime);\n        const minutes = totalMinutes % 60;\n        const hours = (totalMinutes - minutes) / 60;\n        const timeObject: TimeObject = {\n          hours: hours,\n          minutes: minutes\n        };\n        aggregatedBusArrivalTimeObjects.push({\n          time: timeObjectToString(timeObject),\n          personalSchedule: personalSchedule\n        });\n      }\n\n      result[stopKey3][personalScheduleID].busArrivalTimes = aggregatedBusArrivalTimeObjects;\n    }\n  }\n\n  return result;\n}\n","import { isRunningStandalone } from '../tools/index';\nimport { documentQuerySelector } from '../tools/query-selector';\nimport { closeBus, openBus } from './bus/index';\nimport { closeFolderCreator, openFolderCreator } from './folder-creator/index';\nimport { closeFolderEditor, openFolderEditor } from './folder-editor/index';\nimport { closeFolderManager, openFolderManager } from './folder-manager/index';\nimport { openRegisterNotification, closeRegisterNotification } from './register-notification/index';\nimport { closePersonalScheduleEditor, openPersonalScheduleEditor } from './personal-schedule-editor/index';\nimport { closePersonalScheduleManager, openPersonalScheduleManager } from './personal-schedule-manager/index';\nimport { closeSearch, openSearch } from './search/index';\nimport { closeSettings, openSettings } from './settings/index';\n\nconst splashScreenTimer_minimalTimeOut = 100;\nconst splashScreenTimer_openTime = new Date().getTime();\n\ntype Page = 'Home' | 'FolderCreator' | 'FolderEditor' | 'FolderIconSelector' | 'FolderManager' | 'Location' | 'RouteDetails' | 'Route' | 'SaveToFolder' | 'Search' | 'Settings' | 'SettingsOptions' | 'DataUsage' | 'PersonalScheduleManager' | 'PersonalScheduleCreator' | 'PersonalScheduleEditor' | 'Bus' | 'RegisterNotification' | 'ScheduleNotification' | 'NotificationScheduleManager';\n\nlet pageHistory: Array<Page> = ['Home'];\n\nexport function pushPageHistory(page: Page): void {\n  const pageHistoryLength = pageHistory.length;\n  const lastPage = pageHistory[pageHistoryLength - 1];\n  if (!(lastPage === page)) {\n    pageHistory.push(page);\n  }\n}\n\nexport function revokePageHistory(page: Page): void {\n  if (pageHistory.indexOf(page) > -1) {\n    const pageHistoryLength = pageHistory.length;\n    if (pageHistory[pageHistoryLength - 1] === page) {\n      pageHistory.pop();\n    }\n  }\n}\n\nexport function closePreviousPage(): void {\n  const pageHistoryLength = pageHistory.length;\n  if (pageHistoryLength > 1) {\n    const previousPage = pageHistory[pageHistoryLength - 2];\n    switch (previousPage) {\n      case 'Home':\n        break;\n      case 'FolderCreator':\n        closeFolderCreator();\n        break;\n      case 'FolderEditor':\n        closeFolderEditor();\n        break;\n      case 'FolderIconSelector':\n        break;\n      case 'FolderManager':\n        closeFolderManager();\n        break;\n      case 'Location':\n        break;\n      case 'Route':\n        break;\n      case 'RouteDetails':\n        break;\n      case 'SaveToFolder':\n        break;\n      case 'Search':\n        closeSearch();\n        break;\n      case 'Settings':\n        closeSettings();\n        break;\n      case 'SettingsOptions':\n        break;\n      case 'DataUsage':\n        break;\n      case 'PersonalScheduleManager':\n        closePersonalScheduleManager();\n        break;\n      case 'PersonalScheduleCreator':\n        break;\n      case 'PersonalScheduleEditor':\n        closePersonalScheduleEditor();\n        break;\n      case 'Bus':\n        closeBus();\n        break;\n      case 'RegisterNotification':\n        closeRegisterNotification();\n        break;\n      case 'ScheduleNotification':\n        break;\n      case 'NotificationScheduleManager':\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport function openPreviousPage(): void {\n  const pageHistoryLength = pageHistory.length;\n  if (pageHistoryLength > 1) {\n    const previousPage = pageHistory[pageHistoryLength - 2];\n    pageHistory.pop();\n    switch (previousPage) {\n      case 'Home':\n        break;\n      case 'FolderCreator':\n        openFolderCreator();\n        break;\n      case 'FolderEditor':\n        openFolderEditor();\n        break;\n      case 'FolderIconSelector':\n        break;\n      case 'FolderManager':\n        openFolderManager();\n        break;\n      case 'Location':\n        break;\n      case 'Route':\n        break;\n      case 'RouteDetails':\n        break;\n      case 'SaveToFolder':\n        break;\n      case 'Search':\n        openSearch();\n        break;\n      case 'Settings':\n        openSettings();\n        break;\n      case 'SettingsOptions':\n        break;\n      case 'DataUsage':\n        break;\n      case 'PersonalScheduleManager':\n        openPersonalScheduleManager();\n        break;\n      case 'PersonalScheduleCreator':\n        break;\n      case 'PersonalScheduleEditor':\n        openPersonalScheduleEditor();\n        break;\n      case 'Bus':\n        openBus();\n        break;\n      case 'RegisterNotification':\n        openRegisterNotification();\n        break;\n      case 'ScheduleNotification':\n        break;\n      case 'NotificationScheduleManager':\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport function setSplashScreenIconOffsetY(): void {\n  let offset = 0;\n  if (isRunningStandalone()) {\n    offset = (-1 * (window.outerHeight - window.innerHeight)) / 2;\n  }\n  documentQuerySelector('.css_splash_screen svg.css_splash_screen_icon').style.setProperty('--b-cssvar-splash-screen-icon-offset-y', `${offset}px`);\n}\n\nexport function fadeOutSplashScreen(callback: Function): void {\n  function fadeOut() {\n    var element: HTMLElement = documentQuerySelector('.css_splash_screen');\n    element.classList.add('css_splash_screen_fade_out');\n    element.addEventListener(\n      'animationend',\n      function () {\n        element.setAttribute('displayed', 'false');\n        element.classList.remove('css_splash_screen_fade_out');\n        if (typeof callback === 'function') {\n          callback();\n        }\n      },\n      { once: true }\n    );\n  }\n  const cureentTime = new Date().getTime();\n  if (cureentTime - splashScreenTimer_openTime < splashScreenTimer_minimalTimeOut) {\n    setTimeout(fadeOut, Math.max(1, cureentTime - splashScreenTimer_openTime));\n  } else {\n    fadeOut();\n  }\n}\n\nexport interface GeneratedElement {\n  element: HTMLElement;\n  id: string;\n}\n\nexport type GroupStyles = {\n  [key: string]: {\n    width: number;\n    offset: number;\n  };\n};\n\nexport interface Size {\n  width: number;\n  height: number;\n}\n\ntype SizeType = 'window' | 'head' | 'head-one-button' | 'head-two-button' | 'route-details-canvas';\n\nexport function querySize(type: SizeType): Size {\n  let width: number = 0;\n  let height: number = 0;\n  const windowWidth = window.innerWidth;\n  const windowHeight = window.innerHeight;\n  switch (type) {\n    case 'window':\n      width = windowWidth;\n      height = windowHeight;\n      break;\n    case 'head':\n      width = windowWidth;\n      height = 55;\n      break;\n    case 'head-one-button':\n      width = windowWidth - 55;\n      height = 55;\n      break;\n    case 'head-two-button':\n      width = windowWidth - 55 * 2;\n      height = 55;\n      break;\n    case 'route-details-canvas':\n      width = windowWidth - 10 * 2 - 10 * 2;\n      height = 24 * 60;\n      break;\n    default:\n      width = 0;\n      height = 0;\n      break;\n  }\n  return {\n    width,\n    height\n  };\n}\n","// const FontFaceObserver = require('fontfaceobserver');\n\nlet lazyCSS = {\n  noto_sans_tc: false,\n  material_symbols: false\n};\n\nexport function loadCSS(url: string, identifier: string): void {\n  if (lazyCSS[identifier] === false) {\n    const link = document.createElement('link');\n    link.setAttribute('href', url);\n    link.setAttribute('rel', 'stylesheet');\n    document.head.appendChild(link);\n    lazyCSS[identifier] = true;\n  }\n}\n","import { IntegratedLocation, IntegratedLocationItem, integrateLocation, LocationGroupProperty } from '../../data/location/index';\nimport { getIconHTML } from '../icons/index';\nimport { getDataReceivingProgress } from '../../data/apis/loader';\nimport { getSettingOptionValue, SettingSelectOptionRefreshIntervalValue } from '../../data/settings/index';\nimport { booleanToString, compareThings, generateIdentifier } from '../../tools/index';\nimport { getTextWidth } from '../../tools/graphic';\nimport { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../tools/query-selector';\nimport { getUpdateRate } from '../../data/analytics/update-rate/index';\nimport { GeneratedElement, pushPageHistory, openPreviousPage, closePreviousPage, GroupStyles, querySize } from '../index';\nimport { promptMessage } from '../prompt/index';\nimport { logRecentView } from '../../data/recent-views/index';\nimport { indexToDay, timeObjectToString } from '../../tools/time';\nimport { isFolderContentSaved } from '../../data/folder/index';\nimport { stopHasNotifcationSchedules } from '../../data/notification/index';\n\nconst LocationField = documentQuerySelector('.css_location_field');\nconst LocationHeadElement = elementQuerySelector(LocationField, '.css_location_head');\nconst LocationNameElement = elementQuerySelector(LocationHeadElement, '.css_location_name');\nconst LocationGroupsElement = elementQuerySelector(LocationField, '.css_location_groups');\nconst LocationGroupTabsElement = elementQuerySelector(LocationHeadElement, '.css_location_group_tabs');\nconst LocationGroupTabsTrayElement = elementQuerySelector(LocationGroupTabsElement, '.css_location_group_tabs_tray');\nconst LocationGroupTabLineTrackElement = elementQuerySelector(LocationHeadElement, '.css_location_group_tab_line_track');\nconst LocationGroupTabLineElement = elementQuerySelector(LocationGroupTabLineTrackElement, '.css_location_group_tab_line');\nconst LocationUpdateTimerElement = elementQuerySelector(LocationHeadElement, '.css_location_update_timer_box .css_location_update_timer');\n\nlet previousIntegration = {} as IntegratedLocation;\nlet previousAnimation: boolean = true;\nlet previousSkeletonScreen: boolean = false;\n\nlet locationSliding_initialIndex: number = 0;\nlet locationSliding_targetIndex: number = 0;\nlet locationSliding_groupQuantity: number = 0;\nlet locationSliding_groupStyles: GroupStyles = {};\nlet locationSliding_fieldWidth: number = 0;\nlet locationSliding_fieldHeight: number = 0;\nlet locationSliding_sliding: boolean = false;\n\nlet locationRefreshTimer_retryInterval: number = 10 * 1000;\nlet locationRefreshTimer_baseInterval: number = 15 * 1000;\nlet locationRefreshTimer_minInterval: number = 5 * 1000;\nlet locationRefreshTimer_dynamicInterval: number = 15 * 1000;\nlet locationRefreshTimer_dynamic: boolean = true;\nlet locationRefreshTimer_streaming: boolean = false;\nlet locationRefreshTimer_lastUpdate: number = 0;\nlet locationRefreshTimer_nextUpdate: number = 0;\nlet locationRefreshTimer_refreshing: boolean = false;\nlet locationRefreshTimer_currentRequestID: string = '';\nlet locationRefreshTimer_currentProgress: number = -1;\nlet locationRefreshTimer_targetProgress: number = -1;\nlet locationRefreshTimer_streamStarted: boolean = false;\nlet locationRefreshTimer_timer: ReturnType<typeof setTimeout>;\n\nvar currentHashSet_hash: string = '';\n\nvar tabPadding: number = 20;\n\nexport function initializeLocationSliding(): void {\n  LocationGroupsElement.addEventListener('touchstart', function () {\n    locationSliding_initialIndex = Math.round(LocationGroupsElement.scrollLeft / locationSliding_fieldWidth);\n  });\n\n  LocationGroupsElement.addEventListener(\n    'scroll',\n    function (event: Event) {\n      locationSliding_sliding = true;\n      const target = event.target as HTMLElement;\n      const currentIndex = target.scrollLeft / locationSliding_fieldWidth;\n      if (currentIndex > locationSliding_initialIndex) {\n        locationSliding_targetIndex = locationSliding_initialIndex + 1;\n      } else {\n        locationSliding_targetIndex = locationSliding_initialIndex - 1;\n      }\n      const initialSize = locationSliding_groupStyles[`g_${locationSliding_initialIndex}`] || { width: 0, offset: 0 };\n      const targetSize = locationSliding_groupStyles[`g_${locationSliding_targetIndex}`] || { width: 0, offset: 0 };\n      const tabWidth = initialSize.width + (targetSize.width - initialSize.width) * Math.abs(currentIndex - locationSliding_initialIndex);\n      const offset = (initialSize.offset + (targetSize.offset - initialSize.offset) * Math.abs(currentIndex - locationSliding_initialIndex)) * -1 + locationSliding_fieldWidth * 0.5 - tabWidth * 0.5;\n      updateLocationCSS(locationSliding_groupQuantity, offset, tabWidth - tabPadding, currentIndex);\n      if (currentIndex === locationSliding_targetIndex) {\n        locationSliding_initialIndex = Math.round(LocationGroupsElement.scrollLeft / locationSliding_fieldWidth);\n        locationSliding_sliding = false;\n      }\n    },\n    { passive: true }\n  );\n}\n\nexport function ResizeLocationField(): void {\n  const WindowSize = querySize('window');\n  const FieldWidth = WindowSize.width;\n  const FieldHeight = WindowSize.height;\n  LocationField.style.setProperty('--b-cssvar-location-field-width', `${FieldWidth}px`);\n  LocationField.style.setProperty('--b-cssvar-location-field-height', `${FieldHeight}px`);\n}\n\nexport function updateLocationCSS(groupQuantity: number, offset: number, tabLineWidth: number, percentage: number): void {\n  LocationGroupTabLineElement.style.setProperty('--b-cssvar-location-tab-line-width-scale', (tabLineWidth / 10).toString());\n  LocationGroupsElement.style.setProperty('--b-cssvar-location-group-quantity', groupQuantity.toString());\n  LocationGroupTabsTrayElement.style.setProperty('--b-cssvar-location-tabs-tray-offset', `${offset.toFixed(5)}px`);\n  LocationGroupTabsTrayElement.style.setProperty('--b-cssvar-location-percentage', percentage.toFixed(5));\n}\n\nfunction updateUpdateTimer(): void {\n  const smoothingFactor = 0.7;\n  const time = new Date().getTime();\n  if (locationRefreshTimer_refreshing) {\n    locationRefreshTimer_targetProgress = -1 + getDataReceivingProgress(locationRefreshTimer_currentRequestID);\n    locationRefreshTimer_currentProgress = (locationRefreshTimer_targetProgress - locationRefreshTimer_currentProgress) * smoothingFactor;\n  } else {\n    locationRefreshTimer_targetProgress = -1 * Math.min(1, Math.max(0, Math.abs(time - locationRefreshTimer_lastUpdate) / locationRefreshTimer_dynamicInterval));\n    locationRefreshTimer_currentProgress = locationRefreshTimer_targetProgress;\n  }\n  LocationUpdateTimerElement.style.setProperty('--b-cssvar-update-timer', locationRefreshTimer_currentProgress.toString());\n  window.requestAnimationFrame(function () {\n    if (locationRefreshTimer_streaming) {\n      updateUpdateTimer();\n    }\n  });\n}\n\nfunction generateElementOfItem(): GeneratedElement {\n  const identifier = generateIdentifier('i');\n  const element = document.createElement('div');\n  element.classList.add('css_location_group_item');\n  element.id = identifier;\n  element.setAttribute('stretched', 'false');\n  element.innerHTML = /*html*/ `<div class=\"css_location_group_item_head\"><div class=\"css_location_group_item_rank\"><div class=\"css_location_group_item_rank_next_slide\" code=\"-1\"></div><div class=\"css_location_group_item_rank_current_slide\" code=\"-1\"></div></div><div class=\"css_location_group_item_route_direction\"></div><div class=\"css_location_group_item_route_name\"></div><div class=\"css_location_group_item_capsule\"><div class=\"css_location_group_item_status\"><div class=\"css_next_slide\" code=\"0\"></div><div class=\"css_current_slide\" code=\"0\"></div></div><div class=\"css_location_group_item_stretch\" onclick=\"bus.location.stretchLocationItemBody('${identifier}')\">${getIconHTML('keyboard_arrow_down')}</div><div class=\"css_location_group_item_capsule_separator\"></div></div></div><div class=\"css_location_group_item_body\" displayed=\"false\"><div class=\"css_location_group_item_buttons\"><div class=\"css_location_group_item_button\" highlighted=\"true\" type=\"tab\" onclick=\"bus.location.switchLocationBodyTab('${identifier}', 0)\" code=\"0\"><div class=\"css_location_group_item_button_icon\">${getIconHTML('directions_bus')}</div>公車</div><div class=\"css_location_group_item_button\" highlighted=\"false\" type=\"tab\" onclick=\"bus.location.switchLocationBodyTab('${identifier}', 1)\" code=\"1\"><div class=\"css_location_group_item_button_icon\">${getIconHTML('departure_board')}</div>抵達時間</div><div class=\"css_location_group_item_button\" highlighted=\"false\" type=\"save-to-folder\" onclick=\"bus.folder.openSaveToFolder('stop-on-location', ['${identifier}', null, null])\"><div class=\"css_location_group_item_button_icon\">${getIconHTML('folder')}</div>儲存至資料夾</div><div class=\"css_location_group_item_button\" highlighted=\"false\" type=\"schedule-notification\" onclick=\"bus.notification.openScheduleNotification('stop-on-location', ['${identifier}', null, null, null])\" enabled=\"true\"><div class=\"css_location_group_item_button_icon\">${getIconHTML('notifications')}</div>設定到站通知</div></div><div class=\"css_location_group_item_buses\" displayed=\"true\"></div><div class=\"css_location_group_item_bus_arrival_times\" displayed=\"false\"></div></div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction generateElementOfGroup(): GeneratedElement {\n  // const identifier = generateIdentifier('g');\n  const element = document.createElement('div');\n  // element.id = identifier;\n  element.classList.add('css_location_group');\n  element.innerHTML = /*html*/ `<div class=\"css_location_group_details\"><div class=\"css_location_group_details_body\"></div></div><div class=\"css_location_group_items\"></div>`;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nfunction generateElementOfTab(): GeneratedElement {\n  // const identifier = generateIdentifier('t');\n  const element = document.createElement('div');\n  // element.id = identifier;\n  element.classList.add('css_location_group_tab');\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nfunction generateElementOfGroupDetailsProperty(): GeneratedElement {\n  // const identifier = generateIdentifier('p');\n  const element = document.createElement('div');\n  // element.id = identifier;\n  element.classList.add('css_location_group_details_property');\n  element.innerHTML = /*html*/ `<div class=\"css_location_details_property_icon\"></div><div class=\"css_location_details_property_value\"></div>`;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nfunction setUpLocationFieldSkeletonScreen(): void {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const WindowSize = querySize('window');\n  const FieldWidth = WindowSize.width;\n  const FieldHeight = WindowSize.height;\n  const defaultItemQuantity: IntegratedLocation['itemQuantity'] = { g_0: Math.floor(FieldHeight / 50) + 5, g_1: Math.floor(FieldHeight / 50) + 5 };\n  const defaultGroupQuantity = 2;\n  let groupedItems: IntegratedLocation['groupedItems'] = {};\n  for (let i = 0; i < defaultGroupQuantity; i++) {\n    const groupKey = `g_${i}`;\n    groupedItems[groupKey] = [];\n    for (let j = 0; j < defaultItemQuantity[groupKey]; j++) {\n      groupedItems[groupKey].push({\n        route_name: '',\n        route_direction: '',\n        routeId: 0,\n        stopId: 0,\n        status: {\n          code: 8,\n          text: '',\n          time: -6\n        },\n        ranking: {\n          number: 0,\n          text: '--',\n          code: -1\n        },\n        buses: [],\n        busArrivalTimes: []\n      });\n    }\n  }\n  updateLocationField(\n    {\n      groupedItems: groupedItems,\n      groupQuantity: defaultGroupQuantity,\n      groups: {\n        g_0: {\n          name: '載入中',\n          properties: [\n            {\n              key: '0',\n              icon: '',\n              value: ''\n            },\n            {\n              key: '1',\n              icon: '',\n              value: ''\n            }\n          ]\n        },\n        g_1: {\n          name: '載入中',\n          properties: [\n            {\n              key: '0',\n              icon: '',\n              value: ''\n            },\n            {\n              key: '1',\n              icon: '',\n              value: ''\n            }\n          ]\n        }\n      },\n      itemQuantity: defaultItemQuantity,\n      LocationName: '載入中',\n      dataUpdateTime: 0\n    },\n    true,\n    playing_animation\n  );\n}\n\nfunction updateLocationField(integration: IntegratedLocation, skeletonScreen: boolean, animation: boolean): void {\n  function updateItem(thisElement: HTMLElement, thisItem: IntegratedLocationItem, previousItem: IntegratedLocationItem | null): void {\n    function updateStatus(thisElement: HTMLElement, thisItem: IntegratedLocationItem, animation: boolean): void {\n      const thisElementRect = thisElement.getBoundingClientRect();\n      const top = thisElementRect.top;\n      const left = thisElementRect.left;\n      const bottom = thisElementRect.bottom;\n      const right = thisElementRect.right;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n\n      const thisItemStatusElement = elementQuerySelector(thisElement, '.css_location_group_item_status');\n      const nextSlide = elementQuerySelector(thisItemStatusElement, '.css_next_slide');\n      const currentSlide = elementQuerySelector(thisItemStatusElement, '.css_current_slide');\n\n      nextSlide.setAttribute('code', thisItem.status.code.toString());\n      nextSlide.innerText = thisItem.status.text;\n\n      if (animation && bottom > 0 && top < windowHeight && right > 0 && left < windowWidth) {\n        currentSlide.addEventListener(\n          'animationend',\n          function () {\n            currentSlide.setAttribute('code', thisItem.status.code.toString());\n            currentSlide.innerText = thisItem.status.text;\n            currentSlide.classList.remove('css_slide_fade_out');\n          },\n          { once: true }\n        );\n        currentSlide.classList.add('css_slide_fade_out');\n      } else {\n        currentSlide.setAttribute('code', thisItem.status.code.toString());\n        currentSlide.innerText = thisItem.status.text;\n      }\n    }\n\n    function updateRank(thisElement: HTMLElement, thisItem: IntegratedLocationItem, animation: boolean): void {\n      const thisElementRect = thisElement.getBoundingClientRect();\n      const top = thisElementRect.top;\n      const left = thisElementRect.left;\n      const bottom = thisElementRect.bottom;\n      const right = thisElementRect.right;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n\n      const thisRankElement = elementQuerySelector(thisElement, '.css_location_group_item_rank');\n      const nextSlide = elementQuerySelector(thisRankElement, '.css_location_group_item_rank_next_slide');\n      const currentSlide = elementQuerySelector(thisRankElement, '.css_location_group_item_rank_current_slide');\n\n      nextSlide.setAttribute('code', thisItem.ranking.code.toString());\n      nextSlide.innerText = thisItem.ranking.text;\n\n      if (animation && bottom > 0 && top < windowHeight && right > 0 && left < windowWidth) {\n        currentSlide.addEventListener(\n          'animationend',\n          function () {\n            currentSlide.setAttribute('code', thisItem.ranking.code.toString());\n            currentSlide.innerText = thisItem.ranking.text;\n            currentSlide.classList.remove('css_location_group_item_rank_current_slide_fade_out');\n          },\n          { once: true }\n        );\n        currentSlide.classList.add('css_location_group_item_rank_current_slide_fade_out');\n      } else {\n        currentSlide.setAttribute('code', thisItem.ranking.code.toString());\n        currentSlide.innerText = thisItem.ranking.text;\n      }\n    }\n\n    function updateRouteDirection(thisElement: HTMLElement, thisItem: IntegratedLocationItem): void {\n      const thisRouteDirectionElement = elementQuerySelector(thisElement, '.css_location_group_item_route_direction');\n      thisRouteDirectionElement.innerText = thisItem.route_direction;\n    }\n\n    function updateRouteName(thisElement: HTMLElement, thisItem: IntegratedLocationItem): void {\n      const thisRouteNameElement = elementQuerySelector(thisElement, '.css_location_group_item_route_name');\n      thisRouteNameElement.innerText = thisItem.route_name;\n      // TODO: selector\n    }\n\n    function updateBuses(thisElement: HTMLElement, thisItem: IntegratedLocationItem): void {\n      const thisBusesElement = elementQuerySelector(thisElement, '.css_location_group_item_buses');\n      thisBusesElement.innerHTML = thisItem.buses.length === 0 ? '<div class=\"css_location_group_item_buses_message\">目前沒有公車可顯示</div>' : thisItem.buses.map((bus) => `<div class=\"css_location_group_item_bus\" on-this-route=\"${bus.onThisRoute}\"><div class=\"css_location_group_item_bus_title\"><div class=\"css_location_group_item_bus_icon\">${getIconHTML('directions_bus')}</div><div class=\"css_location_group_item_bus_car_number\">${bus.carNumber}</div></div><div class=\"css_location_group_item_bus_attributes\"><div class=\"css_location_group_item_bus_route\">路線：${bus.RouteName}</div><div class=\"css_location_group_item_bus_car_status\">狀態：${bus.status.text}</div><div class=\"css_location_group_item_bus_car_type\">類型：${bus.type}</div></div></div>`).join('');\n    }\n\n    function updateBusArrivalTimes(thisItemElement: HTMLElement, thisItem: IntegratedLocationItem): void {\n      const thisBusArrivalTimesElement = elementQuerySelector(thisItemElement, '.css_location_group_item_bus_arrival_times');\n      thisBusArrivalTimesElement.innerHTML = thisItem.busArrivalTimes.length === 0 ? '<div class=\"css_location_group_item_bus_arrival_message\">目前沒有抵達時間可顯示</div>' : thisItem.busArrivalTimes.map((busArrivalTime) => `<div class=\"css_location_group_item_bus_arrival_time\"><div class=\"css_location_group_item_bus_arrival_time_title\"><div class=\"css_location_group_item_bus_arrival_time_icon\">${getIconHTML('schedule')}</div><div class=\"css_location_group_item_bus_arrival_time_time\">${busArrivalTime.time}</div></div><div class=\"css_location_group_item_bus_arrival_time_attributes\"><div class=\"css_location_group_item_bus_arrival_time_personal_schedule_name\">個人化行程：${busArrivalTime.personalSchedule.name}</div><div class=\"css_location_group_item_bus_arrival_time_personal_schedule_period\">時段：${timeObjectToString(busArrivalTime.personalSchedule.period.start)} - ${timeObjectToString(busArrivalTime.personalSchedule.period.end)}</div><div class=\"css_location_group_item_bus_arrival_time_personal_schedule_days\">重複：${busArrivalTime.personalSchedule.days.map((day) => indexToDay(day).name).join('、')}</div></div></div>`).join('');\n    }\n\n    function updateStretch(thisElement: HTMLElement, skeletonScreen: boolean): void {\n      if (skeletonScreen) {\n        thisElement.setAttribute('stretched', 'false');\n      }\n    }\n\n    function updateAnimation(thisElement: HTMLElement, animation: boolean): void {\n      thisElement.setAttribute('animation', booleanToString(animation));\n    }\n\n    function updateSkeletonScreen(thisElement: HTMLElement, skeletonScreen: boolean): void {\n      thisElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    }\n\n    function updateSaveToFolderButton(thisItemElement: HTMLElement, thisItem: IntegratedLocationItem): void {\n      const thisItemBodyElement = elementQuerySelector(thisItemElement, '.css_location_group_item_body');\n      const thisItemButtonsElement = elementQuerySelector(thisItemBodyElement, '.css_location_group_item_buttons');\n      const saveToFolderButtonElement = elementQuerySelector(thisItemButtonsElement, '.css_location_group_item_button[type=\"save-to-folder\"]');\n      saveToFolderButtonElement.setAttribute('onclick', `bus.folder.openSaveToFolder('stop-on-location', ['${thisItemElement.id}', ${thisItem.stopId}, ${thisItem.routeId}])`);\n      isFolderContentSaved('stop', thisItem.stopId).then((e) => {\n        saveToFolderButtonElement.setAttribute('highlighted', booleanToString(e));\n      });\n    }\n\n    function updateScheduleNotificationButton(thisItemElement: HTMLElement, thisItem: IntegratedLocationItem): void {\n      const thisItemBodyElement = elementQuerySelector(thisItemElement, '.css_location_group_item_body');\n      const thisItemButtonsElement = elementQuerySelector(thisItemBodyElement, '.css_location_group_item_buttons');\n      const scheduleNotificationButtonElement = elementQuerySelector(thisItemButtonsElement, '.css_location_group_item_button[type=\"schedule-notification\"]');\n      scheduleNotificationButtonElement.setAttribute('onclick', `bus.notification.openScheduleNotification('stop-on-location', ['${thisItemElement.id}', ${thisItem.stopId}, ${thisItem.routeId}, ${thisItem.status.time}])`);\n      const havingNotifcationSchedules = stopHasNotifcationSchedules(thisItem.stopId);\n      scheduleNotificationButtonElement.setAttribute('highlighted', booleanToString(havingNotifcationSchedules));\n    }\n\n    if (previousItem === null) {\n      updateStatus(thisElement, thisItem, animation);\n      updateRank(thisElement, thisItem, animation);\n      updateRouteDirection(thisElement, thisItem);\n      updateRouteName(thisElement, thisItem);\n      updateBuses(thisElement, thisItem);\n      updateBusArrivalTimes(thisElement, thisItem);\n      updateStretch(thisElement, skeletonScreen);\n      updateAnimation(thisElement, animation);\n      updateSkeletonScreen(thisElement, skeletonScreen);\n      updateSaveToFolderButton(thisElement, thisItem);\n      updateScheduleNotificationButton(thisElement, thisItem);\n    } else {\n      if (thisItem.status.time !== previousItem.status.time) {\n        updateStatus(thisElement, thisItem, animation);\n        updateScheduleNotificationButton(thisElement, thisItem);\n      }\n      if (previousItem.ranking.number !== thisItem.ranking.number || previousItem.ranking.code !== thisItem.ranking.code) {\n        updateRank(thisElement, thisItem, animation);\n      }\n      if (previousItem.stopId !== thisItem.stopId) {\n        updateRouteDirection(thisElement, thisItem);\n        updateRouteName(thisElement, thisItem);\n        updateSaveToFolderButton(thisElement, thisItem);\n      }\n      if (!compareThings(previousItem.buses, thisItem.buses)) {\n        updateBuses(thisElement, thisItem);\n      }\n      if (!compareThings(previousItem.busArrivalTimes, thisItem.busArrivalTimes)) {\n        updateBusArrivalTimes(thisElement, thisItem);\n      }\n      if (animation !== previousAnimation) {\n        updateAnimation(thisElement, animation);\n      }\n      if (skeletonScreen !== previousSkeletonScreen) {\n        updateStretch(thisElement, skeletonScreen);\n        updateSkeletonScreen(thisElement, skeletonScreen);\n      }\n    }\n  }\n\n  function updateProperty(thisElement: HTMLElement, thisProperty: LocationGroupProperty, previousProperty: LocationGroupProperty | null): void {\n    function updateIcon(thisElement: HTMLElement, thisProperty: LocationGroupProperty): void {\n      elementQuerySelector(thisElement, '.css_location_details_property_icon').innerHTML = getIconHTML(thisProperty.icon);\n    }\n\n    function updateValue(thisElement: HTMLElement, thisProperty: LocationGroupProperty): void {\n      elementQuerySelector(thisElement, '.css_location_details_property_value').innerHTML = thisProperty.value;\n    }\n\n    function updateAnimation(thisElement: HTMLElement, animation: boolean): void {\n      thisElement.setAttribute('animation', booleanToString(animation));\n    }\n\n    function updateSkeletonScreen(thisElement: HTMLElement, skeletonScreen: boolean): void {\n      thisElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    }\n\n    if (previousProperty === null) {\n      updateIcon(thisElement, thisProperty);\n      updateValue(thisElement, thisProperty);\n      updateAnimation(thisElement, animation);\n      updateSkeletonScreen(thisElement, skeletonScreen);\n    } else {\n      if (!compareThings(previousProperty.icon, thisProperty.icon)) {\n        updateIcon(thisElement, thisProperty);\n      }\n      if (!compareThings(previousProperty.value, thisProperty.value)) {\n        updateValue(thisElement, thisProperty);\n      }\n      if (animation !== previousAnimation) {\n        updateAnimation(thisElement, animation);\n      }\n      if (skeletonScreen !== previousSkeletonScreen) {\n        updateSkeletonScreen(thisElement, skeletonScreen);\n      }\n    }\n  }\n\n  const WindowSize = querySize('window');\n  const FieldWidth = WindowSize.width;\n  const FieldHeight = WindowSize.height;\n\n  const groupQuantity = integration.groupQuantity;\n  const itemQuantity = integration.itemQuantity;\n  const groupedItems = integration.groupedItems;\n  const groups = integration.groups;\n\n  locationSliding_groupQuantity = groupQuantity;\n  locationSliding_fieldWidth = FieldWidth;\n  locationSliding_fieldHeight = FieldHeight;\n\n  let cumulativeOffset = 0;\n  for (let i = 0; i < groupQuantity; i++) {\n    const width = getTextWidth(groups[`g_${i}`].name, 500, '17px', `\"Noto Sans TC\", sans-serif`) + tabPadding;\n    locationSliding_groupStyles[`g_${i}`] = {\n      width: width,\n      offset: cumulativeOffset\n    };\n    cumulativeOffset += width;\n  }\n  var offset = locationSliding_groupStyles[`g_${locationSliding_initialIndex}`].offset * -1 + locationSliding_fieldWidth * 0.5 - locationSliding_groupStyles[`g_${locationSliding_initialIndex}`].width * 0.5;\n  if (!locationSliding_sliding) {\n    updateLocationCSS(locationSliding_groupQuantity, offset, locationSliding_groupStyles[`g_${locationSliding_initialIndex}`].width - tabPadding, locationSliding_initialIndex);\n  }\n\n  LocationNameElement.innerHTML = /*html*/ `<span>${integration.LocationName}</span>`;\n  LocationNameElement.setAttribute('animation', booleanToString(animation));\n  LocationNameElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n  LocationGroupTabsElement.setAttribute('animation', booleanToString(animation));\n  LocationGroupTabsElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n  LocationGroupTabLineTrackElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n  // TODO: updateTab\n\n  const currentGroupSeatQuantity = elementQuerySelectorAll(LocationGroupsElement, '.css_location_group').length;\n  if (!(groupQuantity === currentGroupSeatQuantity)) {\n    const capacity = currentGroupSeatQuantity - groupQuantity;\n    if (capacity < 0) {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const newGroupElement = generateElementOfGroup();\n        LocationGroupsElement.appendChild(newGroupElement.element);\n        const newTabElement = generateElementOfTab();\n        LocationGroupTabsTrayElement.appendChild(newTabElement.element);\n      }\n    } else {\n      const LocationGroupElements = elementQuerySelectorAll(LocationGroupsElement, `.css_location_group`);\n      const LocationGroupTabElements = elementQuerySelectorAll(LocationGroupTabsTrayElement, '.css_location_group_tab');\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const groupIndex = currentGroupSeatQuantity - 1 - o;\n        LocationGroupElements[groupIndex].remove();\n        LocationGroupTabElements[groupIndex].remove();\n      }\n    }\n  }\n\n  const LocationGroupElements = elementQuerySelectorAll(LocationGroupsElement, `.css_location_group`);\n  for (let i = 0; i < groupQuantity; i++) {\n    const groupKey = `g_${i}`;\n    const thisLocationGroupElement = LocationGroupElements[i];\n    const currentItemSeatQuantity = elementQuerySelectorAll(thisLocationGroupElement, `.css_location_group_items .css_location_group_item`).length;\n    if (!(itemQuantity[groupKey] === currentItemSeatQuantity)) {\n      const capacity = currentItemSeatQuantity - itemQuantity[groupKey];\n      if (capacity < 0) {\n        const LocationGroupItemsElement = elementQuerySelector(thisLocationGroupElement, `.css_location_group_items`);\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const newItemElement = generateElementOfItem();\n          LocationGroupItemsElement.appendChild(newItemElement.element);\n        }\n      } else {\n        const LocationGroupItemElements = elementQuerySelectorAll(thisLocationGroupElement, `.css_location_group_items .css_location_group_item`);\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const itemIndex = currentItemSeatQuantity - 1 - o;\n          LocationGroupItemElements[itemIndex].remove();\n        }\n      }\n    }\n\n    const currentGroupPropertySeatQuantity = elementQuerySelectorAll(elementQuerySelectorAll(LocationGroupsElement, '.css_location_group')[i], `.css_location_group_details .css_location_group_details_body .css_location_group_details_property`).length;\n    const groupPropertyQuantity = groups[groupKey].properties.length;\n    if (!(groupPropertyQuantity === currentGroupPropertySeatQuantity)) {\n      const capacity = currentGroupPropertySeatQuantity - groupPropertyQuantity;\n      if (capacity < 0) {\n        const thisLocationGroupDetailsElement = elementQuerySelector(thisLocationGroupElement, '.css_location_group_details');\n        const thisLocationGroupDetailsBodyElement = elementQuerySelector(thisLocationGroupDetailsElement, '.css_location_group_details_body');\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          // var propertyIndex = currentGroupPropertySeatQuantity + o;\n          const newPropertyElement = generateElementOfGroupDetailsProperty();\n          thisLocationGroupDetailsBodyElement.appendChild(newPropertyElement.element);\n        }\n      } else {\n        const thisLocationGroupDetailsElement = elementQuerySelector(thisLocationGroupElement, '.css_location_group_details');\n        const thisLocationGroupDetailsBodyElement = elementQuerySelector(thisLocationGroupDetailsElement, '.css_location_group_details_body');\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const propertyIndex = currentGroupPropertySeatQuantity - 1 - o;\n          elementQuerySelectorAll(thisLocationGroupDetailsBodyElement, '.css_location_group_details_property')[propertyIndex].remove();\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < groupQuantity; i++) {\n    const groupKey = `g_${i}`;\n    const thisTabElement = elementQuerySelectorAll(LocationGroupTabsTrayElement, '.css_location_group_tab')[i];\n    thisTabElement.innerHTML = /*html*/ `<span>${groups[groupKey].name}</span>`;\n    thisTabElement.style.setProperty('--b-cssvar-location-tab-width', `${locationSliding_groupStyles[groupKey].width}px`);\n    thisTabElement.style.setProperty('--b-cssvar-location-tab-index', i.toString());\n    const thisGroupElement = elementQuerySelectorAll(LocationGroupsElement, '.css_location_group')[i];\n    const groupPropertyQuantity = groups[groupKey].properties.length;\n\n    for (let k = 0; k < groupPropertyQuantity; k++) {\n      const thisProperty = groups[groupKey].properties[k];\n      const thisElement = elementQuerySelectorAll(thisGroupElement, `.css_location_group_details .css_location_group_details_body .css_location_group_details_property`)[k];\n      if (previousIntegration.hasOwnProperty('groups')) {\n        if (previousIntegration.groups.hasOwnProperty(groupKey)) {\n          if (previousIntegration.groups[groupKey].properties[k]) {\n            const previousProperty = previousIntegration.groups[groupKey].properties[k];\n            updateProperty(thisElement, thisProperty, previousProperty);\n          } else {\n            updateProperty(thisElement, thisProperty, null);\n          }\n        } else {\n          updateProperty(thisElement, thisProperty, null);\n        }\n      } else {\n        updateProperty(thisElement, thisProperty, null);\n      }\n    }\n\n    for (let j = 0; j < itemQuantity[groupKey]; j++) {\n      const thisElement = elementQuerySelectorAll(thisGroupElement, `.css_location_group_items .css_location_group_item`)[j];\n      const thisItem = groupedItems[groupKey][j];\n      if (previousIntegration.hasOwnProperty('groupedItems')) {\n        if (previousIntegration.groupedItems.hasOwnProperty(groupKey)) {\n          if (previousIntegration.groupedItems[groupKey][j]) {\n            const previousItem = previousIntegration.groupedItems[groupKey][j];\n            updateItem(thisElement, thisItem, previousItem);\n          } else {\n            updateItem(thisElement, thisItem, null);\n          }\n        } else {\n          updateItem(thisElement, thisItem, null);\n        }\n      } else {\n        updateItem(thisElement, thisItem, null);\n      }\n    }\n  }\n\n  previousIntegration = integration;\n  previousAnimation = animation;\n  previousSkeletonScreen = skeletonScreen;\n}\n\nasync function refreshLocation() {\n  const time = new Date().getTime();\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const refresh_interval_setting = getSettingOptionValue('refresh_interval') as SettingSelectOptionRefreshIntervalValue;\n  locationRefreshTimer_dynamic = refresh_interval_setting.dynamic;\n  locationRefreshTimer_baseInterval = refresh_interval_setting.baseInterval;\n  locationRefreshTimer_refreshing = true;\n  locationRefreshTimer_currentRequestID = generateIdentifier('r');\n  LocationUpdateTimerElement.setAttribute('refreshing', 'true');\n  const integration = await integrateLocation(currentHashSet_hash, locationRefreshTimer_currentRequestID);\n  updateLocationField(integration, false, playing_animation);\n  locationRefreshTimer_lastUpdate = time;\n  if (locationRefreshTimer_dynamic) {\n    const updateRate = await getUpdateRate();\n    locationRefreshTimer_nextUpdate = Math.max(time + locationRefreshTimer_minInterval, integration.dataUpdateTime + locationRefreshTimer_baseInterval / updateRate);\n  } else {\n    locationRefreshTimer_nextUpdate = time + locationRefreshTimer_baseInterval;\n  }\n  locationRefreshTimer_dynamicInterval = Math.max(locationRefreshTimer_minInterval, locationRefreshTimer_nextUpdate - time);\n  locationRefreshTimer_refreshing = false;\n  LocationUpdateTimerElement.setAttribute('refreshing', 'false');\n}\n\nexport function streamLocation(): void {\n  refreshLocation()\n    .then(function () {\n      if (locationRefreshTimer_streaming) {\n        locationRefreshTimer_timer = setTimeout(function () {\n          streamLocation();\n        }, Math.max(locationRefreshTimer_minInterval, locationRefreshTimer_nextUpdate - new Date().getTime()));\n      } else {\n        locationRefreshTimer_streamStarted = false;\n      }\n    })\n    .catch((err) => {\n      console.error(err);\n      if (locationRefreshTimer_streaming) {\n        promptMessage(`（地點）發生網路錯誤，將在${locationRefreshTimer_retryInterval / 1000}秒後重試。`, 'error');\n        locationRefreshTimer_timer = setTimeout(function () {\n          streamLocation();\n        }, locationRefreshTimer_retryInterval);\n      } else {\n        locationRefreshTimer_streamStarted = false;\n      }\n    });\n}\n\nexport function openLocation(hash: string): void {\n  pushPageHistory('Location');\n  logRecentView('location', hash);\n  currentHashSet_hash = hash;\n  locationSliding_initialIndex = 0;\n  LocationField.setAttribute('displayed', 'true');\n  LocationGroupsElement.scrollLeft = 0;\n  setUpLocationFieldSkeletonScreen();\n  if (!locationRefreshTimer_streaming) {\n    locationRefreshTimer_streaming = true;\n    if (!locationRefreshTimer_streamStarted) {\n      locationRefreshTimer_streamStarted = true;\n      streamLocation();\n    } else {\n      refreshLocation();\n    }\n    locationRefreshTimer_currentProgress = -1;\n    locationRefreshTimer_targetProgress = -1;\n    updateUpdateTimer();\n  }\n  closePreviousPage();\n}\n\nexport function closeLocation(): void {\n  // revokePageHistory('Location');\n  LocationField.setAttribute('displayed', 'false');\n  locationRefreshTimer_streaming = false;\n  locationRefreshTimer_currentProgress = -1;\n  locationRefreshTimer_targetProgress = -1;\n  openPreviousPage();\n}\n\nexport function stretchLocationItemBody(itemID: string): void {\n  const itemElement = elementQuerySelector(LocationGroupsElement, `.css_location_group .css_location_group_items .css_location_group_item#${itemID}`);\n  const itemBodyElement = elementQuerySelector(itemElement, '.css_location_group_item_body');\n  if (itemElement.getAttribute('stretched') === 'true') {\n    if (itemElement.getAttribute('animation') === 'true') {\n      itemBodyElement.addEventListener(\n        'transitionend',\n        function () {\n          itemBodyElement.setAttribute('displayed', 'false');\n        },\n        { once: true }\n      );\n    } else {\n      itemBodyElement.setAttribute('displayed', 'false');\n    }\n    itemElement.setAttribute('stretched', 'false');\n  } else {\n    itemBodyElement.setAttribute('displayed', 'true');\n    itemElement.setAttribute('stretched', 'true');\n  }\n}\n\nexport function switchLocationBodyTab(itemID: string, tabCode: number): void {\n  const itemElement = elementQuerySelector(LocationGroupsElement, `.css_location_group .css_location_group_items .css_location_group_item#${itemID}`);\n  const itemBodyElement = elementQuerySelector(itemElement, '.css_location_group_item_body');\n  const buttonsElement = elementQuerySelector(itemBodyElement, '.css_location_group_item_buttons');\n  const buttonElements = elementQuerySelectorAll(buttonsElement, '.css_location_group_item_button[highlighted=\"true\"][type=\"tab\"]');\n  for (const t of buttonElements) {\n    t.setAttribute('highlighted', 'false');\n  }\n  elementQuerySelector(buttonsElement, `.css_location_group_item_button[code=\"${tabCode}\"]`).setAttribute('highlighted', 'true');\n  switch (tabCode) {\n    case 0:\n      elementQuerySelector(itemElement, '.css_location_group_item_buses').setAttribute('displayed', 'true');\n      elementQuerySelector(itemElement, '.css_location_group_item_bus_arrival_times').setAttribute('displayed', 'false');\n      break;\n    case 1:\n      elementQuerySelector(itemElement, '.css_location_group_item_buses').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_location_group_item_bus_arrival_times').setAttribute('displayed', 'true');\n      break;\n    default:\n      break;\n  }\n}\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_createForOfIteratorHelper","Array","isArray","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_n","F","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","trackingBusArrivalTime_trackingID","trackingBusArrivalTime_tracking","trackingBusArrivalTime_trackedStops","trackingBusArrivalTime_incompleteRecords","trackingBusArrivalTime_currentDataLength","recordEstimateTimeForBusArrivalTime","_x","_recordEstimateTimeForBusArrivalTime","_callee","EstimateTime","now","currentTimeStamp","needToReset","foldersWithContent","_iterator","_step","folderWithContent1","_iterator2","_step2","item","stopID","_stopKey","_context","Date","getTime","generateIdentifier","trackingID","timeStamp","data","listFoldersWithContent","concat","content","filter","m","map","id","err","isInPersonalSchedule","StopID","stopKey","indexOf","parseInt","lfSetItem","JSON","stringify","discardExpiredEstimateTimeRecordsForBusArrivalTime","_discardExpiredEstimateTimeRecordsForBusArrivalTime","_callee2","_iterator3","_step3","key","json","object","_context2","lfListItemKeys","lfGetItem","parse","lfRemoveItem","t0","getBusArrivalTimes","_getBusArrivalTimes","_callee3","recordsGroupedByStops","_iterator4","_step4","existingRecord","existingRecordObject","stopKey1","busArrivalTimesGroupedByStops","stopKey2","recordsOfThisStop","recordsOfThisStopLength","EstimateTimeInThisPeriod","busArrivalTimeInThisPeriod","currentRecord","nextRecord","currentRecordEstimateTime","nextRecordEstimateTime","closestRecord","personalSchedules","result","_iterator5","_step5","personalSchedule","personalScheduleID","personalScheduleName","stopKey3","busArrivalTimes","_iterator6","_step6","busArrivalTime","busArrivalTimeDay","busArrivalTimeHours","busArrivalTimeMinutes","totalMinutes","scheduleTotalStartMinutes","scheduleTotalEndMinutes","aggregatedBusArrivalTimes","aggregatedBusArrivalTimeObjects","_iterator7","_step7","aggregatedBusArrivalTime","_totalMinutes","minutes","timeObject","_context3","sort","b","listPersonalSchedules","getDay","getHours","getMinutes","days","period","start","hours","end","aggregateNumbers","Math","floor","time","timeObjectToString","splashScreenTimer_minimalTimeOut","splashScreenTimer_openTime","pageHistory","pushPageHistory","page","pageHistoryLength","revokePageHistory","closePreviousPage","closeFolderCreator","closeFolderEditor","closeFolderManager","closeSearch","closeSettings","closePersonalScheduleManager","closePersonalScheduleEditor","closeBus","closeRegisterNotification","openPreviousPage","previousPage","openFolderCreator","openFolderEditor","openFolderManager","openSearch","openSettings","openPersonalScheduleManager","openPersonalScheduleEditor","openBus","openRegisterNotification","setSplashScreenIconOffsetY","offset","isRunningStandalone","window","outerHeight","innerHeight","documentQuerySelector","style","setProperty","fadeOutSplashScreen","callback","fadeOut","element","classList","add","addEventListener","setAttribute","remove","once","cureentTime","setTimeout","max","querySize","width","height","windowWidth","innerWidth","windowHeight","lazyCSS","noto_sans_tc","material_symbols","loadCSS","url","identifier","link","document","createElement","head","appendChild","LocationField","LocationHeadElement","elementQuerySelector","LocationNameElement","LocationGroupsElement","LocationGroupTabsElement","LocationGroupTabsTrayElement","LocationGroupTabLineTrackElement","LocationGroupTabLineElement","LocationUpdateTimerElement","previousIntegration","previousAnimation","previousSkeletonScreen","locationSliding_initialIndex","locationSliding_targetIndex","locationSliding_groupQuantity","locationSliding_groupStyles","locationSliding_fieldWidth","locationSliding_sliding","locationRefreshTimer_retryInterval","locationRefreshTimer_baseInterval","locationRefreshTimer_minInterval","locationRefreshTimer_dynamicInterval","locationRefreshTimer_dynamic","locationRefreshTimer_streaming","locationRefreshTimer_lastUpdate","locationRefreshTimer_nextUpdate","locationRefreshTimer_refreshing","locationRefreshTimer_currentRequestID","locationRefreshTimer_currentProgress","locationRefreshTimer_targetProgress","locationRefreshTimer_streamStarted","currentHashSet_hash","tabPadding","initializeLocationSliding","round","scrollLeft","event","currentIndex","target","initialSize","targetSize","tabWidth","abs","updateLocationCSS","passive","ResizeLocationField","WindowSize","FieldWidth","FieldHeight","groupQuantity","tabLineWidth","percentage","toFixed","updateUpdateTimer","getDataReceivingProgress","min","requestAnimationFrame","generateElementOfItem","innerHTML","getIconHTML","generateElementOfTab","generateElementOfGroupDetailsProperty","updateLocationField","integration","skeletonScreen","animation","updateItem","thisElement","thisItem","previousItem","updateStatus","thisElementRect","getBoundingClientRect","top","left","bottom","right","thisItemStatusElement","nextSlide","currentSlide","status","code","innerText","text","updateRank","thisRankElement","ranking","updateRouteDirection","route_direction","updateRouteName","route_name","updateBuses","buses","bus","onThisRoute","carNumber","RouteName","join","updateBusArrivalTimes","thisItemElement","day","indexToDay","updateStretch","updateAnimation","booleanToString","updateSkeletonScreen","updateSaveToFolderButton","thisItemBodyElement","thisItemButtonsElement","saveToFolderButtonElement","stopId","routeId","isFolderContentSaved","updateScheduleNotificationButton","scheduleNotificationButtonElement","havingNotifcationSchedules","stopHasNotifcationSchedules","number","compareThings","updateProperty","thisProperty","previousProperty","updateIcon","icon","updateValue","itemQuantity","groupedItems","groups","cumulativeOffset","getTextWidth","LocationName","currentGroupSeatQuantity","elementQuerySelectorAll","capacity","newGroupElement","newTabElement","LocationGroupElements","LocationGroupTabElements","groupIndex","groupKey","thisLocationGroupElement","currentItemSeatQuantity","LocationGroupItemsElement","newItemElement","LocationGroupItemElements","currentGroupPropertySeatQuantity","groupPropertyQuantity","properties","thisLocationGroupDetailsElement","thisLocationGroupDetailsBodyElement","newPropertyElement","propertyIndex","thisTabElement","thisGroupElement","k","j","refreshLocation","_refreshLocation","playing_animation","refresh_interval_setting","updateRate","getSettingOptionValue","dynamic","baseInterval","integrateLocation","getUpdateRate","dataUpdateTime","streamLocation","console","error","promptMessage","openLocation","hash","logRecentView","defaultItemQuantity","g_0","g_1","setUpLocationFieldSkeletonScreen","closeLocation","stretchLocationItemBody","itemID","itemElement","itemBodyElement","getAttribute","switchLocationBodyTab","tabCode","buttonsElement"],"sourceRoot":""}