{"version":3,"file":"bf6c62be387ee9fb8d41.js","mappings":"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","sources":["webpack://bus/./src/interface/route/details/actions.ts","webpack://bus/./src/interface/route/details/calendar.ts","webpack://bus/./src/interface/route/details/properties.ts","webpack://bus/./src/interface/route/details/index.ts","webpack://bus/./src/interface/register-notification/index.ts"],"sourcesContent":["import { searchRouteByRouteID } from '../../../data/search/index';\nimport { getPermalink } from '../../../tools/permalink';\nimport { promptMessage } from '../../prompt/index';\nimport { openQRCode } from '../../qrcode/index';\n\nexport async function shareRoutePermalink(RouteID: number) {\n  const thisRoute = await searchRouteByRouteID(RouteID);\n  if (thisRoute !== false) {\n    const link = getPermalink(0, {\n      id: RouteID,\n      name: thisRoute.n\n    });\n    if (navigator.share) {\n      navigator\n        .share({\n          title: thisRoute.n,\n          url: link\n        })\n        .then(() => {\n          promptMessage('已分享路線連結', 'link');\n        })\n        .catch((e) => {\n          promptMessage('已取消分享連結', 'cancel');\n          console.error(e);\n        });\n    }\n  }\n}\n\nexport async function showRoutePermalinkQRCode(RouteID: number) {\n  const thisRoute = await searchRouteByRouteID(RouteID);\n  if (thisRoute !== false) {\n    const link = getPermalink(0, {\n      id: RouteID,\n      name: thisRoute.n\n    });\n    openQRCode(link);\n  }\n}\n","import { GeneratedElement, querySize } from '../../index';\nimport { elementQuerySelector, elementQuerySelectorAll } from '../../../tools/query-selector';\nimport { getSettingOptionValue } from '../../../data/settings/index';\nimport { getCSSVariableValue } from '../../../tools/style';\nimport { drawRoundedRect } from '../../../tools/graphic';\nimport { Calendar, CalendarDay, CalendarEvent, CalendarEventGroup } from '../../../data/route/details';\nimport { booleanToString } from '../../../tools/index';\nimport { CalendarDaysElement, CalendarEventGroupsElement } from './index';\n\n/*\nconst RouteDetailsField = documentQuerySelector('.css_route_details_field');\nconst RouteDetailsBodyElement = elementQuerySelector(RouteDetailsField, '.css_route_details_body');\nconst RouteDetailsGroupsElement = elementQuerySelector(RouteDetailsBodyElement, '.css_route_details_groups');\nconst CalendarGroupElement = elementQuerySelector(RouteDetailsGroupsElement, '.css_route_details_group[group=\"calendar\"]');\nconst CalendarGroupBodyElement = elementQuerySelector(CalendarGroupElement, '.css_route_details_group_body');\nconst CalendarDaysElement = elementQuerySelector(CalendarGroupBodyElement, '.css_route_details_calendar_days');\nconst CalendarEventGroupsElement = elementQuerySelector(CalendarGroupBodyElement, '.css_route_details_calendar_event_groups');\n*/\n\nconst calendarRatio = 80;\nconst scaleLimit = Math.floor(3072 / (calendarRatio * 24));\nconst gridlineBoxHeight = 10;\nconst gridlineWidth = 1.2;\nconst gridlineLabelWidthLimit = 45;\nconst fontFamily: string = '\"Noto Sans TC\", sans-serif';\n\nlet canvasSize = querySize('route-details-canvas');\nlet canvasWidth = canvasSize.width;\nlet canvasHeight = canvasSize.height;\nlet canvasScale = Math.min(window.devicePixelRatio, scaleLimit) || 1;\n\nlet previousCalendar = {} as Calendar;\nlet previousAnimation: boolean = true;\nlet previousSkeletonScreen: boolean = false;\n\nfunction resizeRouteDetailsCalendarCanvas(canvas: HTMLCanvasElement): void {\n  canvasSize = querySize('route-details-canvas');\n  canvasWidth = canvasSize.width;\n  canvasHeight = canvasSize.height;\n  canvasScale = Math.min(window.devicePixelRatio, scaleLimit) || 1;\n\n  // Set the new size\n  canvas.width = canvasWidth * canvasScale;\n  canvas.height = canvasHeight * canvasScale;\n\n  // Reset transformations before scaling\n  const context = canvas.getContext('2d');\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.scale(canvasScale, canvasScale);\n}\n\nfunction generateElementOfDay(): GeneratedElement {\n  const element = document.createElement('div');\n  element.classList.add('css_route_details_calendar_day');\n\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nfunction generateElementOfEventGroup(): GeneratedElement {\n  // Main event group element\n  const eventGroupElement = document.createElement('div');\n  eventGroupElement.classList.add('css_route_details_calendar_event_group');\n\n  // Canvas element\n  const canvasElement = document.createElement('canvas');\n  canvasElement.classList.add('css_route_details_calendar_event_group_canvas');\n  eventGroupElement.appendChild(canvasElement);\n\n  return {\n    element: eventGroupElement,\n    id: ''\n  };\n}\n\nexport function setUpCalendarGroupSkeletonScreen(): void {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const defaultEventQuantity = {\n    d_0: 47,\n    d_1: 47,\n    d_2: 47,\n    d_3: 47,\n    d_4: 47,\n    d_5: 47,\n    d_6: 47\n  };\n  const defaultDayQuantity = 7;\n  let calendarEventGroups = {};\n  let calendarDays = {};\n  for (let i = 0; i < defaultDayQuantity; i++) {\n    const eventGroupKey = `d_${i}`;\n    calendarEventGroups[eventGroupKey] = [];\n    calendarDays[eventGroupKey] = {\n      day: i,\n      code: `d_{i}`,\n      name: ''\n    };\n    for (let j = 0; j < defaultEventQuantity[eventGroupKey]; j++) {\n      const date = new Date();\n      date.setHours(0);\n      date.setMinutes(j * 30);\n      date.setSeconds(0);\n      date.setMilliseconds(0);\n      calendarEventGroups[eventGroupKey].push({\n        date: date,\n        dateString: '',\n        duration: 15\n      });\n    }\n  }\n  updateCalendarGroup(\n    {\n      calendarEventGroups: calendarEventGroups,\n      calendarDays: calendarDays,\n      calendarDayQuantity: defaultDayQuantity,\n      calendarEventQuantity: defaultEventQuantity\n    },\n    true,\n    playing_animation\n  );\n}\n\nfunction updateDay(thisDayElement: HTMLElement, thisDay: CalendarDay, currentDay: number, skeletonScreen: boolean, animation: boolean, index: number): void {\n  thisDayElement.innerText = thisDay.name;\n  thisDayElement.setAttribute('day', index.toString());\n  thisDayElement.onclick = function () {\n    switchCalendarDay(index);\n  };\n  thisDayElement.setAttribute('highlighted', currentDay === index ? 'true' : 'false');\n  thisDayElement.setAttribute('animation', booleanToString(animation));\n  thisDayElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n}\n\nfunction updateEventGroup(thisCalendarEventGroupElement: HTMLElement, thisCalendarEventGroup: CalendarEventGroup, currentDay: number, mainColor: string, mainColorR: string, mainColorG: string, mainColorB: string, mainColorA: string, gridColor: string, index: number): void {\n  function drawGridline(thisContext: CanvasRenderingContext2D, hours: number, gridColor: string): void {\n    const boxX = 0;\n    const boxY = hours * calendarRatio;\n\n    // Cache the color value once\n    thisContext.fillStyle = gridColor;\n\n    // Draw line\n    thisContext.fillRect(boxX + gridlineLabelWidthLimit, boxY + 5, canvasWidth - gridlineLabelWidthLimit, gridlineWidth);\n\n    // Draw label\n    thisContext.font = `400 ${12}px ${fontFamily}`;\n    thisContext.textBaseline = 'top';\n    const labelText = `${String(hours).padStart(2, '0')}:00`;\n    const labelMeasurement = thisContext.measureText(labelText);\n    const labelWidth = labelMeasurement.width;\n    const labelHeight = labelMeasurement.actualBoundingBoxDescent;\n    thisContext.fillText(labelText, (gridlineLabelWidthLimit - labelWidth) / 2, boxY + (gridlineBoxHeight - labelHeight) / 2, labelWidth);\n  }\n\n  function drawEvent(thisContext: CanvasRenderingContext2D, thisCalendarEvent: CalendarEvent, mainColor: string, mainColorR: string, mainColorG: string, mainColorB: string, mainColorA: string): void {\n    // Calculate the start of the day for this event only once.\n    const thisDayStart = new Date();\n    thisDayStart.setDate(1);\n    thisDayStart.setMonth(0);\n    thisDayStart.setFullYear(thisCalendarEvent.date.getFullYear());\n    thisDayStart.setMonth(thisCalendarEvent.date.getMonth());\n    thisDayStart.setDate(thisCalendarEvent.date.getDate());\n    thisDayStart.setHours(0);\n    thisDayStart.setMinutes(0);\n    thisDayStart.setSeconds(0);\n    thisDayStart.setMilliseconds(0);\n\n    const boxX = gridlineLabelWidthLimit;\n    const boxY = ((thisCalendarEvent.date.getTime() - thisDayStart.getTime()) / (24 * 60 * 60 * 1000)) * 24 * calendarRatio;\n    const boxWidth = canvasWidth - gridlineLabelWidthLimit;\n    const boxHeight = ((thisCalendarEvent.duration * 60 * 1000) / (24 * 60 * 60 * 1000)) * 24 * calendarRatio;\n\n    // Draw background with rounded rectangle\n    drawRoundedRect(thisContext, boxX, boxY, boxWidth, boxHeight, 3, `rgba(${mainColorR}, ${mainColorG}, ${mainColorB}, ${mainColorA})`);\n\n    // Draw decoration (a thin rounded rectangle)\n    drawRoundedRect(thisContext, boxX, boxY, 3, boxHeight, { tl: 3, tr: 0, bl: 3, br: 0 }, mainColor);\n\n    // Draw event text\n    thisContext.font = `400 ${14}px ${fontFamily}`;\n    thisContext.textBaseline = 'top';\n    thisContext.fillStyle = mainColor;\n    const text = thisCalendarEvent.dateString;\n    const textMeasurement = thisContext.measureText(text);\n    const textWidth = textMeasurement.width;\n    const textHeight = textMeasurement.actualBoundingBoxDescent;\n    thisContext.fillText(text, boxX + 8, boxY + (boxHeight - textHeight) / 2, textWidth);\n  }\n\n  function updateDisplayed(thisCalendarEventGroupElement: HTMLElement, currentDay: number, index: number): void {\n    // Set the displayed attribute based on whether it is the current day.\n    const isDisplayed = currentDay === index;\n    thisCalendarEventGroupElement.setAttribute('displayed', booleanToString(isDisplayed));\n  }\n\n  // Get the canvas and its 2D context.\n  const thisCalendarEventGroupCanvas = elementQuerySelector(thisCalendarEventGroupElement, '.css_route_details_calendar_event_group_canvas') as HTMLCanvasElement;\n  const thisCalendarEventGroupCanvasContext = thisCalendarEventGroupCanvas.getContext('2d');\n\n  // Update the displayed attribute\n  updateDisplayed(thisCalendarEventGroupElement, currentDay, index);\n\n  // Always resize the canvas to ensure proper dimensions.\n  resizeRouteDetailsCalendarCanvas(thisCalendarEventGroupCanvas);\n\n  const isDisplayed = currentDay === index;\n  if (isDisplayed) {\n    // Clear the canvas and redraw the content when displayed.\n    thisCalendarEventGroupCanvasContext.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    // Draw the gridlines.\n    for (let hours = 0; hours < 24; hours++) {\n      drawGridline(thisCalendarEventGroupCanvasContext, hours, gridColor);\n    }\n\n    // Draw all events for this group.\n    for (const thisCalendarEvent of thisCalendarEventGroup) {\n      drawEvent(thisCalendarEventGroupCanvasContext, thisCalendarEvent, mainColor, mainColorR, mainColorG, mainColorB, mainColorA);\n    }\n  } else {\n    // When not displayed, clear the canvas.\n    thisCalendarEventGroupCanvasContext.clearRect(0, 0, canvasWidth, canvasHeight);\n  }\n}\n\nexport function updateCalendarGroup(calendar: Calendar, skeletonScreen: boolean, animation: boolean): void {\n  // The default day to display.\n  const currentDay = new Date().getDay();\n\n  // Retrieve the CSS variable values just once\n  const mainColorR = getCSSVariableValue('--b-cssvar-main-color-r');\n  const mainColorG = getCSSVariableValue('--b-cssvar-main-color-g');\n  const mainColorB = getCSSVariableValue('--b-cssvar-main-color-b');\n  const mainColorA = getCSSVariableValue('--b-cssvar-main-color-opacity-e');\n  const mainColor = getCSSVariableValue('--b-cssvar-main-color');\n  const gridColor = getCSSVariableValue('--b-cssvar-ededf2');\n\n  const eventGroups = calendar.calendarDays;\n  const eventGroupQuantity = calendar.calendarDayQuantity;\n  const calendarEventGroups = calendar.calendarEventGroups;\n  const eventQuantity = calendar.calendarEventQuantity;\n\n  const currentEventGroupSeatQuantity = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group').length;\n  if (eventGroupQuantity !== currentEventGroupSeatQuantity) {\n    const capacity = currentEventGroupSeatQuantity - eventGroupQuantity;\n    if (capacity < 0) {\n      // Add missing day and event group elements.\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const newDayElement = generateElementOfDay();\n        CalendarDaysElement.appendChild(newDayElement.element);\n        const newEventGroupElement = generateElementOfEventGroup();\n        CalendarEventGroupsElement.appendChild(newEventGroupElement.element);\n      }\n    } else {\n      // Remove extra elements.\n      const CalendarDayElements = elementQuerySelectorAll(CalendarDaysElement, '.css_route_details_calendar_day');\n      const CalendarEventGroupElements = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group');\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const eventGroupIndex = currentEventGroupSeatQuantity - 1 - o;\n        CalendarDayElements[eventGroupIndex].remove();\n        CalendarEventGroupElements[eventGroupIndex].remove();\n      }\n    }\n  }\n\n  // Update each day and its corresponding event group.\n  const CalendarDayElements = elementQuerySelectorAll(CalendarDaysElement, '.css_route_details_calendar_day');\n  const CalendarEventGroupElements = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group');\n  for (let i = 0; i < eventGroupQuantity; i++) {\n    const eventGroupKey = `d_${i}`;\n    const thisDay = eventGroups[eventGroupKey];\n    const thisEventGroup = calendarEventGroups[eventGroupKey];\n\n    const thisDayElement = CalendarDayElements[i];\n    const thisEventGroupElement = CalendarEventGroupElements[i];\n\n    updateDay(thisDayElement, thisDay, currentDay, skeletonScreen, animation, i);\n    updateEventGroup(thisEventGroupElement, thisEventGroup, currentDay, mainColor, mainColorR, mainColorG, mainColorB, mainColorA, gridColor, i);\n  }\n\n  previousCalendar = calendar;\n  previousAnimation = animation;\n  previousSkeletonScreen = skeletonScreen;\n}\n\nexport function switchCalendarDay(day: number): void {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const calendarDayElements = elementQuerySelectorAll(CalendarDaysElement, '.css_route_details_calendar_day');\n  const CalendarEventGroupElements = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group');\n  for (let i = 0; i < 7; i++) {\n    const thisCalendarDayElement = calendarDayElements[i];\n    // const thisCalendarDayElementDay = parseInt(thisCalendarDayElement.getAttribute('day'));\n    const thisEventGroupElement = CalendarEventGroupElements[i];\n    // if (thisCalendarDayElementDay === day) {\n    /*\n      thisCalendarDayElement.setAttribute('highlighted', 'true');\n      thisEventGroupElement.setAttribute('displayed', 'true');\n      */\n    const eventGroupKey = `d_${i}`;\n    const calendarEventGroup = previousCalendar?.calendarEventGroups[eventGroupKey];\n    const calendarDay = previousCalendar?.calendarDays[eventGroupKey];\n    if (calendarEventGroup && calendarDay) {\n      // Retrieve the CSS variable values just once\n      const mainColorR = getCSSVariableValue('--b-cssvar-main-color-r');\n      const mainColorG = getCSSVariableValue('--b-cssvar-main-color-g');\n      const mainColorB = getCSSVariableValue('--b-cssvar-main-color-b');\n      const mainColorA = getCSSVariableValue('--b-cssvar-main-color-opacity-e');\n      const mainColor = getCSSVariableValue('--b-cssvar-main-color');\n      const gridColor = getCSSVariableValue('--b-cssvar-ededf2');\n\n      // Reuse the drawing logic from updateEventGroup and updateDay for the visible event group.\n      updateDay(thisCalendarDayElement, calendarDay, day, false, playing_animation, i);\n      updateEventGroup(thisEventGroupElement, calendarEventGroup, day, mainColor, mainColorR, mainColorG, mainColorB, mainColorA, gridColor, i);\n    }\n    /*} else {\n      thisCalendarDayElement.setAttribute('highlighted', 'false');\n      thisEventGroupElement.setAttribute('displayed', 'false');\n\n      // Clear the canvas for non-displayed elements.\n      const canvas = elementQuerySelector(thisEventGroupElement, '.css_route_details_calendar_event_group_canvas') as HTMLCanvasElement;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n    }*/\n  }\n}\n","import { GeneratedElement } from '../../index';\nimport { booleanToString, compareThings } from '../../../tools/index';\nimport { getIconHTML } from '../../icons/index';\nimport { elementQuerySelector, elementQuerySelectorAll } from '../../../tools/query-selector';\nimport { getSettingOptionValue } from '../../../data/settings/index';\n\nlet previousProperties = [];\nlet previousAnimation: boolean = true;\nlet previousSkeletonScreen: boolean = false;\n\nfunction generateElementOfProperty(): GeneratedElement {\n  const propertyElement = document.createElement('div');\n  propertyElement.classList.add('css_route_details_property');\n\n  const iconElement = document.createElement('div');\n  iconElement.classList.add('css_route_details_property_icon');\n  propertyElement.appendChild(iconElement);\n\n  const valueElement = document.createElement('div');\n  valueElement.classList.add('css_route_details_property_value');\n  propertyElement.appendChild(valueElement);\n\n  return {\n    element: propertyElement,\n    id: ''\n  };\n}\n\nexport function setUppropertiesGroupSkeletonScreen(Field: HTMLElement): void {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const defaultPropertyQuantity = 5;\n  const properties = [];\n  for (let i = 0; i < defaultPropertyQuantity; i++) {\n    properties.push({\n      key: i,\n      icon: 'none',\n      value: ''\n    });\n  }\n  updatePropertiesField(Field, properties, true, playing_animation);\n}\n\nexport function updatePropertiesField(Field: HTMLElement, properties: Array, skeletonScreen: boolean, animation: boolean): void {\n  function updateProperty(thisElement: HTMLElement, thisProperty: object, previousProperty: object): void {\n    function updateIcon(thisElement: HTMLElement, thisProperty: object): void {\n      elementQuerySelector(thisElement, '.css_route_details_property_icon').innerHTML = getIconHTML(thisProperty.icon);\n    }\n\n    function updateValue(thisElement: HTMLElement, thisProperty: object): void {\n      elementQuerySelector(thisElement, '.css_route_details_property_value').innerText = thisProperty.value;\n    }\n\n    function updateAnimation(thisElement: HTMLElement, animation: boolean): void {\n      thisElement.setAttribute('animation', booleanToString(animation));\n    }\n\n    function updateSkeletonScreen(thisElement: HTMLElement, skeletonScreen: boolean): void {\n      thisElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    }\n\n    if (previousProperty === null) {\n      updateIcon(thisElement, thisProperty);\n      updateValue(thisElement, thisProperty);\n      updateAnimation(thisElement, animation);\n      updateSkeletonScreen(thisElement, skeletonScreen);\n    } else {\n      if (!compareThings(previousProperty, thisProperty)) {\n        updateIcon(thisElement, thisProperty);\n      }\n      if (!compareThings(previousProperty, thisProperty)) {\n        updateValue(thisElement, thisProperty);\n      }\n      if (previousAnimation !== animation) {\n        updateAnimation(thisElement, animation);\n      }\n      if (previousSkeletonScreen !== skeletonScreen) {\n        updateSkeletonScreen(thisElement, skeletonScreen);\n      }\n    }\n  }\n\n  var propertyQuantity = properties.length;\n\n  Field.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n\n  const currentPropertySeatQuantity = elementQuerySelectorAll(Field, `.css_route_details_group_body .css_route_details_property`).length;\n  if (propertyQuantity !== currentPropertySeatQuantity) {\n    const capacity = currentPropertySeatQuantity - propertyQuantity;\n    if (capacity < 0) {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        // const propertyIndex = currentPropertySeatQuantity + o;\n        const newPropertyElement = generateElementOfProperty();\n        elementQuerySelector(Field, '.css_route_details_group_body').appendChild(newPropertyElement.element);\n      }\n    } else {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const propertyIndex = currentPropertySeatQuantity - 1 - o;\n        elementQuerySelectorAll(Field, `.css_route_details_group_body .css_route_details_property`)[propertyIndex].remove();\n      }\n    }\n  }\n\n  for (let i = 0; i < propertyQuantity; i++) {\n    const thisPropertyElement = elementQuerySelectorAll(Field, `.css_route_details_group_body .css_route_details_property`)[i];\n    const thisProperty = properties[i];\n    if (previousProperties.length === 0) {\n      updateProperty(thisPropertyElement, thisProperty, null);\n    } else {\n      updateProperty(thisPropertyElement, thisProperty, previousProperties[i]);\n    }\n  }\n\n  previousProperties = properties;\n  previousAnimation = animation;\n  previousSkeletonScreen = skeletonScreen;\n}\n","import { isFolderContentSaved } from '../../../data/folder/index';\nimport { integrateRouteDetails } from '../../../data/route/details';\nimport { getSettingOptionValue } from '../../../data/settings/index';\nimport { booleanToString, generateIdentifier } from '../../../tools/index';\nimport { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../../tools/query-selector';\nimport { pushPageHistory, revokePageHistory } from '../../index';\nimport { openSaveToFolder } from '../../save-to-folder/index';\nimport { shareRoutePermalink, showRoutePermalinkQRCode } from './actions';\nimport { setUpCalendarGroupSkeletonScreen, updateCalendarGroup } from './calendar';\nimport { setUppropertiesGroupSkeletonScreen, updatePropertiesField } from './properties';\n\nexport const RouteDetailsField = documentQuerySelector('.css_route_details_field');\nexport const RouteDetailsBodyElement = elementQuerySelector(RouteDetailsField, '.css_route_details_body');\nexport const RouteDetailsGroupsElement = elementQuerySelector(RouteDetailsBodyElement, '.css_route_details_groups');\n\nexport const CalendarGroupElement = elementQuerySelector(RouteDetailsGroupsElement, '.css_route_details_group[group=\"calendar\"]');\nexport const CalendarGroupBodyElement = elementQuerySelector(CalendarGroupElement, '.css_route_details_group_body');\nexport const CalendarDaysElement = elementQuerySelector(CalendarGroupBodyElement, '.css_route_details_calendar_days');\nexport const CalendarEventGroupsElement = elementQuerySelector(CalendarGroupBodyElement, '.css_route_details_calendar_event_groups');\n\nexport const ActionsGroupElememt = elementQuerySelector(RouteDetailsField, '.css_route_details_body .css_route_details_groups .css_route_details_group[group=\"actions\"]');\nexport const svaeToFolderActionButtonElement = elementQuerySelector(ActionsGroupElememt, '.css_route_details_group_body .css_route_details_action_button[action=\"save-to-folder\"]');\nexport const getPermalinkActionButton = elementQuerySelector(ActionsGroupElememt, '.css_route_details_group_body .css_route_details_action_button[action=\"get-permalink\"]');\nexport const showPermalinkQRCodeActionButton = elementQuerySelector(ActionsGroupElememt, '.css_route_details_group_body .css_route_details_action_button[action=\"show-permalink-qrcode\"]');\n\nexport const PropertiesGroupElement = elementQuerySelector(RouteDetailsField, '.css_route_details_body .css_route_details_groups .css_route_details_group[group=\"properties\"]');\n\nasync function initializeRouteDetailsField(RouteID: number, PathAttributeId: Array<number>) {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const existence = await isFolderContentSaved('route', RouteID);\n  svaeToFolderActionButtonElement.setAttribute('animation', booleanToString(playing_animation));\n  svaeToFolderActionButtonElement.setAttribute('highlighted', booleanToString(existence));\n  svaeToFolderActionButtonElement.onclick = function () {\n    openSaveToFolder('route', [RouteID]);\n  };\n  getPermalinkActionButton.setAttribute('animation', booleanToString(playing_animation));\n  getPermalinkActionButton.onclick = function () {\n    shareRoutePermalink(RouteID);\n  };\n  showPermalinkQRCodeActionButton.setAttribute('animation', booleanToString(playing_animation));\n  showPermalinkQRCodeActionButton.onclick = function () {\n    showRoutePermalinkQRCode(RouteID);\n  };\n  setUppropertiesGroupSkeletonScreen(PropertiesGroupElement);\n  setUpCalendarGroupSkeletonScreen();\n  const requestID = generateIdentifier();\n  const integration = await integrateRouteDetails(RouteID, PathAttributeId, requestID);\n  updatePropertiesField(PropertiesGroupElement, integration.properties, false, playing_animation);\n  updateCalendarGroup(integration.calendar, false, playing_animation);\n}\n\nexport function openRouteDetails(RouteID: number, PathAttributeId: Array<number>): void {\n  pushPageHistory('RouteDetails');\n  RouteDetailsField.setAttribute('displayed', 'true');\n  initializeRouteDetailsField(RouteID, PathAttributeId);\n}\n\nexport function closeRouteDetails(): void {\n  revokePageHistory('RouteDetails');\n  RouteDetailsField.setAttribute('displayed', 'false');\n  const CalendarEventGroupElements = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group');\n  for (const CalendarEventGroupElement of CalendarEventGroupElements) {\n    CalendarEventGroupElement.remove();\n  }\n  const CalendarDayElements = elementQuerySelectorAll(CalendarDaysElement, '.css_route_details_calendar_day');\n  for (const CalendarDayElement of CalendarDayElements) {\n    CalendarDayElement.remove();\n  }\n}\n","import { registerNotificationClient } from '../../data/notification/apis/registerNotificationClient/index';\nimport { getNotificationProvider, setNotificationProvider } from '../../data/notification/index';\nimport { isValidURL } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { closePreviousPage, openPreviousPage, pushPageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst RegisterNotificationField = documentQuerySelector('.css_register_notification_field');\nconst RegisterNotificationBodyElement = elementQuerySelector(RegisterNotificationField, '.css_register_notification_body');\nconst RegisterNotificationGroupsElement = elementQuerySelector(RegisterNotificationBodyElement, '.css_register_notification_groups');\n\nconst ProviderInputElement = elementQuerySelector(RegisterNotificationGroupsElement, '.css_register_notification_group[group=\"provider\"] .css_register_notification_group_body input');\nconst RgistrationKeyInputElement = elementQuerySelector(RegisterNotificationGroupsElement, '.css_register_notification_group[group=\"registration-key\"] .css_register_notification_group_body input');\n\nfunction initializeRegisterNotificationField() {\n  ProviderInputElement.value = getNotificationProvider();\n  RgistrationKeyInputElement.value = '';\n}\n\nexport function openRegisterNotification(): void {\n  pushPageHistory('RegisterNotification');\n  RegisterNotificationField.setAttribute('displayed', 'true');\n  initializeRegisterNotificationField();\n  closePreviousPage();\n}\n\nexport function closeRegisterNotification(): void {\n  // revokePageHistory('RegisterNotification');\n  RegisterNotificationField.setAttribute('displayed', 'false');\n  openPreviousPage();\n}\n\nexport async function saveFormulatedRegisterNotification() {\n  promptMessage('處理中', 'manufacturing');\n  const provider = ProviderInputElement.value;\n  const registrationKey = RgistrationKeyInputElement.value;\n  if (!isValidURL(provider)) {\n    promptMessage('無效的提供者', 'error');\n    return;\n  }\n  // register\n  setNotificationProvider(provider);\n  const registering = await registerNotificationClient(registrationKey);\n  if (registering) {\n    promptMessage('註冊成功', 'check_circle');\n    return;\n  } else {\n    promptMessage('註冊失敗', 'error');\n    return;\n  }\n}\n"],"names":["_shareRoutePermalink","_asyncToGenerator","RouteID","thisRoute","searchRouteByRouteID","link","getPermalink","id","name","n","navigator","share","title","url","then","promptMessage","e","apply","arguments","_showRoutePermalinkQRCode","openQRCode","scaleLimit","Math","floor","fontFamily","canvasSize","querySize","canvasWidth","width","canvasHeight","height","canvasScale","min","window","devicePixelRatio","previousCalendar","generateElementOfEventGroup","eventGroupElement","document","createElement","classList","add","canvasElement","appendChild","element","updateDay","thisDayElement","thisDay","currentDay","skeletonScreen","animation","index","innerText","setAttribute","toString","onclick","day","playing_animation","getSettingOptionValue","calendarDayElements","elementQuerySelectorAll","CalendarDaysElement","CalendarEventGroupElements","CalendarEventGroupsElement","i","_previousCalendar","_previousCalendar2","thisCalendarDayElement","thisEventGroupElement","eventGroupKey","calendarEventGroup","calendarEventGroups","calendarDay","calendarDays","mainColorR","getCSSVariableValue","mainColorG","mainColorB","mainColorA","mainColor","gridColor","updateEventGroup","switchCalendarDay","booleanToString","thisCalendarEventGroupElement","thisCalendarEventGroup","drawGridline","thisContext","hours","boxY","fillStyle","fillRect","boxX","font","textBaseline","labelText","String","padStart","labelMeasurement","measureText","labelWidth","labelHeight","actualBoundingBoxDescent","fillText","drawEvent","thisCalendarEvent","thisDayStart","Date","setDate","setMonth","setFullYear","date","getFullYear","getMonth","getDate","setHours","setMinutes","setSeconds","setMilliseconds","getTime","boxWidth","boxHeight","duration","drawRoundedRect","tl","tr","bl","br","text","dateString","textMeasurement","textWidth","textHeight","thisCalendarEventGroupCanvas","elementQuerySelector","thisCalendarEventGroupCanvasContext","getContext","isDisplayed","updateDisplayed","canvas","context","setTransform","scale","resizeRouteDetailsCalendarCanvas","clearRect","_step","_iterator","_createForOfIteratorHelper","s","done","value","err","f","updateCalendarGroup","calendar","getDay","eventGroups","eventGroupQuantity","calendarDayQuantity","currentEventGroupSeatQuantity","calendarEventQuantity","length","capacity","o","abs","newDayElement","newEventGroupElement","CalendarDayElements","eventGroupIndex","remove","thisEventGroup","previousProperties","previousAnimation","previousSkeletonScreen","generateElementOfProperty","propertyElement","iconElement","valueElement","updatePropertiesField","Field","properties","updateProperty","thisElement","thisProperty","previousProperty","updateIcon","innerHTML","getIconHTML","icon","updateValue","updateAnimation","updateSkeletonScreen","compareThings","propertyQuantity","currentPropertySeatQuantity","newPropertyElement","propertyIndex","thisPropertyElement","RouteDetailsField","documentQuerySelector","RouteDetailsBodyElement","RouteDetailsGroupsElement","CalendarGroupElement","CalendarGroupBodyElement","ActionsGroupElememt","svaeToFolderActionButtonElement","getPermalinkActionButton","showPermalinkQRCodeActionButton","PropertiesGroupElement","_initializeRouteDetailsField","PathAttributeId","existence","isFolderContentSaved","openSaveToFolder","_x","shareRoutePermalink","_x2","showRoutePermalinkQRCode","push","key","setUppropertiesGroupSkeletonScreen","defaultEventQuantity","d_0","d_1","d_2","d_3","d_4","d_5","d_6","code","j","setUpCalendarGroupSkeletonScreen","requestID","generateIdentifier","integration","integrateRouteDetails","openRouteDetails","pushPageHistory","initializeRouteDetailsField","closeRouteDetails","revokePageHistory","_step2","_iterator2","RegisterNotificationField","RegisterNotificationBodyElement","RegisterNotificationGroupsElement","ProviderInputElement","RgistrationKeyInputElement","openRegisterNotification","getNotificationProvider","closePreviousPage","closeRegisterNotification","openPreviousPage","saveFormulatedRegisterNotification","_saveFormulatedRegisterNotification","provider","registrationKey","isValidURL","setNotificationProvider","registerNotificationClient"],"sourceRoot":""}