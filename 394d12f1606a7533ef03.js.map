{"version":3,"file":"394d12f1606a7533ef03.js","mappings":"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","sources":["webpack://bus/./src/data/location/index.ts","webpack://bus/./src/data/import/index.ts"],"sourcesContent":["import { deleteDataReceivingProgress, deleteDataUpdateTime, getDataUpdateTime, setDataReceivingProgress } from '../apis/loader';\nimport { EstimateTime, EstimateTimeItem, getEstimateTime } from '../apis/getEstimateTime/index';\nimport { getLocation } from '../apis/getLocation/index';\nimport { getBusEvent } from '../apis/getBusEvent/index';\nimport { getRoute } from '../apis/getRoute/index';\nimport { getStop } from '../apis/getStop/index';\nimport { getSettingOptionValue } from '../settings/index';\nimport { addressToString, generateLabelFromAddresses } from '../../tools/address';\nimport { generateDirectionLabels, generateLetterLabels } from '../../tools/labels';\nimport { parseEstimateTime, FormattedBus, EstimateTimeStatus, batchFindBusesForLocation, formatBus } from '../apis/index';\nimport { MaterialSymbols } from '../../interface/icons/material-symbols-type';\nimport { BusArrivalTime, getBusArrivalTimes } from '../analytics/bus-arrival-time/index';\nimport { getBusData } from '../apis/getBusData/index';\n\ninterface BatchFoundEstimateTimeItem extends EstimateTimeItem {}\n\ntype BatchFoundEstimateTime = {\n  [key: string]: BatchFoundEstimateTimeItem;\n};\n\nfunction batchFindEstimateTime(EstimateTime: EstimateTime, StopIDList: Array<number>): BatchFoundEstimateTime {\n  let result = {};\n  for (const item of EstimateTime) {\n    if (StopIDList.indexOf(item.StopID) > -1) {\n      const thisStopKey: string = `s_${item.StopID}`;\n      result[thisStopKey] = item;\n    }\n  }\n  return result;\n}\n\ntype BatchFoundEstimateTimeRanking = {\n  [key: string]: IntegratedLocationItemRanking;\n};\n\nfunction rankBatchFoundEstimateTime(batchFoundEstimateTime: BatchFoundEstimateTime, StopIDList: Array<number>): BatchFoundEstimateTimeRanking {\n  // StopIDList act as a secondary filter\n  let result: BatchFoundEstimateTimeRanking = {};\n  let rankingArray: Array<[number, number]> = []; // StopID, EstimateTime\n  for (const thisStopKey in batchFoundEstimateTime) {\n    const thisBatchFoundEstimateTimeItem = batchFoundEstimateTime[thisStopKey];\n    const thisStopID = thisBatchFoundEstimateTimeItem.StopID;\n    const thisEstimateTime = parseInt(thisBatchFoundEstimateTimeItem.EstimateTime);\n    if (thisEstimateTime >= 0 && StopIDList.indexOf(thisStopID) > -1) {\n      rankingArray.push([thisStopID, thisEstimateTime]);\n    }\n  }\n  const rankingArrayLength = rankingArray.length;\n  rankingArray.sort(function (a, b) {\n    return a[1] - b[1];\n  });\n  let index = 1;\n  for (const rankingItem of rankingArray) {\n    // Classify into 4 groups and give a code\n    const rankingRatio = index / rankingArrayLength;\n    const rankingCode = (rankingRatio - (rankingRatio % 0.25)) / 0.25;\n    const thisStopID = rankingItem[0];\n    const thisStopKey = `s_${thisStopID}`;\n    result[thisStopKey] = {\n      number: index,\n      text: index.toString(),\n      code: rankingCode\n    };\n    index += 1;\n  }\n  return result;\n}\n\nexport interface LocationGroupProperty {\n  key: string;\n  icon: MaterialSymbols;\n  value: string;\n}\n\nexport interface LocationGroup {\n  name: string;\n  properties: Array<LocationGroupProperty>;\n}\n\nexport interface IntegratedLocationItemRanking {\n  number: number;\n  text: '--' | string;\n  code: -1 | 0 | 1 | 2 | 3 | 4; // -1: not applicable, 0: 0-25%, 1: 25-50%, 2: 50-75%, 3: 75-100%, 4: 100%\n}\n\nexport interface IntegratedLocationItem {\n  route_name: string;\n  route_direction: string;\n  routeId: number;\n  stopId: number;\n  status: EstimateTimeStatus;\n  ranking: IntegratedLocationItemRanking;\n  buses: Array<FormattedBus>;\n  busArrivalTimes: Array<BusArrivalTime>;\n}\n\nexport interface IntegratedLocation {\n  groupedItems: {\n    [key: string]: Array<IntegratedLocationItem>;\n  };\n  groups: {\n    [key: string]: LocationGroup;\n  };\n  groupQuantity: number;\n  itemQuantity: {\n    [key: string]: number;\n  };\n  LocationName: string;\n  dataUpdateTime: number;\n}\n\nexport async function integrateLocation(hash: string, requestID: string): Promise<IntegratedLocation> {\n  setDataReceivingProgress(requestID, 'getLocation_0', 0, false);\n  setDataReceivingProgress(requestID, 'getLocation_1', 0, false);\n  setDataReceivingProgress(requestID, 'getRoute_0', 0, false);\n  setDataReceivingProgress(requestID, 'getRoute_1', 0, false);\n  setDataReceivingProgress(requestID, 'getStop_0', 0, false);\n  setDataReceivingProgress(requestID, 'getStop_1', 0, false);\n  setDataReceivingProgress(requestID, 'getEstimateTime_0', 0, false);\n  setDataReceivingProgress(requestID, 'getEstimateTime_1', 0, false);\n  setDataReceivingProgress(requestID, 'getBusEvent_0', 0, false);\n  setDataReceivingProgress(requestID, 'getBusEvent_1', 0, false);\n  const EstimateTime = await getEstimateTime(requestID);\n  const Location = await getLocation(requestID, true);\n  const Route = await getRoute(requestID, true);\n  const Stop = await getStop(requestID);\n  const BusEvent = await getBusEvent(requestID);\n  const BusData = await getBusData(requestID);\n  const BusArrivalTimes = await getBusArrivalTimes(300, 150); // TODO: dynamically calculate the size\n\n  const time_formatting_mode = getSettingOptionValue('time_formatting_mode');\n  const location_labels = getSettingOptionValue('location_labels');\n\n  let groupedItems = {} as IntegratedLocation['groupedItems'];\n  let itemQuantity = {} as IntegratedLocation['itemQuantity'];\n  let groups = {} as IntegratedLocation['groups'];\n\n  const thisLocationKey = `ml_${hash}`;\n  const thisLocation = Location[thisLocationKey];\n  const thisLocationName = thisLocation.n;\n  const stopLocationIds = thisLocation.id;\n  const setsOfVectors = thisLocation.v;\n\n  let StopIDs = [];\n  let RouteIDs = [];\n  const stopLocationQuantity = stopLocationIds.length;\n\n  for (let i = 0; i < stopLocationQuantity; i++) {\n    StopIDs = StopIDs.concat(thisLocation.s[i]);\n    RouteIDs = RouteIDs.concat(thisLocation.r[i]);\n  }\n\n  const batchFoundEstimateTime = batchFindEstimateTime(EstimateTime, StopIDs);\n  const batchFoundBuses = batchFindBusesForLocation(BusEvent, BusData, Route, StopIDs);\n\n  let labels = [];\n  switch (location_labels) {\n    case 'address':\n      labels = generateLabelFromAddresses(thisLocation.a);\n      break;\n    case 'letters':\n      labels = generateLetterLabels(stopLocationQuantity);\n      break;\n    case 'directions':\n      labels = generateDirectionLabels(setsOfVectors);\n      break;\n    default:\n      break;\n  }\n\n  for (let i = 0; i < stopLocationQuantity; i++) {\n    const groupKey = `g_${i}`;\n    groupedItems[groupKey] = [];\n    itemQuantity[groupKey] = 0;\n    groups[groupKey] = {\n      name: labels[i],\n      properties: [\n        {\n          key: 'address',\n          icon: 'personal_places',\n          value: addressToString(thisLocation.a[i])\n        },\n        {\n          key: 'exact_position',\n          icon: 'location_on',\n          value: `${thisLocation.la[i].toFixed(5)}, ${thisLocation.lo[i].toFixed(5)}`\n        }\n      ]\n    };\n\n    const thisGroupStops = thisLocation.s[i];\n    const stopQuantity = thisGroupStops.length;\n    const thisGroupRanking = rankBatchFoundEstimateTime(batchFoundEstimateTime, thisGroupStops);\n\n    for (let o = 0; o < stopQuantity; o++) {\n      let integratedItem = {} as IntegratedLocationItem;\n      // Collect data from 'Stop'\n      const thisStopID = thisLocation.s[i][o];\n      const thisStopKey = `s_${thisStopID}`;\n      let thisStop: SimplifiedStopItem = {};\n      if (Stop.hasOwnProperty(thisStopKey)) {\n        thisStop = Stop[thisStopKey];\n      } else {\n        continue;\n      }\n      integratedItem.stopId = thisStopID;\n\n      // Collect data from 'thisGroupRanking'\n      let thisItemRanking = { number: 0, text: '--', code: -1 } as IntegratedLocationItemRanking;\n      if (thisGroupRanking.hasOwnProperty(thisStopKey)) {\n        thisItemRanking = thisGroupRanking[thisStopKey];\n      }\n      integratedItem.ranking = thisItemRanking;\n\n      // Collect data from 'Route'\n      const thisRouteID: number = thisLocation.r[i][o];\n      const thisRouteKey = `r_${thisRouteID}`;\n      let thisRoute: SimplifiedRouteItem = {};\n      if (Route.hasOwnProperty(thisRouteKey)) {\n        thisRoute = Route[thisRouteKey];\n      } else {\n        continue;\n      }\n      integratedItem.route_name = thisRoute.n;\n      integratedItem.route_direction = `往${[thisRoute.des, thisRoute.dep, ''][parseInt(thisStop.goBack)]}`;\n      integratedItem.routeId = thisRouteID;\n\n      // Collect data from 'batchFoundEstimateTime'\n      let thisEstimateTime = {} as EstimateTimeItem;\n      if (batchFoundEstimateTime.hasOwnProperty(thisStopKey)) {\n        thisEstimateTime = batchFoundEstimateTime[thisStopKey];\n      } else {\n        continue;\n      }\n      const parsedEstimateTime = parseEstimateTime(thisEstimateTime.EstimateTime, time_formatting_mode);\n      integratedItem.status = parsedEstimateTime;\n\n      // Collect data from 'batchFoundBuses'\n      let buses = [];\n      if (batchFoundBuses.hasOwnProperty(thisStopKey)) {\n        buses = batchFoundBuses[thisStopKey].map((e) => formatBus(e));\n      }\n      integratedItem.buses = buses;\n\n      // Collect data from 'BusArrivalTimes'\n      let thisBusArrivalTimes = [];\n      if (BusArrivalTimes.hasOwnProperty(thisStopKey)) {\n        thisBusArrivalTimes = BusArrivalTimes[thisStopKey];\n      }\n      integratedItem.busArrivalTimes = thisBusArrivalTimes;\n\n      groupedItems[groupKey].push(integratedItem);\n      itemQuantity[groupKey] += 1;\n    }\n  }\n\n  for (const key in groupedItems) {\n    groupedItems[key].sort(function (a, b) {\n      return a.routeId - b.routeId;\n    });\n    /*\n      .map((item: IntegratedLocationItem) => {\n        // accessing ranking[key] inside map callback will cause constant violations any way\n        return {\n          route_name: item.route_name,\n          route_direction: item.route_direction,\n          routeId: item.routeId,\n          stopId: item.stopId,\n          status: item.status,\n          rank: {\n            number: thisRankingIndex + 1,\n            code: 0\n          },\n          buses: item.buses,\n          busArrivalTimes: item.busArrivalTimes\n        };\n      })*/\n  }\n  const result: IntegratedLocation = {\n    groupedItems: groupedItems,\n    groups: groups,\n    groupQuantity: stopLocationQuantity,\n    itemQuantity: itemQuantity,\n    LocationName: thisLocationName,\n    dataUpdateTime: getDataUpdateTime(requestID)\n  };\n  deleteDataReceivingProgress(requestID);\n  deleteDataUpdateTime(requestID);\n  //await recordEstimateTimeForUpdateRate(EstimateTime);\n  return result;\n}\n","import { ExportedData } from '../export/index';\nimport { createFolder, FolderWithContentArray, saveToFolder, updateFolder } from '../folder/index';\nimport { createPersonalSchedule, getPersonalSchedule, PersonalScheduleArray, updatePersonalSchedule } from '../personal-schedule/index';\nimport { getRecentView, logRecentView, RecentViewArray } from '../recent-views/index';\nimport { changeSettingOption, getSetting, SettingsWithOptionsArray } from '../settings/index';\nimport { lfGetItem } from '../storage/index';\n\nexport async function importFolders(data: FolderWithContentArray): Promise<boolean> {\n  for (const FolderWithContent of data) {\n    const folder = FolderWithContent;\n    var update = false;\n    var creation = false;\n    const folderKey: string = `f_${folder.id}`;\n    const existingFolder: string = await lfGetItem(11, folderKey);\n    if (existingFolder) {\n      update = await updateFolder(folder.id, folder.name, folder.icon);\n    } else {\n      creation = await createFolder(folder.name, folder.icon);\n    }\n    if (update) {\n      for (const content of FolderWithContent.content) {\n        await saveToFolder(FolderWithContent.id, content);\n      }\n    }\n    if (creation) {\n      for (const content of FolderWithContent.content) {\n        await saveToFolder(creation, content);\n      }\n    }\n  }\n}\n\nexport async function importSettings(data: SettingsWithOptionsArray): Promise<boolean> {\n  for (const SettingWithOption of data) {\n    const existingSetting = getSetting(SettingWithOption.key);\n    if (existingSetting) {\n      if (existingSetting.type === 'select') {\n        await changeSettingOption(SettingWithOption.key, SettingWithOption.option);\n      }\n    }\n  }\n  return true;\n}\n\nexport async function importPersonalSchedules(data: PersonalScheduleArray): Promise<boolean> {\n  for (const PersonalSchedule of data) {\n    const existingPersonalSchedule = await getPersonalSchedule(PersonalSchedule.id);\n    if (existingPersonalSchedule) {\n      await updatePersonalSchedule(PersonalSchedule);\n    } else {\n      await createPersonalSchedule(PersonalSchedule.name, PersonalSchedule.period.start.hours, PersonalSchedule.period.start.minutes, PersonalSchedule.period.end.hours, PersonalSchedule.period.end.minutes, PersonalSchedule.days);\n    }\n  }\n  return true;\n}\n\nexport async function importRecentViews(data: RecentViewArray): Promise<boolean> {\n  for (const RecentView of data) {\n    switch (RecentView.type) {\n      case 'route':\n        const existingRecentViewRoute = await getRecentView('route', RecentView.id);\n        if (!existingRecentViewRoute) {\n          await logRecentView(RecentView.type, RecentView.id);\n        }\n        break;\n      case 'location':\n        const existingRecentViewLocation = await getRecentView('location', RecentView.hash);\n        if (!existingRecentViewLocation) {\n          await logRecentView(RecentView.type, RecentView.hash);\n        }\n        break;\n      case 'bus':\n        const existingRecentViewBus = await getRecentView('bus', RecentView.id);\n        if (!existingRecentViewBus) {\n          await logRecentView(RecentView.type, RecentView.id);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  return true;\n}\n\nexport async function importData(data: string): Promise<boolean> {\n  const parsedData: ExportedData = JSON.parse(data);\n  switch (parsedData.version) {\n    case 1:\n      await importFolders(parsedData.folders);\n      return true;\n      break;\n    case 2:\n      await importFolders(parsedData.folders);\n      await importSettings(parsedData.settings);\n      return true;\n      break;\n    case 3:\n      await importFolders(parsedData.folders);\n      await importSettings(parsedData.settings);\n      await importPersonalSchedules(parsedData.personal_schedules);\n      return true;\n      break;\n    case 4:\n      await importFolders(parsedData.folders);\n      await importSettings(parsedData.settings);\n      await importPersonalSchedules(parsedData.personal_schedules);\n      await importRecentViews(parsedData.recent_views);\n      return true;\n      break;\n    default:\n      return false;\n      break;\n  }\n}\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_createForOfIteratorHelper","Array","isArray","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_n","F","batchFindEstimateTime","EstimateTime","StopIDList","_step","result","_iterator","item","indexOf","StopID","concat","err","rankBatchFoundEstimateTime","batchFoundEstimateTime","rankingArray","thisStopKey","thisBatchFoundEstimateTimeItem","thisStopID","thisEstimateTime","parseInt","rankingArrayLength","sort","b","index","_i","_rankingArray","rankingRatio","rankingCode","number","text","code","integrateLocation","_x","_x2","_integrateLocation","apply","arguments","_callee","hash","requestID","Location","Route","Stop","BusEvent","BusData","BusArrivalTimes","time_formatting_mode","location_labels","groupedItems","itemQuantity","groups","thisLocationKey","thisLocation","thisLocationName","stopLocationIds","setsOfVectors","StopIDs","RouteIDs","stopLocationQuantity","batchFoundBuses","labels","_i2","groupKey","thisGroupStops","stopQuantity","thisGroupRanking","integratedItem","thisStop","thisItemRanking","thisRouteID","thisRouteKey","thisRoute","parsedEstimateTime","buses","thisBusArrivalTimes","_key","_context","setDataReceivingProgress","getEstimateTime","getLocation","getRoute","getStop","getBusEvent","getBusData","getBusArrivalTimes","getSettingOptionValue","id","batchFindBusesForLocation","t0","generateLabelFromAddresses","generateLetterLabels","generateDirectionLabels","properties","key","icon","addressToString","la","toFixed","lo","stopId","ranking","route_name","route_direction","des","dep","goBack","routeId","parseEstimateTime","status","map","formatBus","busArrivalTimes","groupQuantity","LocationName","dataUpdateTime","getDataUpdateTime","deleteDataReceivingProgress","deleteDataUpdateTime","_next","_throw","_asyncToGenerator","importFolders","_importFolders","data","FolderWithContent","folder","update","creation","folderKey","_iterator2","_step2","content","_iterator3","_step3","_content","lfGetItem","updateFolder","createFolder","saveToFolder","t1","t2","importSettings","_importSettings","_callee2","_iterator4","_step4","SettingWithOption","existingSetting","_context2","getSetting","changeSettingOption","option","importPersonalSchedules","_x3","_importPersonalSchedules","_callee3","_iterator5","_step5","PersonalSchedule","_context3","getPersonalSchedule","updatePersonalSchedule","createPersonalSchedule","period","start","hours","minutes","end","days","importRecentViews","_x4","_importRecentViews","_callee4","_iterator6","_step6","RecentView","_context4","getRecentView","logRecentView","importData","_x5","_importData","_callee5","parsedData","_context5","JSON","parse","version","folders","settings","personal_schedules","recent_views"],"sourceRoot":""}