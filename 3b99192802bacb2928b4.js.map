{"version":3,"file":"3b99192802bacb2928b4.js","mappings":"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","sources":["webpack://bus/./src/data/apis/index.ts","webpack://bus/./src/data/apis/loader.ts"],"sourcesContent":["import { BusEvent, BusEventItem } from './getBusEvent/index';\nimport { BusData, BusDataItem } from './getBusData/index';\nimport { SimplifiedRoute } from './getRoute/index';\nimport { formatTime } from '../../tools/time';\n\nexport interface EstimateTimeStatus {\n  code: 0 | 0.5 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8; // 8: loading\n  text: string;\n  time: number;\n}\n\nexport function parseEstimateTime(EstimateTime: string, mode: number): EstimateTimeStatus {\n  if (typeof EstimateTime === 'string') {\n    const time = parseInt(EstimateTime);\n    if (time === -3) {\n      return { code: 6, text: '末班駛離', time };\n    }\n    if (time === -4) {\n      return { code: 5, text: '今日停駛', time };\n    }\n    if (time === -2) {\n      return { code: 4, text: '交通管制', time };\n    }\n    if (time === -1) {\n      return { code: 3, text: '未發車', time };\n    }\n    if (0 <= time && time <= 10) {\n      return { code: 2, text: '進站中', time };\n    }\n    if (10 < time && time <= 180) {\n      return { code: 1, text: formatTime(time, mode), time };\n    }\n    if (180 < time && time <= 250) {\n      return { code: 0.5, text: formatTime(time, mode), time };\n    }\n    if (250 < time) {\n      return { code: 0, text: formatTime(time, mode), time };\n    }\n  }\n  return { code: 7, text: '發生錯誤', time: -5 };\n}\n\nexport interface TimeMoment {\n  type: 'moment';\n  hours: number;\n  minutes: number;\n}\n\nexport interface TimeRange {\n  type: 'range';\n  min: number;\n  max: number;\n}\n\nexport function parseTimeCode(code: string, mode: number): TimeMoment | TimeRange {\n  if (mode === 0) {\n    var hours = 0;\n    var minutes = 0;\n    if (code.length === 4) {\n      hours = parseInt(code.substring(0, 2));\n      minutes = parseInt(code.substring(2, 4));\n    }\n    if (code.length === 2) {\n      minutes = parseInt(code);\n    }\n    return {\n      type: 'moment',\n      hours: hours,\n      minutes: minutes\n    };\n  } else {\n    if (mode === 1) {\n      var min = 0;\n      var max = 0;\n      if (code.length === 4) {\n        var number1 = parseInt(code.substring(0, 2));\n        var number2 = parseInt(code.substring(2, 4));\n        min = Math.min(number1, number2);\n        max = Math.max(number1, number2);\n      }\n      if (code.length === 2) {\n        var number = parseInt(code);\n        min = number;\n        max = number;\n      }\n      return {\n        type: 'range',\n        min: min,\n        max: max\n      };\n    }\n  }\n}\n\nexport interface BatchFoundBusPosition {\n  longitude: number;\n  latitude: number;\n}\n\nexport interface BatchFoundBus {\n  CarType: BusEventItem['CarType'];\n  BusStatus: BusEventItem['BusStatus'];\n  BusID: string;\n  CarOnStop: BusEventItem['CarOnStop'];\n  onThisRoute: boolean;\n  position: BatchFoundBusPosition;\n  RouteName: string;\n  RouteID: number;\n  index: number;\n}\n\nexport type BatchFoundBuses = { [key: string]: Array<BatchFoundBus> };\n\nexport function batchFindBusesForRoute(BusEvent: BusEvent, BusData: BusData, Route: SimplifiedRoute, RouteID: number, PathAttributeId: Array<number>): BatchFoundBuses {\n  let result = {} as BatchFoundBuses;\n  let BusDataObj: {\n    [key: string]: BusDataItem;\n  } = {};\n  for (const BusDataItem of BusData) {\n    var thisBusID = BusDataItem.BusID;\n    BusDataObj[thisBusID] = BusDataItem;\n  }\n\n  for (let BusEventItem of BusEvent) {\n    let processedItem = {} as BatchFoundBus;\n\n    // collect data from 'BusEvent'\n    processedItem.CarType = BusEventItem.CarType;\n    processedItem.BusStatus = BusEventItem.BusStatus;\n    processedItem.BusID = BusEventItem.BusID;\n    processedItem.CarOnStop = BusEventItem.CarOnStop;\n\n    // check whether this bus is on the route\n    const thisRouteID = parseInt(BusEventItem.RouteID);\n    const thisBusID = String(BusEventItem.BusID);\n    let isOnThisRoute: boolean = false;\n    let index: number = 0;\n    if (thisRouteID === RouteID || PathAttributeId.indexOf(thisRouteID) > -1 || thisRouteID === RouteID * 10) {\n      isOnThisRoute = true;\n      index = thisBusID.charCodeAt(0) * Math.pow(10, -5);\n    } else {\n      isOnThisRoute = false;\n      index = thisBusID.charCodeAt(0);\n    }\n    processedItem.onThisRoute = isOnThisRoute;\n    processedItem.index = index;\n\n    // collect data from 'BusData'\n    let thisBusData = {} as BusDataItem;\n    if (BusDataObj.hasOwnProperty(thisBusID)) {\n      thisBusData = BusDataObj[thisBusID];\n    } else {\n      continue;\n    }\n    processedItem.position = {\n      latitude: parseFloat(thisBusData.Latitude),\n      longitude: parseFloat(thisBusData.Longitude)\n    };\n\n    // search data from 'Route'\n    let searchedRoute = {};\n    let isRouteSearched = false;\n    for (const key in Route) {\n      const thisRouteItem = Route[key];\n      const pid = thisRouteItem.pid;\n      if (pid.indexOf(thisRouteID) > -1) {\n        searchedRoute = thisRouteItem;\n        isRouteSearched = true;\n        break;\n      }\n    }\n    processedItem.RouteName = isRouteSearched ? searchedRoute.n : '未知路線';\n    processedItem.RouteID = isRouteSearched ? searchedRoute.id : null;\n\n    const StopKey = `s_${BusEventItem.StopID}`;\n    if (!result.hasOwnProperty(StopKey)) {\n      result[StopKey] = [];\n    }\n    result[StopKey].push(processedItem);\n    // Handle multiple buses (of the same route) on a stop\n  }\n  /*\n  for (var key in result) {\n    result[key] = result[key].sort(function (a, b) {\n      return a.index - b.index;\n    });\n  }\n  */\n  return result;\n}\n\nexport function batchFindBusesForLocation(BusEvent: BusEvent, BusData: BusData, Route: SimplifiedRoute, StopIDList: Array<number>): BatchFoundBuses {\n  let result = {} as BatchFoundBuses;\n  let BusDataObj: {\n    [key: string]: BusDataItem;\n  } = {};\n  for (const BusDataItem of BusData) {\n    var thisBusID = BusDataItem.BusID;\n    BusDataObj[thisBusID] = BusDataItem;\n  }\n\n  for (let BusEventItem of BusEvent) {\n    let processedItem = {} as BatchFoundBus;\n\n    const thisStopID = parseInt(BusEventItem.StopID);\n    const thisRouteID = parseInt(BusEventItem.RouteID);\n    const thisBusID = String(BusEventItem.BusID);\n\n    // Check whether this bus is on one of the specified stops\n    if (StopIDList.indexOf(thisStopID) < 0) {\n      continue;\n    }\n\n    processedItem.index = thisBusID.charCodeAt(0);\n    processedItem.onThisRoute = true; // Every entry in Location is stop-route pair\n\n    // Collect data from 'BusEvent'\n    processedItem.CarType = BusEventItem.CarType;\n    processedItem.BusStatus = BusEventItem.BusStatus;\n    processedItem.BusID = BusEventItem.BusID;\n    processedItem.CarOnStop = BusEventItem.CarOnStop;\n\n    // Collect data from 'BusData'\n    let thisBusData = {} as BusDataItem;\n    if (BusDataObj.hasOwnProperty(thisBusID)) {\n      thisBusData = BusDataObj[thisBusID];\n    } else {\n      continue;\n    }\n    processedItem.position = {\n      latitude: parseFloat(thisBusData.Latitude),\n      longitude: parseFloat(thisBusData.Longitude)\n    };\n\n    // Search data from 'Route'\n    let searchedRoute = {};\n    let isRouteSearched = false;\n    for (const key in Route) {\n      const thisRouteItem = Route[key];\n      const pid = thisRouteItem.pid;\n      if (pid.indexOf(thisRouteID) > -1) {\n        searchedRoute = thisRouteItem;\n        isRouteSearched = true;\n        break;\n      }\n    }\n    processedItem.RouteName = isRouteSearched ? searchedRoute.n : '未知路線';\n    processedItem.RouteID = isRouteSearched ? searchedRoute.id : null;\n\n    const StopKey = `s_${thisStopID}`;\n    if (!result.hasOwnProperty(StopKey)) {\n      result[StopKey] = [];\n    }\n    result[StopKey].push(processedItem);\n  }\n  /*\n  for (var key in result) {\n    result[key] = result[key].sort(function (a, b) {\n      return a.index - b.index;\n    });\n  }\n  */\n  return result;\n}\n\ninterface FormattedBusStatus {\n  onStop: boolean;\n  situation: string;\n  text: string;\n}\n\ninterface FormattedBusPosition {\n  longitude: number;\n  latitude: number;\n}\n\nexport function parseCarType(CarType: '0' | '1' | '2' | '3'): '一般' | '低底盤' | '大復康巴士' | '狗狗友善專車' | '未知類型' {\n  let type = '';\n  switch (CarType) {\n    case '0':\n      type = '一般';\n      break;\n    case '1':\n      type = '低底盤';\n      break;\n    case '2':\n      type = '大復康巴士';\n      break;\n    case '3':\n      type = '狗狗友善專車';\n      break;\n    default:\n      type = '未知類型';\n  }\n  return type;\n}\n\nexport function parseCarOnStop(CarOnStop: '0' | '1'): string {\n  let onStop = '';\n  switch (CarOnStop) {\n    case '0':\n      onStop = '離站';\n      break;\n    case '1':\n      onStop = '進站';\n      break;\n    default:\n      onStop = '未知狀態'; // Handle unexpected values if necessary\n  }\n  return onStop;\n}\n\nexport function parseBusStatus(BusStatus: '0' | '1' | '2' | '3' | '4' | '5' | '99'): string {\n  let situation = '';\n  switch (BusStatus) {\n    case '0':\n      situation = '正常';\n      break;\n    case '1':\n      situation = '車禍';\n      break;\n    case '2':\n      situation = '故障';\n      break;\n    case '3':\n      situation = '塞車';\n      break;\n    case '4':\n      situation = '緊急求援';\n      break;\n    case '5':\n      situation = '加油';\n      break;\n    case '99':\n      situation = '非營運狀態';\n      break;\n    default:\n      situation = '未知狀態'; // Handle unexpected values if necessary\n  }\n  return situation;\n}\n\nexport interface FormattedBus {\n  type: '一般' | '低底盤' | '大復康巴士' | '狗狗友善專車' | '未知類型';\n  carNumber: string;\n  status: FormattedBusStatus;\n  RouteName: string;\n  onThisRoute: boolean;\n  index: number;\n  position: FormattedBusPosition;\n}\n\nexport function formatBus(batchFoundBus: BatchFoundBus): FormattedBus {\n  let result = {} as FormattedBus;\n\n  const CarType = batchFoundBus.CarType;\n  const type = parseCarType(CarType);\n  result.type = type;\n\n  const CarOnStop = batchFoundBus.CarOnStop;\n  const onStop = parseCarOnStop(CarOnStop);\n\n  const BusStatus = batchFoundBus.BusStatus;\n  const situation = parseBusStatus(BusStatus);\n\n  result.carNumber = batchFoundBus.BusID;\n  result.status = {\n    onStop: onStop,\n    situation: situation,\n    text: `${onStop} | ${situation}`\n  };\n  result.RouteName = batchFoundBus.RouteName;\n  result.onThisRoute = batchFoundBus.onThisRoute;\n  result.index = batchFoundBus.index;\n  result.position = batchFoundBus.position;\n  return result;\n}\n","import { pakoInflate } from '../../tools/pako-inflate/index';\nimport { timeStampToNumber } from '../../tools/time';\nimport { recordRequest } from '../analytics/data-usage';\n\nlet dataReceivingProgress = {};\n\nexport type DataUpdateTime = { [key: string]: number };\n\nexport let dataUpdateTime: DataUpdateTime = {};\n\nexport async function fetchData(url: string, requestID: string, tag: string, fileType: 'json' | 'xml', connectionTimeoutDuration: number = 15 * 1000, loadingTimeoutDuration: number = 60 * 1000): Promise<object> {\n  const startTimeStamp = new Date().getTime();\n\n  // Create a connection timeout promise\n  const connectionTimeoutPromise = new Promise((_, reject) => setTimeout(() => reject(new Error('Connection timed out')), connectionTimeoutDuration));\n\n  // Race between fetch and connection timeout\n  const response = await Promise.race([fetch(url), connectionTimeoutPromise]).catch((error) => {\n    // Handle connection timeout error\n    setDataReceivingProgress(requestID, tag, 0, true);\n    throw error;\n  });\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  const contentLength = parseInt(String(response.headers.get('content-length')));\n  let receivedLength = 0;\n  const reader = response.body.getReader();\n  const chunks = [];\n\n  // A utility function to read chunks with loading timeout\n  const readChunk = () => {\n    return new Promise(async (resolve, reject) => {\n      const loadingTimeout = setTimeout(() => {\n        reject(new Error('Loading timed out'));\n      }, loadingTimeoutDuration);\n\n      const { done, value } = await reader.read();\n      clearTimeout(loadingTimeout);\n\n      if (done) {\n        resolve({ done });\n      } else {\n        resolve({ done, value });\n      }\n    });\n  };\n\n  // Loop to read chunks with loading timeout for each chunk\n  while (true) {\n    const { done, value } = await readChunk().catch((error) => {\n      // Handle loading timeout error\n      setDataReceivingProgress(requestID, tag, receivedLength / contentLength, true);\n      throw error;\n    });\n\n    if (done) {\n      break;\n    }\n\n    chunks.push(value);\n    receivedLength += value.length;\n    setDataReceivingProgress(requestID, tag, receivedLength / contentLength, false);\n  }\n\n  // Concatenate all the chunks into a single Uint8Array\n  const uint8Array = new Uint8Array(receivedLength);\n  let position = 0;\n  for (const chunk of chunks) {\n    uint8Array.set(chunk, position);\n    position += chunk.length;\n  }\n\n  const endTimeStamp = new Date().getTime();\n  await recordRequest(requestID, { end_time: endTimeStamp, start_time: startTimeStamp, content_length: contentLength }, receivedLength < contentLength);\n\n  // Create a blob from the concatenated Uint8Array\n  const blob = new Blob([uint8Array]);\n  const gzip_blob = new Blob([blob.slice(0, blob.size)], { type: 'application/gzip' });\n  const buffer = await gzip_blob.arrayBuffer();\n  const inflatedData = await pakoInflate(buffer);\n\n  if (fileType === 'json') {\n    if (/^\\<\\!doctype html\\>/.test(inflatedData)) {\n      const alternativeData = await fetchData(url.replace('https://tcgbusfs.blob.core.windows.net/', 'https://erichsia7.github.io/bus-alternative-static-apis/'), requestID, tag, fileType, connectionTimeoutDuration, loadingTimeoutDuration);\n      return alternativeData;\n    } else {\n      return JSON.parse(inflatedData);\n    }\n  }\n\n  if (fileType === 'xml') {\n    return inflatedData;\n  }\n}\n\nexport function getDataReceivingProgress(requestID: string): number {\n  if (dataReceivingProgress.hasOwnProperty(requestID)) {\n    if (typeof dataReceivingProgress[requestID] === 'object') {\n      var total = 0;\n      var received = 0;\n      for (var key in dataReceivingProgress[requestID]) {\n        if (!dataReceivingProgress[requestID][key].expel) {\n          total += dataReceivingProgress[requestID][key].total;\n          received += dataReceivingProgress[requestID][key].progress;\n        }\n      }\n      var progress = Math.min(Math.max(received / total, 0), 1);\n      return progress === Infinity || isNaN(progress) ? 1 : progress;\n    }\n  }\n  return 1;\n}\n\nexport function setDataReceivingProgress(requestID: string, tag: string, progress: number, expel: boolean): void {\n  if (!dataReceivingProgress.hasOwnProperty(requestID)) {\n    dataReceivingProgress[requestID] = {};\n  }\n  const key = `u_${tag}`;\n  if (dataReceivingProgress[requestID].hasOwnProperty(key)) {\n    if (expel) {\n      dataReceivingProgress[requestID][key].expel = true;\n    } else {\n      dataReceivingProgress[requestID][key].expel = false;\n      dataReceivingProgress[requestID][key].progress = progress;\n    }\n  } else {\n    dataReceivingProgress[requestID][key] = { expel: false, progress: progress, total: 1 };\n  }\n}\n\nexport function deleteDataReceivingProgress(requestID: string): void {\n  if (dataReceivingProgress.hasOwnProperty(requestID)) {\n    delete dataReceivingProgress[requestID];\n  }\n}\n\nexport function setDataUpdateTime(requestID: string, timeStamp: string | number): void {\n  if (!dataUpdateTime.hasOwnProperty(requestID)) {\n    dataUpdateTime[requestID] = 0;\n  }\n  let timeNumber = 0;\n  if (typeof timeStamp === 'string') {\n    timeNumber = timeStampToNumber(timeStamp);\n  }\n  if (timeNumber > dataUpdateTime[requestID]) {\n    dataUpdateTime[requestID] = timeNumber;\n  }\n}\n\nexport function getDataUpdateTime(requestID: string): number {\n  if (dataUpdateTime.hasOwnProperty(requestID)) {\n    return dataUpdateTime[requestID] * 1;\n  } else {\n    return 0;\n  }\n}\n\nexport function deleteDataUpdateTime(requestID: string): void {\n  if (dataUpdateTime.hasOwnProperty(requestID)) {\n    delete dataUpdateTime[requestID];\n  }\n}\n"],"names":["parseEstimateTime","EstimateTime","mode","time","parseInt","code","text","formatTime","parseTimeCode","hours","minutes","length","substring","type","min","max","number1","number2","Math","number","batchFindBusesForRoute","BusEvent","BusData","Route","RouteID","PathAttributeId","_step","result","BusDataObj","_iterator","_createForOfIteratorHelper","s","n","done","BusDataItem","value","BusID","err","e","f","_step2","_iterator2","BusEventItem","processedItem","CarType","BusStatus","CarOnStop","thisRouteID","thisBusID","String","isOnThisRoute","index","indexOf","charCodeAt","pow","onThisRoute","thisBusData","hasOwnProperty","position","latitude","parseFloat","Latitude","longitude","Longitude","searchedRoute","isRouteSearched","key","thisRouteItem","pid","RouteName","id","StopKey","concat","StopID","push","batchFindBusesForLocation","StopIDList","_step3","_iterator3","_step4","_iterator4","thisStopID","parseCarType","parseCarOnStop","onStop","parseBusStatus","situation","formatBus","batchFoundBus","carNumber","status","_regeneratorRuntime","t","r","Object","prototype","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","dataReceivingProgress","dataUpdateTime","fetchData","_x","_x2","_x3","_x4","_fetchData","_callee2","url","requestID","tag","fileType","connectionTimeoutDuration","loadingTimeoutDuration","startTimeStamp","connectionTimeoutPromise","response","contentLength","receivedLength","reader","chunks","readChunk","_yield$readChunk$catc","uint8Array","_i","_chunks","chunk","endTimeStamp","blob","gzip_blob","buffer","inflatedData","alternativeData","_args2","_context2","undefined","Date","getTime","_","reject","setTimeout","race","fetch","error","setDataReceivingProgress","ok","headers","get","body","getReader","_ref","_callee","loadingTimeout","_yield$reader$read","_context","read","clearTimeout","_x5","_x6","Uint8Array","set","recordRequest","end_time","start_time","content_length","Blob","size","arrayBuffer","pakoInflate","test","replace","JSON","parse","getDataReceivingProgress","total","received","expel","progress","Infinity","deleteDataReceivingProgress","setDataUpdateTime","timeStamp","timeNumber","timeStampToNumber","getDataUpdateTime","deleteDataUpdateTime"],"sourceRoot":""}