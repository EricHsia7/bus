{"version":3,"file":"f5e6c7af7dbb608257d8.js","mappings":"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","sources":["webpack://bus/./src/interface/index.ts","webpack://bus/./src/interface/location/index.ts","webpack://bus/./src/interface/bus/properties.ts","webpack://bus/./src/interface/bus/index.ts","webpack://bus/./src/interface/folder-creator/index.ts","webpack://bus/./src/interface/data-usage/index.ts","webpack://bus/./src/interface/folder-icon-selector/index.ts","webpack://bus/./src/index.ts","webpack://bus/./src/data/route/index.ts","webpack://bus/./src/interface/folder-manager/index.ts","webpack://bus/./src/data/route/details.ts","webpack://bus/./src/interface/folder-editor/index.ts"],"sourcesContent":["import { isRunningStandalone } from '../tools/index';\nimport { documentQuerySelector } from '../tools/query-selector';\nimport { closeBus, openBus } from './bus/index';\nimport { closeFolderCreator, openFolderCreator } from './folder-creator/index';\nimport { closeFolderEditor, openFolderEditor } from './folder-editor/index';\nimport { closeFolderManager, openFolderManager } from './folder-manager/index';\nimport { closePersonalScheduleEditor, openPersonalScheduleEditor } from './personal-schedule-editor/index';\nimport { closePersonalScheduleManager, openPersonalScheduleManager } from './personal-schedule-manager/index';\nimport { closeRegisterNotification, openRegisterNotification } from './register-notification/index';\nimport { closeSearch, openSearch } from './search/index';\nimport { closeSettings, openSettings } from './settings/index';\n\nconst splashScreenTimer_minimalTimeOut = 100;\nconst splashScreenTimer_openTime = new Date().getTime();\n\ntype Page = 'Home' | 'FolderCreator' | 'FolderEditor' | 'FolderIconSelector' | 'FolderManager' | 'Location' | 'RouteDetails' | 'Route' | 'SaveToFolder' | 'Search' | 'Settings' | 'SettingsOptions' | 'DataUsage' | 'PersonalScheduleManager' | 'PersonalScheduleCreator' | 'PersonalScheduleEditor' | 'Bus' | 'RegisterNotification' | 'ScheduleNotification' | 'NotificationScheduleManager';\n\nlet pageHistory: Array<Page> = ['Home'];\n\nexport function pushPageHistory(page: Page): void {\n  const pageHistoryLength = pageHistory.length;\n  const lastPage = pageHistory[pageHistoryLength - 1];\n  if (lastPage !== page) {\n    pageHistory.push(page);\n  }\n}\n\nexport function revokePageHistory(page: Page): void {\n  if (pageHistory.indexOf(page) > -1) {\n    const pageHistoryLength = pageHistory.length;\n    if (pageHistory[pageHistoryLength - 1] === page) {\n      pageHistory.pop();\n    }\n  }\n}\n\nexport function closePreviousPage(): void {\n  const pageHistoryLength = pageHistory.length;\n  if (pageHistoryLength > 1) {\n    const previousPage = pageHistory[pageHistoryLength - 2];\n    switch (previousPage) {\n      case 'Home':\n        break;\n      case 'FolderCreator':\n        closeFolderCreator();\n        break;\n      case 'FolderEditor':\n        closeFolderEditor();\n        break;\n      case 'FolderIconSelector':\n        break;\n      case 'FolderManager':\n        closeFolderManager();\n        break;\n      case 'Location':\n        break;\n      case 'Route':\n        break;\n      case 'RouteDetails':\n        break;\n      case 'SaveToFolder':\n        break;\n      case 'Search':\n        closeSearch();\n        break;\n      case 'Settings':\n        closeSettings();\n        break;\n      case 'SettingsOptions':\n        break;\n      case 'DataUsage':\n        break;\n      case 'PersonalScheduleManager':\n        closePersonalScheduleManager();\n        break;\n      case 'PersonalScheduleCreator':\n        break;\n      case 'PersonalScheduleEditor':\n        closePersonalScheduleEditor();\n        break;\n      case 'Bus':\n        closeBus();\n        break;\n      case 'RegisterNotification':\n        closeRegisterNotification();\n        break;\n      case 'ScheduleNotification':\n        break;\n      case 'NotificationScheduleManager':\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport function openPreviousPage(): void {\n  const pageHistoryLength = pageHistory.length;\n  if (pageHistoryLength > 1) {\n    const previousPage = pageHistory[pageHistoryLength - 2];\n    pageHistory.pop();\n    switch (previousPage) {\n      case 'Home':\n        break;\n      case 'FolderCreator':\n        openFolderCreator();\n        break;\n      case 'FolderEditor':\n        openFolderEditor();\n        break;\n      case 'FolderIconSelector':\n        break;\n      case 'FolderManager':\n        openFolderManager();\n        break;\n      case 'Location':\n        break;\n      case 'Route':\n        break;\n      case 'RouteDetails':\n        break;\n      case 'SaveToFolder':\n        break;\n      case 'Search':\n        openSearch();\n        break;\n      case 'Settings':\n        openSettings();\n        break;\n      case 'SettingsOptions':\n        break;\n      case 'DataUsage':\n        break;\n      case 'PersonalScheduleManager':\n        openPersonalScheduleManager();\n        break;\n      case 'PersonalScheduleCreator':\n        break;\n      case 'PersonalScheduleEditor':\n        openPersonalScheduleEditor();\n        break;\n      case 'Bus':\n        openBus();\n        break;\n      case 'RegisterNotification':\n        openRegisterNotification();\n        break;\n      case 'ScheduleNotification':\n        break;\n      case 'NotificationScheduleManager':\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport function setSplashScreenIconOffsetY(): void {\n  let offset = 0;\n  if (isRunningStandalone()) {\n    offset = (-1 * (window.outerHeight - window.innerHeight)) / 2;\n  }\n  documentQuerySelector('.css_splash_screen svg.css_splash_screen_icon').style.setProperty('--b-cssvar-splash-screen-icon-offset-y', `${offset}px`);\n}\n\nexport function fadeOutSplashScreen(callback: Function): void {\n  function fadeOut() {\n    var element: HTMLElement = documentQuerySelector('.css_splash_screen');\n    element.classList.add('css_splash_screen_fade_out');\n    element.addEventListener(\n      'animationend',\n      function () {\n        element.setAttribute('displayed', 'false');\n        element.classList.remove('css_splash_screen_fade_out');\n        if (typeof callback === 'function') {\n          callback();\n        }\n      },\n      { once: true }\n    );\n  }\n  const cureentTime = new Date().getTime();\n  if (cureentTime - splashScreenTimer_openTime < splashScreenTimer_minimalTimeOut) {\n    setTimeout(fadeOut, Math.max(1, cureentTime - splashScreenTimer_openTime));\n  } else {\n    fadeOut();\n  }\n}\n\nexport interface GeneratedElement {\n  element: HTMLElement;\n  id: string;\n}\n\nexport type GroupStyles = {\n  [key: string]: {\n    width: number;\n    offset: number;\n  };\n};\n\nexport interface Size {\n  width: number;\n  height: number;\n}\n\ntype SizeType = 'window' | 'head' | 'head-one-button' | 'head-two-button' | 'route-details-canvas' | 'route-bus-arrival-time-chart' | 'location-bus-arrival-time-chart';\n\nexport function querySize(type: SizeType): Size {\n  let width: number = 0;\n  let height: number = 0;\n  const windowWidth = window.innerWidth;\n  const windowHeight = window.innerHeight;\n  switch (type) {\n    case 'window':\n      width = windowWidth;\n      height = windowHeight;\n      break;\n    case 'head':\n      width = windowWidth;\n      height = 55;\n      break;\n    case 'head-one-button':\n      width = windowWidth - 55;\n      height = 55;\n      break;\n    case 'head-two-button':\n      width = windowWidth - 55 * 2;\n      height = 55;\n      break;\n    case 'route-details-canvas':\n      width = windowWidth - 10 * 2 - 10 * 2;\n      height = 24 * 60;\n      break;\n    case 'route-bus-arrival-time-chart':\n      width = windowWidth - 45 - 15 - 20;\n      height = 75;\n      break;\n    case 'location-bus-arrival-time-chart':\n      width = windowWidth - 30 - 20;\n      height = 75;\n      break;\n    default:\n      width = 0;\n      height = 0;\n      break;\n  }\n  return {\n    width,\n    height\n  };\n}\n","import { getUpdateRate } from '../../data/analytics/update-rate/index';\nimport { DataReceivingProgressEvent } from '../../data/apis/loader';\nimport { isFolderContentSaved } from '../../data/folder/index';\nimport { IntegratedLocation, IntegratedLocationItem, integrateLocation, LocationGroupProperty } from '../../data/location/index';\nimport { stopHasNotifcationSchedules } from '../../data/notification/index';\nimport { logRecentView } from '../../data/recent-views/index';\nimport { getSettingOptionValue, SettingSelectOptionRefreshIntervalValue } from '../../data/settings/index';\nimport { getTextWidth } from '../../tools/graphic';\nimport { booleanToString, compareThings, generateIdentifier } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll, getElementsBelow } from '../../tools/query-selector';\nimport { indexToDay, timeObjectToString } from '../../tools/time';\nimport { getIconHTML } from '../icons/index';\nimport { closePreviousPage, GeneratedElement, GroupStyles, openPreviousPage, pushPageHistory, querySize } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst LocationField = documentQuerySelector('.css_location_field');\nconst LocationHeadElement = elementQuerySelector(LocationField, '.css_location_head');\nconst LocationNameElement = elementQuerySelector(LocationHeadElement, '.css_location_name');\nconst LocationGroupsElement = elementQuerySelector(LocationField, '.css_location_groups');\nconst LocationGroupTabsElement = elementQuerySelector(LocationHeadElement, '.css_location_group_tabs');\nconst LocationGroupTabsTrayElement = elementQuerySelector(LocationGroupTabsElement, '.css_location_group_tabs_tray');\nconst LocationGroupTabLineTrackElement = elementQuerySelector(LocationHeadElement, '.css_location_group_tab_line_track');\nconst LocationGroupTabLineElement = elementQuerySelector(LocationGroupTabLineTrackElement, '.css_location_group_tab_line');\nconst LocationUpdateTimerElement = elementQuerySelector(LocationHeadElement, '.css_location_update_timer_box .css_location_update_timer');\n\nlet previousIntegration = {} as IntegratedLocation;\nlet previousAnimation: boolean = true;\nlet previousSkeletonScreen: boolean = false;\n\nlet locationSliding_initialIndex: number = 0;\nlet locationSliding_targetIndex: number = 0;\nlet locationSliding_groupQuantity: number = 0;\nlet locationSliding_groupStyles: GroupStyles = {};\nlet locationSliding_fieldWidth: number = 0;\nlet locationSliding_fieldHeight: number = 0;\nlet locationSliding_sliding: boolean = false;\n\nlet locationRefreshTimer_retryInterval: number = 10 * 1000;\nlet locationRefreshTimer_baseInterval: number = 15 * 1000;\nlet locationRefreshTimer_minInterval: number = 5 * 1000;\nlet locationRefreshTimer_dynamicInterval: number = 15 * 1000;\nlet locationRefreshTimer_dynamic: boolean = true;\nlet locationRefreshTimer_lastUpdate: number = 0;\nlet locationRefreshTimer_nextUpdate: number = 0;\nlet locationRefreshTimer_currentRequestID: string = '';\nlet locationRefreshTimer_refreshing: boolean = false;\nlet locationRefreshTimer_streaming: boolean = false;\nlet locationRefreshTimer_streamStarted: boolean = false;\n\nvar currentHashSet_hash: string = '';\n\nvar tabPadding: number = 20;\n\nexport function initializeLocationSliding(): void {\n  LocationGroupsElement.addEventListener(\n    'touchstart',\n    function () {\n      locationSliding_initialIndex = Math.round(LocationGroupsElement.scrollLeft / locationSliding_fieldWidth);\n    },\n    { passive: true }\n  );\n\n  LocationGroupsElement.addEventListener(\n    'scroll',\n    function (event: Event) {\n      locationSliding_sliding = true;\n      const target = event.target as HTMLElement;\n      const currentIndex = target.scrollLeft / locationSliding_fieldWidth;\n      if (currentIndex > locationSliding_initialIndex) {\n        locationSliding_targetIndex = locationSliding_initialIndex + 1;\n      } else {\n        locationSliding_targetIndex = locationSliding_initialIndex - 1;\n      }\n      const initialSize = locationSliding_groupStyles[`g_${locationSliding_initialIndex}`] || { width: 0, offset: 0 };\n      const targetSize = locationSliding_groupStyles[`g_${locationSliding_targetIndex}`] || { width: 0, offset: 0 };\n      const tabWidth = initialSize.width + (targetSize.width - initialSize.width) * Math.abs(currentIndex - locationSliding_initialIndex);\n      const offset = (initialSize.offset + (targetSize.offset - initialSize.offset) * Math.abs(currentIndex - locationSliding_initialIndex)) * -1 + locationSliding_fieldWidth * 0.5 - tabWidth * 0.5;\n      updateLocationCSS(locationSliding_groupQuantity, offset, tabWidth - tabPadding, currentIndex);\n      if (currentIndex === locationSliding_targetIndex) {\n        locationSliding_initialIndex = Math.round(LocationGroupsElement.scrollLeft / locationSliding_fieldWidth);\n        locationSliding_sliding = false;\n      }\n    },\n    { passive: true }\n  );\n}\n\nexport function updateLocationCSS(groupQuantity: number, offset: number, tabLineWidth: number, percentage: number): void {\n  LocationGroupsElement.style.setProperty('--b-cssvar-location-group-quantity', groupQuantity.toString());\n  LocationGroupTabLineElement.style.setProperty('--b-cssvar-location-tab-line-width-scale', (tabLineWidth / 10).toString());\n  LocationGroupTabsTrayElement.style.setProperty('--b-cssvar-location-tabs-tray-offset', `${offset.toFixed(5)}px`);\n  LocationGroupTabsTrayElement.style.setProperty('--b-cssvar-location-percentage', percentage.toFixed(5));\n}\n\nfunction animateUpdateTimer(): void {\n  LocationUpdateTimerElement.style.setProperty('--b-cssvar-location-update-timer-interval', `${locationRefreshTimer_dynamicInterval}ms`);\n  LocationUpdateTimerElement.classList.add('css_location_update_timer_slide_rtl');\n}\n\nfunction handleDataReceivingProgressUpdates(event: Event): void {\n  const CustomEvent = event as DataReceivingProgressEvent;\n  if (locationRefreshTimer_refreshing) {\n    const offsetRatio = CustomEvent.detail.progress - 1;\n    LocationUpdateTimerElement.style.setProperty('--b-cssvar-location-update-timer-offset-ratio', offsetRatio.toString());\n  }\n  if (CustomEvent.detail.stage === 'end') {\n    document.removeEventListener(CustomEvent.detail.target, handleDataReceivingProgressUpdates);\n  }\n}\n\nfunction generateElementOfItem(): GeneratedElement {\n  const identifier = generateIdentifier('i');\n  const element = document.createElement('div');\n  element.classList.add('css_location_group_item');\n  element.id = identifier;\n  element.setAttribute('stretched', 'false');\n  element.setAttribute('stretching', 'false');\n  element.setAttribute('push-direction', '0'); // 0: normal state, 1: downward, 2: upward\n  element.setAttribute('push-state', '0'); // 0: normal state, 1: compensation , 2: transition\n  element.innerHTML = /*html*/ `<div class=\"css_location_group_item_head\"><div class=\"css_location_group_item_rank\"><div class=\"css_location_group_item_rank_next_slide\" code=\"-1\"></div><div class=\"css_location_group_item_rank_current_slide\" code=\"-1\"></div></div><div class=\"css_location_group_item_route_direction\"></div><div class=\"css_location_group_item_route_name\"></div><div class=\"css_location_group_item_capsule\"><div class=\"css_location_group_item_status\"><div class=\"css_next_slide\" code=\"0\"></div><div class=\"css_current_slide\" code=\"0\"></div></div><div class=\"css_location_group_item_stretch\" onclick=\"bus.location.stretchLocationItem('${identifier}')\">${getIconHTML('keyboard_arrow_down')}</div><div class=\"css_location_group_item_capsule_separator\"></div></div></div><div class=\"css_location_group_item_body\" displayed=\"false\"><div class=\"css_location_group_item_buttons\"><div class=\"css_location_group_item_button\" highlighted=\"true\" type=\"tab\" onclick=\"bus.location.switchLocationBodyTab('${identifier}', 0)\" code=\"0\"><div class=\"css_location_group_item_button_icon\">${getIconHTML('directions_bus')}</div>公車</div><div class=\"css_location_group_item_button\" highlighted=\"false\" type=\"tab\" onclick=\"bus.location.switchLocationBodyTab('${identifier}', 1)\" code=\"1\"><div class=\"css_location_group_item_button_icon\">${getIconHTML('departure_board')}</div>抵達時間</div><div class=\"css_location_group_item_button\" highlighted=\"false\" type=\"save-to-folder\" onclick=\"bus.folder.openSaveToFolder('stop-on-location', ['${identifier}', null, null])\"><div class=\"css_location_group_item_button_icon\">${getIconHTML('folder')}</div>儲存至資料夾</div><div class=\"css_location_group_item_button\" highlighted=\"false\" type=\"schedule-notification\" onclick=\"bus.notification.openScheduleNotification('stop-on-location', ['${identifier}', null, null, null])\" enabled=\"true\"><div class=\"css_location_group_item_button_icon\">${getIconHTML('notifications')}</div>設定到站通知</div></div><div class=\"css_location_group_item_buses\" displayed=\"true\"></div><div class=\"css_location_group_item_bus_arrival_times\" displayed=\"false\"></div></div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction generateElementOfGroup(): GeneratedElement {\n  // const identifier = generateIdentifier('g');\n  const element = document.createElement('div');\n  // element.id = identifier;\n  element.classList.add('css_location_group');\n  element.innerHTML = /*html*/ `<div class=\"css_location_group_details\"><div class=\"css_location_group_details_body\"></div></div><div class=\"css_location_group_items\"></div>`;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nfunction generateElementOfTab(): GeneratedElement {\n  // const identifier = generateIdentifier('t');\n  const element = document.createElement('div');\n  // element.id = identifier;\n  element.classList.add('css_location_group_tab');\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nfunction generateElementOfGroupDetailsProperty(): GeneratedElement {\n  // const identifier = generateIdentifier('p');\n  const element = document.createElement('div');\n  // element.id = identifier;\n  element.classList.add('css_location_group_details_property');\n  element.innerHTML = /*html*/ `<div class=\"css_location_details_property_icon\"></div><div class=\"css_location_details_property_value\"></div>`;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nfunction setUpLocationFieldSkeletonScreen(): void {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const WindowSize = querySize('window');\n  const FieldWidth = WindowSize.width;\n  const FieldHeight = WindowSize.height;\n  const defaultItemQuantity: IntegratedLocation['itemQuantity'] = { g_0: Math.floor(FieldHeight / 50) + 5, g_1: Math.floor(FieldHeight / 50) + 5 };\n  const defaultGroupQuantity = 2;\n  let groupedItems: IntegratedLocation['groupedItems'] = {};\n  for (let i = 0; i < defaultGroupQuantity; i++) {\n    const groupKey = `g_${i}`;\n    groupedItems[groupKey] = [];\n    for (let j = 0; j < defaultItemQuantity[groupKey]; j++) {\n      groupedItems[groupKey].push({\n        route_name: '',\n        route_direction: '',\n        routeId: 0,\n        stopId: 0,\n        status: {\n          code: 8,\n          text: '',\n          time: -6\n        },\n        ranking: {\n          number: 0,\n          text: '--',\n          code: -1\n        },\n        buses: [],\n        busArrivalTimes: []\n      });\n    }\n  }\n  updateLocationField(\n    {\n      groupedItems: groupedItems,\n      groupQuantity: defaultGroupQuantity,\n      groups: {\n        g_0: {\n          name: '載入中',\n          properties: [\n            {\n              key: '0',\n              icon: '',\n              value: ''\n            },\n            {\n              key: '1',\n              icon: '',\n              value: ''\n            },\n            {\n              key: '2',\n              icon: '',\n              value: ''\n            }\n          ]\n        },\n        g_1: {\n          name: '載入中',\n          properties: [\n            {\n              key: '0',\n              icon: '',\n              value: ''\n            },\n            {\n              key: '1',\n              icon: '',\n              value: ''\n            },\n            {\n              key: '2',\n              icon: '',\n              value: ''\n            }\n          ]\n        }\n      },\n      itemQuantity: defaultItemQuantity,\n      LocationName: '載入中',\n      dataUpdateTime: 0\n    },\n    true,\n    playing_animation\n  );\n}\n\nfunction updateLocationField(integration: IntegratedLocation, skeletonScreen: boolean, animation: boolean): void {\n  function updateItem(thisElement: HTMLElement, thisItem: IntegratedLocationItem, previousItem: IntegratedLocationItem | null): void {\n    function updateStatus(thisElement: HTMLElement, thisItem: IntegratedLocationItem, animation: boolean): void {\n      const thisElementRect = thisElement.getBoundingClientRect();\n      const top = thisElementRect.top;\n      const left = thisElementRect.left;\n      const bottom = thisElementRect.bottom;\n      const right = thisElementRect.right;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n\n      const thisItemStatusElement = elementQuerySelector(thisElement, '.css_location_group_item_status');\n      const nextSlide = elementQuerySelector(thisItemStatusElement, '.css_next_slide');\n      const currentSlide = elementQuerySelector(thisItemStatusElement, '.css_current_slide');\n\n      nextSlide.setAttribute('code', thisItem.status.code.toString());\n      nextSlide.innerText = thisItem.status.text;\n\n      if (animation && bottom > 0 && top < windowHeight && right > 0 && left < windowWidth) {\n        currentSlide.addEventListener(\n          'animationend',\n          function () {\n            currentSlide.setAttribute('code', thisItem.status.code.toString());\n            currentSlide.innerText = thisItem.status.text;\n            currentSlide.classList.remove('css_slide_fade_out');\n          },\n          { once: true }\n        );\n        currentSlide.classList.add('css_slide_fade_out');\n      } else {\n        currentSlide.setAttribute('code', thisItem.status.code.toString());\n        currentSlide.innerText = thisItem.status.text;\n      }\n    }\n\n    function updateRank(thisElement: HTMLElement, thisItem: IntegratedLocationItem, animation: boolean): void {\n      const thisElementRect = thisElement.getBoundingClientRect();\n      const top = thisElementRect.top;\n      const left = thisElementRect.left;\n      const bottom = thisElementRect.bottom;\n      const right = thisElementRect.right;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n\n      const thisRankElement = elementQuerySelector(thisElement, '.css_location_group_item_rank');\n      const nextSlide = elementQuerySelector(thisRankElement, '.css_location_group_item_rank_next_slide');\n      const currentSlide = elementQuerySelector(thisRankElement, '.css_location_group_item_rank_current_slide');\n\n      nextSlide.setAttribute('code', thisItem.ranking.code.toString());\n      nextSlide.innerText = thisItem.ranking.text;\n\n      if (animation && bottom > 0 && top < windowHeight && right > 0 && left < windowWidth) {\n        currentSlide.addEventListener(\n          'animationend',\n          function () {\n            currentSlide.setAttribute('code', thisItem.ranking.code.toString());\n            currentSlide.innerText = thisItem.ranking.text;\n            currentSlide.classList.remove('css_location_group_item_rank_current_slide_fade_out');\n          },\n          { once: true }\n        );\n        currentSlide.classList.add('css_location_group_item_rank_current_slide_fade_out');\n      } else {\n        currentSlide.setAttribute('code', thisItem.ranking.code.toString());\n        currentSlide.innerText = thisItem.ranking.text;\n      }\n    }\n\n    function updateRouteDirection(thisElement: HTMLElement, thisItem: IntegratedLocationItem): void {\n      const thisRouteDirectionElement = elementQuerySelector(thisElement, '.css_location_group_item_route_direction');\n      thisRouteDirectionElement.innerText = thisItem.route_direction;\n    }\n\n    function updateRouteName(thisElement: HTMLElement, thisItem: IntegratedLocationItem): void {\n      const thisRouteNameElement = elementQuerySelector(thisElement, '.css_location_group_item_route_name');\n      thisRouteNameElement.innerText = thisItem.route_name;\n      // TODO: selector\n    }\n\n    function updateBuses(thisElement: HTMLElement, thisItem: IntegratedLocationItem): void {\n      const thisBusesElement = elementQuerySelector(thisElement, '.css_location_group_item_buses');\n      thisBusesElement.innerHTML = thisItem.buses.length === 0 ? '<div class=\"css_location_group_item_buses_message\">目前沒有公車可顯示</div>' : thisItem.buses.map((bus) => `<div class=\"css_location_group_item_bus\" on-this-route=\"${bus.onThisRoute}\"><div class=\"css_location_group_item_bus_title\"><div class=\"css_location_group_item_bus_icon\">${getIconHTML('directions_bus')}</div><div class=\"css_location_group_item_bus_car_number\">${bus.carNumber}</div></div><div class=\"css_location_group_item_bus_attributes\"><div class=\"css_location_group_item_bus_route\">路線：${bus.RouteName}</div><div class=\"css_location_group_item_bus_car_status\">狀態：${bus.status.text}</div><div class=\"css_location_group_item_bus_car_type\">類型：${bus.type}</div></div></div>`).join('');\n    }\n\n    function updateBusArrivalTimes(thisItemElement: HTMLElement, thisItem: IntegratedLocationItem): void {\n      const thisBusArrivalTimesElement = elementQuerySelector(thisItemElement, '.css_location_group_item_bus_arrival_times');\n      thisBusArrivalTimesElement.innerHTML = thisItem.busArrivalTimes.length === 0 ? '<div class=\"css_location_group_item_bus_arrival_message\">目前沒有抵達時間可顯示</div>' : thisItem.busArrivalTimes.map((busArrivalTime) => `<div class=\"css_location_group_item_bus_arrival_time\"><div class=\"css_location_group_item_bus_arrival_time_title\"><div class=\"css_location_group_item_bus_arrival_time_icon\">${getIconHTML('calendar_view_day')}</div><div class=\"css_location_group_item_bus_arrival_time_personal_schedule_name\">${busArrivalTime.personalSchedule.name}</div><div class=\"css_location_group_item_bus_arrival_time_personal_schedule_time\">週${indexToDay(busArrivalTime.day).name} ${timeObjectToString(busArrivalTime.personalSchedule.period.start)} - ${timeObjectToString(busArrivalTime.personalSchedule.period.end)}</div></div><div class=\"css_location_group_item_bus_arrival_time_chart\">${busArrivalTime.chart}</div></div>`).join('');\n    }\n\n    function updateStretch(thisElement: HTMLElement, skeletonScreen: boolean): void {\n      if (skeletonScreen) {\n        thisElement.setAttribute('stretched', 'false');\n      }\n    }\n\n    function updateAnimation(thisElement: HTMLElement, animation: boolean): void {\n      thisElement.setAttribute('animation', booleanToString(animation));\n    }\n\n    function updateSkeletonScreen(thisElement: HTMLElement, skeletonScreen: boolean): void {\n      thisElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    }\n\n    function updateSaveToFolderButton(thisItemElement: HTMLElement, thisItem: IntegratedLocationItem): void {\n      const thisItemBodyElement = elementQuerySelector(thisItemElement, '.css_location_group_item_body');\n      const thisItemButtonsElement = elementQuerySelector(thisItemBodyElement, '.css_location_group_item_buttons');\n      const saveToFolderButtonElement = elementQuerySelector(thisItemButtonsElement, '.css_location_group_item_button[type=\"save-to-folder\"]');\n      saveToFolderButtonElement.setAttribute('onclick', `bus.folder.openSaveToFolder('stop-on-location', ['${thisItemElement.id}', ${thisItem.stopId}, ${thisItem.routeId}])`);\n      isFolderContentSaved('stop', thisItem.stopId).then((e) => {\n        saveToFolderButtonElement.setAttribute('highlighted', booleanToString(e));\n      });\n    }\n\n    function updateScheduleNotificationButton(thisItemElement: HTMLElement, thisItem: IntegratedLocationItem): void {\n      const thisItemBodyElement = elementQuerySelector(thisItemElement, '.css_location_group_item_body');\n      const thisItemButtonsElement = elementQuerySelector(thisItemBodyElement, '.css_location_group_item_buttons');\n      const scheduleNotificationButtonElement = elementQuerySelector(thisItemButtonsElement, '.css_location_group_item_button[type=\"schedule-notification\"]');\n      scheduleNotificationButtonElement.setAttribute('onclick', `bus.notification.openScheduleNotification('stop-on-location', ['${thisItemElement.id}', ${thisItem.stopId}, ${thisItem.routeId}, ${thisItem.status.time}])`);\n      const havingNotifcationSchedules = stopHasNotifcationSchedules(thisItem.stopId);\n      scheduleNotificationButtonElement.setAttribute('highlighted', booleanToString(havingNotifcationSchedules));\n    }\n\n    if (previousItem === null) {\n      updateStatus(thisElement, thisItem, animation);\n      updateRank(thisElement, thisItem, animation);\n      updateRouteDirection(thisElement, thisItem);\n      updateRouteName(thisElement, thisItem);\n      updateBuses(thisElement, thisItem);\n      updateBusArrivalTimes(thisElement, thisItem);\n      updateStretch(thisElement, skeletonScreen);\n      updateAnimation(thisElement, animation);\n      updateSkeletonScreen(thisElement, skeletonScreen);\n      updateSaveToFolderButton(thisElement, thisItem);\n      updateScheduleNotificationButton(thisElement, thisItem);\n    } else {\n      if (thisItem.status.time !== previousItem.status.time) {\n        updateStatus(thisElement, thisItem, animation);\n        updateScheduleNotificationButton(thisElement, thisItem);\n      }\n      if (previousItem.ranking.number !== thisItem.ranking.number || previousItem.ranking.code !== thisItem.ranking.code) {\n        updateRank(thisElement, thisItem, animation);\n      }\n      if (previousItem.stopId !== thisItem.stopId) {\n        updateRouteDirection(thisElement, thisItem);\n        updateRouteName(thisElement, thisItem);\n        updateSaveToFolderButton(thisElement, thisItem);\n      }\n      if (!compareThings(previousItem.buses, thisItem.buses)) {\n        updateBuses(thisElement, thisItem);\n      }\n      if (!compareThings(previousItem.busArrivalTimes, thisItem.busArrivalTimes)) {\n        updateBusArrivalTimes(thisElement, thisItem);\n      }\n      if (animation !== previousAnimation) {\n        updateAnimation(thisElement, animation);\n      }\n      if (skeletonScreen !== previousSkeletonScreen) {\n        updateStretch(thisElement, skeletonScreen);\n        updateSkeletonScreen(thisElement, skeletonScreen);\n      }\n    }\n  }\n\n  function updateProperty(thisElement: HTMLElement, thisProperty: LocationGroupProperty, previousProperty: LocationGroupProperty | null): void {\n    function updateIcon(thisElement: HTMLElement, thisProperty: LocationGroupProperty): void {\n      elementQuerySelector(thisElement, '.css_location_details_property_icon').innerHTML = getIconHTML(thisProperty.icon);\n    }\n\n    function updateValue(thisElement: HTMLElement, thisProperty: LocationGroupProperty): void {\n      elementQuerySelector(thisElement, '.css_location_details_property_value').innerHTML = thisProperty.value;\n    }\n\n    function updateAnimation(thisElement: HTMLElement, animation: boolean): void {\n      thisElement.setAttribute('animation', booleanToString(animation));\n    }\n\n    function updateSkeletonScreen(thisElement: HTMLElement, skeletonScreen: boolean): void {\n      thisElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    }\n\n    if (previousProperty === null) {\n      updateIcon(thisElement, thisProperty);\n      updateValue(thisElement, thisProperty);\n      updateAnimation(thisElement, animation);\n      updateSkeletonScreen(thisElement, skeletonScreen);\n    } else {\n      if (!compareThings(previousProperty.icon, thisProperty.icon)) {\n        updateIcon(thisElement, thisProperty);\n      }\n      if (!compareThings(previousProperty.value, thisProperty.value)) {\n        updateValue(thisElement, thisProperty);\n      }\n      if (animation !== previousAnimation) {\n        updateAnimation(thisElement, animation);\n      }\n      if (skeletonScreen !== previousSkeletonScreen) {\n        updateSkeletonScreen(thisElement, skeletonScreen);\n      }\n    }\n  }\n\n  const WindowSize = querySize('window');\n  const FieldWidth = WindowSize.width;\n  const FieldHeight = WindowSize.height;\n\n  const groupQuantity = integration.groupQuantity;\n  const itemQuantity = integration.itemQuantity;\n  const groupedItems = integration.groupedItems;\n  const groups = integration.groups;\n\n  locationSliding_groupQuantity = groupQuantity;\n  locationSliding_fieldWidth = FieldWidth;\n  locationSliding_fieldHeight = FieldHeight;\n\n  let cumulativeOffset = 0;\n  for (let i = 0; i < groupQuantity; i++) {\n    const width = getTextWidth(groups[`g_${i}`].name, 500, '17px', `\"Noto Sans TC\", sans-serif`) + tabPadding;\n    locationSliding_groupStyles[`g_${i}`] = {\n      width: width,\n      offset: cumulativeOffset\n    };\n    cumulativeOffset += width;\n  }\n  var offset = locationSliding_groupStyles[`g_${locationSliding_initialIndex}`].offset * -1 + locationSliding_fieldWidth * 0.5 - locationSliding_groupStyles[`g_${locationSliding_initialIndex}`].width * 0.5;\n  if (!locationSliding_sliding) {\n    updateLocationCSS(locationSliding_groupQuantity, offset, locationSliding_groupStyles[`g_${locationSliding_initialIndex}`].width - tabPadding, locationSliding_initialIndex);\n  }\n\n  LocationNameElement.innerHTML = /*html*/ `<span>${integration.LocationName}</span>`;\n  LocationNameElement.setAttribute('animation', booleanToString(animation));\n  LocationNameElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n  LocationGroupTabsElement.setAttribute('animation', booleanToString(animation));\n  LocationGroupTabsElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n  LocationGroupTabLineTrackElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n  // TODO: updateTab\n\n  const currentGroupSeatQuantity = elementQuerySelectorAll(LocationGroupsElement, '.css_location_group').length;\n  if (groupQuantity !== currentGroupSeatQuantity) {\n    const capacity = currentGroupSeatQuantity - groupQuantity;\n    if (capacity < 0) {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const newGroupElement = generateElementOfGroup();\n        LocationGroupsElement.appendChild(newGroupElement.element);\n        const newTabElement = generateElementOfTab();\n        LocationGroupTabsTrayElement.appendChild(newTabElement.element);\n      }\n    } else {\n      const LocationGroupElements = elementQuerySelectorAll(LocationGroupsElement, `.css_location_group`);\n      const LocationGroupTabElements = elementQuerySelectorAll(LocationGroupTabsTrayElement, '.css_location_group_tab');\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const groupIndex = currentGroupSeatQuantity - 1 - o;\n        LocationGroupElements[groupIndex].remove();\n        LocationGroupTabElements[groupIndex].remove();\n      }\n    }\n  }\n\n  const LocationGroupElements = elementQuerySelectorAll(LocationGroupsElement, `.css_location_group`);\n  for (let i = 0; i < groupQuantity; i++) {\n    const groupKey = `g_${i}`;\n    const thisLocationGroupElement = LocationGroupElements[i];\n    const currentItemSeatQuantity = elementQuerySelectorAll(thisLocationGroupElement, `.css_location_group_items .css_location_group_item`).length;\n    if (itemQuantity[groupKey] !== currentItemSeatQuantity) {\n      const capacity = currentItemSeatQuantity - itemQuantity[groupKey];\n      if (capacity < 0) {\n        const LocationGroupItemsElement = elementQuerySelector(thisLocationGroupElement, `.css_location_group_items`);\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const newItemElement = generateElementOfItem();\n          LocationGroupItemsElement.appendChild(newItemElement.element);\n        }\n      } else {\n        const LocationGroupItemElements = elementQuerySelectorAll(thisLocationGroupElement, `.css_location_group_items .css_location_group_item`);\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const itemIndex = currentItemSeatQuantity - 1 - o;\n          LocationGroupItemElements[itemIndex].remove();\n        }\n      }\n    }\n\n    const currentGroupPropertySeatQuantity = elementQuerySelectorAll(elementQuerySelectorAll(LocationGroupsElement, '.css_location_group')[i], `.css_location_group_details .css_location_group_details_body .css_location_group_details_property`).length;\n    const groupPropertyQuantity = groups[groupKey].properties.length;\n    if (groupPropertyQuantity !== currentGroupPropertySeatQuantity) {\n      const capacity = currentGroupPropertySeatQuantity - groupPropertyQuantity;\n      if (capacity < 0) {\n        const thisLocationGroupDetailsElement = elementQuerySelector(thisLocationGroupElement, '.css_location_group_details');\n        const thisLocationGroupDetailsBodyElement = elementQuerySelector(thisLocationGroupDetailsElement, '.css_location_group_details_body');\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          // var propertyIndex = currentGroupPropertySeatQuantity + o;\n          const newPropertyElement = generateElementOfGroupDetailsProperty();\n          thisLocationGroupDetailsBodyElement.appendChild(newPropertyElement.element);\n        }\n      } else {\n        const thisLocationGroupDetailsElement = elementQuerySelector(thisLocationGroupElement, '.css_location_group_details');\n        const thisLocationGroupDetailsBodyElement = elementQuerySelector(thisLocationGroupDetailsElement, '.css_location_group_details_body');\n        const propertyElements = elementQuerySelectorAll(thisLocationGroupDetailsBodyElement, '.css_location_group_details_property');\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const propertyIndex = currentGroupPropertySeatQuantity - 1 - o;\n          propertyElements[propertyIndex].remove();\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < groupQuantity; i++) {\n    const groupKey = `g_${i}`;\n    const thisTabElement = elementQuerySelectorAll(LocationGroupTabsTrayElement, '.css_location_group_tab')[i];\n    thisTabElement.innerHTML = /*html*/ `<span>${groups[groupKey].name}</span>`;\n    thisTabElement.style.setProperty('--b-cssvar-location-tab-width', `${locationSliding_groupStyles[groupKey].width}px`);\n    thisTabElement.style.setProperty('--b-cssvar-location-tab-index', i.toString());\n    const thisGroupElement = elementQuerySelectorAll(LocationGroupsElement, '.css_location_group')[i];\n    const groupPropertyQuantity = groups[groupKey].properties.length;\n\n    for (let k = 0; k < groupPropertyQuantity; k++) {\n      const thisProperty = groups[groupKey].properties[k];\n      const thisElement = elementQuerySelectorAll(thisGroupElement, `.css_location_group_details .css_location_group_details_body .css_location_group_details_property`)[k];\n      if (previousIntegration.hasOwnProperty('groups')) {\n        if (previousIntegration.groups.hasOwnProperty(groupKey)) {\n          if (previousIntegration.groups[groupKey].properties[k]) {\n            const previousProperty = previousIntegration.groups[groupKey].properties[k];\n            updateProperty(thisElement, thisProperty, previousProperty);\n          } else {\n            updateProperty(thisElement, thisProperty, null);\n          }\n        } else {\n          updateProperty(thisElement, thisProperty, null);\n        }\n      } else {\n        updateProperty(thisElement, thisProperty, null);\n      }\n    }\n\n    for (let j = 0; j < itemQuantity[groupKey]; j++) {\n      const thisElement = elementQuerySelectorAll(thisGroupElement, `.css_location_group_items .css_location_group_item`)[j];\n      const thisItem = groupedItems[groupKey][j];\n      if (previousIntegration.hasOwnProperty('groupedItems')) {\n        if (previousIntegration.groupedItems.hasOwnProperty(groupKey)) {\n          if (previousIntegration.groupedItems[groupKey][j]) {\n            const previousItem = previousIntegration.groupedItems[groupKey][j];\n            updateItem(thisElement, thisItem, previousItem);\n          } else {\n            updateItem(thisElement, thisItem, null);\n          }\n        } else {\n          updateItem(thisElement, thisItem, null);\n        }\n      } else {\n        updateItem(thisElement, thisItem, null);\n      }\n    }\n  }\n\n  previousIntegration = integration;\n  previousAnimation = animation;\n  previousSkeletonScreen = skeletonScreen;\n}\n\nasync function refreshLocation() {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const refresh_interval_setting = getSettingOptionValue('refresh_interval') as SettingSelectOptionRefreshIntervalValue;\n  const busArrivalTimeChartSize = querySize('location-bus-arrival-time-chart');\n  locationRefreshTimer_dynamic = refresh_interval_setting.dynamic;\n  locationRefreshTimer_baseInterval = refresh_interval_setting.baseInterval;\n  locationRefreshTimer_refreshing = true;\n  locationRefreshTimer_currentRequestID = generateIdentifier('r');\n  LocationUpdateTimerElement.setAttribute('refreshing', 'true');\n  LocationUpdateTimerElement.classList.remove('css_location_update_timer_slide_rtl');\n  document.addEventListener(locationRefreshTimer_currentRequestID, handleDataReceivingProgressUpdates);\n  const integration = await integrateLocation(currentHashSet_hash, busArrivalTimeChartSize.width, busArrivalTimeChartSize.height, locationRefreshTimer_currentRequestID);\n  updateLocationField(integration, false, playing_animation);\n  let updateRate = 0;\n  if (locationRefreshTimer_dynamic) {\n    updateRate = await getUpdateRate();\n  }\n  locationRefreshTimer_lastUpdate = new Date().getTime();\n  if (locationRefreshTimer_dynamic) {\n    locationRefreshTimer_nextUpdate = Math.max(locationRefreshTimer_lastUpdate + locationRefreshTimer_minInterval, integration.dataUpdateTime + locationRefreshTimer_baseInterval / updateRate);\n  } else {\n    locationRefreshTimer_nextUpdate = locationRefreshTimer_lastUpdate + locationRefreshTimer_baseInterval;\n  }\n  locationRefreshTimer_dynamicInterval = Math.max(locationRefreshTimer_minInterval, locationRefreshTimer_nextUpdate - locationRefreshTimer_lastUpdate);\n  locationRefreshTimer_refreshing = false;\n  LocationUpdateTimerElement.setAttribute('refreshing', 'false');\n  animateUpdateTimer();\n}\n\nexport function streamLocation(): void {\n  refreshLocation()\n    .then(function () {\n      if (locationRefreshTimer_streaming) {\n        setTimeout(function () {\n          streamLocation();\n        }, Math.max(locationRefreshTimer_minInterval, locationRefreshTimer_nextUpdate - new Date().getTime()));\n      } else {\n        locationRefreshTimer_streamStarted = false;\n      }\n    })\n    .catch((err) => {\n      console.error(err);\n      if (locationRefreshTimer_streaming) {\n        promptMessage(`地點網路連線中斷，將在${locationRefreshTimer_retryInterval / 1000}秒後重試。`, 'error');\n        setTimeout(function () {\n          streamLocation();\n        }, locationRefreshTimer_retryInterval);\n      } else {\n        locationRefreshTimer_streamStarted = false;\n      }\n    });\n}\n\nexport function openLocation(hash: string): void {\n  pushPageHistory('Location');\n  logRecentView('location', hash);\n  currentHashSet_hash = hash;\n  locationSliding_initialIndex = 0;\n  LocationField.setAttribute('displayed', 'true');\n  LocationGroupsElement.scrollLeft = 0;\n  setUpLocationFieldSkeletonScreen();\n  if (!locationRefreshTimer_streaming) {\n    locationRefreshTimer_streaming = true;\n    if (!locationRefreshTimer_streamStarted) {\n      locationRefreshTimer_streamStarted = true;\n      streamLocation();\n    } else {\n      refreshLocation();\n    }\n  }\n  closePreviousPage();\n}\n\nexport function closeLocation(): void {\n  // revokePageHistory('Location');\n  LocationField.setAttribute('displayed', 'false');\n  locationRefreshTimer_streaming = false;\n  openPreviousPage();\n}\n\nexport function stretchLocationItem(itemElementID: string): void {\n  const itemElement = elementQuerySelector(LocationGroupsElement, `.css_location_group .css_location_group_items .css_location_group_item#${itemElementID}`);\n  const itemBodyElement = elementQuerySelector(itemElement, '.css_location_group_item_body');\n\n  const itemsElement = itemElement.parentElement as HTMLElement;\n\n  const elementsBelowItemElement = getElementsBelow(itemElement, 'css_location_group_item');\n  const elementsBelowLength = elementsBelowItemElement.length;\n\n  const itemsElementRect = itemsElement.getBoundingClientRect();\n  const itemElementRect = itemElement.getBoundingClientRect();\n\n  // const itemElementX = itemElementRect.left - itemsElementRect.left;\n  const itemElementY = itemElementRect.top - itemsElementRect.top;\n\n  const stretched = itemElement.getAttribute('stretched') === 'true' ? true : false;\n  const animation = itemElement.getAttribute('animation') === 'true' ? true : false;\n\n  if (animation) {\n    const pushDirection = stretched ? '2' : '1';\n\n    // Separate the elements from the document flow while keeping its position\n    itemElement.setAttribute('stretching', 'true');\n    // itemElement.style.setProperty('--b-cssvar-css-location-group-item-x', `${itemElementX}px`);\n    itemElement.style.setProperty('--b-cssvar-css-location-group-item-y', `${itemElementY}px`);\n\n    // Set push direction and push state\n    for (let i = 0; i < elementsBelowLength; i++) {\n      const thisItemElement = elementsBelowItemElement[i];\n      thisItemElement.setAttribute('push-direction', pushDirection);\n      thisItemElement.setAttribute('push-state', '1');\n    }\n\n    itemElement.addEventListener(\n      'transitionend',\n      function () {\n        // Reset the push direction and push state\n        for (let i = 0; i < elementsBelowLength; i++) {\n          const thisItemElement = elementsBelowItemElement[i];\n          thisItemElement.setAttribute('push-direction', '0');\n          thisItemElement.setAttribute('push-state', '0');\n        }\n        // Deposit the element\n        itemElement.setAttribute('stretching', 'false');\n      },\n      { once: true }\n    );\n\n    itemElement.addEventListener(\n      'transitionstart',\n      function () {\n        // Transition the elements below\n        for (let i = 0; i < elementsBelowLength; i++) {\n          const thisItemElement = elementsBelowItemElement[i];\n          thisItemElement.setAttribute('push-state', '2');\n        }\n      },\n      { once: true }\n    );\n  }\n\n  if (stretched) {\n    if (animation) {\n      itemBodyElement.addEventListener(\n        'transitionend',\n        function () {\n          itemBodyElement.setAttribute('displayed', 'false');\n        },\n        { once: true }\n      );\n    } else {\n      itemBodyElement.setAttribute('displayed', 'false');\n    }\n    itemElement.setAttribute('stretched', 'false');\n  } else {\n    itemBodyElement.setAttribute('displayed', 'true');\n    itemElement.setAttribute('stretched', 'true');\n  }\n}\n\nexport function switchLocationBodyTab(itemID: string, tabCode: number): void {\n  const itemElement = elementQuerySelector(LocationGroupsElement, `.css_location_group .css_location_group_items .css_location_group_item#${itemID}`);\n  const itemBodyElement = elementQuerySelector(itemElement, '.css_location_group_item_body');\n  const buttonsElement = elementQuerySelector(itemBodyElement, '.css_location_group_item_buttons');\n  const buttonElements = elementQuerySelectorAll(buttonsElement, '.css_location_group_item_button[highlighted=\"true\"][type=\"tab\"]');\n  for (const t of buttonElements) {\n    t.setAttribute('highlighted', 'false');\n  }\n  elementQuerySelector(buttonsElement, `.css_location_group_item_button[code=\"${tabCode}\"]`).setAttribute('highlighted', 'true');\n  switch (tabCode) {\n    case 0:\n      elementQuerySelector(itemElement, '.css_location_group_item_buses').setAttribute('displayed', 'true');\n      elementQuerySelector(itemElement, '.css_location_group_item_bus_arrival_times').setAttribute('displayed', 'false');\n      break;\n    case 1:\n      elementQuerySelector(itemElement, '.css_location_group_item_buses').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_location_group_item_bus_arrival_times').setAttribute('displayed', 'true');\n      break;\n    default:\n      break;\n  }\n}\n","import { getSettingOptionValue } from '../../data/settings/index';\nimport { compareThings } from '../../tools/index';\nimport { elementQuerySelector, elementQuerySelectorAll } from '../../tools/query-selector';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement } from '../index';\n\nlet previousProperties = [];\nlet previousSkeletonScreen: boolean = false;\nlet previousAnimation: boolean = true;\n\nfunction generateElementOfBusProperty(): GeneratedElement {\n  const element = document.createElement('div');\n  element.classList.add('css_bus_property');\n  element.innerHTML = /*html*/ `<div class=\"css_bus_property_icon\"></div><div class=\"css_bus_property_value\"></div>`;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nexport function setUpBusPropertiesFieldSkeletonScreen(Field: HTMLElement) {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const defaultPropertyQuantity = 5;\n  let properties = [];\n  for (let i = 0; i < defaultPropertyQuantity; i++) {\n    properties.push({\n      key: i,\n      icon: 'none',\n      value: ''\n    });\n  }\n  updateBusPropertiesField(Field, properties, true, playing_animation);\n}\n\nexport function updateBusPropertiesField(Field: HTMLElement, properties: Array, skeletonScreen: boolean, animation: boolean): void {\n  function updateProperty(thisElement: HTMLElement, thisProperty: object, previousProperty: object): void {\n    function updateIcon(thisElement: HTMLElement, thisProperty: object): void {\n      elementQuerySelector(thisElement, '.css_bus_property_icon').innerHTML = getIconHTML(thisProperty.icon);\n    }\n\n    function updateValue(thisElement: HTMLElement, thisProperty: object): void {\n      elementQuerySelector(thisElement, '.css_bus_property_value').innerText = thisProperty.value;\n    }\n\n    function updateAnimation(thisElement: HTMLElement, animation: boolean): void {\n      thisElement.setAttribute('animation', animation);\n    }\n\n    function updateSkeletonScreen(thisElement: HTMLElement, skeletonScreen: boolean): void {\n      thisElement.setAttribute('skeleton-screen', skeletonScreen);\n    }\n\n    if (previousProperty === null) {\n      updateIcon(thisElement, thisProperty);\n      updateValue(thisElement, thisProperty);\n      updateSkeletonScreen(thisElement, skeletonScreen);\n      updateAnimation(thisElement, animation);\n    } else {\n      if (!compareThings(previousProperty, thisProperty)) {\n        updateIcon(thisElement, thisProperty);\n      }\n      if (!compareThings(previousProperty, thisProperty)) {\n        updateValue(thisElement, thisProperty);\n      }\n      if (skeletonScreen !== previousSkeletonScreen) {\n        updateSkeletonScreen(thisElement, skeletonScreen);\n      }\n      if (animation !== previousAnimation) {\n        updateAnimation(thisElement, animation);\n      }\n    }\n  }\n\n  const propertyQuantity = properties.length;\n\n  // Field.setAttribute('skeleton-screen', skeletonScreen);\n\n  const currentPropertySeatQuantity = elementQuerySelectorAll(Field, `.css_bus_group_body .css_bus_property`).length;\n  if (propertyQuantity !== currentPropertySeatQuantity) {\n    const capacity = currentPropertySeatQuantity - propertyQuantity;\n    if (capacity < 0) {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        // const propertyIndex = currentPropertySeatQuantity + o;\n        const newPropertyElement = generateElementOfBusProperty(skeletonScreen);\n        elementQuerySelector(Field, '.css_bus_group_body').appendChild(newPropertyElement.element);\n      }\n    } else {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const propertyIndex = currentPropertySeatQuantity - 1 - o;\n        elementQuerySelectorAll(Field, `.css_bus_group_body .css_bus_property`)[propertyIndex].remove();\n      }\n    }\n  }\n\n  const propertyElements = elementQuerySelectorAll(Field, `.css_bus_group_body .css_bus_property`);\n  for (let i = 0; i < propertyQuantity; i++) {\n    const thisPropertyElement = propertyElements[i];\n    const thisProperty = properties[i];\n    if (previousProperties.length === 0) {\n      updateProperty(thisPropertyElement, thisProperty, null);\n    } else {\n      updateProperty(thisPropertyElement, thisProperty, previousProperties[i]);\n    }\n  }\n\n  previousProperties = properties;\n  previousAnimation = animation;\n  previousSkeletonScreen = skeletonScreen;\n}\n","import { integrateBus } from '../../data/bus/index';\nimport { logRecentView } from '../../data/recent-views/index';\nimport { getSettingOptionValue } from '../../data/settings/index';\nimport { generateIdentifier } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { closePreviousPage, openPreviousPage, pushPageHistory } from '../index';\nimport { setUpBusPropertiesFieldSkeletonScreen, updateBusPropertiesField } from './properties';\n\nconst BusField = documentQuerySelector('.css_bus_field');\nconst BusHead = elementQuerySelector(BusField, '.css_bus_head');\nconst BusBody = elementQuerySelector(BusField, '.css_bus_body');\nconst BusGroups = elementQuerySelector(BusBody, '.css_bus_groups');\nconst BusGroupProperties = elementQuerySelector(BusGroups, '.css_bus_group[group=\"properties\"]');\nconst BusGroupLocation = elementQuerySelector(BusGroups, '.css_bus_group[group=\"location\"]');\n\nexport function openBus(id: number): void {\n  pushPageHistory('Bus');\n  logRecentView('bus', id);\n  BusField.setAttribute('displayed', 'true');\n  initializeBusPage(id);\n  closePreviousPage();\n}\n\nexport function closeBus(): void {\n  // revokePageHistory('Bus');\n  BusField.setAttribute('displayed', 'false');\n  openPreviousPage();\n}\n\nasync function initializeBusPage(id: number) {\n  setUpBusPropertiesFieldSkeletonScreen(BusGroupProperties);\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const requestID = generateIdentifier('r');\n  const integration = await integrateBus(id, requestID);\n  updateBusPropertiesField(BusGroupProperties, integration.properties, false, playing_animation);\n}\n\nfunction updateBusField(Field: HTMLElement, integration: object, skeletonScreen: boolean): void {\n  function updateProperty(thisElement: HTMLElement, thisItem: object): void {}\n  function updateLocation(thisElement: HTMLElement, thisItem: object): void {}\n}\n","import { createFolder } from '../../data/folder/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { closePreviousPage, openPreviousPage, pushPageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst FolderCreatorField = documentQuerySelector('.css_folder_creator_field');\nconst FolderCreatorBodyElement = elementQuerySelector(FolderCreatorField, '.css_folder_creator_body');\nconst FolderCreatorGroupsElement = elementQuerySelector(FolderCreatorBodyElement, '.css_folder_creator_groups');\nconst NameInputElement = elementQuerySelector(FolderCreatorGroupsElement, '.css_folder_creator_group[group=\"folder-name\"] .css_folder_creator_group_body input');\nconst IconInputElement = elementQuerySelector(FolderCreatorGroupsElement, '.css_folder_creator_group[group=\"folder-icon\"] .css_folder_creator_group_body .css_folder_creator_icon_input input');\n\nexport function createFormulatedFolder(): void {\n  const name = NameInputElement.value;\n  const icon = IconInputElement.value;\n  createFolder(name, icon).then((e) => {\n    if (e) {\n      closeFolderCreator();\n      promptMessage('已建立資料夾', 'folder');\n    } else {\n      promptMessage('無法建立資料夾', 'error');\n    }\n  });\n}\n\nexport function openFolderCreator(): void {\n  pushPageHistory('FolderCreator');\n  FolderCreatorField.setAttribute('displayed', 'true');\n  closePreviousPage();\n}\n\nexport function closeFolderCreator(): void {\n  // revokePageHistory('FolderCreator');\n  FolderCreatorField.setAttribute('displayed', 'false');\n  openPreviousPage();\n}\n","import { getDataUsageStats } from '../../data/analytics/data-usage/index';\nimport { convertBytes } from '../../tools/convert';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { dateToString } from '../../tools/time';\nimport { closePreviousPage, openPreviousPage, pushPageHistory, querySize } from '../index';\n\nconst dataUsageField = documentQuerySelector('.css_data_usage_field');\nconst dataUsageBodyElement = elementQuerySelector(dataUsageField, '.css_data_usage_body');\nconst chartElement = elementQuerySelector(dataUsageBodyElement, '.css_data_usage_chart');\nconst statisticsElement = elementQuerySelector(dataUsageBodyElement, '.css_data_usage_statistics');\nconst totalDataUsageElement = elementQuerySelector(statisticsElement, '.css_data_usage_statistics_item[name=\"total-data-usage\"] .css_data_usage_statistics_item_value');\nconst startTimeElement = elementQuerySelector(statisticsElement, '.css_data_usage_statistics_item[name=\"start-time\"] .css_data_usage_statistics_item_value');\nconst endTimeElement = elementQuerySelector(statisticsElement, '.css_data_usage_statistics_item[name=\"end-time\"] .css_data_usage_statistics_item_value');\n\nasync function initializeDataUsage() {\n  const WindowSize = querySize('window');\n  const graphWidth = WindowSize.width;\n  const graphHeight = Math.min((5 / 18) * graphWidth, WindowSize.height * 0.33);\n  const stats = await getDataUsageStats(graphWidth, graphHeight, 20);\n  totalDataUsageElement.innerText = convertBytes(stats.stats.sum);\n  startTimeElement.innerText = dateToString(stats.period.start, 'YYYY-MM-DD');\n  endTimeElement.innerText = dateToString(stats.period.end, 'YYYY-MM-DD');\n  chartElement.innerHTML = stats.chart;\n}\n\nexport function openDataUsage(): void {\n  pushPageHistory('DataUsage');\n  dataUsageField.setAttribute('displayed', 'true');\n  initializeDataUsage();\n  closePreviousPage();\n}\n\nexport function closeDataUsage(): void {\n  // revokePageHistory('DataUsage');\n  dataUsageField.setAttribute('displayed', 'false');\n  openPreviousPage();\n}\n","import { getMaterialSymbols } from '../../data/apis/getMaterialSymbols/index';\nimport { deleteDataReceivingProgress } from '../../data/apis/loader';\nimport { prepareForMaterialSymbolsSearch, searchForMaterialSymbols } from '../../data/search/searchMaterialSymbols';\nimport { generateIdentifier } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { containPhoneticSymbols } from '../../tools/text';\nimport { dataDownloadCompleted } from '../home/index';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\ntype Target = 'editor' | 'creator' | '';\n\nlet currentTarget: Target = '';\n\nconst folderEditorField = documentQuerySelector('.css_folder_editor_field');\nconst folderCreatorField = documentQuerySelector('.css_folder_creator_field');\nconst folderIconSelectorField = documentQuerySelector('.css_folder_icon_selector_field');\n\nfunction generateElementOfSymbol(symbol: string): GeneratedElement {\n  // const identifier = generateIdentifier('i');\n  const element = document.createElement('div');\n  // element.id = identifier;\n  element.classList.add('css_folder_icon_selector_symbol');\n  element.setAttribute('onclick', `bus.folder.selectFolderIcon('${symbol}', '${currentTarget}')`);\n  element.innerHTML = getIconHTML(symbol);\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nasync function initializeFolderIconSelectorField() {\n  const materialSymbolsElement = elementQuerySelector(folderIconSelectorField, '.css_folder_icon_selector_body .css_folder_icon_selector_material_symbols');\n  materialSymbolsElement.innerHTML = '';\n  const requestID = generateIdentifier('r');\n  const materialSymbols = await getMaterialSymbols(requestID);\n  deleteDataReceivingProgress(requestID);\n  const fragment = new DocumentFragment();\n  for (const symbol of materialSymbols) {\n    const symbolElement = generateElementOfSymbol(symbol, currentTarget);\n    fragment.appendChild(symbolElement.element);\n  }\n  materialSymbolsElement.append(fragment);\n}\n\nexport function updateMaterialSymbolsSearchResult(query: string): void {\n  const materialSymbolsSearchResultsElement = elementQuerySelector(folderIconSelectorField, '.css_folder_icon_selector_body .css_folder_icon_selector_material_symbols_search_results');\n  const materialSymbolsElement = elementQuerySelector(folderIconSelectorField, '.css_folder_icon_selector_body .css_folder_icon_selector_material_symbols');\n  if (!containPhoneticSymbols(query)) {\n    const searchResults = searchForMaterialSymbols(query, 100);\n    const fragment = new DocumentFragment();\n    for (const result of searchResults) {\n      const symbolElement = generateElementOfSymbol(result.item, currentTarget);\n      fragment.appendChild(symbolElement.element);\n    }\n    materialSymbolsSearchResultsElement.innerHTML = '';\n    materialSymbolsSearchResultsElement.append(fragment);\n    materialSymbolsSearchResultsElement.setAttribute('displayed', searchResults.length > 0 ? 'true' : 'false');\n    materialSymbolsElement.setAttribute('displayed', searchResults.length > 0 ? 'false' : 'true');\n  }\n}\n\nexport function selectFolderIcon(symbol: string): void {\n  let iconInputElement;\n  switch (currentTarget) {\n    case 'editor':\n      iconInputElement = elementQuerySelector(folderEditorField, '.css_folder_editor_body .css_folder_editor_groups .css_folder_editor_group[group=\"folder-icon\"] .css_folder_editor_group_body .css_folder_editor_icon_input input');\n      break;\n    case 'creator':\n      iconInputElement = elementQuerySelector(folderCreatorField, '.css_folder_creator_body .css_folder_creator_groups .css_folder_creator_group[group=\"folder-icon\"] .css_folder_creator_group_body .css_folder_creator_icon_input input');\n      break;\n    default:\n      break;\n  }\n  iconInputElement.value = symbol;\n  closeFolderIconSelector();\n}\n\nexport function openFolderIconSelector(target: Target): void {\n  pushPageHistory('FolderIconSelector');\n  var openFolderIconSelectorElement;\n  switch (target) {\n    case 'editor':\n      currentTarget = 'editor';\n      openFolderIconSelectorElement = elementQuerySelector(folderEditorField, '.css_folder_editor_body .css_folder_editor_groups .css_folder_editor_group[group=\"folder-icon\"] .css_folder_editor_group_body .css_folder_editor_icon_input .css_folder_editor_open_folder_icon_selector');\n      break;\n    case 'creator':\n      currentTarget = 'creator';\n      openFolderIconSelectorElement = elementQuerySelector(folderCreatorField, '.css_folder_creator_body .css_folder_creator_groups .css_folder_creator_group[group=\"folder-icon\"] .css_folder_creator_group_body .css_folder_creator_icon_input .css_folder_creator_open_folder_icon_selector');\n      break;\n    default:\n      break;\n  }\n  if (openFolderIconSelectorElement.getAttribute('disabled') === 'false') {\n    if (dataDownloadCompleted) {\n      folderIconSelectorField.setAttribute('displayed', 'true');\n      initializeFolderIconSelectorField(currentTarget);\n      prepareForMaterialSymbolsSearch();\n    } else {\n      promptMessage('資料還在下載中', 'download_for_offline');\n    }\n  }\n}\n\nexport function closeFolderIconSelector(): void {\n  revokePageHistory('FolderIconSelector');\n  folderIconSelectorField.setAttribute('displayed', 'false');\n}\n","import { recoverBusArrivalTimeDataFromWriteAheadLog } from './data/analytics/bus-arrival-time/index';\r\nimport { discardExpiredDataUsageStats } from './data/analytics/data-usage/index';\r\nimport { discardExpiredUpdateRateDataGroups, initializeUpdateRateDataGroups, recoverUpdateRateDataFromWriteAheadLog } from './data/analytics/update-rate/index';\r\nimport { initializeFolderList } from './data/folder/index';\r\nimport { discardExpiredNotificationSchedules, initializeNotificationSchedules, loadNotificationClient } from './data/notification/index';\r\nimport { discardExpiredRecentViews } from './data/recent-views/index';\r\nimport { initializeSettings } from './data/settings/index';\r\nimport { checkAppVersion } from './data/settings/version';\r\nimport { askForCalibratingPermission } from './data/user-orientation/index';\r\nimport { askForPositioningPermission } from './data/user-position/index';\r\nimport { closeBus, openBus } from './interface/bus/index';\r\nimport { closeDataUsage, openDataUsage } from './interface/data-usage/index';\r\nimport { closeFolderCreator, createFormulatedFolder, openFolderCreator } from './interface/folder-creator/index';\r\nimport { closeFolderEditor, moveItemOnFolderEditor, openFolderEditor, removeItemOnFolderEditor, saveEditedFolder } from './interface/folder-editor/index';\r\nimport { closeFolderIconSelector, openFolderIconSelector, selectFolderIcon, updateMaterialSymbolsSearchResult } from './interface/folder-icon-selector/index';\r\nimport { closeFolderManager, openFolderManager } from './interface/folder-manager/index';\r\nimport { initializeFolders, setUpFolderFieldSkeletonScreen } from './interface/home/folders/index';\r\nimport { downloadData } from './interface/home/index';\r\nimport { initializeRecentViews, setUpRecentViewsFieldSkeletonScreen } from './interface/home/recent-views/index';\r\nimport { fadeOutSplashScreen, setSplashScreenIconOffsetY } from './interface/index';\r\nimport { closeLocation, initializeLocationSliding, openLocation, stretchLocationItem, switchLocationBodyTab } from './interface/location/index';\r\nimport { cancelNotificationOnNotificationScheduleManager, closeNotificationScheduleManager, openNotificationScheduleManager } from './interface/notification-schedule-manager/index';\r\nimport { closePersonalScheduleCreator, createFormulatedPersonalSchedule, openPersonalScheduleCreator, switchPersonalScheduleCreatorDay } from './interface/personal-schedule-creator/index';\r\nimport { closePersonalScheduleEditor, openPersonalScheduleEditor, saveEditedPersonalSchedule, switchPersonalScheduleEditorDay } from './interface/personal-schedule-editor/index';\r\nimport { closePersonalScheduleManager, openPersonalScheduleManager } from './interface/personal-schedule-manager/index';\r\nimport { closeRegisterNotification, openRegisterNotification, saveFormulatedRegisterNotification } from './interface/register-notification/index';\r\nimport { shareRoutePermalink } from './interface/route/details/actions';\r\nimport { switchCalendarDay } from './interface/route/details/calendar';\r\nimport { closeRouteDetails, openRouteDetails } from './interface/route/details/index';\r\nimport { closeRoute, initializeRouteSliding, openRoute, stretchRouteItem, switchRoute, switchRouteBodyTab } from './interface/route/index';\r\nimport { closeSaveToFolder, openSaveToFolder, saveRouteOnDetailsPage, saveRouteOnRoute, saveStopItemOnLocation, saveStopItemOnRoute } from './interface/save-to-folder/index';\r\nimport { closeScheduleNotification, openScheduleNotification, scheduleNotificationForStopItemOnLocation, scheduleNotificationForStopItemOnRoute } from './interface/schedule-notification/index';\r\nimport { closeSearch, deleteCharFromInout, emptyInput, openSearch, openSystemKeyboard, resizeSearchInputCanvas, switchSearchTypeFilter, typeTextIntoInput, updateSearchInput, updateSearchResult } from './interface/search/index';\r\nimport { closeSettings, downloadExportFile, openFileToImportData, openSettings, showPromptToAskForPersistentStorage, viewCommitOfCurrentVersion } from './interface/settings/index';\r\nimport { closeSettingsOptions, openSettingsOptions, settingsOptionsHandler } from './interface/settings/options';\r\nimport { closeStorage, openStorage } from './interface/storage/index';\r\nimport { openPermalink } from './tools/permalink';\r\nimport { documentQuerySelector } from './tools/query-selector';\r\n\r\nimport './interface/theme.css';\r\n\r\nimport './interface/index.css';\r\n\r\nimport './interface/icons/index.css';\r\n\r\nimport './interface/animation.css';\r\n\r\nimport './interface/home/field.css';\r\nimport './interface/home/head.css';\r\nimport './interface/home/body.css';\r\n\r\nimport './interface/home/recent-views/recent-views.css';\r\nimport './interface/home/recent-views/item.css';\r\n\r\nimport './interface/home/folders/folders.css';\r\nimport './interface/home/folders/item.css';\r\n\r\nimport './interface/search/field.css';\r\nimport './interface/search/head.css';\r\nimport './interface/search/body.css';\r\nimport './interface/search/keyboard.css';\r\n\r\nimport './interface/route/field.css';\r\nimport './interface/route/head.css';\r\nimport './interface/route/groups.css';\r\nimport './interface/route/item.css';\r\nimport './interface/route/thread.css';\r\nimport './interface/route/index.css';\r\n\r\nimport './interface/route/details/field.css';\r\nimport './interface/route/details/head.css';\r\nimport './interface/route/details/body.css';\r\nimport './interface/route/details/groups.css';\r\nimport './interface/route/details/actions.css';\r\nimport './interface/route/details/properties.css';\r\nimport './interface/route/details/calendar.css';\r\n\r\nimport './interface/location/field.css';\r\nimport './interface/location/head.css';\r\nimport './interface/location/groups.css';\r\nimport './interface/location/group-details.css';\r\nimport './interface/location/group-items.css';\r\nimport './interface/location/index.css';\r\n\r\nimport './interface/bus/field.css';\r\nimport './interface/bus/head.css';\r\nimport './interface/bus/body.css';\r\nimport './interface/bus/groups.css';\r\nimport './interface/bus/properties.css';\r\n\r\nimport './interface/settings/index.css';\r\n\r\nimport './interface/save-to-folder/field.css';\r\nimport './interface/save-to-folder/head.css';\r\nimport './interface/save-to-folder/body.css';\r\nimport './interface/save-to-folder/list.css';\r\nimport './interface/save-to-folder/item.css';\r\n\r\nimport './interface/folder-manager/field.css';\r\nimport './interface/folder-manager/head.css';\r\nimport './interface/folder-manager/body.css';\r\nimport './interface/folder-manager/list.css';\r\nimport './interface/folder-manager/item.css';\r\n\r\nimport './interface/folder-editor/field.css';\r\nimport './interface/folder-editor/head.css';\r\nimport './interface/folder-editor/body.css';\r\nimport './interface/folder-editor/groups.css';\r\nimport './interface/folder-editor/folder-name.css';\r\nimport './interface/folder-editor/folder-icon.css';\r\nimport './interface/folder-editor/folder-content.css';\r\n\r\nimport './interface/folder-creator/field.css';\r\nimport './interface/folder-creator/head.css';\r\nimport './interface/folder-creator/body.css';\r\nimport './interface/folder-creator/groups.css';\r\nimport './interface/folder-creator/folder-name.css';\r\nimport './interface/folder-creator/folder-icon.css';\r\n\r\nimport './interface/folder-icon-selector/field.css';\r\nimport './interface/folder-icon-selector/head.css';\r\nimport './interface/folder-icon-selector/body.css';\r\nimport './interface/folder-icon-selector/symbols.css';\r\n\r\nimport './interface/personal-schedule-manager/field.css';\r\nimport './interface/personal-schedule-manager/head.css';\r\nimport './interface/personal-schedule-manager/body.css';\r\nimport './interface/personal-schedule-manager/list.css';\r\nimport './interface/personal-schedule-manager/item.css';\r\n\r\nimport './interface/personal-schedule-creator/field.css';\r\nimport './interface/personal-schedule-creator/head.css';\r\nimport './interface/personal-schedule-creator/body.css';\r\nimport './interface/personal-schedule-creator/groups.css';\r\nimport './interface/personal-schedule-creator/schedule-name.css';\r\nimport './interface/personal-schedule-creator/schedule-start-time.css';\r\nimport './interface/personal-schedule-creator/schedule-end-time.css';\r\nimport './interface/personal-schedule-creator/schedule-days.css';\r\n\r\nimport './interface/personal-schedule-editor/field.css';\r\nimport './interface/personal-schedule-editor/head.css';\r\nimport './interface/personal-schedule-editor/body.css';\r\nimport './interface/personal-schedule-editor/groups.css';\r\nimport './interface/personal-schedule-editor/schedule-name.css';\r\nimport './interface/personal-schedule-editor/schedule-start-time.css';\r\nimport './interface/personal-schedule-editor/schedule-end-time.css';\r\nimport './interface/personal-schedule-editor/schedule-days.css';\r\n\r\nimport './interface/notification-schedule-manager/field.css';\r\nimport './interface/notification-schedule-manager/head.css';\r\nimport './interface/notification-schedule-manager/body.css';\r\nimport './interface/notification-schedule-manager/list.css';\r\nimport './interface/notification-schedule-manager/item.css';\r\n\r\nimport './interface/register-notification/field.css';\r\nimport './interface/register-notification/head.css';\r\nimport './interface/register-notification/body.css';\r\nimport './interface/register-notification/groups.css';\r\nimport './interface/register-notification/provider.css';\r\nimport './interface/register-notification/registration-key.css';\r\n\r\nimport './interface/schedule-notification/field.css';\r\nimport './interface/schedule-notification/head.css';\r\nimport './interface/schedule-notification/body.css';\r\nimport './interface/schedule-notification/list.css';\r\nimport './interface/schedule-notification/item.css';\r\n\r\nimport './interface/data-usage/field.css';\r\nimport './interface/data-usage/head.css';\r\nimport './interface/data-usage/body.css';\r\nimport './interface/data-usage/chart.css';\r\nimport './interface/data-usage/statistics.css';\r\n\r\nimport './interface/storage/field.css';\r\nimport './interface/storage/head.css';\r\nimport './interface/storage/body.css';\r\nimport './interface/storage/statistics.css';\r\n\r\nimport './interface/prompt/index.css';\r\n\r\nlet bus_initialized = false;\r\nlet bus_secondly_initialized = false;\r\n\r\nwindow.bus = {\r\n  initialize: function () {\r\n    if (bus_initialized === false) {\r\n      bus_initialized = true;\r\n      setSplashScreenIconOffsetY();\r\n      initializeSettings().then(function () {\r\n        setUpRecentViewsFieldSkeletonScreen();\r\n        setUpFolderFieldSkeletonScreen();\r\n        checkAppVersion()\r\n          .then((status) => {\r\n            if (status === 'ok') {\r\n              initializeRouteSliding();\r\n              initializeLocationSliding();\r\n              resizeSearchInputCanvas();\r\n              window.addEventListener('resize', () => {\r\n                resizeSearchInputCanvas();\r\n              });\r\n              if (screen) {\r\n                if (screen.orientation) {\r\n                  screen.orientation.addEventListener('change', () => {\r\n                    resizeSearchInputCanvas();\r\n                  });\r\n                }\r\n              }\r\n              initializeRecentViews();\r\n              initializeFolderList().then(() => {\r\n                initializeFolders();\r\n              });\r\n              const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n              const searchInputElement = documentQuerySelector('.css_search_field .css_search_head .css_search_search_input #search_input') as HTMLInputElement;\r\n              mediaQuery.addEventListener('change', function () {\r\n                updateSearchInput(searchInputElement.selectionStart, searchInputElement.selectionEnd);\r\n              });\r\n              searchInputElement.addEventListener('paste', function () {\r\n                updateSearchResult();\r\n                updateSearchInput(searchInputElement.selectionStart, searchInputElement.selectionEnd);\r\n              });\r\n              searchInputElement.addEventListener('cut', function () {\r\n                updateSearchResult();\r\n                updateSearchInput(searchInputElement.selectionStart, searchInputElement.selectionEnd);\r\n              });\r\n              searchInputElement.addEventListener('selectionchange', function () {\r\n                updateSearchResult();\r\n                updateSearchInput(searchInputElement.selectionStart, searchInputElement.selectionEnd);\r\n              });\r\n              document.addEventListener('selectionchange', function () {\r\n                updateSearchResult();\r\n                updateSearchInput(searchInputElement.selectionStart, searchInputElement.selectionEnd);\r\n              });\r\n              searchInputElement.addEventListener('keyup', function () {\r\n                updateSearchResult();\r\n                updateSearchInput(searchInputElement.selectionStart, searchInputElement.selectionEnd);\r\n              });\r\n\r\n              const searchMaterialSymbolsInputElement = documentQuerySelector('.css_folder_icon_selector_field .css_folder_icon_selector_head .css_folder_icon_selector_search_input #search_material_symbols_input') as HTMLInputElement;\r\n              searchMaterialSymbolsInputElement.addEventListener('paste', function () {\r\n                updateMaterialSymbolsSearchResult(searchMaterialSymbolsInputElement.value);\r\n              });\r\n              searchMaterialSymbolsInputElement.addEventListener('cut', function () {\r\n                updateMaterialSymbolsSearchResult(searchMaterialSymbolsInputElement.value);\r\n              });\r\n              searchMaterialSymbolsInputElement.addEventListener('selectionchange', function () {\r\n                updateMaterialSymbolsSearchResult(searchMaterialSymbolsInputElement.value);\r\n              });\r\n              document.addEventListener('selectionchange', function () {\r\n                updateMaterialSymbolsSearchResult(searchMaterialSymbolsInputElement.value);\r\n              });\r\n              searchMaterialSymbolsInputElement.addEventListener('keyup', function () {\r\n                updateMaterialSymbolsSearchResult(searchMaterialSymbolsInputElement.value);\r\n              });\r\n              openPermalink();\r\n              fadeOutSplashScreen(function () {\r\n                loadNotificationClient();\r\n                initializeNotificationSchedules().then(function () {\r\n                  discardExpiredNotificationSchedules();\r\n                });\r\n                document.addEventListener(\r\n                  'click',\r\n                  function () {\r\n                    askForPositioningPermission();\r\n                    askForCalibratingPermission();\r\n                  },\r\n                  { once: true }\r\n                );\r\n              });\r\n            }\r\n            if (status === 'fetchError' || status === 'unknownError') {\r\n              fadeOutSplashScreen();\r\n              alert(status);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            fadeOutSplashScreen();\r\n            alert(error);\r\n          });\r\n      });\r\n    }\r\n  },\r\n  secondlyInitialize: function () {\r\n    if (!bus_secondly_initialized) {\r\n      bus_secondly_initialized = true;\r\n      downloadData();\r\n      discardExpiredUpdateRateDataGroups();\r\n      discardExpiredDataUsageStats();\r\n      recoverBusArrivalTimeDataFromWriteAheadLog();\r\n      discardExpiredRecentViews();\r\n      discardExpiredUpdateRateDataGroups().then(function () {\r\n        initializeUpdateRateDataGroups().then(function () {\r\n          recoverUpdateRateDataFromWriteAheadLog();\r\n        });\r\n      });\r\n    }\r\n  },\r\n  route: {\r\n    stretchRouteItem,\r\n    openRoute,\r\n    closeRoute,\r\n    switchRoute,\r\n    switchRouteBodyTab,\r\n    openRouteDetails,\r\n    closeRouteDetails,\r\n    shareRoutePermalink,\r\n    switchCalendarDay\r\n  },\r\n  location: {\r\n    openLocation,\r\n    closeLocation,\r\n    stretchLocationItem,\r\n    switchLocationBodyTab\r\n  },\r\n  folder: {\r\n    openSaveToFolder,\r\n    closeSaveToFolder,\r\n    openFolderManager,\r\n    closeFolderManager,\r\n    openFolderEditor,\r\n    closeFolderEditor,\r\n    openFolderIconSelector,\r\n    closeFolderIconSelector,\r\n    openFolderCreator,\r\n    closeFolderCreator,\r\n    createFormulatedFolder,\r\n    saveEditedFolder,\r\n    selectFolderIcon,\r\n    saveStopItemOnRoute,\r\n    saveStopItemOnLocation,\r\n    saveRouteOnDetailsPage,\r\n    saveRouteOnRoute,\r\n    removeItemOnFolderEditor,\r\n    moveItemOnFolderEditor\r\n  },\r\n  search: {\r\n    openSearch,\r\n    closeSearch,\r\n    typeTextIntoInput,\r\n    deleteCharFromInout,\r\n    emptyInput,\r\n    openSystemKeyboard,\r\n    switchSearchTypeFilter\r\n  },\r\n  storage: {\r\n    openStorage,\r\n    closeStorage\r\n  },\r\n  dataUsage: {\r\n    openDataUsage,\r\n    closeDataUsage\r\n  },\r\n  personalSchedule: {\r\n    openPersonalScheduleManager,\r\n    closePersonalScheduleManager,\r\n    openPersonalScheduleCreator,\r\n    closePersonalScheduleCreator,\r\n    createFormulatedPersonalSchedule,\r\n    switchPersonalScheduleCreatorDay,\r\n    openPersonalScheduleEditor,\r\n    closePersonalScheduleEditor,\r\n    switchPersonalScheduleEditorDay,\r\n    saveEditedPersonalSchedule\r\n  },\r\n  settings: {\r\n    openSettings,\r\n    closeSettings,\r\n    openSettingsOptions,\r\n    closeSettingsOptions,\r\n    settingsOptionsHandler,\r\n    downloadExportFile,\r\n    openFileToImportData,\r\n    viewCommitOfCurrentVersion,\r\n    showPromptToAskForPersistentStorage\r\n  },\r\n  bus: {\r\n    openBus,\r\n    closeBus\r\n  },\r\n  notification: {\r\n    openNotificationScheduleManager,\r\n    closeNotificationScheduleManager,\r\n    openRegisterNotification,\r\n    closeRegisterNotification,\r\n    saveFormulatedRegisterNotification,\r\n    openScheduleNotification,\r\n    closeScheduleNotification,\r\n    scheduleNotificationForStopItemOnRoute,\r\n    scheduleNotificationForStopItemOnLocation,\r\n    cancelNotificationOnNotificationScheduleManager\r\n  }\r\n};\r\n\r\nexport default window.bus;\r\n","import { convertPositionsToDistance } from '../../tools/convert';\nimport { BusArrivalTime, getBusArrivalTimes } from '../analytics/bus-arrival-time/index';\nimport { getBusData } from '../apis/getBusData/index';\nimport { getBusEvent } from '../apis/getBusEvent/index';\nimport { getEstimateTime } from '../apis/getEstimateTime/index';\nimport { getLocation, IndexedLocation, IndexedLocationItem, MergedLocation, SimplifiedLocation, SimplifiedLocationItem } from '../apis/getLocation/index';\nimport { getRoute, SimplifiedRoute, SimplifiedRouteItem } from '../apis/getRoute/index';\nimport { getSegmentBuffers, SimplifiedSegmentBufferItem } from '../apis/getSegmentBuffers/index';\nimport { getStop, SimplifiedStopItem } from '../apis/getStop/index';\nimport { batchFindBusesForRoute, EstimateTimeStatus, formatBus, FormattedBus, parseEstimateTime } from '../apis/index';\nimport { deleteDataReceivingProgress, deleteDataUpdateTime, getDataUpdateTime, setDataReceivingProgress } from '../apis/loader';\nimport { getSettingOptionValue } from '../settings/index';\nimport { getNearestPosition } from '../user-position/index';\n\ninterface formattedOverlappingRoute {\n  name: string;\n  RouteEndPoints: {\n    RouteDeparture: string;\n    RouteDestination: string;\n    text: string;\n    html: string;\n  };\n  RouteID: number;\n  PathAttributeId: Array<number>;\n}\n\nexport interface integratedStopItemPosition {\n  longitude: number;\n  latitude: number;\n}\n\nexport interface integratedStopItemSegmentBuffer {\n  isSegmentBuffer: boolean;\n  isStartingPoint: boolean;\n  isEndingPoint: boolean;\n}\n\nexport interface integratedStopItemNearbyLocationItem {\n  name: string;\n  distance: number;\n  hash: string;\n}\n\nexport interface integratedStopItem {\n  name: string;\n  goBack: '0' | '1' | '2';\n  status: EstimateTimeStatus;\n  buses: Array<FormattedBus>;\n  overlappingRoutes: Array<formattedOverlappingRoute>;\n  busArrivalTimes: Array<BusArrivalTime>;\n  nearbyLocations: Array<integratedStopItemNearbyLocationItem>;\n  sequence: number;\n  position: integratedStopItemPosition;\n  nearest: boolean;\n  segmentBuffer: integratedStopItemSegmentBuffer;\n  progress: number;\n  id: number;\n}\n\nexport interface IntegratedRoute {\n  groupedItems: { [key: string]: Array<integratedStopItem> };\n  groupQuantity: number;\n  itemQuantity: { [key: string]: number };\n  RouteName: string;\n  RouteEndPoints: {\n    RouteDeparture: string;\n    RouteDestination: string;\n  };\n  dataUpdateTime: number;\n  RouteID: number;\n  PathAttributeId: Array<number>;\n}\n\nexport async function integrateRoute(RouteID: number, PathAttributeId: Array<number>, chartWidth: number, chartHeight: number, requestID: string): Promise<IntegratedRoute> {\n  setDataReceivingProgress(requestID, 'getRoute_0', 0, false);\n  setDataReceivingProgress(requestID, 'getRoute_1', 0, false);\n  setDataReceivingProgress(requestID, 'getStop_0', 0, false);\n  setDataReceivingProgress(requestID, 'getStop_1', 0, false);\n  setDataReceivingProgress(requestID, 'getLocation_0', 0, false);\n  setDataReceivingProgress(requestID, 'getLocation_1', 0, false);\n  setDataReceivingProgress(requestID, 'getSegmentBuffers_0', 0, false);\n  setDataReceivingProgress(requestID, 'getSegmentBuffers_1', 0, false);\n  setDataReceivingProgress(requestID, 'getEstimateTime_0', 0, false);\n  setDataReceivingProgress(requestID, 'getEstimateTime_1', 0, false);\n  setDataReceivingProgress(requestID, 'getBusEvent_0', 0, false);\n  setDataReceivingProgress(requestID, 'getBusEvent_1', 0, false);\n  setDataReceivingProgress(requestID, 'getBusData_0', 0, false);\n  setDataReceivingProgress(requestID, 'getBusData_1', 0, false);\n  const Route = (await getRoute(requestID, true)) as SimplifiedRoute;\n  const Stop = await getStop(requestID);\n  const SimplifiedLocation = (await getLocation(requestID, 0)) as SimplifiedLocation;\n  const MergedLocation = (await getLocation(requestID, 1)) as MergedLocation;\n  const IndexedLocation = (await getLocation(requestID, 2)) as IndexedLocation;\n  const SegmentBuffers = await getSegmentBuffers(requestID);\n  const EstimateTime = await getEstimateTime(requestID);\n  const BusEvent = await getBusEvent(requestID);\n  const BusData = await getBusData(requestID);\n  const BusArrivalTimes = await getBusArrivalTimes(chartWidth, chartHeight);\n\n  const batchFoundBuses = batchFindBusesForRoute(BusEvent, BusData, Route, RouteID, PathAttributeId);\n\n  let hasSegmentBuffers: boolean = false;\n  let thisSegmentBuffers: SimplifiedSegmentBufferItem = {};\n  if (SegmentBuffers.hasOwnProperty(`r_${RouteID}`)) {\n    hasSegmentBuffers = true;\n    thisSegmentBuffers = SegmentBuffers[`r_${RouteID}`];\n  }\n\n  const time_formatting_mode = getSettingOptionValue('time_formatting_mode') as number;\n\n  let result = [];\n  let positions = [];\n\n  for (const item of EstimateTime) {\n    let integratedStopItem = {} as integratedStopItem;\n\n    const thisRouteID = item.RouteID;\n\n    // Check whether this stop is on this route or not\n    if ([RouteID, RouteID * 10].includes(thisRouteID) || PathAttributeId.includes(thisRouteID)) {\n      // Parse estimate time\n      integratedStopItem.status = parseEstimateTime(item?.EstimateTime, time_formatting_mode);\n\n      // Collect data from 'Stop'\n      const thisStopKey = `s_${item.StopID}`;\n      let thisStop = {} as SimplifiedStopItem;\n      if (Stop.hasOwnProperty(thisStopKey)) {\n        thisStop = Stop[thisStopKey];\n      } else {\n        continue;\n      }\n      integratedStopItem.id = item.StopID;\n      integratedStopItem.sequence = thisStop.seqNo;\n      integratedStopItem.goBack = thisStop.goBack;\n\n      // Collect data from 'SimplifiedLocation'\n      const thisLocationKey = `l_${thisStop.stopLocationId}`;\n      let thisSimplifiedLocation = {} as SimplifiedLocationItem;\n      if (SimplifiedLocation.hasOwnProperty(thisLocationKey)) {\n        thisSimplifiedLocation = SimplifiedLocation[thisLocationKey];\n      } else {\n        continue;\n      }\n      integratedStopItem.name = thisSimplifiedLocation.n;\n      integratedStopItem.overlappingRoutes = thisSimplifiedLocation.r\n        .filter((id: number) => id !== RouteID)\n        .map((id: number) => {\n          const overlappingRouteKey = `r_${id}`;\n          if (Route.hasOwnProperty(overlappingRouteKey)) {\n            const overlappingRoute = Route[overlappingRouteKey] as SimplifiedRouteItem;\n            const formattedOverlappingRoute = {\n              name: overlappingRoute.n,\n              RouteEndPoints: {\n                RouteDeparture: overlappingRoute.dep,\n                RouteDestination: overlappingRoute.des,\n                text: `${overlappingRoute.dep} \\u2194 ${overlappingRoute.des}`, //u2194 -> '↔'\n                html: `<span>${overlappingRoute.dep}</span><span>\\u2194</span><span>${overlappingRoute.des}</span>`\n              },\n              RouteID: overlappingRoute.id,\n              PathAttributeId: overlappingRoute.pid\n            };\n            return formattedOverlappingRoute;\n          } else {\n            return null;\n          }\n        })\n        .filter((e) => {\n          return e !== null;\n        });\n      integratedStopItem.position = {\n        longitude: thisSimplifiedLocation.lo,\n        latitude: thisSimplifiedLocation.la\n      };\n      positions.push({\n        latitude: thisSimplifiedLocation.la,\n        longitude: thisSimplifiedLocation.lo,\n        id: item.StopID\n      });\n\n      // Collect data from 'IndexedLocation' and 'MergedLocation'\n      const thisSimplifiedLocationGeohash = thisSimplifiedLocation.g;\n      let thisIndexedLocationItem: Array<IndexedLocationItem> = [];\n      if (IndexedLocation.hasOwnProperty(thisSimplifiedLocationGeohash)) {\n        thisIndexedLocationItem = IndexedLocation[thisSimplifiedLocationGeohash];\n      }\n      let nearbyLocations: Array<integratedStopItemNearbyLocationItem> = [];\n      for (const item of thisIndexedLocationItem) {\n        const mergedLocationKey = `ml_${item.hash}`;\n        if (MergedLocation.hasOwnProperty(mergedLocationKey)) {\n          const thisMergedLocation = MergedLocation[mergedLocationKey];\n          const nearbyLocationItem: integratedStopItemNearbyLocationItem = {\n            name: thisMergedLocation.n,\n            distance: convertPositionsToDistance(thisMergedLocation.la[0], thisMergedLocation.lo[0], thisSimplifiedLocation.la, thisSimplifiedLocation.lo) | 0,\n            hash: thisMergedLocation.hash\n          };\n          nearbyLocations.push(nearbyLocationItem);\n        }\n      }\n      nearbyLocations.sort(function (a, b) {\n        return a.distance - b.distance;\n      });\n      integratedStopItem.nearbyLocations = nearbyLocations;\n\n      // Collect data from 'batchFoundBuses'\n      let buses = []; // as Array<FormattedBus>\n      for (const overlappingStopID of thisSimplifiedLocation.s) {\n        const overlappingStopKey = `s_${overlappingStopID}`;\n        if (batchFoundBuses.hasOwnProperty(overlappingStopKey)) {\n          buses.push(batchFoundBuses[overlappingStopKey].map((e) => formatBus(e)));\n        }\n      }\n      integratedStopItem.buses = buses.flat().sort(function (a, b) {\n        return a.index - b.index;\n      });\n\n      // Collect data from 'BusArrivalTimes'\n      let thisBusArrivalTimes = [];\n      if (BusArrivalTimes.hasOwnProperty(thisStopKey)) {\n        thisBusArrivalTimes = BusArrivalTimes[thisStopKey];\n      }\n      integratedStopItem.busArrivalTimes = thisBusArrivalTimes;\n\n      // Check whether this stop is segment buffer\n      let isSegmentBuffer: boolean = false;\n      let isStartingPoint: boolean = false;\n      let isEndingPoint: boolean = false;\n      let useReversed: boolean = false;\n      if (hasSegmentBuffers) {\n        const groupKey = `g_${integratedStopItem.goBack}`;\n        let segmentBufferGroup = [];\n\n        if (thisSegmentBuffers.hasOwnProperty(groupKey)) {\n          segmentBufferGroup = thisSegmentBuffers[groupKey];\n        } else {\n          if (integratedStopItem.goBack === '1') {\n            useReversed = true;\n            segmentBufferGroup = thisSegmentBuffers['g_0'];\n          }\n        }\n\n        for (const thisBufferZone of segmentBufferGroup) {\n          if (thisBufferZone.OriginStopID === item.StopID || thisBufferZone.DestinationStopID === item.StopID) {\n            isSegmentBuffer = true;\n          }\n          if (useReversed) {\n            if (thisBufferZone.OriginStopID === item.StopID) {\n              isEndingPoint = true;\n            }\n            if (thisBufferZone.DestinationStopID === item.StopID) {\n              isStartingPoint = true;\n            }\n          } else {\n            if (thisBufferZone.OriginStopID === item.StopID) {\n              isStartingPoint = true;\n            }\n            if (thisBufferZone.DestinationStopID === item.StopID) {\n              isEndingPoint = true;\n            }\n          }\n        }\n      }\n      integratedStopItem.segmentBuffer = {\n        isSegmentBuffer,\n        isStartingPoint,\n        isEndingPoint\n      };\n\n      result.push(integratedStopItem);\n    }\n  }\n\n  result.sort(function (a, b) {\n    return a.sequence - b.sequence;\n  });\n\n  const nearestPosition = getNearestPosition(positions, 450);\n\n  let isBufferZoneOpened: boolean = false;\n  let isBufferZoneClosed: boolean = false;\n\n  let groupedItems: { [key: string]: Array<integratedStopItem> } = {};\n  let groupQuantity: number = 0;\n  let itemQuantity: { [key: string]: number } = {};\n\n  const resultLength = result.length;\n\n  for (let index = 0; index < resultLength; index++) {\n    let item = result[index];\n    const nextItem = result[index + 1] || item;\n    let progress = 0;\n\n    if (item.buses.length > 0) {\n      if (item.buses[0].onThisRoute) {\n        const [x, y] = [item.buses[0].position.longitude, item.buses[0].position.latitude];\n        const [x1, y1] = [item.position.longitude, item.position.latitude];\n        const [x2, y2] = [nextItem.position.longitude, nextItem.position.latitude];\n        const dotProduct = (x - x1) * (x2 - x) + (y - y1) * (y2 - y);\n        if (dotProduct >= 0) {\n          // ensure that (x, y) is between (x1, y1) and (x2, y2)\n          const distance1 = Math.hypot(x - x1, y - y1);\n          const distance2 = Math.hypot(x - x2, y - y2);\n          progress = Math.max(0, Math.min(distance1 / (distance1 + distance2), 1));\n        }\n      }\n    }\n    item.progress = progress;\n\n    if (item.segmentBuffer.isStartingPoint) {\n      isBufferZoneOpened = true;\n    }\n\n    if (item.segmentBuffer.isEndingPoint) {\n      if (isBufferZoneOpened) {\n        isBufferZoneClosed = true;\n      }\n    }\n\n    if (isBufferZoneOpened && !isBufferZoneClosed) {\n      item.segmentBuffer.isSegmentBuffer = true;\n    }\n\n    if (isBufferZoneOpened && isBufferZoneClosed) {\n      isBufferZoneOpened = false;\n      isBufferZoneClosed = false;\n    }\n\n    let isNearest = false;\n    if (nearestPosition !== null) {\n      if (nearestPosition.id === item.id) {\n        isNearest = true;\n      }\n    }\n    item.nearest = isNearest;\n\n    const groupKey = `g_${item.goBack}` || 'g_0';\n\n    if (!groupedItems.hasOwnProperty(groupKey)) {\n      groupedItems[groupKey] = [];\n      itemQuantity[groupKey] = 0;\n      groupQuantity += 1;\n    }\n\n    groupedItems[groupKey].push(item);\n    itemQuantity[groupKey] += 1;\n  }\n\n  const thisRoute = Route[`r_${RouteID}`];\n  const thisRouteName = thisRoute.n;\n  const thisRouteDeparture = thisRoute.dep;\n  const thisRouteDestination = thisRoute.des;\n\n  const result2: IntegratedRoute = {\n    groupedItems: groupedItems,\n    groupQuantity: groupQuantity,\n    itemQuantity: itemQuantity,\n    RouteName: thisRouteName,\n    RouteEndPoints: {\n      RouteDeparture: thisRouteDeparture,\n      RouteDestination: thisRouteDestination\n    },\n    dataUpdateTime: getDataUpdateTime(requestID),\n    RouteID,\n    PathAttributeId\n  };\n\n  deleteDataReceivingProgress(requestID);\n  deleteDataUpdateTime(requestID);\n  // await recordEstimateTimeForUpdateRate(EstimateTime);\n  return result2;\n}\n","import { FolderWithContent, listFoldersWithContent } from '../../data/folder/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { getIconHTML } from '../icons/index';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\n\nconst FolderManagerField = documentQuerySelector('.css_folder_manager_field');\nconst FolderManagerBodyElement = elementQuerySelector(FolderManagerField, '.css_folder_manager_body');\nconst FolderManagerFolderListElement = elementQuerySelector(FolderManagerBodyElement, '.css_folder_manager_folder_list');\n\nfunction generateElementOfItem(item: FolderWithContent): GeneratedElement {\n  // const identifier = generateIdentifier('i');\n  const element = document.createElement('div');\n  element.classList.add('css_folder_manager_folder_item');\n  // element.id = identifier;\n  element.setAttribute('onclick', `bus.folder.openFolderEditor('${item.id}')`);\n  element.innerHTML = /*html*/ `<div class=\"css_folder_manager_folder_item_icon\">${getIconHTML(item.icon)}</div><div class=\"css_folder_manager_folder_item_name\">${item.name}</div><div class=\"css_folder_manager_folder_item_status\">${item.contentLength}</div><div class=\"css_folder_manager_folder_item_arrow\">${getIconHTML('arrow_forward_ios')}</div>`;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nasync function initializeFolderManagerField() {\n  const foldersWithContent = await listFoldersWithContent();\n  FolderManagerFolderListElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  for (const item of foldersWithContent) {\n    const newItemElement = generateElementOfItem(item);\n    fragment.appendChild(newItemElement.element);\n  }\n  FolderManagerFolderListElement.append(fragment);\n}\n\nexport function openFolderManager(): void {\n  pushPageHistory('FolderManager');\n  FolderManagerField.setAttribute('displayed', 'true');\n  initializeFolderManagerField();\n  // closePreviousPage();\n}\n\nexport function closeFolderManager(): void {\n  revokePageHistory('FolderManager');\n  FolderManagerField.setAttribute('displayed', 'false');\n  // openPreviousPage();\n}\n","import { MaterialSymbols } from '../../interface/icons/material-symbols-type';\nimport { dateToString, dateValueToDayOfWeek, getThisWeekOrigin, offsetDate } from '../../tools/time';\nimport { getProvider, Provider, ProviderItem } from '../apis/getProvider/index';\nimport { getRoute, Route, RouteItem } from '../apis/getRoute/index';\nimport { getSemiTimeTable } from '../apis/getSemiTimeTable/index';\nimport { getTimeTable } from '../apis/getTimeTable/index';\nimport { parseTimeCode, TimeMoment, TimeRange } from '../apis/index';\nimport { deleteDataReceivingProgress, deleteDataUpdateTime } from '../apis/loader';\n\nfunction findRoute(Route: Route, RouteID: number): RouteItem {\n  let thisRoute = {} as RouteItem;\n  for (const item of Route) {\n    if (item.Id === RouteID) {\n      thisRoute = item;\n      break;\n    }\n  }\n  return thisRoute;\n}\n\nfunction findProvider(Provider: Provider, providerId: number): ProviderItem {\n  let thisProvider = {} as ProviderItem;\n  for (const item of Provider) {\n    if (item.id === providerId) {\n      thisProvider = item;\n    }\n  }\n  return thisProvider;\n}\n\nexport interface CalendarEvent {\n  date: Date;\n  dateString: string;\n  duration: number;\n  deviation: number;\n}\n\nexport type CalendarEventGroup = Array<CalendarEvent>;\n\nexport interface CalendarDay {\n  name: string;\n  day: number;\n  code: string;\n}\n\nexport interface Calendar {\n  calendarDays: {\n    [key: string]: CalendarDay;\n  };\n  calendarDayQuantity: 7;\n  calendarEventGroups: {\n    [key: string]: CalendarEventGroup;\n  };\n  calendarEventQuantity: {\n    [key: string]: number;\n  };\n}\n\nfunction generateCalendarFromTimeTables(RouteID: number, PathAttributeId: Array<number>, timeTableRules: object, SemiTimeTable: [], TimeTable: []): Calendar {\n  let calendar: Calendar = {\n    calendarDays: {\n      d_0: {\n        name: '日',\n        day: 0,\n        code: 'd_0'\n      },\n      d_1: {\n        name: '一',\n        day: 1,\n        code: 'd_1'\n      },\n      d_2: {\n        name: '二',\n        day: 2,\n        code: 'd_2'\n      },\n      d_3: {\n        name: '三',\n        day: 3,\n        code: 'd_3'\n      },\n      d_4: {\n        name: '四',\n        day: 4,\n        code: 'd_4'\n      },\n      d_5: {\n        name: '五',\n        day: 5,\n        code: 'd_5'\n      },\n      d_6: {\n        name: '六',\n        day: 6,\n        code: 'd_6'\n      }\n    },\n    calendarDayQuantity: 7,\n    calendarEventGroups: {\n      d_0: [],\n      d_1: [],\n      d_2: [],\n      d_3: [],\n      d_4: [],\n      d_5: [],\n      d_6: []\n    },\n    calendarEventQuantity: {\n      d_0: 0,\n      d_1: 0,\n      d_2: 0,\n      d_3: 0,\n      d_4: 0,\n      d_5: 0,\n      d_6: 0\n    }\n  };\n  const thisWeekOrigin = getThisWeekOrigin();\n  for (const item of SemiTimeTable) {\n    if (PathAttributeId.indexOf(item.PathAttributeId) > -1) {\n      if (item.DateType === '0') {\n        const dayOfWeek = dateValueToDayOfWeek(item.DateValue);\n        const thisDayOrigin = offsetDate(thisWeekOrigin, dayOfWeek.day, 0, 0);\n        const thisPeriodStartTime = parseTimeCode(item.StartTime, 0);\n        const thisPeriodStartTimeDateObject = offsetDate(thisDayOrigin, 0, thisPeriodStartTime.hours, thisPeriodStartTime.minutes);\n        const thisPeriodEndTime = parseTimeCode(item.EndTime, 0);\n        const thisPeriodEndTimeDateObject = offsetDate(thisDayOrigin, 0, thisPeriodEndTime.hours, thisPeriodEndTime.minutes);\n        const thisPeriodDurationInMinutes = Math.abs(thisPeriodEndTime.hours * 60 + thisPeriodEndTime.minutes - (thisPeriodStartTime.hours * 60 + thisPeriodStartTime.minutes));\n\n        const minWindow = parseInt(item.LongHeadway);\n        const maxWindow = parseInt(item.LowHeadway);\n        const averageWindow = (maxWindow + minWindow) / 2;\n        const headwayQuantity = thisPeriodDurationInMinutes / averageWindow;\n\n        for (let i = 0; i < headwayQuantity; i++) {\n          let violateRules = false;\n          const thisHeadwayDate = offsetDate(thisDayOrigin, 0, thisPeriodStartTime.hours, thisPeriodStartTime.minutes + maxWindow * i);\n          if (thisHeadwayDate.getTime() < thisPeriodStartTimeDateObject.getTime()) {\n            violateRules = true;\n          }\n          if (thisHeadwayDate.getTime() > thisPeriodEndTimeDateObject.getTime()) {\n            violateRules = true;\n          }\n          // TODO: check timeTableRules\n          if (violateRules === false) {\n            calendar.calendarEventGroups[dayOfWeek.code].push({\n              date: thisHeadwayDate,\n              dateString: dateToString(thisHeadwayDate, 'hh:mm'),\n              duration: maxWindow,\n              deviation: Math.abs(averageWindow - maxWindow)\n            });\n            calendar.calendarEventQuantity[dayOfWeek.code] += 1;\n          }\n        }\n      }\n    }\n  }\n  for (const item of TimeTable) {\n    if (PathAttributeId.indexOf(item.PathAttributeId) > -1) {\n      if (item.DateType === '0') {\n        let violateRules = false;\n        const dayOfWeek = dateValueToDayOfWeek(item.DateValue);\n        const thisDayOrigin = offsetDate(thisWeekOrigin, dayOfWeek.day, 0, 0);\n        const thisDepartureTime = parseTimeCode(item.DepartureTime, 0);\n        const thisHeadwayDate = offsetDate(thisDayOrigin, 0, thisDepartureTime.hours, thisDepartureTime.minutes);\n        // TODO: check timeTableRules\n        if (violateRules === false) {\n          calendar.calendarEventGroups[dayOfWeek.code].push({\n            date: thisHeadwayDate,\n            dateString: dateToString(thisHeadwayDate, 'hh:mm'),\n            duration: 15,\n            deviation: 0\n          });\n          calendar.calendarEventQuantity[dayOfWeek.code] += 1;\n        }\n      }\n    }\n  }\n  for (const code in calendar.calendarEventGroups) {\n    calendar.calendarEventGroups[code].sort(function (a, b) {\n      return a.date.getTime() - b.date.getTime();\n    });\n  }\n  return calendar;\n}\n\nexport interface TimeTableRules {\n  go: {\n    weekday: {\n      first: TimeMoment;\n      last: TimeMoment;\n      rushHourWindow: TimeRange;\n      offRushHourWindow: TimeRange;\n    };\n    holiday: {\n      first: TimeMoment;\n      last: TimeMoment;\n      rushHourWindow: TimeRange;\n      offRushHourWindow: TimeRange;\n    };\n  };\n  back: {\n    weekday: {\n      first: TimeMoment;\n      last: TimeMoment;\n      rushHourWindow: TimeRange;\n      offRushHourWindow: TimeRange;\n    };\n    holiday: {\n      first: TimeMoment;\n      last: TimeMoment;\n      rushHourWindow: TimeRange;\n      offRushHourWindow: TimeRange;\n    };\n  };\n  realSequence: any;\n}\n\nfunction getTimeTableRules(thisRoute: RouteItem): TimeTableRules {\n  const thisRouteGoFirstBusTime = parseTimeCode(thisRoute.goFirstBusTime, 0);\n  const thisRouteGoLastBusTime = parseTimeCode(thisRoute.goLastBusTime, 0);\n\n  const thisRouteBackFirstBusTime = parseTimeCode(thisRoute.backFirstBusTime, 0);\n  const thisRouteBackLastBusTime = parseTimeCode(thisRoute.backLastBusTime, 0);\n\n  const thisRouteGoFirstBusTimeOnHoliday = parseTimeCode(thisRoute.holidayGoFirstBusTime, 0);\n  const thisRouteGoLastBusTimeOnHoliday = parseTimeCode(thisRoute.holidayGoLastBusTime, 0);\n\n  const thisRouteBackFirstBusTimeOnHoliday = parseTimeCode(thisRoute.holidayBackFirstBusTime, 0);\n  const thisRouteBackLastBusTimeOnHoliday = parseTimeCode(thisRoute.holidayBackLastBusTime, 0);\n\n  const rushHourWindow = parseTimeCode(thisRoute.peakHeadway, 1);\n  const offRushHourWindow = parseTimeCode(thisRoute.offPeakHeadway, 1);\n\n  const rushHourWindowOnHoliday = parseTimeCode(thisRoute.holidayPeakHeadway, 1);\n  const offRushHourWindowOnHoliday = parseTimeCode(thisRoute.holidayOffPeakHeadway, 1);\n  // window → the interval/gap between arrivals of buses\n\n  const realSequence = thisRoute.realSequence;\n  return {\n    go: {\n      weekday: {\n        first: thisRouteGoFirstBusTime,\n        last: thisRouteGoLastBusTime,\n        rushHourWindow: rushHourWindow,\n        offRushHourWindow: offRushHourWindow\n      },\n      holiday: {\n        first: thisRouteGoFirstBusTimeOnHoliday,\n        last: thisRouteGoLastBusTimeOnHoliday,\n        rushHourWindow: rushHourWindowOnHoliday,\n        offRushHourWindow: offRushHourWindowOnHoliday\n      }\n    },\n    back: {\n      weekday: {\n        first: thisRouteBackFirstBusTime,\n        last: thisRouteBackLastBusTime,\n        rushHourWindow: rushHourWindow,\n        offRushHourWindow: offRushHourWindow\n      },\n      holiday: {\n        first: thisRouteBackFirstBusTimeOnHoliday,\n        last: thisRouteBackLastBusTimeOnHoliday,\n        rushHourWindow: rushHourWindowOnHoliday,\n        offRushHourWindow: offRushHourWindowOnHoliday\n      }\n    },\n    realSequence: realSequence\n  };\n}\n\nexport interface integratedRouteDetailsProperty {\n  key: string;\n  icon: MaterialSymbols;\n  value: string;\n}\n\nexport type integratedRouteDetailsProperties = Array<integratedRouteDetailsProperty>;\n\nexport interface integratedRouteDetails {\n  timeTableRules: TimeTableRules;\n  calendar: Calendar;\n  properties: integratedRouteDetailsProperties;\n}\n\nexport async function integrateRouteDetails(RouteID: number, PathAttributeId: Array<number>, requestID: string): Promise<integratedRouteDetails> {\n  const Route = (await getRoute(requestID, false)) as Route;\n  const thisRoute = findRoute(Route, RouteID);\n\n  const SemiTimeTable = await getSemiTimeTable(requestID);\n  const TimeTable = await getTimeTable(requestID);\n  const Provider = await getProvider(requestID);\n  const timeTableRules = getTimeTableRules(thisRoute);\n  const calendar = generateCalendarFromTimeTables(RouteID, PathAttributeId, timeTableRules, SemiTimeTable, TimeTable);\n  const thisProviderId = thisRoute.providerId;\n  const thisProvider = findProvider(Provider, thisProviderId);\n\n  const result: integratedRouteDetails = {\n    timeTableRules: timeTableRules,\n    calendar: calendar,\n    properties: [\n      {\n        key: 'route_name',\n        icon: 'route',\n        value: thisRoute.nameZh\n      },\n      {\n        key: 'pricing',\n        icon: 'attach_money',\n        value: thisRoute.ticketPriceDescriptionZh\n      },\n      {\n        key: 'provider_name',\n        icon: 'corporate_fare',\n        value: thisProvider.nameZn\n      },\n      {\n        key: 'provider_phone',\n        icon: 'call',\n        value: thisProvider.phoneInfo\n      },\n      {\n        key: 'provider_email',\n        icon: 'alternate_email',\n        value: thisProvider.email\n      }\n    ]\n  };\n  deleteDataReceivingProgress(requestID);\n  deleteDataUpdateTime(requestID);\n  return result;\n}\n","import { Folder, FolderContent, getFolder, listFolderContent, removeFromFolder, updateFolder, updateFolderContentIndex } from '../../data/folder/index';\nimport { generateIdentifier } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { getIconHTML } from '../icons/index';\nimport { closePreviousPage, GeneratedElement, openPreviousPage, pushPageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst FolderEditorField = documentQuerySelector('.css_folder_editor_field');\nconst FolderEditorHeadElement = elementQuerySelector(FolderEditorField, '.css_folder_editor_head');\nconst LeftButtonElement = elementQuerySelector(FolderEditorHeadElement, '.css_folder_editor_button_left');\nconst FolderEditorBodyElement = elementQuerySelector(FolderEditorField, '.css_folder_editor_body');\nconst FolderEditorGroupsElement = elementQuerySelector(FolderEditorBodyElement, '.css_folder_editor_groups');\nconst NameInputElement = elementQuerySelector(FolderEditorGroupsElement, '.css_folder_editor_group[group=\"folder-name\"] .css_folder_editor_group_body input');\nconst IconInputElement = elementQuerySelector(FolderEditorGroupsElement, '.css_folder_editor_group[group=\"folder-icon\"] .css_folder_editor_group_body .css_folder_editor_icon_input input');\nconst OpenFolderIconSelectorElement = elementQuerySelector(FolderEditorGroupsElement, '.css_folder_editor_group[group=\"folder-icon\"] .css_folder_editor_group_body .css_folder_editor_icon_input .css_folder_editor_open_folder_icon_selector');\nconst FolderContentElement = elementQuerySelector(FolderEditorGroupsElement, '.css_folder_editor_group[group=\"folder-content\"] .css_folder_editor_group_body');\n\nfunction generateElementOfItem(folder: Folder, item: FolderContent): GeneratedElement {\n  const identifier = generateIdentifier('i');\n  let element = document.createElement('div');\n  element.id = identifier;\n  element.classList.add('css_folder_editor_folder_item');\n  element.setAttribute('type', item.type);\n  let context = '';\n  let main = '';\n  let icon = '';\n  switch (item.type) {\n    case 'stop':\n      icon = 'location_on';\n      context = `${item.route ? item.route.name : ''} - 往${item.route ? [item.route.endPoints.destination, item.route.endPoints.departure, ''][item.direction ? item.direction : 0] : ''}`;\n      main = item.name;\n      break;\n    case 'route':\n      icon = 'route';\n      context = `${item.endPoints.departure} \\u2194 ${item.endPoints.destination}`;\n      main = item.name;\n      break;\n    case 'bus':\n      context = '';\n      main = item.name;\n      break;\n    case 'empty':\n      icon = 'lightbulb';\n      context = '提示';\n      main = '沒有內容';\n      break;\n    default:\n      icon = '';\n      context = 'null';\n      main = 'null';\n      break;\n  }\n  element.innerHTML = /*html*/ `<div class=\"css_folder_editor_folder_item_icon\">${getIconHTML(icon)}</div><div class=\"css_folder_editor_folder_item_context\">${context}</div><div class=\"css_folder_editor_folder_item_main\">${main}</div><div class=\"css_folder_editor_folder_item_capsule\"><div class=\"css_folder_editor_folder_item_sort_control_up\" onclick=\"bus.folder.moveItemOnFolderEditor('${identifier}', '${folder.id}', '${item.type}', ${item.id}, 'up')\">${getIconHTML('keyboard_arrow_down')}</div><div class=\"css_folder_editor_folder_item_sort_control_down\" onclick=\"bus.folder.moveItemOnFolderEditor('${identifier}', '${folder.id}', '${item.type}', ${item.id}, 'down')\">${getIconHTML('keyboard_arrow_down')}</div><div class=\"css_folder_editor_folder_item_delete\" onclick=\"bus.folder.removeItemOnFolderEditor('${identifier}', '${folder.id}', '${item.type}', ${item.id})\">${getIconHTML('delete')}</div><div class=\"css_folder_editor_folder_item_capsule_separator\"></div><div class=\"css_folder_editor_folder_item_capsule_separator\"></div></div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction updateFolderEditorField(folder: Folder, content: Array<FolderContent>): void {\n  NameInputElement.value = folder.name;\n  IconInputElement.value = folder.icon;\n\n  if (folder.default) {\n    NameInputElement.setAttribute('readonly', 'readonly');\n    IconInputElement.setAttribute('readonly', 'readonly');\n    OpenFolderIconSelectorElement.setAttribute('disabled', 'true');\n  } else {\n    NameInputElement.removeAttribute('readonly');\n    IconInputElement.removeAttribute('readonly');\n    OpenFolderIconSelectorElement.setAttribute('disabled', 'false');\n  }\n\n  LeftButtonElement.setAttribute('onclick', `bus.folder.saveEditedFolder('${folder.id}')`);\n\n  FolderContentElement.innerHTML = '';\n  const fragment = new DocumentFragment();\n  for (const item of content) {\n    const thisItemElement = generateElementOfItem(folder, item);\n    fragment.appendChild(thisItemElement.element);\n  }\n  FolderContentElement.append(fragment);\n}\n\nasync function initializeFolderEditorField(folderID: string) {\n  //TODO: add skeleton screen\n  const folder = await getFolder(folderID);\n  const content = await listFolderContent(folderID);\n  updateFolderEditorField(folder, content);\n}\n\nexport function openFolderEditor(folderID: string): void {\n  pushPageHistory('FolderEditor');\n  FolderEditorField.setAttribute('displayed', 'true');\n  initializeFolderEditorField(folderID);\n  closePreviousPage();\n}\n\nexport function closeFolderEditor(): void {\n  // revokePageHistory('FolderEditor');\n  FolderEditorField.setAttribute('displayed', 'false');\n  openPreviousPage();\n}\n\nexport function removeItemOnFolderEditor(itemID: string, folderID: Folder['id'], type: FolderContent['type'], id: number): void {\n  const itemElement = elementQuerySelector(FolderEditorField, `.css_folder_editor_body .css_folder_editor_groups .css_folder_editor_group[group=\"folder-content\"] .css_folder_editor_group_body .css_folder_editor_folder_item#${itemID}`);\n  removeFromFolder(folderID, type, id).then((e) => {\n    if (e) {\n      itemElement.remove();\n      switch (type) {\n        case 'stop':\n          promptMessage('已移除站牌', 'delete');\n          break;\n        case 'route':\n          promptMessage('已移除路線', 'delete');\n          break;\n        default:\n          break;\n      }\n    } else {\n      promptMessage('無法移除', 'error');\n    }\n  });\n}\n\nexport function moveItemOnFolderEditor(itemID: string, folderID: Folder['id'], type: FolderContent['type'], id: FolderContent['id'], direction: 'up' | 'down'): void {\n  const itemElement = elementQuerySelector(FolderEditorField, `.css_folder_editor_body .css_folder_editor_groups .css_folder_editor_group[group=\"folder-content\"] .css_folder_editor_group_body .css_folder_editor_folder_item#${itemID}`);\n  updateFolderContentIndex(folderID, type, id, direction).then((e) => {\n    if (e) {\n      switch (direction) {\n        case 'up':\n          const previousSibling = itemElement.previousElementSibling;\n          if (previousSibling) {\n            itemElement.parentNode.insertBefore(itemElement, previousSibling);\n          }\n          promptMessage('已往上移', 'arrow_circle_up');\n          break;\n        case 'down':\n          const nextSibling = itemElement.nextElementSibling;\n          if (nextSibling) {\n            itemElement.parentNode.insertBefore(nextSibling, itemElement);\n          }\n          promptMessage('已往下移', 'arrow_circle_down');\n          break;\n        default:\n          break;\n      }\n    } else {\n      promptMessage('無法移動', 'error');\n    }\n  });\n}\n\nexport function saveEditedFolder(folderID: string): void {\n  const name = NameInputElement.value;\n  const icon = IconInputElement.value;\n  updateFolder(folderID, name, icon);\n  closeFolderEditor();\n}\n"],"names":["splashScreenTimer_minimalTimeOut","splashScreenTimer_openTime","Date","getTime","pageHistory","pushPageHistory","page","pageHistoryLength","length","push","revokePageHistory","indexOf","pop","closePreviousPage","closeFolderCreator","closeFolderEditor","closeFolderManager","closeSearch","closeSettings","closePersonalScheduleManager","closePersonalScheduleEditor","closeBus","closeRegisterNotification","openPreviousPage","previousPage","openFolderCreator","openFolderEditor","openFolderManager","openSearch","openSettings","openPersonalScheduleManager","openPersonalScheduleEditor","openBus","openRegisterNotification","setSplashScreenIconOffsetY","offset","isRunningStandalone","window","outerHeight","innerHeight","documentQuerySelector","style","setProperty","fadeOutSplashScreen","callback","fadeOut","element","classList","add","addEventListener","setAttribute","remove","once","cureentTime","setTimeout","Math","max","querySize","type","width","height","windowWidth","innerWidth","windowHeight","LocationField","LocationHeadElement","elementQuerySelector","LocationNameElement","LocationGroupsElement","LocationGroupTabsElement","LocationGroupTabsTrayElement","LocationGroupTabLineTrackElement","LocationGroupTabLineElement","LocationUpdateTimerElement","previousIntegration","previousAnimation","previousSkeletonScreen","locationSliding_initialIndex","locationSliding_targetIndex","locationSliding_groupQuantity","locationSliding_groupStyles","locationSliding_fieldWidth","locationSliding_sliding","locationRefreshTimer_retryInterval","locationRefreshTimer_baseInterval","locationRefreshTimer_minInterval","locationRefreshTimer_dynamicInterval","locationRefreshTimer_dynamic","locationRefreshTimer_lastUpdate","locationRefreshTimer_nextUpdate","locationRefreshTimer_currentRequestID","locationRefreshTimer_refreshing","locationRefreshTimer_streaming","locationRefreshTimer_streamStarted","currentHashSet_hash","tabPadding","initializeLocationSliding","round","scrollLeft","passive","event","currentIndex","target","initialSize","targetSize","tabWidth","abs","updateLocationCSS","groupQuantity","tabLineWidth","percentage","toString","toFixed","handleDataReceivingProgressUpdates","CustomEvent","offsetRatio","detail","progress","stage","document","removeEventListener","generateElementOfItem","identifier","generateIdentifier","createElement","id","innerHTML","getIconHTML","generateElementOfTab","generateElementOfGroupDetailsProperty","updateLocationField","integration","skeletonScreen","animation","updateItem","thisElement","thisItem","previousItem","updateStatus","thisElementRect","getBoundingClientRect","top","left","bottom","right","thisItemStatusElement","nextSlide","currentSlide","status","code","innerText","text","updateRank","thisRankElement","ranking","updateRouteDirection","route_direction","updateRouteName","route_name","updateBuses","buses","map","bus","onThisRoute","carNumber","RouteName","join","updateBusArrivalTimes","thisItemElement","busArrivalTimes","busArrivalTime","personalSchedule","name","indexToDay","day","timeObjectToString","period","start","end","chart","updateStretch","updateAnimation","booleanToString","updateSkeletonScreen","updateSaveToFolderButton","thisItemBodyElement","thisItemButtonsElement","saveToFolderButtonElement","stopId","routeId","isFolderContentSaved","then","e","updateScheduleNotificationButton","scheduleNotificationButtonElement","time","havingNotifcationSchedules","stopHasNotifcationSchedules","number","compareThings","updateProperty","thisProperty","previousProperty","updateIcon","icon","updateValue","value","WindowSize","FieldWidth","FieldHeight","itemQuantity","groupedItems","groups","cumulativeOffset","i","getTextWidth","LocationName","currentGroupSeatQuantity","elementQuerySelectorAll","capacity","o","newGroupElement","appendChild","newTabElement","LocationGroupElements","LocationGroupTabElements","groupIndex","groupKey","thisLocationGroupElement","currentItemSeatQuantity","LocationGroupItemsElement","newItemElement","LocationGroupItemElements","currentGroupPropertySeatQuantity","groupPropertyQuantity","properties","thisLocationGroupDetailsElement","thisLocationGroupDetailsBodyElement","newPropertyElement","propertyElements","thisTabElement","thisGroupElement","k","hasOwnProperty","j","refreshLocation","_refreshLocation","apply","arguments","playing_animation","getSettingOptionValue","refresh_interval_setting","busArrivalTimeChartSize","dynamic","baseInterval","integrateLocation","updateRate","getUpdateRate","dataUpdateTime","streamLocation","err","console","error","promptMessage","openLocation","hash","logRecentView","defaultItemQuantity","g_0","floor","g_1","key","setUpLocationFieldSkeletonScreen","closeLocation","stretchLocationItem","itemElementID","itemElement","itemBodyElement","itemsElement","parentElement","elementsBelowItemElement","getElementsBelow","elementsBelowLength","itemsElementRect","itemElementY","stretched","getAttribute","pushDirection","switchLocationBodyTab","itemID","tabCode","_step","buttonsElement","_iterator","_createForOfIteratorHelper","s","n","done","f","previousProperties","updateBusPropertiesField","Field","propertyQuantity","currentPropertySeatQuantity","propertyIndex","thisPropertyElement","BusField","BusBody","BusGroups","BusGroupProperties","_x","_initializeBusPage","initializeBusPage","setUpBusPropertiesFieldSkeletonScreen","requestID","integrateBus","FolderCreatorField","FolderCreatorBodyElement","FolderCreatorGroupsElement","NameInputElement","IconInputElement","createFormulatedFolder","createFolder","dataUsageField","dataUsageBodyElement","chartElement","statisticsElement","totalDataUsageElement","startTimeElement","endTimeElement","_initializeDataUsage","graphWidth","graphHeight","min","stats","getDataUsageStats","convertBytes","sum","dateToString","currentTarget","folderEditorField","folderCreatorField","folderIconSelectorField","generateElementOfSymbol","symbol","_initializeFolderIconSelectorField","materialSymbolsElement","materialSymbols","getMaterialSymbols","deleteDataReceivingProgress","_step2","fragment","DocumentFragment","_iterator2","symbolElement","append","updateMaterialSymbolsSearchResult","query","materialSymbolsSearchResultsElement","containPhoneticSymbols","searchResults","searchForMaterialSymbols","item","closeFolderIconSelector","bus_initialized","bus_secondly_initialized","initialize","initializeSettings","setUpRecentViewsFieldSkeletonScreen","setUpFolderFieldSkeletonScreen","checkAppVersion","initializeRouteSliding","resizeSearchInputCanvas","screen","orientation","initializeRecentViews","initializeFolderList","initializeFolders","mediaQuery","matchMedia","searchInputElement","updateSearchInput","selectionStart","selectionEnd","updateSearchResult","searchMaterialSymbolsInputElement","openPermalink","loadNotificationClient","initializeNotificationSchedules","discardExpiredNotificationSchedules","askForPositioningPermission","askForCalibratingPermission","alert","secondlyInitialize","downloadData","discardExpiredUpdateRateDataGroups","discardExpiredDataUsageStats","recoverBusArrivalTimeDataFromWriteAheadLog","discardExpiredRecentViews","initializeUpdateRateDataGroups","recoverUpdateRateDataFromWriteAheadLog","route","stretchRouteItem","openRoute","closeRoute","switchRoute","switchRouteBodyTab","openRouteDetails","closeRouteDetails","shareRoutePermalink","switchCalendarDay","location","folder","openSaveToFolder","closeSaveToFolder","openFolderIconSelector","openFolderIconSelectorElement","dataDownloadCompleted","initializeFolderIconSelectorField","prepareForMaterialSymbolsSearch","saveEditedFolder","selectFolderIcon","iconInputElement","saveStopItemOnRoute","saveStopItemOnLocation","saveRouteOnDetailsPage","saveRouteOnRoute","removeItemOnFolderEditor","moveItemOnFolderEditor","search","typeTextIntoInput","deleteCharFromInout","emptyInput","openSystemKeyboard","switchSearchTypeFilter","storage","openStorage","closeStorage","dataUsage","openDataUsage","initializeDataUsage","closeDataUsage","openPersonalScheduleCreator","closePersonalScheduleCreator","createFormulatedPersonalSchedule","switchPersonalScheduleCreatorDay","switchPersonalScheduleEditorDay","saveEditedPersonalSchedule","settings","openSettingsOptions","closeSettingsOptions","settingsOptionsHandler","downloadExportFile","openFileToImportData","viewCommitOfCurrentVersion","showPromptToAskForPersistentStorage","notification","openNotificationScheduleManager","closeNotificationScheduleManager","saveFormulatedRegisterNotification","openScheduleNotification","closeScheduleNotification","scheduleNotificationForStopItemOnRoute","scheduleNotificationForStopItemOnLocation","cancelNotificationOnNotificationScheduleManager","integrateRoute","_x2","_x3","_x4","_x5","_integrateRoute","RouteID","PathAttributeId","chartWidth","chartHeight","setDataReceivingProgress","Route","getRoute","Stop","getStop","SimplifiedLocation","getLocation","MergedLocation","IndexedLocation","SegmentBuffers","getSegmentBuffers","EstimateTime","getEstimateTime","BusEvent","getBusEvent","BusData","getBusData","BusArrivalTimes","getBusArrivalTimes","batchFoundBuses","batchFindBusesForRoute","hasSegmentBuffers","thisSegmentBuffers","time_formatting_mode","result","positions","integratedStopItem","thisRouteID","includes","parseEstimateTime","thisStopKey","StopID","thisStop","sequence","seqNo","goBack","thisLocationKey","stopLocationId","thisSimplifiedLocation","overlappingRoutes","r","filter","overlappingRouteKey","overlappingRoute","RouteEndPoints","RouteDeparture","dep","RouteDestination","des","html","pid","position","longitude","lo","latitude","la","thisSimplifiedLocationGeohash","g","thisIndexedLocationItem","nearbyLocations","mergedLocationKey","thisMergedLocation","nearbyLocationItem","distance","convertPositionsToDistance","sort","a","b","_step3","_iterator3","overlappingStopKey","formatBus","flat","index","thisBusArrivalTimes","isSegmentBuffer","isStartingPoint","isEndingPoint","useReversed","segmentBufferGroup","_step4","_iterator4","thisBufferZone","OriginStopID","DestinationStopID","segmentBuffer","nearestPosition","getNearestPosition","isBufferZoneOpened","isBufferZoneClosed","resultLength","nextItem","_ref","x","y","_ref2","x1","y1","_ref3","x2","y2","distance1","hypot","distance2","isNearest","nearest","thisRoute","result2","getDataUpdateTime","deleteDataUpdateTime","FolderManagerField","FolderManagerBodyElement","FolderManagerFolderListElement","contentLength","_initializeFolderManagerField","foldersWithContent","listFoldersWithContent","initializeFolderManagerField","integrateRouteDetails","_integrateRouteDetails","Id","findRoute","SemiTimeTable","getSemiTimeTable","TimeTable","getTimeTable","Provider","getProvider","timeTableRules","thisRouteGoFirstBusTime","parseTimeCode","goFirstBusTime","thisRouteGoLastBusTime","goLastBusTime","thisRouteBackFirstBusTime","backFirstBusTime","thisRouteBackLastBusTime","backLastBusTime","thisRouteGoFirstBusTimeOnHoliday","holidayGoFirstBusTime","thisRouteGoLastBusTimeOnHoliday","holidayGoLastBusTime","thisRouteBackFirstBusTimeOnHoliday","holidayBackFirstBusTime","thisRouteBackLastBusTimeOnHoliday","holidayBackLastBusTime","rushHourWindow","peakHeadway","offRushHourWindow","offPeakHeadway","rushHourWindowOnHoliday","holidayPeakHeadway","offRushHourWindowOnHoliday","holidayOffPeakHeadway","go","weekday","first","last","holiday","back","realSequence","getTimeTableRules","calendar","calendarDays","d_0","d_1","d_2","d_3","d_4","d_5","d_6","calendarDayQuantity","calendarEventGroups","calendarEventQuantity","thisWeekOrigin","getThisWeekOrigin","DateType","dayOfWeek","dateValueToDayOfWeek","DateValue","thisDayOrigin","offsetDate","thisPeriodStartTime","StartTime","thisPeriodStartTimeDateObject","hours","minutes","thisPeriodEndTime","EndTime","thisPeriodEndTimeDateObject","thisPeriodDurationInMinutes","minWindow","parseInt","LongHeadway","maxWindow","LowHeadway","averageWindow","headwayQuantity","violateRules","thisHeadwayDate","date","dateString","duration","deviation","thisDepartureTime","DepartureTime","generateCalendarFromTimeTables","thisProvider","providerId","findProvider","nameZh","ticketPriceDescriptionZh","nameZn","phoneInfo","email","FolderEditorField","FolderEditorHeadElement","LeftButtonElement","FolderEditorBodyElement","FolderEditorGroupsElement","OpenFolderIconSelectorElement","FolderContentElement","context","main","endPoints","destination","departure","direction","_initializeFolderEditorField","folderID","content","removeAttribute","updateFolderEditorField","getFolder","listFolderContent","initializeFolderEditorField","removeFromFolder","updateFolderContentIndex","previousSibling","previousElementSibling","parentNode","insertBefore","nextSibling","nextElementSibling","updateFolder"],"sourceRoot":""}