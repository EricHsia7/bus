{"version":3,"file":"c87d2e945db3f9c3c900.min.js","mappings":"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","sources":["webpack://bus/./src/interface/route/index.ts","webpack://bus/./src/interface/save-to-folder/index.ts"],"sourcesContent":["import { IntegratedRoute, integratedStopItem, integrateRoute } from '../../data/route/index';\nimport { getIconHTML } from '../icons/index';\nimport { getDataReceivingProgress } from '../../data/apis/loader';\nimport { getSettingOptionValue, SettingSelectOptionRefreshIntervalValue } from '../../data/settings/index';\nimport { booleanToString, compareThings, generateIdentifier } from '../../tools/index';\nimport { getTextWidth } from '../../tools/graphic';\nimport { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../tools/query-selector';\nimport { getUpdateRate } from '../../data/analytics/update-rate';\nimport { isSaved } from '../../data/folder/index';\nimport { GeneratedElement, FieldSize, pushPageHistory, closePreviousPage, openPreviousPage, GroupStyles } from '../index';\nimport { promptMessage } from '../prompt/index';\nimport { indexToDay, timeObjectToString } from '../../tools/time';\nimport { logRecentView } from '../../data/recent-views/index';\n\nlet previousIntegration = {} as IntegratedRoute;\n\nlet routeSliding_initialIndex: number = 0;\nlet routeSliding_targetIndex: number = 0;\nlet routeSliding_groupQuantity: number = 0;\nlet routeSliding_groupStyles: GroupStyles = {};\nlet routeSliding_fieldWidth: number = 0;\nlet routeSliding_fieldHeight: number = 0;\nlet routeSliding_sliding: boolean = false;\n\nlet routeRefreshTimer_retryInterval: number = 10 * 1000;\nlet routeRefreshTimer_baseInterval: number = 15 * 1000;\nlet routeRefreshTimer_minInterval: number = 5 * 1000;\nlet routeRefreshTimer_dynamicInterval: number = 15 * 1000;\nlet routeRefreshTimer_dynamic: boolean = true;\nlet routeRefreshTimer_streaming: boolean = false;\nlet routeRefreshTimer_lastUpdate: number = 0;\nlet routeRefreshTimer_nextUpdate: number = 0;\nlet routeRefreshTimer_refreshing: boolean = false;\nlet routeRefreshTimer_currentRequestID: string = '';\nlet routeRefreshTimer_streamStarted: boolean = false;\nvar routeRefreshTimer_timer: ReturnType<typeof setTimeout>;\n\nlet currentRouteIDSet_RouteID: number = 0;\nlet currentRouteIDSet_PathAttributeId: Array<number> = [];\n\nlet tabPadding: number = 20;\n\nexport function initializeRouteSliding(): void {\n  const routeGroups = documentQuerySelector('.css_route_field .css_route_groups');\n\n  routeGroups.addEventListener('touchstart', function (event) {\n    routeSliding_initialIndex = Math.round(routeGroups.scrollLeft / routeSliding_fieldWidth);\n  });\n\n  routeGroups.addEventListener('scroll', function (event: Event) {\n    routeSliding_sliding = true;\n    const target = event.target as HTMLElement;\n    var currentIndex = target.scrollLeft / routeSliding_fieldWidth;\n    if (currentIndex > routeSliding_initialIndex) {\n      routeSliding_targetIndex = routeSliding_initialIndex + 1;\n    } else {\n      routeSliding_targetIndex = routeSliding_initialIndex - 1;\n    }\n    var initialSize = routeSliding_groupStyles[`g_${routeSliding_initialIndex}`] || { width: 0, offset: 0 };\n    var targetSize = routeSliding_groupStyles[`g_${routeSliding_targetIndex}`] || { width: 0, offset: 0 };\n    var tabWidth = initialSize.width + (targetSize.width - initialSize.width) * Math.abs(currentIndex - routeSliding_initialIndex);\n    var offset = (initialSize.offset + (targetSize.offset - initialSize.offset) * Math.abs(currentIndex - routeSliding_initialIndex)) * -1 + routeSliding_fieldWidth * 0.5 - tabWidth * 0.5;\n\n    updateRouteCSS(routeSliding_groupQuantity, offset, tabWidth - tabPadding, currentIndex);\n\n    if (currentIndex === routeSliding_targetIndex) {\n      routeSliding_initialIndex = Math.round(routeGroups.scrollLeft / routeSliding_fieldWidth);\n      routeSliding_sliding = false;\n    }\n  });\n}\n\nfunction queryRouteFieldSize(): FieldSize {\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight\n  };\n}\n\nexport function ResizeRouteField(): void {\n  const FieldSize = queryRouteFieldSize();\n  const FieldWidth = FieldSize.width;\n  const FieldHeight = FieldSize.height;\n  const Field = documentQuerySelector('.css_route_field');\n  Field.style.setProperty('--b-cssvar-route-field-width', `${FieldWidth}px`);\n  Field.style.setProperty('--b-cssvar-route-field-height', `${FieldHeight}px`);\n}\n\nexport function updateRouteCSS(groupQuantity: number, offset: number, tabLineWidth: number, percentage: number): void {\n  const Field = documentQuerySelector('.css_route_field');\n  const groupsTabsTrayElement = elementQuerySelector(Field, '.css_route_head .css_route_group_tabs .css_route_group_tabs_tray');\n  const groupTabLineElement = elementQuerySelector(Field, '.css_route_head .css_route_group_tab_line_track .css_route_group_tab_line');\n  Field.style.setProperty('--b-cssvar-route-group-quantity', groupQuantity);\n  groupTabLineElement.style.setProperty('--b-cssvar-route-tab-line-width-scale', (tabLineWidth / 30).toFixed(5));\n  groupsTabsTrayElement.style.setProperty('--b-cssvar-route-tabs-tray-offset', `${offset.toFixed(5)}px`);\n  groupsTabsTrayElement.style.setProperty('--b-cssvar-route-percentage', percentage.toFixed(5));\n}\n\nfunction updateUpdateTimer(): void {\n  const updateTimerElement = documentQuerySelector('.css_route_update_timer');\n  var time = new Date().getTime();\n  var percentage = 0;\n  if (routeRefreshTimer_refreshing) {\n    percentage = -1 + getDataReceivingProgress(routeRefreshTimer_currentRequestID);\n  } else {\n    percentage = -1 * Math.min(1, Math.max(0, Math.abs(time - routeRefreshTimer_lastUpdate) / routeRefreshTimer_dynamicInterval));\n  }\n  updateTimerElement.style.setProperty('--b-cssvar-update-timer', percentage.toString());\n  window.requestAnimationFrame(function () {\n    if (routeRefreshTimer_streaming) {\n      updateUpdateTimer();\n    }\n  });\n}\n\nfunction generateElementOfThreadBox(): GeneratedElement {\n  var identifier = generateIdentifier('i');\n  var element = document.createElement('div');\n  element.classList.add('css_route_group_thread_box');\n  element.id = identifier;\n  element.setAttribute('stretched', 'false');\n  element.innerHTML = `<div class=\"css_route_group_thread\"></div><div class=\"css_route_group_thread_status\"><div class=\"css_next_slide\" code=\"0\"></div><div class=\"css_current_slide\" code=\"0\"></div></div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction generateElementOfItem(threadBoxIdentifier: string): GeneratedElement {\n  var identifier = generateIdentifier('i');\n  var element = document.createElement('div');\n  element.classList.add('css_route_group_item');\n  element.id = identifier;\n  element.setAttribute('stretched', 'false');\n  element.innerHTML = `<div class=\"css_route_group_item_head\"><div class=\"css_route_group_item_name\"></div><div class=\"css_route_group_item_capsule\"><div class=\"css_route_group_item_status\"><div class=\"css_next_slide\" code=\"0\"></div><div class=\"css_current_slide\" code=\"0\"></div></div><div class=\"css_route_group_item_stretch\" onclick=\"bus.route.stretchRouteItemBody('${identifier}', '${threadBoxIdentifier}')\">${getIconHTML('keyboard_arrow_down')}</div><div class=\"css_route_group_item_capsule_separator\"></div></div></div><div class=\"css_route_group_item_body\"><div class=\"css_route_group_item_buttons\"><div class=\"css_route_group_item_button\" highlighted=\"true\" type=\"tab\" onclick=\"bus.route.switchRouteBodyTab('${identifier}', 0)\" code=\"0\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('directions_bus')}</div>公車</div><div class=\"css_route_group_item_button\" highlighted=\"false\" type=\"tab\" onclick=\"bus.route.switchRouteBodyTab('${identifier}', 1)\" code=\"1\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('departure_board')}</div>抵達時間</div><div class=\"css_route_group_item_button\" highlighted=\"false\" type=\"tab\" onclick=\"bus.route.switchRouteBodyTab('${identifier}', 2)\" code=\"2\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('route')}</div>路線</div><div class=\"css_route_group_item_button\" highlighted=\"false\" type=\"save-to-folder\" onclick=\"bus.folder.openSaveToFolder('stop', ['${identifier}', null, null])\"><div class=\"css_route_group_item_button_icon\">${getIconHTML('folder')}</div>儲存至資料夾</div></div><div class=\"css_route_group_item_buses\" displayed=\"true\"></div><div class=\"css_route_group_item_overlapping_routes\" displayed=\"false\"></div><div class=\"css_route_group_item_bus_arrival_times\" displayed=\"false\"></div></div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction generateElementOfGroup(): GeneratedElement {\n  var identifier = generateIdentifier('g');\n  var element = document.createElement('div');\n  element.classList.add('css_route_group');\n  element.id = identifier;\n  var tracksElement = document.createElement('div');\n  tracksElement.classList.add('css_route_group_tracks');\n  var threadTrackElement = document.createElement('div');\n  threadTrackElement.classList.add('css_route_group_threads_track');\n  var itemsTrackElement = document.createElement('div');\n  itemsTrackElement.classList.add('css_route_group_items_track');\n  tracksElement.appendChild(threadTrackElement);\n  tracksElement.appendChild(itemsTrackElement);\n  element.appendChild(tracksElement);\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction generateElementOfTab(): GeneratedElement {\n  var identifier = generateIdentifier('t');\n  var element = document.createElement('div');\n  element.classList.add('css_route_group_tab');\n  element.id = identifier;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nfunction setUpRouteFieldSkeletonScreen(Field: HTMLElement): void {\n  const FieldSize = queryRouteFieldSize();\n  const FieldWidth = FieldSize.width;\n  const FieldHeight = FieldSize.height;\n  const defaultItemQuantity: number = Math.floor(FieldHeight / 50) + 5;\n  const defaultGroupQuantity = 2;\n  let groupedItems: IntegratedRoute['groupedItems'] = {};\n  for (let i = 0; i < defaultGroupQuantity; i++) {\n    const groupKey: string = `g_${i}`;\n    groupedItems[groupKey] = [];\n    for (let j = 0; j < defaultItemQuantity; j++) {\n      groupedItems[groupKey].push({\n        name: '',\n        goBack: '0',\n        status: { code: 0, text: '' },\n        buses: [],\n        overlappingRoutes: [],\n        busArrivalTimes: [],\n        sequence: j,\n        position: {\n          longitude: 0,\n          latitude: 0\n        },\n        nearest: false,\n        progress: 0,\n        segmentBuffer: {\n          isSegmentBuffer: false,\n          isStartingPoint: false,\n          isEndingPoint: false\n        },\n        id: 0\n      });\n    }\n  }\n  updateRouteField(\n    Field,\n    {\n      groupedItems: groupedItems,\n      groupQuantity: defaultGroupQuantity,\n      itemQuantity: {\n        g_0: defaultItemQuantity,\n        g_1: defaultItemQuantity\n      },\n      RouteName: '載入中',\n      RouteEndPoints: {\n        RouteDeparture: '載入中',\n        RouteDestination: '載入中'\n      },\n      RouteID: 0,\n      PathAttributeId: [],\n      dataUpdateTime: null\n    },\n    true\n  );\n}\n\nfunction updateRouteField(Field: HTMLElement, integration: IntegratedRoute, skeletonScreen: boolean) {\n  function updateItem(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem, previousItem: integratedStopItem | null): void {\n    function updateStatus(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem): void {\n      var currentThreadSlide = elementQuerySelector(thisThreadBoxElement, '.css_route_group_thread_status .css_current_slide');\n      var nextThreadSlide = elementQuerySelector(thisThreadBoxElement, '.css_route_group_thread_status .css_next_slide');\n\n      var currentItemSlide = elementQuerySelector(thisItemElement, '.css_route_group_item_status .css_current_slide');\n      var nextItemSlide = elementQuerySelector(thisItemElement, '.css_route_group_item_status .css_next_slide');\n\n      nextThreadSlide.setAttribute('code', thisItem.status.code);\n\n      nextItemSlide.setAttribute('code', thisItem.status.code);\n      nextItemSlide.innerText = thisItem.status.text;\n      currentThreadSlide.addEventListener(\n        'animationend',\n        function () {\n          currentThreadSlide.setAttribute('code', thisItem.status.code);\n          currentThreadSlide.classList.remove('css_slide_fade_out');\n        },\n        { once: true }\n      );\n      currentItemSlide.addEventListener(\n        'animationend',\n        function () {\n          currentItemSlide.setAttribute('code', thisItem.status.code);\n          currentItemSlide.innerText = thisItem.status.text;\n          currentItemSlide.classList.remove('css_slide_fade_out');\n        },\n        { once: true }\n      );\n      currentThreadSlide.classList.add('css_slide_fade_out');\n      currentItemSlide.classList.add('css_slide_fade_out');\n    }\n    function updateSegmentBuffer(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem): void {\n      thisItemElement.setAttribute('segment-buffer', booleanToString(thisItem.segmentBuffer.isSegmentBuffer));\n      thisThreadBoxElement.setAttribute('segment-buffer', booleanToString(thisItem.segmentBuffer.isSegmentBuffer));\n    }\n    function updateName(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_name').innerText = thisItem.name;\n    }\n    function updateBuses(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_buses').innerHTML = thisItem.buses.length === 0 ? '<div class=\"css_route_group_item_buses_message\">目前沒有公車可顯示</div>' : thisItem.buses.map((bus) => `<div class=\"css_route_group_item_bus\" on-this-route=\"${bus.onThisRoute}\"><div class=\"css_route_group_item_bus_title\"><div class=\"css_route_group_item_bus_icon\">${getIconHTML('directions_bus')}</div><div class=\"css_route_group_item_bus_car_number\">${bus.carNumber}</div></div><div class=\"css_route_group_item_bus_attributes\"><div class=\"css_route_group_item_bus_route\">路線：${bus.RouteName}</div><div class=\"css_route_group_item_bus_car_status\">狀態：${bus.status.text}</div><div class=\"css_route_group_item_bus_car_type\">類型：${bus.type}</div></div></div>`).join('');\n    }\n    function updateOverlappingRoutes(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_overlapping_routes').innerHTML = thisItem.overlappingRoutes.length === 0 ? '<div class=\"css_route_group_item_overlapping_route_message\">目前沒有路線可顯示</div>' : thisItem.overlappingRoutes.map((route) => `<div class=\"css_route_group_item_overlapping_route\"><div class=\"css_route_group_item_overlapping_route_title\"><div class=\"css_route_group_item_overlapping_route_icon\">${getIconHTML('route')}</div><div class=\"css_route_group_item_overlapping_route_name\">${route.name}</div></div><div class=\"css_route_group_item_overlapping_route_endpoints\">${route.RouteEndPoints.html}</div><div class=\"css_route_group_item_overlapping_route_actions\"><div class=\"css_route_group_item_overlapping_route_action_button\" onclick=\"bus.route.switchRoute(${route.RouteID}, [${route.PathAttributeId.join(',')}])\">查看路線</div><div class=\"css_route_group_item_overlapping_route_action_button\" onclick=\"bus.folder.openSaveToFolder('route', [${route.RouteID}])\">收藏路線</div></div></div>`).join('');\n    }\n    function updateBusArrivalTimes(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      elementQuerySelector(thisItemElement, '.css_route_group_item_bus_arrival_times').innerHTML = thisItem.busArrivalTimes.length === 0 ? '<div class=\"css_route_group_item_bus_arrival_message\">目前沒有抵達時間可顯示</div>' : thisItem.busArrivalTimes.map((busArrivalTime) => `<div class=\"css_route_group_item_bus_arrival_time\"><div class=\"css_route_group_item_bus_arrival_time_title\"><div class=\"css_route_group_item_bus_arrival_time_icon\">${getIconHTML('schedule')}</div><div class=\"css_route_group_item_bus_arrival_time_time\">${busArrivalTime.time}</div></div><div class=\"css_route_group_item_bus_arrival_time_attributes\"><div class=\"css_route_group_item_bus_arrival_time_personal_schedule_name\">個人化行程：${busArrivalTime.personalSchedule.name}</div><div class=\"css_route_group_item_bus_arrival_time_personal_schedule_period\">時段：${timeObjectToString(busArrivalTime.personalSchedule.period.start)} - ${timeObjectToString(busArrivalTime.personalSchedule.period.end)}</div><div class=\"css_route_group_item_bus_arrival_time_personal_schedule_days\">重複：${busArrivalTime.personalSchedule.days.map((day) => indexToDay(day).name).join('、')}</div></div></div>`).join('');\n    }\n    function updateNearest(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem): void {\n      thisItemElement.setAttribute('nearest', booleanToString(thisItem.nearest));\n      thisThreadBoxElement.setAttribute('nearest', booleanToString(thisItem.nearest));\n    }\n    function updateThread(thisThreadBoxElement: HTMLElement, thisItem: integratedStopItem, previousItem: integratedStopItem | null): void {\n      var previousProgress = previousItem?.progress || 0;\n      var thisProgress = thisItem?.progress || 0;\n      const thisThreadElement = elementQuerySelector(thisThreadBoxElement, '.css_route_group_thread');\n      if (!(previousProgress === 0) && thisProgress === 0 && Math.abs(thisProgress - previousProgress) > 0) {\n        thisThreadElement.style.setProperty('--b-cssvar-thread-progress-a', `${100}%`);\n        thisThreadElement.style.setProperty('--b-cssvar-thread-progress-b', `${100}%`);\n        thisThreadElement.addEventListener(\n          'transitionend',\n          function () {\n            thisThreadElement.style.setProperty('--b-cssvar-thread-progress-a', `${0}%`);\n            thisThreadElement.style.setProperty('--b-cssvar-thread-progress-b', `${0}%`);\n          },\n          { once: true }\n        );\n      } else {\n        thisThreadElement.style.setProperty('--b-cssvar-thread-progress-a', `${0}%`);\n        thisThreadElement.style.setProperty('--b-cssvar-thread-progress-b', `${thisProgress * 100}%`);\n      }\n    }\n    function updateStretch(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, skeletonScreen: boolean): void {\n      if (skeletonScreen) {\n        thisItemElement.setAttribute('stretched', 'false');\n        thisThreadBoxElement.setAttribute('stretched', 'false');\n      }\n    }\n    function updateSkeletonScreen(thisItemElement: HTMLElement, thisThreadBoxElement: HTMLElement, skeletonScreen: boolean): void {\n      thisItemElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n      thisThreadBoxElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    }\n    function updateSaveToFolderButton(thisItemElement: HTMLElement, thisItem: integratedStopItem): void {\n      const saveToFolderButtonElement = elementQuerySelector(thisItemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"save-to-folder\"]');\n      saveToFolderButtonElement.setAttribute('onclick', `bus.folder.openSaveToFolder('stop', ['${thisItemElement.id}', ${thisItem.id}, ${integration.RouteID}])`);\n      isSaved('stop', thisItem.id).then((e) => {\n        saveToFolderButtonElement.setAttribute('highlighted', booleanToString(e));\n      });\n    }\n\n    if (previousItem === null) {\n      updateStatus(thisItemElement, thisThreadBoxElement, thisItem);\n      updateName(thisItemElement, thisItem);\n      updateBuses(thisItemElement, thisItem);\n      updateOverlappingRoutes(thisItemElement, thisItem);\n      updateBusArrivalTimes(thisItemElement, thisItem);\n      updateSegmentBuffer(thisItemElement, thisThreadBoxElement, thisItem);\n      updateNearest(thisItemElement, thisThreadBoxElement, thisItem);\n      updateThread(thisThreadBoxElement, thisItem, previousItem);\n      updateStretch(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      updateSkeletonScreen(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      updateSaveToFolderButton(thisItemElement, thisItem);\n    } else {\n      if (!(thisItem.status.code === previousItem.status.code) || !compareThings(previousItem.status.text, thisItem.status.text)) {\n        updateStatus(thisItemElement, thisThreadBoxElement, thisItem);\n      }\n      if (!compareThings(previousItem.name, thisItem.name)) {\n        updateName(thisItemElement, thisItem);\n      }\n      if (!compareThings(previousItem.buses, thisItem.buses)) {\n        updateBuses(thisItemElement, thisItem);\n      }\n      if (!compareThings(previousItem.overlappingRoutes, thisItem.overlappingRoutes)) {\n        updateOverlappingRoutes(thisItemElement, thisItem);\n      }\n      if (!compareThings(previousItem.busArrivalTimes, thisItem.busArrivalTimes)) {\n        updateBusArrivalTimes(thisItemElement, thisItem);\n      }\n      if (!compareThings(previousItem.segmentBuffer, thisItem.segmentBuffer)) {\n        updateSegmentBuffer(thisItemElement, thisThreadBoxElement, thisItem);\n      }\n      if (!(previousItem.nearest === thisItem.nearest)) {\n        updateNearest(thisItemElement, thisThreadBoxElement, thisItem);\n      }\n      if (!(previousItem.progress === thisItem.progress)) {\n        updateThread(thisThreadBoxElement, thisItem, previousItem);\n      }\n      if (!(previousItem.id === thisItem.id)) {\n        updateSaveToFolderButton(thisItemElement, thisItem);\n      }\n      updateStretch(thisItemElement, thisThreadBoxElement, skeletonScreen);\n      updateSkeletonScreen(thisItemElement, thisThreadBoxElement, skeletonScreen);\n    }\n  }\n\n  const FieldSize = queryRouteFieldSize();\n  const FieldWidth = FieldSize.width;\n  const FieldHeight = FieldSize.height;\n\n  const groupQuantity = integration.groupQuantity;\n  const itemQuantity = integration.itemQuantity;\n  const groupedItems = integration.groupedItems;\n\n  routeSliding_groupQuantity = groupQuantity;\n  routeSliding_fieldWidth = FieldWidth;\n  routeSliding_fieldHeight = FieldHeight;\n\n  var cumulativeOffset = 0;\n  for (let i = 0; i < groupQuantity; i++) {\n    var width = getTextWidth([integration.RouteEndPoints.RouteDestination, integration.RouteEndPoints.RouteDeparture, ''].map((e) => `往${e}`)[i], 500, '17px', `\"Noto Sans TC\", sans-serif`) + tabPadding;\n    routeSliding_groupStyles[`g_${i}`] = {\n      width: width,\n      offset: cumulativeOffset\n    };\n    cumulativeOffset += width;\n  }\n  var offset = routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].offset * -1 + routeSliding_fieldWidth * 0.5 - routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].width * 0.5;\n  if (!routeSliding_sliding) {\n    updateRouteCSS(routeSliding_groupQuantity, offset, routeSliding_groupStyles[`g_${routeSliding_initialIndex}`].width - tabPadding, routeSliding_initialIndex);\n  }\n  elementQuerySelector(Field, '.css_route_name').innerHTML = `<span>${integration.RouteName}</span>`;\n  Field.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n  elementQuerySelector(Field, '.css_route_button_right').setAttribute('onclick', `bus.route.openRouteDetails(${integration.RouteID}, [${integration.PathAttributeId.join(',')}])`);\n\n  var currentGroupSeatQuantity = elementQuerySelectorAll(Field, `.css_route_field .css_route_group`).length;\n  if (!(groupQuantity === currentGroupSeatQuantity)) {\n    var capacity = currentGroupSeatQuantity - groupQuantity;\n    if (capacity < 0) {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const newGroupElement = generateElementOfGroup();\n        elementQuerySelector(Field, `.css_route_groups`).appendChild(newGroupElement.element);\n        const newTabElement = generateElementOfTab();\n        elementQuerySelector(Field, `.css_route_head .css_route_group_tabs .css_route_group_tabs_tray`).appendChild(newTabElement.element);\n      }\n    } else {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const groupIndex = currentGroupSeatQuantity - 1 - o;\n        elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[groupIndex].remove();\n        elementQuerySelectorAll(Field, `.css_route_head .css_route_group_tabs .css_route_group_tabs_tray .css_route_group_tab`)[groupIndex].remove();\n      }\n    }\n  }\n\n  for (let i = 0; i < groupQuantity; i++) {\n    const groupKey = `g_${i}`;\n    const currentItemSeatQuantity = elementQuerySelectorAll(elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_items_track'), `.css_route_group_item`).length;\n    if (!(itemQuantity[groupKey] === currentItemSeatQuantity)) {\n      const capacity = currentItemSeatQuantity - itemQuantity[groupKey];\n      if (capacity < 0) {\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const thisThreadBoxElement = generateElementOfThreadBox();\n          const thisItemElement = generateElementOfItem(thisThreadBoxElement.id);\n          elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_items_track').appendChild(thisItemElement.element);\n          elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_threads_track').appendChild(thisThreadBoxElement.element);\n        }\n      } else {\n        for (let o = 0; o < Math.abs(capacity); o++) {\n          const itemIndex = currentItemSeatQuantity - 1 - o;\n          elementQuerySelectorAll(elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_items_track'), `.css_route_group_item`)[itemIndex].remove();\n          elementQuerySelectorAll(elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_threads_track'), `.css_route_group_thread_box`)[itemIndex].remove();\n        }\n      }\n    }\n  }\n\n  for (let i = 0; i < groupQuantity; i++) {\n    const groupKey = `g_${i}`;\n    const thisTabElement = elementQuerySelectorAll(Field, `.css_route_head .css_route_group_tabs .css_route_group_tabs_tray .css_route_group_tab`)[i];\n    thisTabElement.innerHTML = [integration.RouteEndPoints.RouteDestination, integration.RouteEndPoints.RouteDeparture, ''].map((e) => `<span>往${e}</span>`)[i];\n    thisTabElement.style.setProperty('--b-cssvar-route-tab-width', `${routeSliding_groupStyles[groupKey].width}px`);\n    thisTabElement.style.setProperty('--b-cssvar-route-tab-index', `${i}`);\n    for (let j = 0; j < itemQuantity[groupKey]; j++) {\n      const thisItemElement = elementQuerySelectorAll(elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_items_track'), `.css_route_group_item`)[j];\n      const thisThreadBoxElement = elementQuerySelectorAll(elementQuerySelector(elementQuerySelectorAll(Field, `.css_route_groups .css_route_group`)[i], '.css_route_group_threads_track'), `.css_route_group_thread_box`)[j];\n      const thisItem = groupedItems[groupKey][j];\n      if (previousIntegration.hasOwnProperty('groupedItems')) {\n        if (previousIntegration.groupedItems.hasOwnProperty(groupKey)) {\n          if (previousIntegration.groupedItems[groupKey][j]) {\n            var previousItem = previousIntegration.groupedItems[groupKey][j];\n            updateItem(thisItemElement, thisThreadBoxElement, thisItem, previousItem);\n          } else {\n            updateItem(thisItemElement, thisThreadBoxElement, thisItem, null);\n          }\n        } else {\n          updateItem(thisItemElement, thisThreadBoxElement, thisItem, null);\n        }\n      } else {\n        updateItem(thisItemElement, thisThreadBoxElement, thisItem, null);\n      }\n    }\n  }\n  previousIntegration = integration;\n}\n\nasync function refreshRoute(): Promise<object> {\n  var refresh_interval_setting = getSettingOptionValue('refresh_interval') as SettingSelectOptionRefreshIntervalValue;\n  routeRefreshTimer_dynamic = refresh_interval_setting.dynamic;\n  routeRefreshTimer_baseInterval = refresh_interval_setting.baseInterval;\n  routeRefreshTimer_refreshing = true;\n  routeRefreshTimer_currentRequestID = generateIdentifier('r');\n  documentQuerySelector('.css_route_update_timer').setAttribute('refreshing', 'true');\n  var integration = await integrateRoute(currentRouteIDSet_RouteID, currentRouteIDSet_PathAttributeId, routeRefreshTimer_currentRequestID);\n  var Field = documentQuerySelector('.css_route_field');\n  updateRouteField(Field, integration, false);\n  routeRefreshTimer_lastUpdate = new Date().getTime();\n  if (routeRefreshTimer_dynamic) {\n    var updateRate = await getUpdateRate();\n    routeRefreshTimer_nextUpdate = Math.max(new Date().getTime() + routeRefreshTimer_minInterval, integration.dataUpdateTime + routeRefreshTimer_baseInterval / updateRate);\n  } else {\n    routeRefreshTimer_nextUpdate = new Date().getTime() + routeRefreshTimer_baseInterval;\n  }\n  routeRefreshTimer_dynamicInterval = Math.max(routeRefreshTimer_minInterval, routeRefreshTimer_nextUpdate - new Date().getTime());\n  routeRefreshTimer_refreshing = false;\n  documentQuerySelector('.css_route_update_timer').setAttribute('refreshing', 'false');\n  return { status: 'Successfully refreshed the route.' };\n}\n\nexport function streamRoute(): void {\n  refreshRoute()\n    .then((result) => {\n      if (routeRefreshTimer_streaming) {\n        routeRefreshTimer_timer = setTimeout(function () {\n          streamRoute();\n        }, Math.max(routeRefreshTimer_minInterval, routeRefreshTimer_nextUpdate - new Date().getTime()));\n      } else {\n        routeRefreshTimer_streamStarted = false;\n      }\n    })\n    .catch((err) => {\n      console.error(err);\n      if (routeRefreshTimer_streaming) {\n        promptMessage(`（路線）發生網路錯誤，將在${routeRefreshTimer_retryInterval / 1000}秒後重試。`, 'error');\n        routeRefreshTimer_timer = setTimeout(function () {\n          streamRoute();\n        }, routeRefreshTimer_retryInterval);\n      } else {\n        routeRefreshTimer_streamStarted = false;\n      }\n    });\n}\n\nexport function openRoute(RouteID: number, PathAttributeId: Array<number>): void {\n  pushPageHistory('Route');\n  logRecentView('route', RouteID);\n  currentRouteIDSet_RouteID = RouteID;\n  currentRouteIDSet_PathAttributeId = PathAttributeId;\n  routeSliding_initialIndex = 0;\n  var Field = documentQuerySelector('.css_route_field');\n  Field.setAttribute('displayed', 'true');\n  elementQuerySelector(Field, '.css_route_groups').scrollLeft = 0;\n  setUpRouteFieldSkeletonScreen(Field);\n  if (!routeRefreshTimer_streaming) {\n    routeRefreshTimer_streaming = true;\n    if (!routeRefreshTimer_streamStarted) {\n      routeRefreshTimer_streamStarted = true;\n      streamRoute();\n    } else {\n      refreshRoute();\n    }\n    updateUpdateTimer();\n  }\n  closePreviousPage();\n}\n\nexport function closeRoute(): void {\n  // revokePageHistory('Route');\n  var Field = documentQuerySelector('.css_route_field');\n  Field.setAttribute('displayed', 'false');\n  routeRefreshTimer_streaming = false;\n  openPreviousPage();\n}\n\nexport function switchRoute(RouteID: number, PathAttributeId: Array<number>) {\n  routeRefreshTimer_streaming = false;\n  openRoute(RouteID, PathAttributeId);\n}\n\nexport function stretchRouteItemBody(itemElementID: string, threadBoxElementID: string): void {\n  const itemElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  const threadBoxElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_threads_track .css_route_group_thread_box#${threadBoxElementID}`);\n  if (itemElement.getAttribute('stretched') === 'true') {\n    itemElement.setAttribute('stretched', 'false');\n    threadBoxElement.setAttribute('stretched', 'false');\n  } else {\n    itemElement.setAttribute('stretched', 'true');\n    threadBoxElement.setAttribute('stretched', 'true');\n  }\n}\n\nexport function switchRouteBodyTab(itemID: string, tabCode: number): void {\n  const itemElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group_item#${itemID}`);\n  const buttons = elementQuerySelector(itemElement, '.css_route_group_item_buttons');\n  const button = elementQuerySelectorAll(buttons, '.css_route_group_item_button[highlighted=\"true\"][type=\"tab\"]');\n  for (const t of button) {\n    t.setAttribute('highlighted', 'false');\n  }\n  elementQuerySelector(buttons, `.css_route_group_item_button[code=\"${tabCode}\"]`).setAttribute('highlighted', 'true');\n  switch (tabCode) {\n    case 0:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'true');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'flase');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'false');\n      break;\n    case 1:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'true');\n      break;\n    case 2:\n      elementQuerySelector(itemElement, '.css_route_group_item_buses').setAttribute('displayed', 'false');\n      elementQuerySelector(itemElement, '.css_route_group_item_overlapping_routes').setAttribute('displayed', 'true');\n      elementQuerySelector(itemElement, '.css_route_group_item_bus_arrival_times').setAttribute('displayed', 'false');\n      break;\n    default:\n      break;\n  }\n}\n","import { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { GeneratedElement, pushPageHistory, revokePageHistory } from '../index';\nimport { generateIdentifier } from '../../tools/index';\nimport { listFoldersWithContent, FoldersWithContent, FolderContentType, saveStop, isSaved, saveRoute } from '../../data/folder/index';\nimport { getIconHTML } from '../icons/index';\nimport { promptMessage } from '../prompt/index';\n\nfunction generateElementOfItem(item: FoldersWithContent, type: FolderContentType, parameters: Array): GeneratedElement {\n  var identifier = generateIdentifier('i');\n  var element = document.createElement('div');\n  element.classList.add('css_save_to_folder_list_item');\n  element.id = identifier;\n  switch (type) {\n    case 'stop':\n      element.setAttribute('onclick', `bus.folder.saveStopItemOnRoute('${parameters[0]}', '${item.folder.id}', ${parameters[1]}, ${parameters[2]})`);\n      break;\n    case 'route':\n      element.setAttribute('onclick', `bus.folder.saveRouteOnDetailsPage('${item.folder.id}', ${parameters[0]})`);\n      break;\n    case 'bus':\n      break;\n    default:\n      break;\n  }\n  element.innerHTML = `<div class=\"css_save_to_folder_item_icon\">${getIconHTML(item.folder.icon)}</div><div class=\"css_save_to_folder_item_name\">${item.folder.name}</div>`;\n  return {\n    element: element,\n    id: identifier\n  };\n}\n\nasync function initializeSaveToFolderField(type: FolderContentType, parameters: Array): void {\n  var Field = documentQuerySelector('.css_save_to_folder_field');\n  elementQuerySelector(Field, '.css_save_to_folder_body .css_save_to_folder_list').innerHTML = '';\n  var foldersWithContent = await listFoldersWithContent();\n  for (var item of foldersWithContent) {\n    var thisElement = generateElementOfItem(item, type, parameters);\n    elementQuerySelector(Field, '.css_save_to_folder_body .css_save_to_folder_list').appendChild(thisElement.element);\n  }\n}\n\nexport function openSaveToFolder(type: FolderContentType, parameters: Array): void {\n  pushPageHistory('SaveToFolder');\n  var Field = documentQuerySelector('.css_save_to_folder_field');\n  Field.setAttribute('displayed', 'true');\n  initializeSaveToFolderField(type, parameters);\n}\n\nexport function closeSaveToFolder(): void {\n  revokePageHistory('SaveToFolder');\n  var Field = documentQuerySelector('.css_save_to_folder_field');\n  Field.setAttribute('displayed', 'false');\n}\n\nexport function saveStopItemOnRoute(itemElementID: string, folderID: string, StopID: number, RouteID: number): void {\n  var itemElement = documentQuerySelector(`.css_route_field .css_route_groups .css_route_group .css_route_group_tracks .css_route_group_items_track .css_route_group_item#${itemElementID}`);\n  var actionButtonElement = elementQuerySelector(itemElement, '.css_route_group_item_body .css_route_group_item_buttons .css_route_group_item_button[type=\"save-to-folder\"]');\n  saveStop(folderID, StopID, RouteID).then((e) => {\n    if (e) {\n      isSaved('stop', StopID).then((k) => {\n        if (k) {\n          actionButtonElement.setAttribute('highlighted', k);\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('此資料夾不支援站牌類型項目', 'warning');\n    }\n  });\n}\n\nexport function saveRouteOnDetailsPage(folderID: string, RouteID: number): void {\n  var actionButtonElement = documentQuerySelector('.css_route_details_field .css_route_details_body .css_route_details_groups .css_route_details_group[group=\"actions\"] .css_route_details_group_body .css_route_details_action_button[action=\"save-to-folder\"]');\n  saveRoute(folderID, RouteID).then((e) => {\n    if (e) {\n      isSaved('route', RouteID).then((k) => {\n        if (k) {\n          actionButtonElement.setAttribute('highlighted', 'true');\n          promptMessage('已儲存至資料夾', 'folder');\n          closeSaveToFolder();\n        }\n      });\n    } else {\n      promptMessage('此資料夾不支援路線類型項目', 'warning');\n    }\n  });\n}\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_createForOfIteratorHelper","Array","isArray","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_n","F","asyncGeneratorStep","previousIntegration","routeSliding_initialIndex","routeSliding_targetIndex","routeSliding_groupQuantity","routeSliding_groupStyles","routeSliding_fieldWidth","routeSliding_sliding","routeRefreshTimer_retryInterval","routeRefreshTimer_baseInterval","routeRefreshTimer_minInterval","routeRefreshTimer_dynamicInterval","routeRefreshTimer_dynamic","routeRefreshTimer_streaming","routeRefreshTimer_lastUpdate","routeRefreshTimer_nextUpdate","routeRefreshTimer_refreshing","routeRefreshTimer_currentRequestID","routeRefreshTimer_streamStarted","currentRouteIDSet_RouteID","currentRouteIDSet_PathAttributeId","tabPadding","initializeRouteSliding","routeGroups","documentQuerySelector","addEventListener","event","Math","round","scrollLeft","currentIndex","target","initialSize","concat","width","offset","targetSize","tabWidth","abs","updateRouteCSS","queryRouteFieldSize","window","innerWidth","height","innerHeight","ResizeRouteField","FieldSize","FieldWidth","FieldHeight","Field","style","setProperty","groupQuantity","tabLineWidth","percentage","groupsTabsTrayElement","elementQuerySelector","groupTabLineElement","toFixed","updateUpdateTimer","updateTimerElement","time","Date","getTime","getDataReceivingProgress","min","max","requestAnimationFrame","generateElementOfThreadBox","identifier","generateIdentifier","element","document","createElement","classList","add","id","setAttribute","innerHTML","generateElementOfItem","threadBoxIdentifier","getIconHTML","generateElementOfGroup","tracksElement","threadTrackElement","itemsTrackElement","appendChild","updateRouteField","integration","skeletonScreen","updateItem","thisItemElement","thisThreadBoxElement","thisItem","previousItem","updateStatus","currentThreadSlide","nextThreadSlide","currentItemSlide","nextItemSlide","status","code","innerText","text","remove","once","updateSegmentBuffer","booleanToString","segmentBuffer","isSegmentBuffer","updateName","updateBuses","buses","map","bus","onThisRoute","carNumber","RouteName","join","updateOverlappingRoutes","overlappingRoutes","route","RouteEndPoints","html","RouteID","PathAttributeId","updateBusArrivalTimes","busArrivalTimes","busArrivalTime","personalSchedule","timeObjectToString","period","start","end","days","day","indexToDay","updateNearest","nearest","updateThread","previousProgress","progress","thisProgress","thisThreadElement","updateStretch","updateSkeletonScreen","updateSaveToFolderButton","saveToFolderButtonElement","isSaved","compareThings","itemQuantity","groupedItems","cumulativeOffset","getTextWidth","RouteDestination","RouteDeparture","currentGroupSeatQuantity","elementQuerySelectorAll","capacity","newGroupElement","newTabElement","groupIndex","groupKey","currentItemSeatQuantity","itemIndex","thisTabElement","j","refreshRoute","_refreshRoute","apply","arguments","_callee","refresh_interval_setting","updateRate","_context","getSettingOptionValue","dynamic","baseInterval","integrateRoute","getUpdateRate","dataUpdateTime","_next","_throw","streamRoute","result","setTimeout","err","console","error","promptMessage","openRoute","pushPageHistory","logRecentView","defaultItemQuantity","floor","goBack","sequence","position","longitude","latitude","isStartingPoint","isEndingPoint","g_0","g_1","setUpRouteFieldSkeletonScreen","closePreviousPage","closeRoute","openPreviousPage","switchRoute","stretchRouteItemBody","itemElementID","threadBoxElementID","itemElement","threadBoxElement","getAttribute","switchRouteBodyTab","itemID","tabCode","_step","buttons","_iterator","item","parameters","folder","icon","_initializeSaveToFolderField","foldersWithContent","thisElement","listFoldersWithContent","openSaveToFolder","_x","_x2","initializeSaveToFolderField","closeSaveToFolder","revokePageHistory","saveStopItemOnRoute","folderID","StopID","actionButtonElement","saveStop","k","saveRouteOnDetailsPage","saveRoute"],"sourceRoot":""}