{"version":3,"file":"1f7bb01a409e158d2840.js","mappings":"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","sources":["webpack://bus/./src/interface/route/details/properties.ts","webpack://bus/./src/interface/route/details/index.ts","webpack://bus/./src/interface/register-notification/index.ts","webpack://bus/./src/interface/route/details/actions.ts","webpack://bus/./src/interface/route/details/calendar.ts"],"sourcesContent":["import { GeneratedElement } from '../../index';\nimport { booleanToString, compareThings } from '../../../tools/index';\nimport { getIconHTML } from '../../icons/index';\nimport { elementQuerySelector, elementQuerySelectorAll } from '../../../tools/query-selector';\nimport { getSettingOptionValue } from '../../../data/settings/index';\n\nlet previousProperties = [];\nlet previousAnimation: boolean = true;\nlet previousSkeletonScreen: boolean = false;\n\nfunction generateElementOfProperty(): GeneratedElement {\n  var element = document.createElement('div');\n  element.classList.add('css_route_details_property');\n  element.innerHTML = /*html*/ `<div class=\"css_route_details_property_icon\"></div><div class=\"css_route_details_property_value\"></div>`;\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nexport function setUppropertiesGroupSkeletonScreen(Field: HTMLElement): void {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  var defaultPropertyQuantity = 5;\n  var properties = [];\n  for (let i = 0; i < defaultPropertyQuantity; i++) {\n    properties.push({\n      key: i,\n      icon: 'none',\n      value: ''\n    });\n  }\n  updatePropertiesField(Field, properties, true, playing_animation);\n}\n\nexport function updatePropertiesField(Field: HTMLElement, properties: Array, skeletonScreen: boolean, animation: boolean): void {\n  function updateProperty(thisElement: HTMLElement, thisProperty: object, previousProperty: object): void {\n    function updateIcon(thisElement: HTMLElement, thisProperty: object): void {\n      elementQuerySelector(thisElement, '.css_route_details_property_icon').innerHTML = getIconHTML(thisProperty.icon);\n    }\n\n    function updateValue(thisElement: HTMLElement, thisProperty: object): void {\n      elementQuerySelector(thisElement, '.css_route_details_property_value').innerText = thisProperty.value;\n    }\n\n    function updateAnimation(thisElement: HTMLElement, animation: boolean): void {\n      thisElement.setAttribute('animation', booleanToString(animation));\n    }\n\n    function updateSkeletonScreen(thisElement: HTMLElement, skeletonScreen: boolean): void {\n      thisElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n    }\n\n    if (previousProperty === null) {\n      updateIcon(thisElement, thisProperty);\n      updateValue(thisElement, thisProperty);\n      updateAnimation(thisElement, animation);\n      updateSkeletonScreen(thisElement, skeletonScreen);\n    } else {\n      if (!compareThings(previousProperty, thisProperty)) {\n        updateIcon(thisElement, thisProperty);\n      }\n      if (!compareThings(previousProperty, thisProperty)) {\n        updateValue(thisElement, thisProperty);\n      }\n      if (previousAnimation !== animation) {\n        updateAnimation(thisElement, animation);\n      }\n      if (previousSkeletonScreen !== skeletonScreen) {\n        updateSkeletonScreen(thisElement, skeletonScreen);\n      }\n    }\n  }\n\n  var propertyQuantity = properties.length;\n\n  Field.setAttribute('skeleton-screen', skeletonScreen);\n\n  const currentPropertySeatQuantity = elementQuerySelectorAll(Field, `.css_route_details_group_body .css_route_details_property`).length;\n  if (propertyQuantity !== currentPropertySeatQuantity) {\n    const capacity = currentPropertySeatQuantity - propertyQuantity;\n    if (capacity < 0) {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        // const propertyIndex = currentPropertySeatQuantity + o;\n        const newPropertyElement = generateElementOfProperty(skeletonScreen);\n        elementQuerySelector(Field, '.css_route_details_group_body').appendChild(newPropertyElement.element);\n      }\n    } else {\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const propertyIndex = currentPropertySeatQuantity - 1 - o;\n        elementQuerySelectorAll(Field, `.css_route_details_group_body .css_route_details_property`)[propertyIndex].remove();\n      }\n    }\n  }\n\n  for (let i = 0; i < propertyQuantity; i++) {\n    const thisPropertyElement = elementQuerySelectorAll(Field, `.css_route_details_group_body .css_route_details_property`)[i];\n    const thisProperty = properties[i];\n    if (previousProperties.length === 0) {\n      updateProperty(thisPropertyElement, thisProperty, null);\n    } else {\n      updateProperty(thisPropertyElement, thisProperty, previousProperties[i]);\n    }\n  }\n\n  previousProperties = properties;\n  previousAnimation = animation;\n  previousSkeletonScreen = skeletonScreen;\n}\n","import { isFolderContentSaved } from '../../../data/folder/index';\nimport { integrateRouteDetails } from '../../../data/route/details';\nimport { getSettingOptionValue } from '../../../data/settings/index';\nimport { booleanToString, generateIdentifier } from '../../../tools/index';\nimport { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../../tools/query-selector';\nimport { pushPageHistory, revokePageHistory } from '../../index';\nimport { openSaveToFolder } from '../../save-to-folder/index';\nimport { shareRoutePermalink, showRoutePermalinkQRCode } from './actions';\nimport { setUpCalendarGroupSkeletonScreen, updateCalendarGroup } from './calendar';\nimport { setUppropertiesGroupSkeletonScreen, updatePropertiesField } from './properties';\n\nexport const RouteDetailsField = documentQuerySelector('.css_route_details_field');\nexport const RouteDetailsBodyElement = elementQuerySelector(RouteDetailsField, '.css_route_details_body');\nexport const RouteDetailsGroupsElement = elementQuerySelector(RouteDetailsBodyElement, '.css_route_details_groups');\n\nexport const CalendarGroupElement = elementQuerySelector(RouteDetailsGroupsElement, '.css_route_details_group[group=\"calendar\"]');\nexport const CalendarGroupBodyElement = elementQuerySelector(CalendarGroupElement, '.css_route_details_group_body');\nexport const CalendarDaysElement = elementQuerySelector(CalendarGroupBodyElement, '.css_route_details_calendar_days');\nexport const CalendarEventGroupsElement = elementQuerySelector(CalendarGroupBodyElement, '.css_route_details_calendar_event_groups');\n\nexport const ActionsGroupElememt = elementQuerySelector(RouteDetailsField, '.css_route_details_body .css_route_details_groups .css_route_details_group[group=\"actions\"]');\nexport const svaeToFolderActionButtonElement = elementQuerySelector(ActionsGroupElememt, '.css_route_details_group_body .css_route_details_action_button[action=\"save-to-folder\"]');\nexport const getPermalinkActionButton = elementQuerySelector(ActionsGroupElememt, '.css_route_details_group_body .css_route_details_action_button[action=\"get-permalink\"]');\nexport const showPermalinkQRCodeActionButton = elementQuerySelector(ActionsGroupElememt, '.css_route_details_group_body .css_route_details_action_button[action=\"show-permalink-qrcode\"]');\n\nexport const PropertiesGroupElement = elementQuerySelector(RouteDetailsField, '.css_route_details_body .css_route_details_groups .css_route_details_group[group=\"properties\"]');\n\nasync function initializeRouteDetailsField(RouteID: number, PathAttributeId: Array<number>) {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const existence = await isFolderContentSaved('route', RouteID);\n  svaeToFolderActionButtonElement.setAttribute('animation', booleanToString(playing_animation));\n  svaeToFolderActionButtonElement.setAttribute('highlighted', booleanToString(existence));\n  svaeToFolderActionButtonElement.onclick = function () {\n    openSaveToFolder('route', [RouteID]);\n  };\n  getPermalinkActionButton.setAttribute('animation', booleanToString(playing_animation));\n  getPermalinkActionButton.onclick = function () {\n    shareRoutePermalink(RouteID);\n  };\n  showPermalinkQRCodeActionButton.setAttribute('animation', booleanToString(playing_animation));\n  showPermalinkQRCodeActionButton.onclick = function () {\n    showRoutePermalinkQRCode(RouteID);\n  };\n  setUppropertiesGroupSkeletonScreen(PropertiesGroupElement);\n  setUpCalendarGroupSkeletonScreen();\n  const requestID = generateIdentifier();\n  const integration = await integrateRouteDetails(RouteID, PathAttributeId, requestID);\n  updatePropertiesField(PropertiesGroupElement, integration.properties, false, playing_animation);\n  updateCalendarGroup(integration.calendar, false, playing_animation);\n}\n\nexport function openRouteDetails(RouteID: number, PathAttributeId: Array<number>): void {\n  pushPageHistory('RouteDetails');\n  RouteDetailsField.setAttribute('displayed', 'true');\n  initializeRouteDetailsField(RouteID, PathAttributeId);\n}\n\nexport function closeRouteDetails(): void {\n  revokePageHistory('RouteDetails');\n  RouteDetailsField.setAttribute('displayed', 'false');\n  const CalendarEventGroupElements = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group');\n  for (const CalendarEventGroupElement of CalendarEventGroupElements) {\n    CalendarEventGroupElement.remove();\n  }\n  const CalendarDayElements = elementQuerySelectorAll(CalendarDaysElement, '.css_route_details_calendar_day');\n  for (const CalendarDayElement of CalendarDayElements) {\n    CalendarDayElement.remove();\n  }\n}\n","import { registerNotificationClient } from '../../data/notification/apis/registerNotificationClient/index';\nimport { getNotificationProvider, setNotificationProvider } from '../../data/notification/index';\nimport { isValidURL } from '../../tools/index';\nimport { documentQuerySelector, elementQuerySelector } from '../../tools/query-selector';\nimport { closePreviousPage, openPreviousPage, pushPageHistory } from '../index';\nimport { promptMessage } from '../prompt/index';\n\nconst RegisterNotificationField = documentQuerySelector('.css_register_notification_field');\nconst RegisterNotificationBodyElement = elementQuerySelector(RegisterNotificationField, '.css_register_notification_body');\nconst RegisterNotificationGroupsElement = elementQuerySelector(RegisterNotificationBodyElement, '.css_register_notification_groups');\n\nconst ProviderInputElement = elementQuerySelector(RegisterNotificationGroupsElement, '.css_register_notification_group[group=\"provider\"] .css_register_notification_group_body input');\nconst RgistrationKeyInputElement = elementQuerySelector(RegisterNotificationGroupsElement, '.css_register_notification_group[group=\"registration-key\"] .css_register_notification_group_body input');\n\nfunction initializeRegisterNotificationField() {\n  ProviderInputElement.value = getNotificationProvider();\n  RgistrationKeyInputElement.value = '';\n}\n\nexport function openRegisterNotification(): void {\n  pushPageHistory('RegisterNotification');\n  RegisterNotificationField.setAttribute('displayed', 'true');\n  initializeRegisterNotificationField();\n  closePreviousPage();\n}\n\nexport function closeRegisterNotification(): void {\n  // revokePageHistory('RegisterNotification');\n  RegisterNotificationField.setAttribute('displayed', 'false');\n  openPreviousPage();\n}\n\nexport async function saveFormulatedRegisterNotification() {\n  promptMessage('處理中', 'manufacturing');\n  const provider = ProviderInputElement.value;\n  const registrationKey = RgistrationKeyInputElement.value;\n  if (!isValidURL(provider)) {\n    promptMessage('無效的提供者', 'error');\n    return;\n  }\n  // register\n  setNotificationProvider(provider);\n  const registering = await registerNotificationClient(registrationKey);\n  if (registering) {\n    promptMessage('註冊成功', 'check_circle');\n    return;\n  } else {\n    promptMessage('註冊失敗', 'error');\n    return;\n  }\n}\n","import { searchRouteByRouteID } from '../../../data/search/index';\nimport { getPermalink } from '../../../tools/permalink';\nimport { promptMessage } from '../../prompt/index';\nimport { openQRCode } from '../../qrcode/index';\n\nexport async function shareRoutePermalink(RouteID: number) {\n  const thisRoute = await searchRouteByRouteID(RouteID);\n  if (thisRoute !== false) {\n    const link = getPermalink(0, {\n      id: RouteID,\n      name: thisRoute.n\n    });\n    if (navigator.share) {\n      navigator\n        .share({\n          title: thisRoute.n,\n          url: link\n        })\n        .then(() => {\n          promptMessage('已分享路線連結', 'link');\n        })\n        .catch((e) => {\n          promptMessage('已取消分享連結', 'cancel');\n          console.error(e);\n        });\n    }\n  }\n}\n\nexport async function showRoutePermalinkQRCode(RouteID: number) {\n  const thisRoute = await searchRouteByRouteID(RouteID);\n  if (thisRoute !== false) {\n    const link = getPermalink(0, {\n      id: RouteID,\n      name: thisRoute.n\n    });\n    openQRCode(link);\n  }\n}\n","import { GeneratedElement, querySize } from '../../index';\nimport { elementQuerySelector, elementQuerySelectorAll } from '../../../tools/query-selector';\nimport { getSettingOptionValue } from '../../../data/settings/index';\nimport { getCSSVariableValue } from '../../../tools/style';\nimport { drawRoundedRect } from '../../../tools/graphic';\nimport { Calendar, CalendarDay, CalendarEvent, CalendarEventGroup } from '../../../data/route/details';\nimport { booleanToString } from '../../../tools/index';\nimport { CalendarDaysElement, CalendarEventGroupsElement } from './index';\n\n/*\nconst RouteDetailsField = documentQuerySelector('.css_route_details_field');\nconst RouteDetailsBodyElement = elementQuerySelector(RouteDetailsField, '.css_route_details_body');\nconst RouteDetailsGroupsElement = elementQuerySelector(RouteDetailsBodyElement, '.css_route_details_groups');\nconst CalendarGroupElement = elementQuerySelector(RouteDetailsGroupsElement, '.css_route_details_group[group=\"calendar\"]');\nconst CalendarGroupBodyElement = elementQuerySelector(CalendarGroupElement, '.css_route_details_group_body');\nconst CalendarDaysElement = elementQuerySelector(CalendarGroupBodyElement, '.css_route_details_calendar_days');\nconst CalendarEventGroupsElement = elementQuerySelector(CalendarGroupBodyElement, '.css_route_details_calendar_event_groups');\n*/\n\nconst calendar_ratio = 60;\nconst scaleLimit = Math.floor(3072 / (calendar_ratio * 24));\nconst gridlineBoxHeight = 10;\nconst gridlineWidth = 1.2;\nconst gridlineLabelWidthLimit = 45;\nconst fontFamily: string = '\"Noto Sans TC\", sans-serif';\n\nlet canvasSize = querySize('route-details-canvas');\nlet canvasWidth = canvasSize.width;\nlet canvasHeight = canvasSize.height;\nlet canvasScale = Math.min(window.devicePixelRatio, scaleLimit) || 1;\n\nlet previousCalendar = {} as Calendar;\nlet previousAnimation: boolean = true;\nlet previousSkeletonScreen: boolean = false;\n\nfunction resizeRouteDetailsCalendarCanvas(canvas: HTMLCanvasElement): void {\n  canvasSize = querySize('route-details-canvas');\n  canvasWidth = canvasSize.width;\n  canvasHeight = canvasSize.height;\n  canvasScale = Math.min(window.devicePixelRatio, scaleLimit) || 1;\n\n  // Set the new size\n  canvas.width = canvasWidth * canvasScale;\n  canvas.height = canvasHeight * canvasScale;\n\n  // Reset transformations before scaling\n  const context = canvas.getContext('2d');\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.scale(canvasScale, canvasScale);\n}\n\nfunction generateElementOfDay(): GeneratedElement {\n  const element = document.createElement('div');\n  element.classList.add('css_route_details_calendar_day');\n\n  return {\n    element: element,\n    id: ''\n  };\n}\n\nfunction generateElementOfEventGroup(): GeneratedElement {\n  // Main event group element\n  const eventGroupElement = document.createElement('div');\n  eventGroupElement.classList.add('css_route_details_calendar_event_group');\n\n  // Canvas element\n  const canvasElement = document.createElement('canvas');\n  canvasElement.classList.add('css_route_details_calendar_event_group_canvas');\n  eventGroupElement.appendChild(canvasElement);\n\n  return {\n    element: eventGroupElement,\n    id: ''\n  };\n}\n\nexport function setUpCalendarGroupSkeletonScreen(): void {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const defaultEventQuantity = {\n    d_0: 47,\n    d_1: 47,\n    d_2: 47,\n    d_3: 47,\n    d_4: 47,\n    d_5: 47,\n    d_6: 47\n  };\n  const defaultDayQuantity = 7;\n  let calendarEventGroups = {};\n  let calendarDays = {};\n  for (let i = 0; i < defaultDayQuantity; i++) {\n    const eventGroupKey = `d_${i}`;\n    calendarEventGroups[eventGroupKey] = [];\n    calendarDays[eventGroupKey] = {\n      day: i,\n      code: `d_{i}`,\n      name: ''\n    };\n    for (let j = 0; j < defaultEventQuantity[eventGroupKey]; j++) {\n      const date = new Date();\n      date.setHours(0);\n      date.setMinutes(j * 30);\n      date.setSeconds(0);\n      date.setMilliseconds(0);\n      calendarEventGroups[eventGroupKey].push({\n        date: date,\n        dateString: '',\n        duration: 15\n      });\n    }\n  }\n  updateCalendarGroup(\n    {\n      calendarEventGroups: calendarEventGroups,\n      calendarDays: calendarDays,\n      calendarDayQuantity: defaultDayQuantity,\n      calendarEventQuantity: defaultEventQuantity\n    },\n    true,\n    playing_animation\n  );\n}\n\nfunction updateDay(thisDayElement: HTMLElement, thisDay: CalendarDay, currentDay: number, skeletonScreen: boolean, animation: boolean, index: number): void {\n  thisDayElement.innerText = thisDay.name;\n  thisDayElement.setAttribute('day', index.toString());\n  thisDayElement.onclick = function () {\n    switchCalendarDay(index);\n  };\n  thisDayElement.setAttribute('highlighted', currentDay === index ? 'true' : 'false');\n  thisDayElement.setAttribute('animation', booleanToString(animation));\n  thisDayElement.setAttribute('skeleton-screen', booleanToString(skeletonScreen));\n}\n\nfunction updateEventGroup(thisCalendarEventGroupElement: HTMLElement, thisCalendarEventGroup: CalendarEventGroup, currentDay: number, mainColor: string, mainColorR: string, mainColorG: string, mainColorB: string, mainColorA: string, gridColor: string, index: number): void {\n  function drawGridline(thisContext: CanvasRenderingContext2D, hours: number, gridColor: string): void {\n    const boxX = 0;\n    const boxY = hours * calendar_ratio;\n\n    // Cache the color value once\n    thisContext.fillStyle = gridColor;\n\n    // Draw line\n    thisContext.fillRect(boxX + gridlineLabelWidthLimit, boxY + 5, canvasWidth - gridlineLabelWidthLimit, gridlineWidth);\n\n    // Draw label\n    thisContext.font = `400 ${12}px ${fontFamily}`;\n    thisContext.textBaseline = 'top';\n    const labelText = `${String(hours).padStart(2, '0')}:00`;\n    const labelMeasurement = thisContext.measureText(labelText);\n    const labelWidth = labelMeasurement.width;\n    const labelHeight = labelMeasurement.actualBoundingBoxDescent;\n    thisContext.fillText(labelText, (gridlineLabelWidthLimit - labelWidth) / 2, boxY + (gridlineBoxHeight - labelHeight) / 2, labelWidth);\n  }\n\n  function drawEvent(thisContext: CanvasRenderingContext2D, thisCalendarEvent: CalendarEvent, mainColor: string, mainColorR: string, mainColorG: string, mainColorB: string, mainColorA: string): void {\n    // Calculate the start of the day for this event only once.\n    const thisDayStart = new Date();\n    thisDayStart.setDate(1);\n    thisDayStart.setMonth(0);\n    thisDayStart.setFullYear(thisCalendarEvent.date.getFullYear());\n    thisDayStart.setMonth(thisCalendarEvent.date.getMonth());\n    thisDayStart.setDate(thisCalendarEvent.date.getDate());\n    thisDayStart.setHours(0);\n    thisDayStart.setMinutes(0);\n    thisDayStart.setSeconds(0);\n    thisDayStart.setMilliseconds(0);\n\n    const boxX = gridlineLabelWidthLimit;\n    const boxY = ((thisCalendarEvent.date.getTime() - thisDayStart.getTime()) / (24 * 60 * 60 * 1000)) * 24 * calendar_ratio;\n    const boxWidth = canvasWidth - gridlineLabelWidthLimit;\n    const boxHeight = ((thisCalendarEvent.duration * 60 * 1000) / (24 * 60 * 60 * 1000)) * 24 * calendar_ratio;\n\n    // Draw background with rounded rectangle\n    drawRoundedRect(thisContext, boxX, boxY, boxWidth, boxHeight, 3, `rgba(${mainColorR}, ${mainColorG}, ${mainColorB}, ${mainColorA})`);\n\n    // Draw decoration (a thin rounded rectangle)\n    drawRoundedRect(thisContext, boxX, boxY, 3, boxHeight, { tl: 3, tr: 0, bl: 3, br: 0 }, mainColor);\n\n    // Draw event text\n    thisContext.font = `400 ${14}px ${fontFamily}`;\n    thisContext.textBaseline = 'top';\n    thisContext.fillStyle = mainColor;\n    const text = thisCalendarEvent.dateString;\n    const textMeasurement = thisContext.measureText(text);\n    const textWidth = textMeasurement.width;\n    const textHeight = textMeasurement.actualBoundingBoxDescent;\n    thisContext.fillText(text, boxX + 8, boxY + (boxHeight - textHeight) / 2, textWidth);\n  }\n\n  function updateDisplayed(thisCalendarEventGroupElement: HTMLElement, currentDay: number, index: number): void {\n    // Set the displayed attribute based on whether it is the current day.\n    const isDisplayed = currentDay === index;\n    thisCalendarEventGroupElement.setAttribute('displayed', booleanToString(isDisplayed));\n  }\n\n  // Get the canvas and its 2D context.\n  const thisCalendarEventGroupCanvas = elementQuerySelector(thisCalendarEventGroupElement, '.css_route_details_calendar_event_group_canvas') as HTMLCanvasElement;\n  const thisCalendarEventGroupCanvasContext = thisCalendarEventGroupCanvas.getContext('2d');\n\n  // Update the displayed attribute\n  updateDisplayed(thisCalendarEventGroupElement, currentDay, index);\n\n  // Always resize the canvas to ensure proper dimensions.\n  resizeRouteDetailsCalendarCanvas(thisCalendarEventGroupCanvas);\n\n  const isDisplayed = currentDay === index;\n  if (isDisplayed) {\n    // Clear the canvas and redraw the content when displayed.\n    thisCalendarEventGroupCanvasContext.clearRect(0, 0, canvasWidth, canvasHeight);\n\n    // Draw the gridlines.\n    for (let hours = 0; hours < 24; hours++) {\n      drawGridline(thisCalendarEventGroupCanvasContext, hours, gridColor);\n    }\n\n    // Draw all events for this group.\n    for (const thisCalendarEvent of thisCalendarEventGroup) {\n      drawEvent(thisCalendarEventGroupCanvasContext, thisCalendarEvent, mainColor, mainColorR, mainColorG, mainColorB, mainColorA);\n    }\n  } else {\n    // When not displayed, clear the canvas.\n    thisCalendarEventGroupCanvasContext.clearRect(0, 0, canvasWidth, canvasHeight);\n  }\n}\n\nexport function updateCalendarGroup(calendar: Calendar, skeletonScreen: boolean, animation: boolean): void {\n  // The default day to display.\n  const currentDay = new Date().getDay();\n\n  // Retrieve the CSS variable values just once\n  const mainColorR = getCSSVariableValue('--b-cssvar-main-color-r');\n  const mainColorG = getCSSVariableValue('--b-cssvar-main-color-g');\n  const mainColorB = getCSSVariableValue('--b-cssvar-main-color-b');\n  const mainColorA = getCSSVariableValue('--b-cssvar-main-color-opacity-e');\n  const mainColor = getCSSVariableValue('--b-cssvar-main-color');\n  const gridColor = getCSSVariableValue('--b-cssvar-ededf2');\n\n  const eventGroups = calendar.calendarDays;\n  const eventGroupQuantity = calendar.calendarDayQuantity;\n  const calendarEventGroups = calendar.calendarEventGroups;\n  const eventQuantity = calendar.calendarEventQuantity;\n\n  const currentEventGroupSeatQuantity = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group').length;\n  if (eventGroupQuantity !== currentEventGroupSeatQuantity) {\n    const capacity = currentEventGroupSeatQuantity - eventGroupQuantity;\n    if (capacity < 0) {\n      // Add missing day and event group elements.\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const newDayElement = generateElementOfDay();\n        CalendarDaysElement.appendChild(newDayElement.element);\n        const newEventGroupElement = generateElementOfEventGroup();\n        CalendarEventGroupsElement.appendChild(newEventGroupElement.element);\n      }\n    } else {\n      // Remove extra elements.\n      const CalendarDayElements = elementQuerySelectorAll(CalendarDaysElement, '.css_route_details_calendar_day');\n      const CalendarEventGroupElements = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group');\n      for (let o = 0; o < Math.abs(capacity); o++) {\n        const eventGroupIndex = currentEventGroupSeatQuantity - 1 - o;\n        CalendarDayElements[eventGroupIndex].remove();\n        CalendarEventGroupElements[eventGroupIndex].remove();\n      }\n    }\n  }\n\n  // Update each day and its corresponding event group.\n  const CalendarDayElements = elementQuerySelectorAll(CalendarDaysElement, '.css_route_details_calendar_day');\n  const CalendarEventGroupElements = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group');\n  for (let i = 0; i < eventGroupQuantity; i++) {\n    const eventGroupKey = `d_${i}`;\n    const thisDay = eventGroups[eventGroupKey];\n    const thisEventGroup = calendarEventGroups[eventGroupKey];\n\n    const thisDayElement = CalendarDayElements[i];\n    const thisEventGroupElement = CalendarEventGroupElements[i];\n\n    updateDay(thisDayElement, thisDay, currentDay, skeletonScreen, animation, i);\n    updateEventGroup(thisEventGroupElement, thisEventGroup, currentDay, mainColor, mainColorR, mainColorG, mainColorB, mainColorA, gridColor, i);\n  }\n\n  previousCalendar = calendar;\n  previousAnimation = animation;\n  previousSkeletonScreen = skeletonScreen;\n}\n\nexport function switchCalendarDay(day: number): void {\n  const playing_animation = getSettingOptionValue('playing_animation') as boolean;\n  const calendarDayElements = elementQuerySelectorAll(CalendarDaysElement, '.css_route_details_calendar_day');\n  const CalendarEventGroupElements = elementQuerySelectorAll(CalendarEventGroupsElement, '.css_route_details_calendar_event_group');\n  for (let i = 0; i < 7; i++) {\n    const thisCalendarDayElement = calendarDayElements[i];\n    // const thisCalendarDayElementDay = parseInt(thisCalendarDayElement.getAttribute('day'));\n    const thisEventGroupElement = CalendarEventGroupElements[i];\n    // if (thisCalendarDayElementDay === day) {\n    /*\n      thisCalendarDayElement.setAttribute('highlighted', 'true');\n      thisEventGroupElement.setAttribute('displayed', 'true');\n      */\n    const eventGroupKey = `d_${i}`;\n    const calendarEventGroup = previousCalendar?.calendarEventGroups[eventGroupKey];\n    const calendarDay = previousCalendar?.calendarDays[eventGroupKey];\n    if (calendarEventGroup && calendarDay) {\n      // Retrieve the CSS variable values just once\n      const mainColorR = getCSSVariableValue('--b-cssvar-main-color-r');\n      const mainColorG = getCSSVariableValue('--b-cssvar-main-color-g');\n      const mainColorB = getCSSVariableValue('--b-cssvar-main-color-b');\n      const mainColorA = getCSSVariableValue('--b-cssvar-main-color-opacity-e');\n      const mainColor = getCSSVariableValue('--b-cssvar-main-color');\n      const gridColor = getCSSVariableValue('--b-cssvar-ededf2');\n\n      // Reuse the drawing logic from updateEventGroup and updateDay for the visible event group.\n      updateDay(thisCalendarDayElement, calendarDay, day, false, playing_animation, i);\n      updateEventGroup(thisEventGroupElement, calendarEventGroup, day, mainColor, mainColorR, mainColorG, mainColorB, mainColorA, gridColor, i);\n    }\n    /*} else {\n      thisCalendarDayElement.setAttribute('highlighted', 'false');\n      thisEventGroupElement.setAttribute('displayed', 'false');\n\n      // Clear the canvas for non-displayed elements.\n      const canvas = elementQuerySelector(thisEventGroupElement, '.css_route_details_calendar_event_group_canvas') as HTMLCanvasElement;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n    }*/\n  }\n}\n"],"names":["previousProperties","previousAnimation","previousSkeletonScreen","updatePropertiesField","Field","properties","skeletonScreen","animation","updateProperty","thisElement","thisProperty","previousProperty","updateIcon","elementQuerySelector","innerHTML","getIconHTML","icon","updateValue","innerText","value","updateAnimation","setAttribute","booleanToString","updateSkeletonScreen","compareThings","propertyQuantity","length","element","currentPropertySeatQuantity","elementQuerySelectorAll","capacity","o","Math","abs","newPropertyElement","document","createElement","classList","add","id","appendChild","propertyIndex","remove","i","thisPropertyElement","RouteDetailsField","documentQuerySelector","RouteDetailsBodyElement","RouteDetailsGroupsElement","CalendarGroupElement","CalendarGroupBodyElement","CalendarDaysElement","CalendarEventGroupsElement","ActionsGroupElememt","svaeToFolderActionButtonElement","getPermalinkActionButton","showPermalinkQRCodeActionButton","PropertiesGroupElement","_initializeRouteDetailsField","RouteID","PathAttributeId","playing_animation","getSettingOptionValue","existence","isFolderContentSaved","onclick","openSaveToFolder","shareRoutePermalink","showRoutePermalinkQRCode","push","key","setUppropertiesGroupSkeletonScreen","setUpCalendarGroupSkeletonScreen","requestID","generateIdentifier","integration","integrateRouteDetails","updateCalendarGroup","calendar","apply","arguments","openRouteDetails","pushPageHistory","_x","_x2","initializeRouteDetailsField","closeRouteDetails","revokePageHistory","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","_step2","_iterator2","RegisterNotificationField","RegisterNotificationBodyElement","RegisterNotificationGroupsElement","ProviderInputElement","RgistrationKeyInputElement","openRegisterNotification","getNotificationProvider","closePreviousPage","closeRegisterNotification","openPreviousPage","saveFormulatedRegisterNotification","_saveFormulatedRegisterNotification","promptMessage","provider","registrationKey","isValidURL","setNotificationProvider","registerNotificationClient","_shareRoutePermalink","_asyncToGenerator","thisRoute","searchRouteByRouteID","link","getPermalink","name","navigator","share","title","url","then","_showRoutePermalinkQRCode","openQRCode","calendar_ratio","scaleLimit","floor","gridlineBoxHeight","gridlineWidth","gridlineLabelWidthLimit","fontFamily","canvasSize","querySize","canvasWidth","width","canvasHeight","height","canvasScale","min","window","devicePixelRatio","previousCalendar","generateElementOfEventGroup","eventGroupElement","canvasElement","defaultEventQuantity","d_0","d_1","d_2","d_3","d_4","d_5","d_6","calendarEventGroups","calendarDays","eventGroupKey","day","code","j","date","Date","setHours","setMinutes","setSeconds","setMilliseconds","dateString","duration","calendarDayQuantity","calendarEventQuantity","updateDay","thisDayElement","thisDay","currentDay","index","toString","switchCalendarDay","updateEventGroup","thisCalendarEventGroupElement","thisCalendarEventGroup","mainColor","mainColorR","mainColorG","mainColorB","mainColorA","gridColor","drawGridline","thisContext","hours","boxY","fillStyle","fillRect","font","textBaseline","labelText","String","padStart","labelMeasurement","measureText","labelWidth","labelHeight","actualBoundingBoxDescent","fillText","drawEvent","thisCalendarEvent","thisDayStart","setDate","setMonth","setFullYear","getFullYear","getMonth","getDate","boxX","getTime","boxWidth","boxHeight","drawRoundedRect","tl","tr","bl","br","text","textMeasurement","textWidth","textHeight","thisCalendarEventGroupCanvas","thisCalendarEventGroupCanvasContext","getContext","isDisplayed","updateDisplayed","canvas","context","setTransform","scale","resizeRouteDetailsCalendarCanvas","clearRect","getDay","getCSSVariableValue","eventGroups","eventGroupQuantity","currentEventGroupSeatQuantity","newDayElement","newEventGroupElement","CalendarDayElements","CalendarEventGroupElements","eventGroupIndex","thisEventGroup","thisEventGroupElement","calendarDayElements","_previousCalendar","_previousCalendar2","thisCalendarDayElement","calendarEventGroup","calendarDay"],"sourceRoot":""}